{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":602,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":1069,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":238,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":1070,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":570,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":25,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":439,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":416,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":522,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":639,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":1032,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":308,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":933,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":124,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":942,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":119,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":97,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":96,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":1058,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":610,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":945,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":807,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetIteratorRemoveChangesMap":874,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":16,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":771,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":129,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":477,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":328,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":539,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":657,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":995,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":75,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":1071,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":419,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":963,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":553,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":667,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":1004,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":318,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullValue":859,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":469,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":571,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":653,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":585,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":829,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":155,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":675,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":101,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":606,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":647,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":188,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":381,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":644,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":783,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":872,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":458,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":888,"org.apache.commons.collections4.CollectionUtilsTest.select":105,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":748,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreater":823,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreaterOrEqual":822,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":638,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":526,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":31,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":966,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":265,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":485,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":198,"org.apache.commons.collections4.ListUtilsTest.testEquals":317,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":45,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":406,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":1055,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":440,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":540,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":127,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":864,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":1015,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":742,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":200,"org.apache.commons.collections4.CollectionUtilsTest.intersection":797,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":990,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":404,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":620,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":854,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking2":892,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":955,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":557,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":426,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":427,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":611,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":836,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":428,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":297,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":661,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":185,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":292,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":702,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":4,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":1045,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":132,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":1048,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":163,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":603,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":118,"org.apache.commons.collections4.map.FixedSizeMapTest.testFullMapCompatibility":868,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":205,"org.apache.commons.collections4.map.CompositeMapTest.testPut":806,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":665,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":468,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":192,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":236,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":618,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":1064,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":830,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":832,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":227,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":313,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":902,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":1026,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":36,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":397,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":398,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":399,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":228,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":695,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":969,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":42,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":282,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":987,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":178,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":191,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":388,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":459,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":789,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":320,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":177,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":685,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":500,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":633,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":1003,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":108,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":1057,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":588,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":506,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":436,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":1009,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":113,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":812,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":1011,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":568,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":383,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":558,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":923,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":333,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":921,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToString":145,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":579,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":411,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":170,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":636,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRetainAll":879,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":470,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":337,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":1053,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":269,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":953,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":1020,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":396,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":523,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":225,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":247,"org.apache.commons.collections4.map.FixedSizeMapTest.testEqualsNull":882,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":357,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":681,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":619,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking":891,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":572,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":131,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":573,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":309,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":574,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":285,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":160,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":931,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":927,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":643,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":511,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":943,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":448,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":717,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":467,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":550,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":723,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":1008,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":774,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":138,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":182,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":368,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":288,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":560,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":140,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":339,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":1010,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":716,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":23,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":235,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":660,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":706,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":20,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":483,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":649,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":305,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":430,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":301,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":437,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":498,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":304,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":784,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":599,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":776,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":201,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":678,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":1063,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap":817,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":195,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":676,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":608,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":17,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":518,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":697,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":601,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":474,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":274,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":168,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":497,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":496,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":495,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":929,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":294,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":126,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":176,"org.apache.commons.collections4.CollectionUtilsTest.exists":1094,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":255,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":263,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":407,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":948,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":1065,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":791,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":516,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":1002,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":853,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":583,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":447,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":596,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":512,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":777,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":167,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":3,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":538,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":499,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":335,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":556,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":14,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":256,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":220,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":940,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":148,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":705,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":544,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":1005,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":833,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":360,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":897,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":922,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":237,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":899,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":898,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":982,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":371,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":273,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":842,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":1099,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":978,"org.apache.commons.collections4.set.UnmodifiableSetTest.testDecorateFactory":15,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":1000,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":743,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":353,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":715,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":1012,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":391,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":846,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":5,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":231,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":843,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":253,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":704,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":65,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":319,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":813,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":32,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":415,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":845,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":355,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":259,"org.apache.commons.collections4.map.HashedMapTest.testClone":409,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":710,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":1050,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":593,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":985,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":569,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":1025,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":666,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":83,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":713,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":1014,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":347,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":663,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":878,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":387,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":147,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":537,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":142,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":27,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":8,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":939,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":958,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":472,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":348,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":790,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":793,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":1059,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":901,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":968,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":88,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking":312,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove3":768,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":767,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":766,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":924,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":79,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":9,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":912,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":199,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":528,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLessOrEqual":821,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":983,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":527,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":529,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":811,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":329,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":605,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":752,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":196,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":514,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":795,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":431,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":551,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":1017,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":299,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":589,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":1100,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":772,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":1027,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":847,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":656,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":112,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":56,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":917,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNonEmptyMap":815,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":918,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":916,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":1036,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":536,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":731,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":857,"org.apache.commons.collections4.list.TreeListTest.testBug35258":325,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":508,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":461,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":1092,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":974,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":664,"org.apache.commons.collections4.ListUtilsTest.testSelect":111,"org.apache.commons.collections4.map.LinkedMapTest.testClone":507,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":965,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":110,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":1090,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":1091,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":952,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":546,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":434,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":567,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":594,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":74,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":580,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":394,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":298,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":549,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":548,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":478,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":547,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":408,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":680,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":116,"org.apache.commons.collections4.map.FixedSizeMapTest.testCanonicalFullCollectionExists":881,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":967,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":94,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":464,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":91,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":586,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":782,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":77,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":420,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":1029,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":684,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":300,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":976,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":561,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":327,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":10,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":671,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":674,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":673,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":672,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":286,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":271,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":11,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":937,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":988,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":682,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":1052,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":475,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":1095,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":875,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":98,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":852,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":997,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":1035,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":962,"org.apache.commons.collections4.functors.ComparatorPredicateTest.predicateSanityTests":824,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":718,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":106,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains1":1076,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains3":1078,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains2":1077,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":251,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":429,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":349,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":43,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":513,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":151,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":701,"org.apache.commons.collections4.map.FixedSizeMapTest.testSerializeDeserializeThenCompare":887,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":442,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":73,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":130,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":870,"org.apache.commons.collections4.map.LRUMapTest.testLRU":463,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":331,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":85,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":728,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":1030,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":81,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":206,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":938,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithEmptyMap":814,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":223,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":421,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":721,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":893,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":788,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":894,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":895,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":346,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":58,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":143,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":272,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":284,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":993,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":372,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":740,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveAll":862,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":241,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":735,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":730,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":165,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":47,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":166,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":841,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":726,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":604,"org.apache.commons.collections4.map.FixedSizeMapTest.testEmptyMapCompatibility":866,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":592,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":473,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":700,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":785,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":794,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":189,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":669,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":1042,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":659,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":283,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullKey":865,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":959,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":344,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectEqualsSelf":880,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":1097,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":214,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":919,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":491,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":781,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":385,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":240,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":587,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":99,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":364,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":828,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":889,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":543,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":533,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":614,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":484,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":2,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":775,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":26,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":1023,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":778,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":1098,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":6,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":1046,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":769,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":1006,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":624,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":578,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":798,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":221,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":734,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":758,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":616,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":760,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":759,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":617,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":520,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":102,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":751,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":521,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":86,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":90,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":374,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":835,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":175,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":356,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":928,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":1054,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":562,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":844,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":262,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":306,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":956,"org.apache.commons.collections4.iterators.IteratorIterableTest.testIterator":831,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":840,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":161,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":12,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":871,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":964,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":266,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":994,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":215,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":314,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains3":915,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":70,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":654,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains2":914,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains1":913,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":1043,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":738,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":410,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":280,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":171,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":911,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":946,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":87,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":194,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":403,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":627,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":628,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":1051,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":626,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":725,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":934,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":418,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":362,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":501,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLess":820,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":1031,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":729,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":689,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":289,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":104,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":984,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":52,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":519,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":370,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":707,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":856,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":181,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":600,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":941,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":203,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":21,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":268,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":159,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":281,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":413,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":1075,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":172,"org.apache.commons.collections4.map.CompositeMapTest.testGet":805,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":598,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":53,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":218,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":400,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":13,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":686,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":696,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":786,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":207,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":287,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":590,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":402,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":401,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":951,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":378,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":361,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":563,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":365,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":433,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":802,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":476,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":243,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":597,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":641,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":1041,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":445,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":565,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":117,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":84,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":204,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":818,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":860,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":49,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":257,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":343,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":554,"org.apache.commons.collections4.CollectionUtilsTest.union":796,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":896,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":219,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":336,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":293,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":770,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":950,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":509,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":975,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":555,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":625,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":804,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":169,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":986,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":311,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":460,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":745,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":1039,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":615,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":694,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":727,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains1":1087,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":621,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains2":1088,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains3":1089,"org.apache.commons.collections4.list.TreeListTest.testRemove":324,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":323,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemove":712,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":992,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":278,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":276,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":321,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":607,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":76,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemove":711,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":290,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":744,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":577,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":69,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":524,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":576,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":575,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":980,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":1019,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":222,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":422,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":395,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":72,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":295,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":120,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":334,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":386,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":55,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains1":904,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":341,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":591,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":631,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":630,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains3":906,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":629,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains2":905,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":869,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":926,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":957,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":756,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":755,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":754,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":503,"org.apache.commons.collections4.map.LRUMapTest.testClone":462,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":534,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":773,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":449,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":277,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":851,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":877,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":849,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":211,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":479,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":850,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":834,"org.apache.commons.collections4.ListUtilsTest.testSubtract":156,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":582,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":174,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":226,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":164,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":38,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":179,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":535,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":1062,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":345,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":64,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":248,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":613,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":691,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":907,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":908,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":296,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":909,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":93,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":384,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":338,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":217,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":186,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":202,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":264,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":302,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":1084,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":736,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":1085,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":900,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":1083,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":1007,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove3":763,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":545,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove1":761,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove2":762,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":724,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":1018,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":51,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":502,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":564,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":640,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains2":1080,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains3":1081,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains1":1079,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":37,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":89,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":62,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":316,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":260,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":708,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":722,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":651,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithEmptyMap":816,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":153,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":637,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":973,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":709,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":809,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":808,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":57,"org.apache.commons.collections4.map.FixedSizeMapTest.testCanonicalEmptyCollectionExists":883,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":972,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":46,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":82,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapHashCode":855,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":149,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":780,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":1060,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":242,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":1068,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":1067,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":1066,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapClear":867,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":505,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":1047,"org.apache.commons.collections4.map.FixedSizeMapTest.testSimpleSerialization":884,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":326,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":482,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":837,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":78,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":190,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":612,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":417,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":838,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":157,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":136,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":1028,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":351,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":800,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":34,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":373,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":123,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":861,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":692,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":197,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":981,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":139,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":340,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":693,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":367,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":187,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":1016,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":954,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":412,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":595,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":63,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":315,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":935,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":30,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":532,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":100,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":352,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":531,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":29,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":530,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":581,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":525,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":779,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":668,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":799,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":457,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":787,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":363,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveChangesMap":764,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":741,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":998,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":714,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":103,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":432,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":792,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":481,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":1049,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":453,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":454,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":810,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":455,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":405,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":390,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":54,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":803,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":209,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":719,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":210,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":542,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":41,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":366,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":162,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":839,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":642,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":848,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":488,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectHashCodeEqualsSelfHashCode":886,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":504,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":690,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":144,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":193,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":392,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":267,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":137,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":107,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":183,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":944,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":229,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":552,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":1072,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":746,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":1074,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":1073,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":753,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":910,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":71,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":515,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetIteratorRemoveChangesMap":858,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":991,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":645,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":739,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":750,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":443,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":1001,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":184,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":332,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":936,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":903,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":655,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":44,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":233,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":977,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":19,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":245,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":244,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":932,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":471,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":1013,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":890,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":303,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":377,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":757,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":258,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":683,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":232,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":375,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":566,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":133,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":648,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":350,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":444,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":158,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":261,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":382,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":688,"org.apache.commons.collections4.set.CompositeSetTest.testContains":801,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":369,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":873,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":279,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":490,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":249,"org.apache.commons.collections4.ListUtilsTest.testEmptyIfNull":825,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":68,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":510,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals":819,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":632,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":1024,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":80,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":125,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":275,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":208,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":961,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":414,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":252,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":246,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":230,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":310,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":109,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":1056,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":39,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":703,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":134,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":212,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":960,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":658,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":393,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":677,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":670,"org.apache.commons.collections4.IteratorUtilsTest.testAsIterable":826,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":876,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":239,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":733,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":827,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":650,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":114,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":1037,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":999,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":135,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":480,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":1086,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":947,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":1034,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":435,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":720,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":456,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":150,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":1093,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":930,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":128,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":307,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":1040,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":173,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":679,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":747,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":28,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":1021,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":322,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":634,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":622,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":687,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":270,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":698,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":291,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":122,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":1061,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":489,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":584,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveChangesMap":765,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":970,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":1033,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":451,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":452,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":1038,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":450,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":380,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":213,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":141,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":925,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":623,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":152,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":224,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":446,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":971,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":389,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":50,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":154,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":635,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":423,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":424,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":609,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":541,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":1044,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":234,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":487,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":652,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":646,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":250,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":0,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":121,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":732,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":441,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectHashCodeEqualsContract":885,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":1082,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":438,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":358,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":92,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":465,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":662,"org.apache.commons.collections4.map.FixedSizeMapTest.testMakeMap":863,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":48,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":494,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":979,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":737,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":379,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":60,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":492,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":699,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":493,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":342,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":996,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":1096,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":425,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":517,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":1022,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":354,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":559,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":949,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":330,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":95,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":359,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":920,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":989,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":749,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":466,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":180,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":115,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":216,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":254,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":376,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":486},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"0fffd80a-3e5b-11e6-a1df-a968733286e5","method":{"position":"org.apache.commons.collections4.MapUtils:340","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if ((answer != null) && (answer instanceof java.util.Map)) {\n                    return ((java.util.Map<?, ?>)(answer));\n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"tindex":"10004d3b-3e5b-11e6-a1df-a70ac1cfc516","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                    while (entry != null) {\n                        if ((entry.getValue()) == null) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            } else {\n                for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                    while (entry != null) {\n                        if (isEqualValue(value, entry.getValue())) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[],"tindex":"10004d3c-3e5b-11e6-a1df-75aa1c0b5b9f","method":{"position":"org.apache.commons.collections4.comparators.NullComparator:169","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == null) {\n                return false;\n            } \n            if (obj == (org.apache.commons.collections4.comparators.NullComparator.this)) {\n                return true;\n            } \n            if (!(obj.getClass().equals(org.apache.commons.collections4.comparators.NullComparator.this.getClass()))) {\n                return false;\n            } \n            final org.apache.commons.collections4.comparators.NullComparator<?> org.apache.commons.collections4.comparators.NullComparator<?> = ((org.apache.commons.collections4.comparators.NullComparator<?>)(obj));\n            return ((org.apache.commons.collections4.comparators.NullComparator.this.boolean) == (other.boolean)) && (org.apache.commons.collections4.comparators.NullComparator.this.java.util.Comparator<? super E>.equals(other.java.util.Comparator<? super ?>));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[13,14],"tindex":"1000744d-3e5b-11e6-a1df-7149b59c6e1d","method":{"position":"org.apache.commons.collections4.set.CompositeSet:282","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[15],"tindex":"1000744e-3e5b-11e6-a1df-b5f2e0891884","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:52","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Set<E> java.util.Set<E> = ((java.util.Set<E>)(set));\n                return tmpSet;\n            } \n            return new org.apache.commons.collections4.set.UnmodifiableSet<E>(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"1000744f-3e5b-11e6-a1df-c38bc2e933b0","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:219","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n            for (final E E : coll) {\n                addNodeBefore(node, e);\n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"10009b60-3e5b-11e6-a1df-013b61b858ea","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:361","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                return retainAll(((org.apache.commons.collections4.Bag<?>)(coll)));\n            } \n            return retainAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(coll));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[98,99,100],"tindex":"10009b61-3e5b-11e6-a1df-194600391797","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:130","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            java.util.Map<E, ? super V>.remove(obj);\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[],"tindex":"10009b62-3e5b-11e6-a1df-299fca12db7d","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:165","type":"CtMethodImpl","sourcecode":"public void add(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"add() method is not supported\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[101],"tindex":"10009b63-3e5b-11e6-a1df-332fa36264f8","method":{"position":"org.apache.commons.collections4.map.LinkedMap:154","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index > 0) {\n        {\n            return getEntry(index).getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[],"tindex":"1000c274-3e5b-11e6-a1df-9d2c0a1520d0","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:332","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 != null) {\n        {\n            final int int = hash(key1, key2, key3);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key3"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[102,103,104,105,106,107,108,109,110,111,112],"tindex":"1000c275-3e5b-11e6-a1df-a5b1b00d3928","method":{"position":"org.apache.commons.collections4.CollectionUtils:510","type":"CtMethodImpl","sourcecode":"public static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((b.size()) != (a.size())) {\n        {\n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n            if ((helper.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (helper.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n                return false;\n            } \n            for (final java.lang.Object java.lang.Object : helper.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n                if ((helper.freqA(obj)) != (helper.freqB(obj))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154],"tindex":"1000e986-3e5b-11e6-a1df-a326b98d2786","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            return addAll(size(), coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310],"tindex":"1000e987-3e5b-11e6-a1df-856be135ee59","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:272","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next());\n                changed = changed || added;\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[311,312,313],"tindex":"10011098-3e5b-11e6-a1df-5372b9a2a5c1","method":{"position":"org.apache.commons.collections4.list.PredicatedList:112","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validate(object);\n            decorated().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[314],"tindex":"10011099-3e5b-11e6-a1df-6dd96ed92ad7","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:91","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"1001109a-3e5b-11e6-a1df-13bcfd40e299","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2069","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[315,316],"tindex":"1001109b-3e5b-11e6-a1df-ef13806b4110","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:429","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.Iterator<? extends java.util.Map.Entry<K, V>> nextIterator(int count) {\n    if (count == 1) {\n        {\n            if (!(keyIterator.hasNext())) {\n                return null;\n            } \n            final K K = keyIterator.next();\n            final org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>>() {\n                public java.util.Map.Entry<K, V> transform(final V input) {\n                    return new java.util.Map.Entry<K, V>() {\n                        public K getKey() {\n                            return key;\n                        }\n\n                        public V getValue() {\n                            return input;\n                        }\n\n                        public V setValue(V value) {\n                            throw new java.lang.UnsupportedOperationException();\n                        }\n                    };\n                }\n            };\n            return new org.apache.commons.collections4.iterators.TransformIterator<V, java.util.Map.Entry<K, V>>(new ValuesIterator(key) , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtBinaryOperatorImpl","sourcecode":"((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))"},"failures":[317],"tindex":"100137ac-3e5b-11e6-a1df-6b5cc823ebc5","method":{"position":"org.apache.commons.collections4.ListUtils:244","type":"CtMethodImpl","sourcecode":"public static boolean isEqualList(final java.util.Collection<?> list1, final java.util.Collection<?> list2) {\n    if (((list2 == null) || (list1 == null)) || ((list1.size()) != (list2.size()))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list1 == list2) {\n                return true;\n            } \n            if (((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))) {\n                return false;\n            } \n            final java.util.Iterator<?> java.util.Iterator<?> = list1.iterator();\n            final java.util.Iterator<?> java.util.Iterator<?> = list2.iterator();\n            java.lang.Object java.lang.Object = null;\n            java.lang.Object java.lang.Object = null;\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                obj1 = it1.next();\n                obj2 = it2.next();\n                if (!(obj1 == null ? obj2 == null : obj1.equals(obj2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"100137ad-3e5b-11e6-a1df-ed1248bbde4e","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                if (object == (org.apache.commons.collections4.collection.SynchronizedCollection.this)) {\n                    return true;\n                } \n                return (object == (org.apache.commons.collections4.collection.SynchronizedCollection.this)) || (decorated().equals(object));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"100137ae-3e5b-11e6-a1df-4b3ceffd8a0f","method":{"position":"org.apache.commons.collections4.SplitMapUtils:142","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[318,319,320,321,322,323],"tindex":"100137af-3e5b-11e6-a1df-630caf85f96a","method":{"position":"org.apache.commons.collections4.map.LazyMap:160","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final K K = ((K)(key));\n                final V V = org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(castKey);\n                java.util.Map<K, V>.put(castKey, value);\n                return value;\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[324,325,326,327,328,329,330,331,332,333,334,335,336,337],"tindex":"100137b0-3e5b-11e6-a1df-4b0c0e3f2e44","method":{"position":"org.apache.commons.collections4.list.TreeList:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        {\n            (int)++;\n            checkInterval(index, 0, ((size()) - 1));\n            final E E = get(index);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(index);\n            (int)--;\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[338,339,340,341,342,343,344],"tindex":"10015ec1-3e5b-11e6-a1df-43cc293ff878","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:377","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            removeIfExpired(key, now());\n            return super.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"10015ec2-3e5b-11e6-a1df-977e327a82ba","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:75","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.TransformedSortedBag<E> org.apache.commons.collections4.bag.TransformedSortedBag<E> = new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[345,346],"tindex":"10015ec3-3e5b-11e6-a1df-3127b7eb1b86","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:140","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().retainAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[347,348,349,350,351,352,353,354,355,356,357,358,345,359,98,360,361,362,99,363,364,365,366,367,368,369,370,371,372,373,374,346,375,100,376,377,378,379,380,381,382,383,384,385,386,387,388,389,0,390,391,392,1,393,394,395,396,397,398,399,400,401,402,2,3,403,404,405,406,407,408,409,410,411,412,413,414,415,4,416,417,418,5,419,420,421,422,423,424,425,426,427,428,6,7,429,430,431,432,433,434,435,436,437,438,439,440,441,442,8,443,444,445,9,446,447,448,449,450,451,452,453,454,455,10,11,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,12,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589],"tindex":"10015ec4-3e5b-11e6-a1df-615dd2a376ed","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:412","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"100185d5-3e5b-11e6-a1df-2d35019a7b8a","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:143","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return decorated().retainAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"100185d6-3e5b-11e6-a1df-476cc0dd772f","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            return java.util.Map<E, ? super V>.keySet().equals(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"100185d7-3e5b-11e6-a1df-2b2f56993f64","method":{"position":"org.apache.commons.collections4.MapUtils:1422","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> orderedMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[442,9,448,456,457,458,459,460,461],"tindex":"100185d8-3e5b-11e6-a1df-d37a18bed378","method":{"position":"org.apache.commons.collections4.map.Flat3Map:197","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(key);\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                    }\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[590],"tindex":"1001ace9-3e5b-11e6-a1df-ab9eee55736e","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"1001acea-3e5b-11e6-a1df-0f1303857be1","method":{"position":"org.apache.commons.collections4.SetUtils:306","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.set.PredicatedSortedSet.predicatedSortedSet(set, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[462,464,469,475,476,480,481,482,483,484,485,486,487,490,491,492,493,494,495,496,497,502,503,504,510,511,515,516,517,518,519,521,522,525,526,527,528,529,530,531,532,537],"tindex":"1001aceb-3e5b-11e6-a1df-47300ae7aad9","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:205","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(super.getEntry(key)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getLeft(dataElement)) == node"},"failures":[591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686],"tindex":"1001acec-3e5b-11e6-a1df-f575dcc1d8c6","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:780","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getGrandParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n        {\n            return getParent(getParent(node, dataElement), dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[591,592,593,594,598,599,600,601,602,603,687,595,596,597,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,653,654,655,656,650,651,652,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686],"tindex":"1001d3fd-3e5b-11e6-a1df-efbcdd53f404","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:547","type":"CtMethodImpl","sourcecode":"private K doRemoveValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getKey();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[688],"tindex":"1001d3fe-3e5b-11e6-a1df-81088e40c8b5","method":{"position":"org.apache.commons.collections4.CollectionUtils:1668","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> retainAll(final java.util.Collection<C> collection, final java.util.Collection<?> retain) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            return org.apache.commons.collections4.ListUtils.retainAll(collection, retain);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[354,370,403,429,456,500,535],"tindex":"1001d3ff-3e5b-11e6-a1df-89189698a4b7","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:951","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.remove(key);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[689,690,691,692,693],"tindex":"1001d400-3e5b-11e6-a1df-f994115b4446","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:447","type":"CtMethodImpl","sourcecode":"public V put(int index, final K key, final V value) {\n    if (index < 0) {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = decorated();\n            if (m.containsKey(key)) {\n                final V V = m.remove(key);\n                final int int = java.util.List<K>.indexOf(key);\n                java.util.List<K>.remove(pos);\n                if (pos < index) {\n                    index--;\n                } \n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return result;\n            } else {\n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return null;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[542],"tindex":"1001d401-3e5b-11e6-a1df-f1b1b978ec73","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:554","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key1 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[694],"tindex":"1001fb12-3e5b-11e6-a1df-0188945b41a8","method":{"position":"org.apache.commons.collections4.SplitMapUtils:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        {\n            if (obj == (org.apache.commons.collections4.SplitMapUtils.WrappedPut.this)) {\n                return true;\n            } \n            return (obj instanceof org.apache.commons.collections4.SplitMapUtils.WrappedPut) && (((org.apache.commons.collections4.SplitMapUtils.WrappedPut<?, ?>)(obj)).org.apache.commons.collections4.Put<?, ?>.equals(org.apache.commons.collections4.SplitMapUtils.WrappedPut.this.org.apache.commons.collections4.Put<K, V>));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[8,9,10,11],"tindex":"1001fb13-3e5b-11e6-a1df-c73d6728fb53","method":{"position":"org.apache.commons.collections4.map.Flat3Map:244","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(value);\n            } \n            if (value == null) {\n                switch (int) {\n                    case 3 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                switch (int) {\n                    case 3 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 2 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 1 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:266","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[],"tindex":"1001fb14-3e5b-11e6-a1df-7bed4a2d7233","method":{"position":"org.apache.commons.collections4.set.CompositeSet:330","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.set.CompositeSet.SetMutator<E> mutator) {\n    if (mutator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E> = mutator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[695],"tindex":"1001fb15-3e5b-11e6-a1df-df6935153367","method":{"position":"org.apache.commons.collections4.MapUtils:1756","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> iterableMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return map instanceof org.apache.commons.collections4.IterableMap ? ((org.apache.commons.collections4.IterableMap<K, V>)(map)) : new org.apache.commons.collections4.map.AbstractMapDecorator<K, V>(map) {            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[696],"tindex":"10022226-3e5b-11e6-a1df-2be9859c6f78","method":{"position":"org.apache.commons.collections4.functors.MapTransformer:49","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (map == null) {\n                        return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n                    } \n                    return new org.apache.commons.collections4.functors.MapTransformer<I, O>(map);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"10022227-3e5b-11e6-a1df-e5ede8d602ef","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"10022228-3e5b-11e6-a1df-99d38582643e","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:140","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[697,698],"tindex":"10022229-3e5b-11e6-a1df-9d49d18ebd4e","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:477","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[542,543,544,545,699],"tindex":"1002222a-3e5b-11e6-a1df-476dcfd6be50","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:246","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((multi.size()) == 2) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key1 != null) && (key2.equals(multi.getKey(1)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[700,701,702,703,704,705,706,707,708],"tindex":"1002222b-3e5b-11e6-a1df-391aadc56450","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:316","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        if (null == prev) {\n                            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        } else {\n                            prev.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        }\n                        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash].int)--;\n                        return n.V;\n                    } \n                    prev = n;\n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[9,448],"tindex":"1002493c-3e5b-11e6-a1df-b5df5e6260a4","method":{"position":"org.apache.commons.collections4.map.Flat3Map:977","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[709,710,711,712,713,714,715,716,717,718,719,720,721,722,146,151,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768],"tindex":"1002493d-3e5b-11e6-a1df-9b13ae23de87","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return decorated().remove(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[769],"tindex":"1002493e-3e5b-11e6-a1df-cd2dc8a62605","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            return new FixedSizeListIterator(decorated().listIterator(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"1002493f-3e5b-11e6-a1df-37368d700a76","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:404","type":"CtMethodImpl","sourcecode":"public java.util.Iterator<V> iterator(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(containsKey(key))) {\n                return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n            } \n            return new ValuesIterator(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789],"tindex":"10027050-3e5b-11e6-a1df-f7ede1557082","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:146","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<K, V>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[790],"tindex":"10027051-3e5b-11e6-a1df-5b602c8eccbd","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"10027052-3e5b-11e6-a1df-b3d39aa18c5c","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1463","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return containsKey(o);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false"},"failures":[102,103,791,792,793,105,794,795,106,796,797,107,798,108,109,110,111,112,799,800,801,802,803,804,805,806,807,808,809,810,811,812],"tindex":"10027053-3e5b-11e6-a1df-4f306bbcf010","method":{"position":"org.apache.commons.collections4.CollectionUtils:107","type":"CtMethodImpl","sourcecode":"public int freqB(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"10027054-3e5b-11e6-a1df-ed3c9b015592","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:215","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(int, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[813],"tindex":"10027055-3e5b-11e6-a1df-1d7229f69b71","method":{"position":"org.apache.commons.collections4.QueueUtils:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(queue);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"10029766-3e5b-11e6-a1df-a7b41a70a4e6","method":{"position":"org.apache.commons.collections4.map.LRUMap:366","type":"CtMethodImpl","sourcecode":"protected boolean removeLRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[694],"tindex":"10029767-3e5b-11e6-a1df-19b39df7b0c5","method":{"position":"org.apache.commons.collections4.SplitMapUtils:158","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[353,354,345,98,99,369,370,346,100,396,2,3,403,404,405,406,407,408,422,6,7,429,430,431,432,433,434,449,10,11,456,457,458,459,460,461,491,498,499,500,501,502,503,504,505,526,533,534,535,536,537,538,539,540],"tindex":"10029768-3e5b-11e6-a1df-f78e9f882f86","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:582","type":"CtMethodImpl","sourcecode":"protected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if ((entry.getValue()) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (previous == null) {\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } else {\n                previous.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[814,815,816,817],"tindex":"10029769-3e5b-11e6-a1df-179dfb30686f","method":{"position":"org.apache.commons.collections4.MapUtils:1204","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        {\n            return (map == null) || (map.isEmpty());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"1002976a-3e5b-11e6-a1df-43a75eb90030","method":{"position":"org.apache.commons.collections4.functors.MapTransformer:49","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (map == null) {\n                        return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n                    } \n                    return new org.apache.commons.collections4.functors.MapTransformer<I, O>(map);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"1002be7b-3e5b-11e6-a1df-8901d41a1cf5","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:168","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().remove(object);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:167","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[818],"tindex":"1002be7c-3e5b-11e6-a1df-efff0c541648","method":{"position":"org.apache.commons.collections4.ListUtils:508","type":"CtMethodImpl","sourcecode":"public static <E>int indexOf(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if (list.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((list != null) && (predicate != null)) {\n                for (int int = 0 ; i < (list.size()) ; i++) {\n                    final E E = list.get(i);\n                    if (predicate.evaluate(item)) {\n                        return i;\n                    } \n                }\n            } \n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:123","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[819,820,821,822,823,824],"tindex":"1002be7d-3e5b-11e6-a1df-41d6bd851c6a","method":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:121","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> comparatorPredicate(final T object, final java.util.Comparator<T> comparator, final org.apache.commons.collections4.functors.ComparatorPredicate.Criterion criterion) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                throw new java.lang.IllegalArgumentException(\"Comparator must not be null.\");\n            } \n            if (criterion == null) {\n                throw new java.lang.IllegalArgumentException(\"Criterion must not be null.\");\n            } \n            return new org.apache.commons.collections4.functors.ComparatorPredicate<T>(object , comparator , criterion);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[825],"tindex":"1002be7e-3e5b-11e6-a1df-2707b6206bab","method":{"position":"org.apache.commons.collections4.ListUtils:61","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> emptyIfNull(final java.util.List<T> list) {\n    if (list == null) {\n        {\n            return list == null ? java.util.Collections.<T>emptyList() : list;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:59","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[826,827,828,829,830,831],"tindex":"1002be7f-3e5b-11e6-a1df-25e8e1d59345","method":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:69","type":"CtMethodImpl","sourcecode":"private static <E>java.util.Iterator<E> createTypesafeIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            return new java.util.Iterator<E>() {\n                public boolean hasNext() {\n                    return iterator.hasNext();\n                }\n\n                public E next() {\n                    return iterator.next();\n                }\n\n                public void remove() {\n                    iterator.remove();\n                }\n            };\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[],"tindex":"1002e590-3e5b-11e6-a1df-d9a9ef09b1a2","method":{"position":"org.apache.commons.collections4.set.CompositeSet:265","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeSet without a SetMutator strategy\");\n                    } \n                    return org.apache.commons.collections4.set.CompositeSet.SetMutator<E>.addAll(org.apache.commons.collections4.set.CompositeSet.this, java.util.List<java.util.Set<E>>, coll);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[347,349,354,355,358,359,360,361,362,363,365,370,371,374,375,376,377,378,380,381,387,388,389,0,390,392,1,395,396,400,401,402,403,404,405,406,407,408,832,833,834,835,836,837,838,839,840,413,414,415,4,416,418,5,421,422,426,427,428,429,430,431,432,433,434,435,436,440,441,442,8,443,445,9,448,449,453,454,455,456,457,458,459,460,461,465,466,467,468,480,481,482,483,484,486,487,490,491,495,496,497,500,501,502,503,504,505,509,515,516,517,518,519,521,522,525,526,530,531,532,535,536,537,538,539,540,544,554,555,557,558,559,562,564,567,568,575,576,577,582,585,586,587,588,589],"tindex":"1002e591-3e5b-11e6-a1df-f1df056395c8","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key == null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"1002e592-3e5b-11e6-a1df-1138492be18c","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:313","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[608,609,610,611,612,613,614,616,622,841,842,658,659,661,662,663,664,666],"tindex":"1002e593-3e5b-11e6-a1df-3f8f7bc97688","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:681","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> leastNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getLeft(dataElement)) != null) {\n                    rval = rval.getLeft(dataElement);\n                }\n            } \n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[843],"tindex":"10030ca4-3e5b-11e6-a1df-3f3088fc60cf","method":{"position":"org.apache.commons.collections4.list.TransformedList:123","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return getList().indexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:71","type":"CtBinaryOperatorImpl","sourcecode":"(closures.size()) == 0"},"failures":[844],"tindex":"10030ca5-3e5b-11e6-a1df-b943ab2906a5","method":{"position":"org.apache.commons.collections4.ClosureUtils:218","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if ((closures.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"10030ca6-3e5b-11e6-a1df-67972ad51c56","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:199","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            final int int = hash(key1, key2);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"10030ca7-3e5b-11e6-a1df-13ae395ff4bd","method":{"position":"org.apache.commons.collections4.IteratorUtils:544","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E> iterator1, final java.util.Iterator<? extends E> iterator2) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterator1 , iterator2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[845,846],"tindex":"10030ca8-3e5b-11e6-a1df-ed1965ec0efe","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"10030ca9-3e5b-11e6-a1df-7f201ebe8a59","method":{"position":"org.apache.commons.collections4.MapUtils:677","type":"CtMethodImpl","sourcecode":"public static <K>float getFloatValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (floatObject == null) {\n                return 0.0F;\n            } \n            return floatObject.floatValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[847],"tindex":"100333ba-3e5b-11e6-a1df-793530c1d0a0","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"100333bb-3e5b-11e6-a1df-f7ddc077e199","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1729","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[848],"tindex":"100333bc-3e5b-11e6-a1df-d3e8009d7577","method":{"position":"org.apache.commons.collections4.IteratorUtils:412","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end) {\n    if (start < 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start , end);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"100333bd-3e5b-11e6-a1df-21a8b6287873","method":{"position":"org.apache.commons.collections4.CollectionUtils:279","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> disjunction(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((b == null) || (a == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, ((helper.max(obj)) - (helper.min(obj))));\n            }\n            return helper.list();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887],"tindex":"100333be-3e5b-11e6-a1df-fd30f0544cab","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:72","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        {\n            return new org.apache.commons.collections4.map.FixedSizeMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:123","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"100333bf-3e5b-11e6-a1df-0394cfabe885","method":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:107","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> comparatorPredicate(final T object, final java.util.Comparator<T> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ComparatorPredicate.comparatorPredicate(object, comparator, org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"10035ad0-3e5b-11e6-a1df-f5eab4256c6b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1240","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntryInSubtree(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> parentOfSubtree) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, parentOfSubtree);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[888],"tindex":"10035ad1-3e5b-11e6-a1df-5f183e645912","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[695,381,382,395,839,409,421,435,448,462,490,507,525,889,567],"tindex":"10035ad2-3e5b-11e6-a1df-ed7fa9c91831","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:318","type":"CtMethodImpl","sourcecode":"private void _putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            final int int = map.size();\n            if (mapSize == 0) {\n                return ;\n            } \n            final int int = ((int)((((int) + mapSize) / (float)) + 1));\n            ensureCapacity(calculateNewCapacity(newSize));\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:108","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[890],"tindex":"10035ad3-3e5b-11e6-a1df-b565cca46c7b","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:331","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Set<E> createSetBasedOnList(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Set<E> java.util.Set<E>;\n            if (set.getClass().equals(java.util.HashSet.java.util.HashSet.java.lang.Class)) {\n                subSet = new java.util.HashSet<E>(list.size());\n            } else {\n                try {\n                    subSet = set.getClass().newInstance();\n                } catch (final java.lang.InstantiationException ie) {\n                    subSet = new java.util.HashSet<E>();\n                } catch (final java.lang.IllegalAccessException iae) {\n                    subSet = new java.util.HashSet<E>();\n                }\n            }\n            subSet.addAll(list);\n            return subSet;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"10035ad4-3e5b-11e6-a1df-1947ad2727c3","method":{"position":"org.apache.commons.collections4.set.TransformedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            final org.apache.commons.collections4.set.TransformedSet<E> org.apache.commons.collections4.set.TransformedSet<E> = new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[891,892],"tindex":"10035ad5-3e5b-11e6-a1df-a185151566a4","method":{"position":"org.apache.commons.collections4.list.GrowthList:181","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E element) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = decorated().size();\n            if (index >= size) {\n                decorated().addAll(java.util.Collections.<E>nCopies(((index - size) + 1), null));\n            } \n            return decorated().set(index, element);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,672,673,674,675,910,911,912,913,914,915,916,917,918,709,710,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,715,716,943,944,945,946,947,948,949,950,951,952,953,954,955,956,890,957,958,959,960,961,962,723,724,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,161,163,164,166,169,172,985,986,987,988,179,181,182,184,187,190,989,197,199,200,202,205,208,216,217,219,221,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,731,732,1004,1005,1006,1007,229,231,232,234,237,240,248,249,251,253,1008,736,1009,1010,1011,1012,261,263,264,266,269,272,740,741,1013,1014,1015,1016,279,281,282,284,287,290,1017,297,299,300,302,305,308,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,745,746,1028,1029,1030,1031,1032,1033,748,749,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,849,850,851,856,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093],"tindex":"100381e6-3e5b-11e6-a1df-d3d10847f6cb","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            return decorated().contains(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[1094],"tindex":"100381e7-3e5b-11e6-a1df-d12c59d23ff2","method":{"position":"org.apache.commons.collections4.CollectionUtils:846","type":"CtMethodImpl","sourcecode":"public static <C>boolean exists(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (predicate == null) {\n        {\n            if ((input != null) && (predicate != null)) {\n                for (final C C : input) {\n                    if (predicate.evaluate(o)) {\n                        return true;\n                    } \n                }\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"100381e8-3e5b-11e6-a1df-55d95ef0c789","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:74","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map, final V dummyValue) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"The map must not be null\");\n            } \n            return new org.apache.commons.collections4.set.MapBackedSet<E, V>(map , dummyValue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[1095],"tindex":"100381e9-3e5b-11e6-a1df-c3c49c52f895","method":{"position":"org.apache.commons.collections4.TransformerUtils:399","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, null, null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"100381ea-3e5b-11e6-a1df-fd493d1d4329","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:283","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            return node == null ? null : node.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[204,205,224,991,1096,236,237,256,268,269,304,305],"tindex":"1003a8fb-3e5b-11e6-a1df-e7ad63c9ca89","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:76","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[1097,1098,1099,42,44,45,47,50,53,1100,84,86,87,89,92,95],"tindex":"1003a8fc-3e5b-11e6-a1df-632de263a21b","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:154","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return (indexOf(value)) != (-1);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[],"tindex":"1003a8fd-3e5b-11e6-a1df-8347257bbeec","method":{"position":"org.apache.commons.collections4.set.CompositeSet:265","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097555/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeSet without a SetMutator strategy\");\n                    } \n                    return org.apache.commons.collections4.set.CompositeSet.SetMutator<E>.addAll(org.apache.commons.collections4.set.CompositeSet.this, java.util.List<java.util.Set<E>>, coll);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}