{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":502,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":312,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":817,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":588,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":928,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx5":977,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":191,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":301,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":978,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":697,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":538,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":676,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":768,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":1067,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":360,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":1092,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testRemove":345,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":93,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":283,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":641,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":510,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectEqualsSelf":967,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testEqualsNull":275,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":258,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRetainAll":1113,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":853,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsContract":257,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":693,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":555,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListCompatibility":94,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":626,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":772,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":35,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":130,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":565,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":800,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":981,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":173,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":410,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":818,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":843,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":551,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking":957,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetClearChangesMap":392,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":832,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testEqualsNull":83,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":1041,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":573,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":506,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":11,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":545,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":331,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSimpleSerialization":481,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":728,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":337,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":321,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":380,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":447,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":935,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":1144,"org.apache.commons.collections4.map.TransformedMapTest.testValuesClearChangesMap":1027,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":421,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":722,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":932,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":537,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":680,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":645,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":136,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":309,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":860,"org.apache.commons.collections4.set.ListOrderedSet2Test.testObjectEqualsSelf":240,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":604,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":757,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":700,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":694,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveAll":40,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":96,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":223,"org.apache.commons.collections4.list.GrowthListTest.testObjectHashCodeEqualsContract":237,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":128,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":1057,"org.apache.commons.collections4.list.UnmodifiableListTest.testEqualsNull":180,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":1073,"org.apache.commons.collections4.map.TransformedMapTest.testSerializeDeserializeThenCompare":1035,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":755,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":338,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":57,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMakeMap":461,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":804,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveAll":1008,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":779,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":511,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":780,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectEqualsSelf":73,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":426,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":781,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":559,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListCompatibility":117,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullIterator":347,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":767,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":303,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":1021,"org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf":365,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":503,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":123,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveChangesMap":1001,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":563,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":316,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":842,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":383,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":64,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":183,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":1125,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":296,"org.apache.commons.collections4.map.SingletonMapTest.testEmptyMapCompatibility":433,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":518,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":1037,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":1094,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":32,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":397,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":598,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove3":399,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":398,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":746,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":747,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":748,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":211,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":225,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":602,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":192,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":476,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEmptyMapCompatibility":464,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":723,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":735,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":920,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":579,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRetainAll":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":532,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":875,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":921,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":835,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCanonicalEmptyCollectionExists":1146,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":661,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":696,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":71,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":975,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSerializeDeserializeThenCompare":355,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":815,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":730,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":805,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":144,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":69,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":826,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":763,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":535,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRetainAll":60,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":924,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":844,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectHashCodeEqualsContract":75,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":651,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":659,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListCompatibility":145,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalFullCollectionExists":478,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":468,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":745,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":677,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":151,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":472,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":31,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":891,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":519,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":819,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":379,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":820,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":821,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectEqualsSelf":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":542,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":665,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":238,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":710,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":63,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":325,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastEntrySet":371,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRetainAll":1111,"org.apache.commons.collections4.map.ListOrderedMapTest.testEqualsNull":413,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEqualsNull":45,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":841,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":582,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":620,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":115,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalEmptyCollectionExists":441,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":798,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":657,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":658,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":581,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectEqualsSelf":82,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":98,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":905,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":954,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEqualsNull":350,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveAll":1019,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":807,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":484,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":976,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":100,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":184,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":586,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":558,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorSet":344,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":290,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":858,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiClear":925,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":547,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":72,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsContract":142,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":1045,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":785,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":304,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":431,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":698,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":927,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":974,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":873,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":1044,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":202,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":454,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":970,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":215,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectHashCodeEqualsContract":49,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":499,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":463,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":259,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":291,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":574,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRetainAll":1026,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":508,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":672,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":366,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":108,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":317,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":501,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testEqualsNull":260,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":149,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":848,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":918,"org.apache.commons.collections4.list.GrowthListTest.testEqualsNull":236,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRemoveAll":55,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectHashCodeEqualsSelfHashCode":415,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":872,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":871,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":870,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":972,"org.apache.commons.collections4.queue.TransformedQueueTest.testEqualsNull":48,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":407,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":1063,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":95,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastValues":989,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":471,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":1103,"org.apache.commons.collections4.CollectionUtilsTest.exists":3,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListCompatibility":170,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectEqualsSelf":160,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":308,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":758,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":467,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectEqualsSelf":1142,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":1121,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":670,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":34,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":830,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":428,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":496,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":709,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":1100,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":667,"org.apache.commons.collections4.functors.AllPredicateTest.nullCollectionToGetInstance":983,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":249,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":0,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":280,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":434,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":643,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testEqualsNull":86,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":753,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":692,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsContract":87,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":1042,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":874,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":803,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":456,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":219,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":1136,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":105,"org.apache.commons.collections4.list.UnmodifiableListTest.testObjectEqualsSelf":179,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsContract":439,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":5,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":618,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":1116,"org.apache.commons.collections4.map.TransformedMapTest.testEmptyMapCompatibility":1012,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":377,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":896,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":985,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesClearChangesMap":391,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":584,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":908,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":200,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":343,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":601,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":197,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":187,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":950,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRetainAll":23,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":118,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsContract":353,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapHashCode":382,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":887,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":919,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":739,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":945,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":479,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":176,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":771,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRetainAll":27,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRetainAll":1107,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":121,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":124,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":1071,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":1120,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":617,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":199,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":594,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":486,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":766,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveAll":18,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":294,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicate":971,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":889,"org.apache.commons.collections4.list.GrowthListTest.testSerializeDeserializeThenCompare":233,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":962,"org.apache.commons.collections4.map.HashedMapTest.testClone":760,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":358,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":493,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":1078,"org.apache.commons.collections4.map.SingletonMapTest.testMakeMap":424,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":816,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":564,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":326,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":881,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":561,"org.apache.commons.collections4.list.TransformedListTest.testObjectEqualsSelf":140,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":1076,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":17,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":734,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":104,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastEntrySet":987,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":691,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsContract":262,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":941,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":101,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":150,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":597,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":591,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":1020,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":703,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":846,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":882,"org.apache.commons.collections4.map.TransformedMapTest.testMakeMap":1009,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":1064,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":612,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":1015,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":1096,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":402,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":139,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":432,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":635,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":227,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":630,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":707,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":206,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":682,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":681,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":171,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":683,"org.apache.commons.collections4.CollectionUtilsTest.emptyCollection":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":505,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":666,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":786,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":799,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":631,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":836,"org.apache.commons.collections4.map.TransformedMapTest.testSimpleSerialization":1032,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsSelfHashCode":483,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":980,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveAll":24,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":554,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":1122,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":314,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":214,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":690,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectHashCodeEqualsContract":84,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":1110,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":660,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":725,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":234,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":562,"org.apache.commons.collections4.map.LinkedMapTest.testClone":663,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveAll":53,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":65,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":953,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":134,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":452,"org.apache.commons.collections4.map.ListOrderedMapTest.testCanonicalEmptyCollectionExists":418,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":1048,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":209,"org.apache.commons.collections4.map.ListOrderedMapTest.testCanonicalFullCollectionExists":419,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":793,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":789,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":814,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":1080,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":494,"org.apache.commons.collections4.list.TransformedListTest.testEqualsNull":141,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":625,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":827,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":743,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":796,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":795,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":794,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":854,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":759,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":138,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":381,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":1087,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":30,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":89,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectEqualsSelf":414,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":838,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectHashCodeEqualsContract":78,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":638,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveAll":42,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":833,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":930,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":628,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":773,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":578,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":808,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":224,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":474,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":569,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":718,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRetainAll":56,"org.apache.commons.collections4.map.ListOrderedMapTest.testFullMapCompatibility":385,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":1003,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":462,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":572,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":571,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEqualsNull":14,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":570,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":943,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":12,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":125,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":1108,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":719,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":1083,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRetainAll":1106,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":230,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":576,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":979,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":850,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":146,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":217,"org.apache.commons.collections4.set.TransformedSetTest.testSetEquals":243,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":335,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":895,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":1095,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectHashCodeEqualsContract":52,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":940,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":159,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":164,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":459,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":327,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":933,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":1022,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":148,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":784,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":883,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectEqualsSelf":44,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":668,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":109,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":315,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":702,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":624,"org.apache.commons.collections4.map.TransformedMapTest.testCanonicalEmptyCollectionExists":1031,"org.apache.commons.collections4.map.ListOrderedMapTest.testPreviousKey":367,"org.apache.commons.collections4.map.LRUMapTest.testLRU":849,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":652,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":273,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":129,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":1058,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":477,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutNullValue":1005,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":1139,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":156,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":774,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":960,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRetainAll":1112,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectHashCodeEqualsContract":416,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRetainAll":973,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":912,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":102,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":909,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalFullCollectionExists":442,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveAll":58,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":376,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":453,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectHashCodeEqualsContract":162,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":606,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":965,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":232,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":504,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":220,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":492,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":847,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":567,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":557,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRetainAll":37,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":178,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":61,"org.apache.commons.collections4.set.ListOrderedSet2Test.testEqualsNull":241,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":1141,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":866,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":923,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":733,"org.apache.commons.collections4.map.ListOrderedMapTest.testFirstKey":368,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":282,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":373,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":834,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":899,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":901,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":1040,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":4,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":687,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":514,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":400,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":859,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":1025,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":752,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalEmptyCollectionExists":480,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":590,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":783,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":782,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":147,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":359,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":378,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":644,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":425,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":1053,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":329,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":523,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastKeySet":988,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":330,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":825,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testBagEqualsSelf":1128,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":951,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":1137,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectEqualsSelf":76,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":222,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":516,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":587,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectEqualsSelf":79,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":517,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":286,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":674,"org.apache.commons.collections4.list.GrowthListTest.testFullListCompatibility":221,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":67,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectHashCodeEqualsContract":968,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex":363,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetClearChangesMap":1004,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":675,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":633,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":1010,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":469,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":637,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":911,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":1086,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutNullKey":387,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsSelfHashCode":1143,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":890,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":7,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":313,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":403,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":809,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":944,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":195,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyIterator":346,"org.apache.commons.collections4.iterators.IteratorIterableTest.testIterator":1036,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":791,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":131,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveAll":38,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":281,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":1131,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":552,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":622,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSimpleSerialization":1145,"org.apache.commons.collections4.map.TransformedMapTest.testEqualsNull":1030,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":1077,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":969,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":1081,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":649,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":1054,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":762,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRetainAll":25,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":1050,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":169,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorOrder":341,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetEquals":268,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":167,"org.apache.commons.collections4.list.UnmodifiableListTest.testSerializeDeserializeThenCompare":177,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":526,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":634,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":754,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":1129,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":300,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":527,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":404,"org.apache.commons.collections4.set.TransformedSetTest.testSerializeDeserializeThenCompare":244,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":525,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":137,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":213,"org.apache.commons.collections4.list.SetUniqueListTest.testObjectHashCodeEqualsContract":114,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":489,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":770,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":293,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":898,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testUnmodifiable":444,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":876,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRetainAll":54,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":653,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":116,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":362,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetClearChangesMap":393,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEqualsNull":74,"org.apache.commons.collections4.map.ListOrderedMapTest.testSimpleSerialization":417,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":297,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":1,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":305,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":103,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":673,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":907,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":1098,"org.apache.commons.collections4.list.PredicatedListTest.testEqualsNull":208,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":411,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":143,"org.apache.commons.collections4.map.ListOrderedMapTest.testSerializeDeserializeThenCompare":412,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":500,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":401,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":437,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":408,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":642,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":650,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":455,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":764,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":1017,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":498,"org.apache.commons.collections4.map.TransformedMapTest.testFullMapCompatibility":1014,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":749,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":1134,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":580,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRetainAll":995,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":289,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":475,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectEqualsSelf":348,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":751,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":435,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":750,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":917,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":897,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRetainAll":1115,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":445,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":810,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":788,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":902,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":851,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsContract":46,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":619,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":497,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":540,"org.apache.commons.collections4.list.UnmodifiableListTest.testObjectHashCodeEqualsContract":181,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":1084,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":706,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":1119,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":1123,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":812,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":90,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":632,"org.apache.commons.collections4.set.TransformedSortedSetTest.testEqualsNull":270,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":284,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":608,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":1072,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":946,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":801,"org.apache.commons.collections4.collection.TransformedCollectionTest.testEqualsNull":77,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":955,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":1135,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":168,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":942,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":662,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":524,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":802,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":185,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":166,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":724,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":515,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":204,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":1101,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":520,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":390,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRemoveChangesMap":1068,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":295,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":423,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":507,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":952,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":1104,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":627,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":292,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":427,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":322,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":824,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":678,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":823,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":822,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":201,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":1138,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":775,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":744,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":193,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":10,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":623,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectEqualsSelf":250,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":731,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":389,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":491,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":530,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":529,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":528,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":436,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveAll":20,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":174,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":999,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRetainAll":41,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":998,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveAll":405,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":997,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":878,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":302,"org.apache.commons.collections4.map.LRUMapTest.testClone":837,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":688,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":711,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":126,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":154,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsContract":482,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":852,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":1126,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":993,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":829,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":1114,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":334,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_Decorate":986,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":1105,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":210,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":600,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":62,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":470,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":239,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectEqualsSelf":265,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":689,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":893,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":616,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":1024,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":422,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":357,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":513,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":1074,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":640,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":1056,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":732,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":323,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":1133,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":654,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":132,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsContract":277,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsSelfHashCode":1034,"org.apache.commons.collections4.list.SetUniqueListTest.testObjectEqualsSelf":112,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":122,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectEqualsSelf":256,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":6,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":1049,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalEmptyCollectionExists":351,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":490,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveAll":22,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":189,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":937,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":278,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":938,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":1099,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetClearChangesMap":1000,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":610,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":959,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":877,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":288,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":811,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEqualsNull":9,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testDecorateFactory":279,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":539,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":318,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":599,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testEqualsNull":80,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListCompatibility":165,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":636,"org.apache.commons.collections4.list.GrowthListTest.testObjectEqualsSelf":235,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":68,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":307,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":614,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectHashCodeEqualsContract":252,"org.apache.commons.collections4.list.GrowthListTest.testEmptyListCompatibility":212,"org.apache.commons.collections4.set.PredicatedSetTest.testEqualsNull":251,"org.apache.commons.collections4.set.UnmodifiableSetTest.testEqualsNull":255,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectHashCodeEqualsContract":272,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":549,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":536,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":216,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":231,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":605,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":465,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":106,"org.apache.commons.collections4.set.TransformedSetTest.testObjectHashCodeEqualsContract":247,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":589,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":948,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectHashCodeEqualsContract":267,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":992,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":991,"org.apache.commons.collections4.list.PredicatedListTest.testObjectEqualsSelf":207,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":990,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":880,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":857,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains3":396,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":629,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":512,"org.apache.commons.collections4.set.TransformedSetTest.testEqualsNull":246,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":769,"org.apache.commons.collections4.set.ListOrderedSet2Test.testObjectHashCodeEqualsContract":242,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains2":395,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":885,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains1":394,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":596,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":741,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":910,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":92,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":120,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastKeySet":372,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":1065,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":203,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":99,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":448,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testOrderedMapIterator":339,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":904,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":655,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":328,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSerializeDeserializeThenCompare":274,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":922,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":761,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":495,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":287,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":615,"org.apache.commons.collections4.set.TransformedSetTest.testObjectEqualsSelf":245,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":593,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":686,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":685,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":886,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":914,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":1007,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":684,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveAll":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":595,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":828,"org.apache.commons.collections4.functors.AllPredicateTest.nullArrayToGetInstance":1093,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":679,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":963,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectEqualsSelf":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":566,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":430,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":721,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":926,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":900,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":13,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":333,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":787,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":253,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutNullValue":388,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":656,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":1070,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":856,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":33,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":715,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":716,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":717,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":1002,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":205,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":756,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":1088,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":738,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":611,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":792,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":903,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectEqualsSelf":261,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":541,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":375,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":119,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":863,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":1043,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":879,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":356,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":740,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":1062,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectHashCodeEqualsContract":81,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":409,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":797,"org.apache.commons.collections4.map.TransformedMapTest.testMapHashCode":996,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":449,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":451,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":450,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFullMapCompatibility":466,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":994,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":264,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":647,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":669,"org.apache.commons.collections4.list.GrowthListTest.testCollectionClear":228,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":543,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":704,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEqualsNull":51,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectEqualsSelf":271,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":364,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":1059,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectEqualsSelf":276,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":553,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":603,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":949,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":370,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":1097,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":845,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":936,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":916,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testEqualsNull":485,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":306,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":1102,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":577,"org.apache.commons.collections4.map.TransformedMapTest.testObjectEqualsSelf":1028,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":319,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRetainAll":39,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":8,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":813,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":913,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":546,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":884,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":153,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":182,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":460,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":705,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":726,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":1117,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":332,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":1124,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":2,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":336,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":1051,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalFullCollectionExists":349,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":59,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":188,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":906,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":865,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":621,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":664,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":531,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":613,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":285,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":1013,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":931,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":1006,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRetainAll":406,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":765,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":248,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyMapIterator":342,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":956,"org.apache.commons.collections4.map.TransformedMapTest.testCanonicalFullCollectionExists":1029,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":1047,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":1046,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicateEx1":947,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":155,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":1127,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":163,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":310,"org.apache.commons.collections4.map.ListOrderedMapTest.testMakeMap":374,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSimpleSerialization":352,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":556,"org.apache.commons.collections4.list.FixedSizeListTest.testEqualsNull":161,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":742,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":1118,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":568,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx4":982,"org.apache.commons.collections4.IteratorUtilsTest.testAsIterable":1038,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":1075,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":324,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":939,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx1":1091,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":429,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":1066,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":175,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":1039,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":548,"org.apache.commons.collections4.map.ListOrderedMapTest.testLastKey":369,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":157,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":97,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":855,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":311,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":695,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":354,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":720,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":1069,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":107,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":386,"org.apache.commons.collections4.map.SingletonMapTest.testSimpleSerialization":440,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":152,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":575,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":592,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":1023,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":533,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":521,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":934,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":218,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEqualsNull":966,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":66,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":158,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":361,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":831,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":864,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":583,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":226,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":1055,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":1060,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":713,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":714,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":961,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":712,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":727,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":1082,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":1130,"org.apache.commons.collections4.set.ListOrderedSetTest.testEqualsNull":266,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":1061,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":299,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":522,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":1052,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":110,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":298,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory":340,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":708,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":1140,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":229,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":736,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":609,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":111,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":534,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":1018,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":776,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":777,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":509,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":585,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":929,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":790,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":190,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":172,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutNullKey":1011,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":862,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRetainAll":21,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":550,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking2":958,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":458,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":544,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":737,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectEqualsSelf":50,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":91,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":701,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":194,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":446,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":127,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":70,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":646,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":964,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":420,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":699,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsSelfHashCode":438,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":1089,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":984,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":892,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesRemoveChangesMap":1079,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":639,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":839,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":1016,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":1109,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":560,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":443,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":607,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":869,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":198,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":254,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":648,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":729,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":867,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":196,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":868,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":1090,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":488,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx5":487,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":778,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCanonicalFullCollectionExists":1147,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":671,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":457,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":806,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":888,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRetainAll":19,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsContract":1033,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveAll":26,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":894,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":135,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":840,"org.apache.commons.collections4.map.ListOrderedMapTest.testEmptyMapCompatibility":384,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":186,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":320,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":1085,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":1132,"org.apache.commons.collections4.list.SetUniqueListTest.testEqualsNull":113,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":915,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":263,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSerializeDeserializeThenCompare":269,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":861,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":473},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[0,1],"tindex":"8c3adbdd-2ed8-11e6-b019-3fd712aba079","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:242","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            return entry.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[2],"tindex":"8c51711e-2ed8-11e6-b019-a5f94f6b0aa8","method":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> closureTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.ClosureTransformer<T>(closure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:876","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[3],"tindex":"8c52f7bf-2ed8-11e6-b019-915c813e6784","method":{"position":"org.apache.commons.collections4.CollectionUtils:846","type":"CtMethodImpl","sourcecode":"public static <C>boolean exists(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (input != null) {\n        {\n            if ((input != null) && (predicate != null)) {\n                for (final C C : input) {\n                    if (predicate.evaluate(o)) {\n                        return true;\n                    } \n                }\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[4,5,6],"tindex":"8c52f7c0-2ed8-11e6-b019-43012198387c","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:426","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key4 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key4"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:68","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[7],"tindex":"8c531ed1-2ed8-11e6-b019-d376f9561c07","method":{"position":"org.apache.commons.collections4.ClosureUtils:218","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if (closures == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"8c545752-2ed8-11e6-b019-37dda3f78c8f","method":{"position":"org.apache.commons.collections4.ComparatorUtils:172","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullHighComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277],"tindex":"8c545753-2ed8-11e6-b019-5b0c30d54ed2","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (object == (org.apache.commons.collections4.collection.AbstractCollectionDecorator.this)) || (decorated().equals(object));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[278],"tindex":"8c547e64-2ed8-11e6-b019-2bfe4b7f9e79","method":{"position":"org.apache.commons.collections4.list.TransformedList:142","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        {\n            coll = transform(coll);\n            return getList().addAll(index, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[279],"tindex":"8c551aa5-2ed8-11e6-b019-4b099f1034bf","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:57","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.SortedBidiMap<K, V> unmodifiableSortedBidiMap(final org.apache.commons.collections4.SortedBidiMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.SortedBidiMap<K, V> org.apache.commons.collections4.SortedBidiMap<K, V> = ((org.apache.commons.collections4.SortedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"8c573d86-2ed8-11e6-b019-3f6f95b19f04","method":{"position":"org.apache.commons.collections4.IteratorUtils:544","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E> iterator1, final java.util.Iterator<? extends E> iterator2) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterator1 , iterator2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[280],"tindex":"8c57b2b7-2ed8-11e6-b019-3f712288ff5f","method":{"position":"org.apache.commons.collections4.ClosureUtils:129","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> whileClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"8c57b2b8-2ed8-11e6-b019-034c444bdc6f","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:202","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final E E : coll) {\n                result |= add(e);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[281],"tindex":"8c587609-2ed8-11e6-b019-6f92ec2671bc","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:756","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336],"tindex":"8c5b352a-2ed8-11e6-b019-ff588afb699b","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:477","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<V> createCollection(final int size) {\n    if (size == 0) {\n        {\n            if (size == 0) {\n                {\n                    return org.apache.commons.collections4.Factory<? extends java.util.Collection<V>>.create();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[337],"tindex":"8c5baa5b-2ed8-11e6-b019-b7ae4e6baad6","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final org.apache.commons.collections4.OrderedBidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedBidiMap<K, V> org.apache.commons.collections4.OrderedBidiMap<K, V> = ((org.apache.commons.collections4.OrderedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[338],"tindex":"8c5c6dac-2ed8-11e6-b019-cdbe8db626b8","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1243","type":"CtMethodImpl","sourcecode":"private static void checkKeyAndValue(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,65,454,455,456,457,458,459,460,66,461,462,463,464,465,466,467,468,469,470,67,471,472,473,474,475,476,68,477,478,479,480,481,482,483,484],"tindex":"8c5c6dad-2ed8-11e6-b019-e126ec6e22fa","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:100","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.ListOrderedMap<K, V> listOrderedMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.ListOrderedMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[485],"tindex":"8c5c6dae-2ed8-11e6-b019-57650d9c5441","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:279","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.FixedOrderComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.FixedOrderComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(object));\n                return null == (java.util.Map<T, java.lang.Integer>) ? null == (comp.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(comp.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (comp.int))) && ((boolean) == (comp.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[486],"tindex":"8c5edeaf-2ed8-11e6-b019-6dd2f67840a8","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:128","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"8c5fa200-2ed8-11e6-b019-eb9eb332dc65","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1054","type":"CtMethodImpl","sourcecode":"protected void rangeCheck(final int index, final int beyond) {\n    if (beyond < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < 0) || (index >= beyond)) {\n                throw new java.lang.IndexOutOfBoundsException(((((\"Index '\" + index) + \"' out of bounds for size '\") + (int)) + \"'\"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"beyond"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"8c606551-2ed8-11e6-b019-fdd00a66f96a","method":{"position":"org.apache.commons.collections4.IteratorUtils:888","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Enumeration<E> asEnumeration(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorEnumeration<E>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"8c614fb2-2ed8-11e6-b019-c1f9a7d5b084","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:708","type":"CtMethodImpl","sourcecode":"private void atomic(final java.lang.Runnable r, final int bucket) {\n    if (r == null) {\n        {\n            if (bucket >= (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int)) {\n                r.run();\n                return ;\n            } \n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][bucket]) {\n                atomic(r, (bucket + 1));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[],"tindex":"8c61c4e3-2ed8-11e6-b019-f52c9a889373","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n            } \n            java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[487,488,489],"tindex":"8c621304-2ed8-11e6-b019-0d2f7442d512","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(preds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[490],"tindex":"8c6631b5-2ed8-11e6-b019-b10f7d366c86","method":{"position":"org.apache.commons.collections4.ClosureUtils:145","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> doWhileClosure(final org.apache.commons.collections4.Closure<? super E> closure, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtBinaryOperatorImpl","sourcecode":"(node.getLeft(dataElement)) != null"},"failures":[491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,338,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,337,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,28,29,574,575,30,31,576,577,578,579,580],"tindex":"8c6658c6-2ed8-11e6-b019-3548228b0483","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1866","type":"CtMethodImpl","sourcecode":"private void setLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"8c6658c7-2ed8-11e6-b019-09c89fcf6ee4","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:317","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryBefore(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"8c6658c8-2ed8-11e6-b019-2199c8b631aa","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[581],"tindex":"8c674329-2ed8-11e6-b019-a3b54fb6d9d4","method":{"position":"org.apache.commons.collections4.list.TransformedList:79","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list == null) {\n        {\n            final org.apache.commons.collections4.list.TransformedList<E> org.apache.commons.collections4.list.TransformedList<E> = new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n            if (((transformer != null) && (list != null)) && ((list.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(list.toArray()));\n                list.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[582],"tindex":"8c676a3a-2ed8-11e6-b019-1322d5241d7c","method":{"position":"org.apache.commons.collections4.CollectionUtils:684","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    closure.execute(iterator.next());\n                }\n            } \n            return closure;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[4],"tindex":"8c676a3b-2ed8-11e6-b019-eb353d074968","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:154","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            if (key1 != null) {\n                {\n                    final int int = hash(key1, key2);\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n                    while (entry != null) {\n                        if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n                    }\n                    return false;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641],"tindex":"8c67914c-2ed8-11e6-b019-bf954312343a","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:111","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            return node.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,338,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,337,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,28,29,574,575,30,31,576,577,578,579,580],"tindex":"8c67914d-2ed8-11e6-b019-c7ed26f18cea","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:734","type":"CtMethodImpl","sourcecode":"private static boolean isRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            return (node != null) && (node.isRed(dataElement));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[642,643,644,645,594,646,647,623],"tindex":"8c67b85e-2ed8-11e6-b019-0d905e0a3f7a","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:229","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index > 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            removeNode(node);\n            return oldValue;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[648,649,650,651,652,653,654,655],"tindex":"8c67b85f-2ed8-11e6-b019-8153b78d893d","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:97","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (null == object) {\n        {\n            return decorated().remove(object, count);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"8c68f0e0-2ed8-11e6-b019-658ad2f2012e","method":{"position":"org.apache.commons.collections4.MapUtils:426","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key, final java.lang.Number defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"8c68f0e1-2ed8-11e6-b019-5bd5eeefc932","method":{"position":"org.apache.commons.collections4.MapUtils:742","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key, final byte defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return defaultValue;\n            } \n            return byteObject.byteValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[656],"tindex":"8c68f0e2-2ed8-11e6-b019-d59a444f858c","method":{"position":"org.apache.commons.collections4.CollectionUtils:494","type":"CtMethodImpl","sourcecode":"public static boolean isProperSubCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((a.size()) != (a.size())) {\n        {\n            return ((a.size()) < (b.size())) && (org.apache.commons.collections4.CollectionUtils.isSubCollection(a, b));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"8c68f0e3-2ed8-11e6-b019-b504888ef6e1","method":{"position":"org.apache.commons.collections4.ListUtils:147","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> sum(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list1.size()) > (list1.size())) {\n        {\n            return org.apache.commons.collections4.ListUtils.subtract(org.apache.commons.collections4.ListUtils.union(list1, list2), org.apache.commons.collections4.ListUtils.intersection(list1, list2));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[657,658,659],"tindex":"8c698d24-2ed8-11e6-b019-db0f64f5e969","method":{"position":"org.apache.commons.collections4.PredicateUtils:211","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[508,509,511,512,513,516,518,520,521,556,557,559,560,561,564],"tindex":"8c6a9e95-2ed8-11e6-b019-a9821c23ae1a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1484","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupKey(obj)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:120","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"8c6a9e96-2ed8-11e6-b019-099e7393bdf0","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:119","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            final java.util.Set<E> java.util.Set<E> = new java.util.HashSet<E>(list);\n            list.retainAll(set);\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"8c6ac5a7-2ed8-11e6-b019-f10784a5d5d7","method":{"position":"org.apache.commons.collections4.list.TreeList:452","type":"CtMethodImpl","sourcecode":"void toArray(final java.lang.Object[] array, final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            array[index] = E;\n            if ((getLeftSubTree()) != null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n            if ((getRightSubTree()) != null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,4,5,6,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917],"tindex":"8c6ac5a8-2ed8-11e6-b019-6f052065f0fe","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:412","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:151","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946],"tindex":"8c6aecb9-2ed8-11e6-b019-31b40a05e372","method":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:86","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        {\n            return new org.apache.commons.collections4.bidimap.DualHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[947],"tindex":"8c6d0f9a-2ed8-11e6-b019-b3107d14ce87","method":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[103],"tindex":"8c6d36ab-2ed8-11e6-b019-7f70997ebdb1","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:246","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                result |= remove(name);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl","sourcecode":"collectionFactory == null"},"failures":[],"tindex":"8c6e963c-2ed8-11e6-b019-453cf9a0b2d5","method":{"position":"org.apache.commons.collections4.MapUtils:1474","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        {\n            return org.apache.commons.collections4.map.MultiValueMap.multiValueMap(map, collectionFactory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[948,949,950,951,952,953,954,955,956],"tindex":"8c74b0bd-2ed8-11e6-b019-6763f6f9c6fe","method":{"position":"org.apache.commons.collections4.list.TreeList:430","type":"CtMethodImpl","sourcecode":"int indexOf(final java.lang.Object object, final int index) {\n    if (null == object) {\n        {\n            if ((getLeftSubTree()) != null) {\n                final int int = org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n                if (result != (-1)) {\n                    return result;\n                } \n            } \n            if ((E) == null ? (E) == object : E.equals(object)) {\n                return index;\n            } \n            if ((getRightSubTree()) != null) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[285,294,295,301,305],"tindex":"8c759b1e-2ed8-11e6-b019-af5ef66423d2","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:210","type":"CtMethodImpl","sourcecode":"public boolean removeMapping(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (valuesForKey == null) {\n                return false;\n            } \n            final boolean boolean = valuesForKey.remove(value);\n            if (removed == false) {\n                return false;\n            } \n            if (valuesForKey.isEmpty()) {\n                remove(key);\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[],"tindex":"8c75c22f-2ed8-11e6-b019-9189d3e798d3","method":{"position":"org.apache.commons.collections4.map.LinkedMap:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        {\n            if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[957,958],"tindex":"8c75c230-2ed8-11e6-b019-0deac7420f03","method":{"position":"org.apache.commons.collections4.list.TransformedList:155","type":"CtMethodImpl","sourcecode":"public E set(final int index, E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            object = transform(object);\n            return getList().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:194","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"8c75c231-2ed8-11e6-b019-d97197db538e","method":{"position":"org.apache.commons.collections4.IteratorUtils:904","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[959],"tindex":"8c75e942-2ed8-11e6-b019-2512214a6668","method":{"position":"org.apache.commons.collections4.MapUtils:1283","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.PredicatedMap.predicatedMap(map, keyPred, valuePred);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[960,961,962,963],"tindex":"8c776fe3-2ed8-11e6-b019-d36b227e0afc","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        {\n            if (object == (org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.this)) {\n                return true;\n            } \n            return java.util.Map.Entry<K, V>.equals(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"8c791d94-2ed8-11e6-b019-1398b7349b4d","method":{"position":"org.apache.commons.collections4.MapUtils:605","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return 0;\n            } \n            return byteObject.byteValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[],"tindex":"8c791d95-2ed8-11e6-b019-c5aec4a77306","method":{"position":"org.apache.commons.collections4.map.LinkedMap:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        {\n            if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[964],"tindex":"8c791d96-2ed8-11e6-b019-ed817a899f04","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[508,509,510,511,512,513,514,516,518,520,521,965,966,967,968,556,557,559,560,561,562,564,969,970],"tindex":"8c7a07f7-2ed8-11e6-b019-e120fc08fa41","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1322","type":"CtMethodImpl","sourcecode":"private boolean doEquals(final java.lang.Object obj, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                try {\n                    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = getMapIterator(dataElement) ; it.hasNext() ; ) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        final java.lang.Object java.lang.Object = it.getValue();\n                        if ((value.equals(other.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                } catch (final java.lang.ClassCastException ex) {\n                    return false;\n                } catch (final java.lang.NullPointerException ex) {\n                    return false;\n                }\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[971],"tindex":"8c7a2f08-2ed8-11e6-b019-8f97c27b2054","method":{"position":"org.apache.commons.collections4.PredicateUtils:487","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsExceptionPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NullIsExceptionPredicate.nullIsExceptionPredicate(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[972,973],"tindex":"8c7b1969-2ed8-11e6-b019-b726a02b23ca","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:180","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().retainAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:74","type":"CtBinaryOperatorImpl","sourcecode":"(transformers.size()) == 0"},"failures":[974],"tindex":"8c7b196a-2ed8-11e6-b019-c396091a38c2","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:70","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if ((transformers.size()) == 0) {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n            } \n            if ((transformers.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<T, T>[] org.apache.commons.collections4.Transformer<T, T>[] = transformers.toArray(new org.apache.commons.collections4.Transformer[transformers.size()]);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , cmds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[975,976],"tindex":"8c7d153b-2ed8-11e6-b019-97a1b73e2b72","method":{"position":"org.apache.commons.collections4.map.CompositeMap:381","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"No mutator specified\");\n            } \n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.putAll(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[977,978,979],"tindex":"8c7dd88c-2ed8-11e6-b019-c148e4c58022","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:72","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            return new org.apache.commons.collections4.functors.OnePredicate<T>(preds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[980,981],"tindex":"8c7dd88d-2ed8-11e6-b019-5dae1aacff37","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"8c7dff9e-2ed8-11e6-b019-43d914a0797f","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:738","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((multi.size()) >= 2) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getRight(dataElement)) == node"},"failures":[518,521,531,534,535,538,539,540,541,542],"tindex":"8c7ec2ef-2ed8-11e6-b019-93b13c2df5cf","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1959","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean[][dataElement.ordinal()] = node.boolean[][dataElement.ordinal()];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"8c7f8640-2ed8-11e6-b019-d35aca5b4721","method":{"position":"org.apache.commons.collections4.map.TransformedMap:99","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if ((map.size()) > 0) {\n        {\n            final org.apache.commons.collections4.map.TransformedMap<K, V> org.apache.commons.collections4.map.TransformedMap<K, V> = new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[982,983],"tindex":"8c829381-2ed8-11e6-b019-4759eed81b94","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:79","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((preds.int) == 1) {\n                return preds[0];\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[984],"tindex":"8c837de2-2ed8-11e6-b019-1f8f54d3de52","method":{"position":"org.apache.commons.collections4.PredicateUtils:337","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"8c837de3-2ed8-11e6-b019-7db2d6d64326","method":{"position":"org.apache.commons.collections4.SplitMapUtils:79","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:126","type":"CtBinaryOperatorImpl","sourcecode":"criterion == null"},"failures":[],"tindex":"8c83cc04-2ed8-11e6-b019-e5a523d13449","method":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:121","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> comparatorPredicate(final T object, final java.util.Comparator<T> comparator, final org.apache.commons.collections4.functors.ComparatorPredicate.Criterion criterion) {\n    if (criterion == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                throw new java.lang.IllegalArgumentException(\"Comparator must not be null.\");\n            } \n            if (criterion == null) {\n                throw new java.lang.IllegalArgumentException(\"Criterion must not be null.\");\n            } \n            return new org.apache.commons.collections4.functors.ComparatorPredicate<T>(object , comparator , criterion);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"criterion":"criterion"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[],"tindex":"8c850485-2ed8-11e6-b019-51d975129eb8","method":{"position":"org.apache.commons.collections4.CollectionUtils:1329","type":"CtMethodImpl","sourcecode":"public static int size(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        {\n            if (object == null) {\n                return 0;\n            } \n            int int = 0;\n            if (object instanceof java.util.Map<?, ?>) {\n                total = ((java.util.Map<?, ?>)(object)).size();\n            } else if (object instanceof java.util.Collection<?>) {\n                total = ((java.util.Collection<?>)(object)).size();\n            } else if (object instanceof java.lang.Object[]) {\n                total = ((java.lang.Object[])(object)).int;\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    total++;\n                    it.next();\n                }\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    total++;\n                    it.nextElement();\n                }\n            } else {\n                try {\n                    total = java.lang.reflect.Array.getLength(object);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n            return total;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[],"tindex":"8c852b96-2ed8-11e6-b019-dd693aaed7cb","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:477","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<V> createCollection(final int size) {\n    if (size == 0) {\n        {\n            if (size == 0) {\n                {\n                    return org.apache.commons.collections4.Factory<? extends java.util.Collection<V>>.create();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:182","type":"CtBinaryOperatorImpl","sourcecode":"(valueTransformer) == null"},"failures":[985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035],"tindex":"8c852b97-2ed8-11e6-b019-75076a2096c1","method":{"position":"org.apache.commons.collections4.map.TransformedMap:76","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (valueTransformer == null) {\n        {\n            return new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"valueTransformer":"valueTransformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:977","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[1036,1037,1038,1039,1040,1041],"tindex":"8c85c7d8-2ed8-11e6-b019-6d998ab3fba8","method":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:69","type":"CtMethodImpl","sourcecode":"private static <E>java.util.Iterator<E> createTypesafeIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            return new java.util.Iterator<E>() {\n                public boolean hasNext() {\n                    return iterator.hasNext();\n                }\n\n                public E next() {\n                    return iterator.next();\n                }\n\n                public void remove() {\n                    iterator.remove();\n                }\n            };\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[1042,1043,1044,1045],"tindex":"8c85eee9-2ed8-11e6-b019-13b626a311a0","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:93","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().remove(object, count);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[361,362,356,358,359,360,364,401,402,1046,1047,1048,65,67],"tindex":"8c86b23a-2ed8-11e6-b019-a1634e5c72de","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:400","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return get(java.util.List<K>.get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[943,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,379,386,400,403,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,791,476,1086,993,1001,1023,1025],"tindex":"8c86b23b-2ed8-11e6-b019-8768adc2b8d4","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:85","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[1087],"tindex":"8c86b23c-2ed8-11e6-b019-7fd63553cb41","method":{"position":"org.apache.commons.collections4.SplitMapUtils:63","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"8c86b23d-2ed8-11e6-b019-cdb0e9687088","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:378","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object k) {\n    if (k == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (k == null) {\n                return false;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[1088,1089,1090,1091,1092,1093,1094],"tindex":"8c87005e-2ed8-11e6-b019-559582b7b71b","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:78","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Predicate<?>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n            } \n            for (int int = 0 ; i < (predicates.int) ; i++) {\n                if ((predicates[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"8c88fc2f-2ed8-11e6-b019-058d7033bc65","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"8c89e690-2ed8-11e6-b019-11b042f2787e","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return getEntrySet().containsAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"8c89e691-2ed8-11e6-b019-630acb5f9e73","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:792","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key4 != null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((((multi.size()) >= 4) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) && (key4 == null ? (multi.getKey(3)) == null : key4.equals(multi.getKey(3)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key4"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[508,509,511,512,513,516,518,520,521,525,526,527,556,557,559,560,561,564,570,571,572],"tindex":"8c8a0da2-2ed8-11e6-b019-750433278830","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1533","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            return (node != null) && (node.getValue().equals(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndTransformers == null"},"failures":[1095],"tindex":"8c8a0da3-2ed8-11e6-b019-cf268e5e92af","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (objectsAndTransformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n            final int int = objectsAndTransformers.size();\n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                trs[(i++)] = entry.getValue();\n            }\n            return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry"},"failures":[],"tindex":"8c8a34b4-2ed8-11e6-b019-a595dc7e415b","method":{"position":"org.apache.commons.collections4.map.CompositeMap:465","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map.Entry) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Map) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                return org.apache.commons.collections4.map.CompositeMap.this.entrySet().equals(map.entrySet());\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"8c8a34b5-2ed8-11e6-b019-63d2b237ba4b","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isBitSet(final java.lang.String key, final int bitIndex, final int lengthInBits) {\n    if (bitIndex == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((key == null) || (bitIndex >= lengthInBits)) {\n                return false;\n            } \n            final int int = bitIndex / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = bitIndex % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            return ((key.charAt(index)) & (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(bit))) != 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"bitIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[1096,1097,1098,1099,1100,1101],"tindex":"8c8ad0f6-2ed8-11e6-b019-07e2fa9e079c","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:272","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            return java.util.List<E>.get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[1094],"tindex":"8c8af807-2ed8-11e6-b019-4ba4325613e8","method":{"position":"org.apache.commons.collections4.ClosureUtils:279","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[1088],"tindex":"8c8af808-2ed8-11e6-b019-db5d849f7ec7","method":{"position":"org.apache.commons.collections4.TransformerUtils:250","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers) {\n    if (transformers == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"8c8af809-2ed8-11e6-b019-d1c05379113b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2031","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            if ((node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()))) {\n                removeEntry(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[1102,1103,1104,1105,1106,1107,1108,1109,1110,1017,331,1111,1112,135,202,230,1113,1114,1115,1116],"tindex":"8c8b1f1a-2ed8-11e6-b019-31dc062f5059","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:143","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().retainAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[1117],"tindex":"8c8b1f1b-2ed8-11e6-b019-f3a782423a59","method":{"position":"org.apache.commons.collections4.CollectionUtils:1668","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> retainAll(final java.util.Collection<C> collection, final java.util.Collection<?> retain) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.retainAll(collection, retain);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,10,1142,1143,1144,1145,1146,1147],"tindex":"8c8b1f1c-2ed8-11e6-b019-77385c582e21","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = ((org.apache.commons.collections4.Bag<E>)(bag));\n                return tmpBag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableBag<E>(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"8c8b1f1d-2ed8-11e6-b019-619b9dcaa194","method":{"position":"org.apache.commons.collections4.MapUtils:722","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key, final boolean defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (booleanObject == null) {\n                return defaultValue;\n            } \n            return booleanObject.booleanValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[],"tindex":"8c8b462e-2ed8-11e6-b019-13d976b2a115","method":{"position":"org.apache.commons.collections4.CollectionUtils:1120","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Iterator<? extends C> iterator) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            while (iterator.hasNext()) {\n                changed |= collection.add(iterator.next());\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[837,849,838,843,860,862,863,864,878,879],"tindex":"8c8b462f-2ed8-11e6-b019-b1cdea394843","method":{"position":"org.apache.commons.collections4.map.LRUMap:192","type":"CtMethodImpl","sourcecode":"protected void moveToMRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                (int)++;\n                if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n                    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n                } \n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n            } else if (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                throw new java.lang.IllegalStateException((\"Can't move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"8c8b6d40-2ed8-11e6-b019-7da84be20ce7","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:154","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            if (key1 != null) {\n                {\n                    final int int = hash(key1, key2);\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n                    while (entry != null) {\n                        if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n                    }\n                    return false;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}