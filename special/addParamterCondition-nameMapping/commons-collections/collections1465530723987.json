{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":4,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":849,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":758,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":79,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":680,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":214,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":391,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":438,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":263,"org.apache.commons.collections4.CollectionUtilsTest.getNegative":340,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":923,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":1046,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":660,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":965,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":960,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":1027,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":281,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":837,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":285,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":327,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":287,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":286,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":991,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":302,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":249,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":971,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":719,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":401,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":813,"org.apache.commons.collections4.CollectionUtilsTest.get":159,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":734,"org.apache.commons.collections4.map.Flat3MapTest.testObjectEqualsSelf":786,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":877,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":891,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":750,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":816,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":307,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionClear":567,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":657,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":624,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":709,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":759,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":811,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":465,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":820,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":490,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":549,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":197,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":595,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":809,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":471,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":808,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":90,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":1052,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":380,"org.apache.commons.collections4.CollectionUtilsTest.select":939,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":521,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRetainAll":15,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":137,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":848,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":393,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":5,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":552,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":896,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":92,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":105,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":721,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":487,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":652,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":366,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":35,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":402,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":669,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":968,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":243,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":675,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":1012,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":889,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsSelfHashCode":102,"org.apache.commons.collections4.CollectionUtilsTest.intersection":945,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":485,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":841,"org.apache.commons.collections4.map.LazySortedMapTest.testMapHashCode":16,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":293,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":454,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":443,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":200,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":429,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":444,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":445,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":177,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":920,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsContract":101,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":437,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":164,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":194,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":884,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":310,"org.apache.commons.collections4.map.CompositeMapTest.testPut":326,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":180,"org.apache.commons.collections4.map.LazyMapTest.testFullMapCompatibility":131,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":406,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":785,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":313,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":902,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":205,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":569,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":629,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":555,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":425,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":1061,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":627,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":899,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":160,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":778,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":779,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":780,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":663,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":596,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":994,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":1014,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":650,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":261,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":593,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":594,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":592,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":381,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":473,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":577,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":134,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":189,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":517,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":236,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":419,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":845,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":948,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":468,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":628,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":691,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":365,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveAll":88,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":955,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":332,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":460,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":1049,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":455,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":771,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":791,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":1065,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":764,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":1057,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":732,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":901,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":213,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":710,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesIteratorRemoveChangesMap":921,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":1077,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":538,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":565,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":260,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":480,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":295,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":700,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":218,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":497,"org.apache.commons.collections4.map.Flat3MapTest.testEqualsNull":787,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":825,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":840,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":760,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":761,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":973,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":762,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":523,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":217,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":695,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":540,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":373,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":405,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":748,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":870,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":323,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectEqualsSelf":47,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":242,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":976,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":511,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":599,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":1073,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":553,"org.apache.commons.collections4.set.MapBackedSetTest.testCanonicalEmptyCollectionExists":503,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":223,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":752,"org.apache.commons.collections4.CollectionUtilsTest.get1":342,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":84,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":504,"org.apache.commons.collections4.map.DefaultedMapTest.testMapHashCode":65,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":814,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":852,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":410,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":810,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":447,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":259,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":681,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":727,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking2":882,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":561,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":559,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":247,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":1001,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":834,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":674,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":186,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveAll":77,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap":258,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":269,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":636,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":632,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":821,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":198,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":388,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains3":109,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains2":108,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":986,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":835,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":664,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":714,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":799,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains1":107,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":418,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":417,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":416,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":597,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":527,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":343,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":13,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":967,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":883,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":488,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":556,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":314,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":934,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":386,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":541,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":235,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":662,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":767,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":685,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":831,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":1039,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":138,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":697,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":524,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":578,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":1044,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":918,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":87,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":782,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":400,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":588,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":998,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":728,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":1075,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":751,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":1066,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":251,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":1008,"org.apache.commons.collections4.map.LazySortedMapTest.testFullMapCompatibility":34,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":983,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":336,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":2,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":502,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":127,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":426,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":558,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":352,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":58,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":229,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":789,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":358,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":649,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":963,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":1068,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":140,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":89,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":231,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":614,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":873,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":1050,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":526,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRetainAll":45,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":495,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":775,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":1036,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":440,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":273,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":613,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":879,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":885,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":851,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":916,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":542,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":119,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":270,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":609,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":936,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":436,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":656,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":349,"org.apache.commons.collections4.map.HashedMapTest.testClone":729,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":903,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking2":798,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":192,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":665,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":252,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":120,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":757,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":181,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":346,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":179,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":472,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":290,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":982,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":399,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":979,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":800,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":369,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":338,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":505,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetClearChangesMap":69,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":712,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":491,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":21,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":938,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":303,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":623,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":43,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":898,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":38,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":544,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":1016,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":619,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":1053,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":372,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":630,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":1072,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":703,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":702,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":1032,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":331,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":704,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":1059,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":196,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":696,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":942,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":448,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":749,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":469,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":640,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsContract":149,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":152,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":174,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":539,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":266,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":668,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":863,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":862,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":1078,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":859,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNonEmptyMap":256,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":858,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":861,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":860,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":855,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":1060,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":398,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":857,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":997,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":856,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveAll":39,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":905,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":692,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":383,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":795,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":1021,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveAll":136,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":815,"org.apache.commons.collections4.map.LinkedMapTest.testClone":693,"org.apache.commons.collections4.ListUtilsTest.testSelect":914,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":1071,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":894,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":926,"org.apache.commons.collections4.map.LazyMapTest.testValuesClearChangesMap":143,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":950,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":339,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":743,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":451,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":459,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalFullCollectionExists":97,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":915,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":239,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":828,"org.apache.commons.collections4.list.GrowthListTest.testListListIterator":1000,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":765,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":777,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":746,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":745,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":720,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":744,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":489,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":672,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":900,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":824,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":957,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":57,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":708,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRetainAll":64,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":466,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":735,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking2":1028,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":305,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":188,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":753,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":1013,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":182,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":529,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":689,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":676,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":560,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":576,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":185,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":184,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":183,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":666,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToString":545,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":886,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":690,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetClearChangesMap":24,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":1018,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":308,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalEmptyCollectionExists":50,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":187,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":716,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":225,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":792,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":1004,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":626,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":499,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":222,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":927,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":320,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":319,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":806,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":318,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":1023,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":943,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking":246,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveChangesMap":14,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":622,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":586,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":797,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":446,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":347,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesClearChangesMap":46,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":82,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":698,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":277,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":341,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":987,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":368,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":621,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":972,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":625,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":54,"org.apache.commons.collections4.map.LRUMapTest.testLRU":707,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":1063,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":531,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":890,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithEmptyMap":255,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":616,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":912,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":441,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":805,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":601,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":515,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":570,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":980,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":519,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":513,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":653,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":1020,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":195,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":275,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":168,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking":999,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":1009,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":827,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":245,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":713,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":940,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":818,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":176,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":1037,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":130,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":648,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":415,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":774,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":606,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testDecorateFactory":612,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullKey":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":467,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":507,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":508,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":587,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":1,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":705,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":838,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":411,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":1006,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":781,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":864,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":572,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":740,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":658,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":647,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":739,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":952,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":661,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":796,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":520,"org.apache.commons.collections4.map.LazyMapTest.testKeySetClearChangesMap":117,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":793,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":294,"org.apache.commons.collections4.map.LazySortedMapTest.testLastKey":8,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":110,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":843,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":763,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":947,"org.apache.commons.collections4.map.LazySortedMapTest.testMakeMap":29,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":56,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":579,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":1069,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":1011,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":204,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":839,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":699,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":932,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":163,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":585,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":783,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":390,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":642,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":784,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":72,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":359,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":428,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":496,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetIteratorRemoveChangesMap":41,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":284,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":457,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":924,"org.apache.commons.collections4.map.LazyMapTest.testValuesRetainAll":112,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":282,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":283,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":433,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":220,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":741,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":892,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":518,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":6,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":812,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":617,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":118,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":536,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToString":562,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetClearChangesMap":121,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":500,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":731,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":70,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":1031,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":639,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":1029,"org.apache.commons.collections4.map.DefaultedMapTest.testFullMapCompatibility":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":209,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":484,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":643,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking":794,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":210,"org.apache.commons.collections4.map.DefaultedMapTest.testSimpleSerialization":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":208,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":897,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":234,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":996,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":439,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":354,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":420,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":608,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":522,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":673,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":532,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":871,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullValue":122,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":937,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":55,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":1045,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":85,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":981,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":389,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":1010,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":357,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":633,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":582,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":853,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":790,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":193,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":537,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySet":153,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":434,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":278,"org.apache.commons.collections4.map.CompositeMapTest.testGet":325,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":575,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":833,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":322,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":655,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":481,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":190,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":602,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":483,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":482,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":363,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":161,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":353,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":754,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":111,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":356,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":450,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":274,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":909,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":717,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":165,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":36,"org.apache.commons.collections4.map.LazyMapTest.testSimpleSerialization":148,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":832,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":215,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":337,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":671,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":233,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":312,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":371,"org.apache.commons.collections4.map.LazySortedMapTest.testFirstKey":9,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":755,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":958,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":641,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":232,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectEqualsSelf":96,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":76,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":133,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":452,"org.apache.commons.collections4.CollectionUtilsTest.union":944,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":1076,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":1030,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullKey":128,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":384,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":103,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":453,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":844,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":911,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":677,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":1024,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":382,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":203,"org.apache.commons.collections4.map.LazySortedMapTest.testEmptyMapCompatibility":32,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":1040,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains1":59,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains2":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":206,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains3":61,"org.apache.commons.collections4.list.TreeListTest.testRemove":1047,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":37,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":590,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":589,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveChangesMap":26,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":98,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":836,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":1070,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":887,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":591,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":1054,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":306,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":463,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":462,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":701,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":868,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":461,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":543,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":564,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":1055,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":442,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":479,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":875,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":1074,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":772,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":956,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":49,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":157,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":191,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":155,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":1034,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":86,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":422,"org.apache.commons.collections4.map.LRUMapTest.testClone":715,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":224,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":706,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":106,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":506,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove3":68,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":374,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":620,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove2":67,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove1":66,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":718,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":803,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":427,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":276,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":930,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":464,"org.apache.commons.collections4.map.DefaultedMapTest.testMakeMap":78,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":993,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":151,"org.apache.commons.collections4.map.DefaultedMapTest.testEmptyMapCompatibility":81,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":929,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":219,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":292,"org.apache.commons.collections4.CollectionUtilsTest.collateException2":574,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":397,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":551,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":554,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":498,"org.apache.commons.collections4.list.TreeListTest.testListEquals":1051,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":123,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":667,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":202,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":1041,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":141,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":951,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":773,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":533,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":289,"org.apache.commons.collections4.map.Flat3MapTest.testObjectHashCodeEqualsContract":788,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":893,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":230,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsSelfHashCode":150,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":166,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":881,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":1058,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":3,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":62,"org.apache.commons.collections4.map.LazyMapTest.testEmptyMapCompatibility":129,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":75,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":869,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":345,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":610,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":953,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsContract":52,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":241,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRetainAll":142,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":421,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":458,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":248,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":158,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":240,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":644,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":254,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":304,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":854,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":604,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":530,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithEmptyMap":257,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":132,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":135,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":847,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalFullCollectionExists":145,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":329,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":1002,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":328,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":1019,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":984,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":547,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":301,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":424,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":872,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":409,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":430,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":941,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":201,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":262,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":733,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":431,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":990,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":989,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":493,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":907,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":478,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":638,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":514,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":964,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":878,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":42,"org.apache.commons.collections4.CollectionUtilsTest.addIgnoreNull":154,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":977,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":296,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":510,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":534,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove1":17,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove2":18,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":169,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove3":19,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":1025,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":730,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":830,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":280,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":396,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":395,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":494,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":516,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":394,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":272,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":766,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":392,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":659,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":817,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":906,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsSelfHashCode":53,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":379,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":954,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":1067,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":355,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":865,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":227,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":1043,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":449,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":933,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":935,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":408,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":162,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":375,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":330,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":376,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":377,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":324,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":486,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":476,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":910,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetIteratorRemoveChangesMap":23,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":0,"org.apache.commons.collections4.map.LazyMapTest.testMapHashCode":113,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":509,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":432,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":124,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":216,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":874,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":880,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":600,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":27,"org.apache.commons.collections4.set.MapBackedSetTest.testCanonicalFullCollectionExists":501,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":722,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":423,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":477,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":946,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionClear":550,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":167,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":747,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":571,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetClearChangesMap":73,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRetainAll":94,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":635,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":385,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":807,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":370,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":221,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":298,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":299,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":300,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":1064,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":618,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":959,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":173,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":651,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":1056,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":1038,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":344,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":580,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":253,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":711,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove3":116,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":362,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":637,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove1":114,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove2":115,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":826,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetClearChangesMap":20,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":360,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":756,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":172,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":974,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalEmptyCollectionExists":147,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":492,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":802,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":683,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":769,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":678,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":91,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":311,"org.apache.commons.collections4.set.CompositeSetTest.testContains":908,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":1003,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":512,"org.apache.commons.collections4.CollectionUtilsTest.isFull":867,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":170,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":414,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking":876,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":694,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":211,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":573,"org.apache.commons.collections4.map.LazyMapTest.testObjectEqualsSelf":144,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":966,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":244,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":581,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":962,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullValue":74,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":1048,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":435,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":335,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":913,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":949,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":919,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":607,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":850,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":804,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":1022,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains1":10,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":271,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":866,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains2":11,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":333,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":334,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":175,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains3":12,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalFullCollectionExists":48,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":776,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":822,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesClearChangesMap":95,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":288,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":309,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":819,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":611,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":104,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":546,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":44,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":237,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullValue":25,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":1035,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":598,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":603,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":904,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":679,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":228,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":250,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":992,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":975,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":407,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalEmptyCollectionExists":99,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":291,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":297,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":364,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":922,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":378,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":985,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":238,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":969,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":801,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":823,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullKey":80,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":670,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":33,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":615,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":568,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":846,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":207,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":584,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":63,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":583,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":829,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":1007,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":321,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking2":1005,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":548,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":723,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":768,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":1015,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":139,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":928,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":525,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":687,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":688,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":686,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":470,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":315,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":316,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":978,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":317,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":842,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":93,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":684,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":226,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":1017,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":474,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":654,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":988,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":212,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveAll":125,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":40,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":528,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking":1026,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":736,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":566,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":737,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":199,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":742,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":1033,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":413,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":605,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":995,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":171,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":475,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":961,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":1042,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":367,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":563,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":888,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":682,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":146,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":267,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":265,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":268,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":350,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":645,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":403,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":925,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking":970,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":178,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":264,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":726,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":931,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":71,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":535,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":770,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":631,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":634,"org.apache.commons.collections4.map.LazyMapTest.testMakeMap":126,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":279,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":724,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":725,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":738,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":387,"org.apache.commons.collections4.map.LazySortedMapTest.testSimpleSerialization":51,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":348,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":456,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":1062,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":351,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":646,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":404,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":895,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":917,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":361,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":557,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveAll":28,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":412},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[0,1,2,3],"tindex":"b1a2f6ea-2ebe-11e6-99d1-7fb06f052398","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:357","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[4],"tindex":"b1a3e14b-2ebe-11e6-99d1-c18b0224b9d9","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            if ((node != null) && (node.getKey().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"b1a4085c-2ebe-11e6-99d1-9fc05f6b9552","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:188","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (java.lang.System.identityHashCode(key)) ^ (java.lang.System.identityHashCode(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152],"tindex":"b1a42f6d-2ebe-11e6-99d1-19e3c617e43f","method":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:47","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> factoryTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.FactoryTransformer<I, O>(factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[153],"tindex":"b1a4567e-2ebe-11e6-99d1-837c8f3a21bc","method":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:66","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedSortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"b1a47d8f-2ebe-11e6-99d1-f91a3949aee9","method":{"position":"org.apache.commons.collections4.SetUtils:178","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> synchronizedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            if (set == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return java.util.Collections.synchronizedSet(set);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[154],"tindex":"b1a47d90-2ebe-11e6-99d1-8b87653de4ac","method":{"position":"org.apache.commons.collections4.CollectionUtils:1086","type":"CtMethodImpl","sourcecode":"public static <T>boolean addIgnoreNull(final java.util.Collection<T> collection, final T object) {\n    if (collection == null) {\n        {\n            if (collection == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            return (object != null) && (collection.add(object));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[],"tindex":"b1a4a4a1-2ebe-11e6-99d1-a7618786ae5f","method":{"position":"org.apache.commons.collections4.CollectionUtils:583","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(obj instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n                return false;\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> = ((org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O>)(obj));\n            return org.apache.commons.collections4.Equator<O>.equate(O, otherObj.getObject());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[],"tindex":"b1a4cbb2-2ebe-11e6-99d1-dfe5bffda081","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:169","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[4,155,156,157,158],"tindex":"b1a4cbb3-2ebe-11e6-99d1-f9ff13bb15a6","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1544","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            if ((node != null) && (node.getValue().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[159,160,161,162,163],"tindex":"b1a4f2c4-2ebe-11e6-99d1-9dc712d1714a","method":{"position":"org.apache.commons.collections4.CollectionUtils:1194","type":"CtMethodImpl","sourcecode":"private static void checkIndexBounds(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + index));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[164],"tindex":"b1a519d5-2ebe-11e6-99d1-55166218d410","method":{"position":"org.apache.commons.collections4.functors.IfClosure:70","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if ((trueClosure == null) || (falseClosure == null)) {\n                throw new java.lang.IllegalArgumentException(\"Closures must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.IfClosure<E>(predicate , trueClosure , falseClosure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtBinaryOperatorImpl","sourcecode":"nCopies > 0"},"failures":[165,166,167,168,169,170],"tindex":"b1a519d6-2ebe-11e6-99d1-5362f302445c","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:125","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies <= 0) {\n        {\n            if (nCopies > 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return getBag().add(transform(object), nCopies);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"nCopies"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,155,156,157,211,212,213,214,158,215,216,217],"tindex":"b1a540e7-2ebe-11e6-99d1-4da859311c20","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:681","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> leastNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getLeft(dataElement)) != null) {\n                    rval = rval.getLeft(dataElement);\n                }\n            } \n            return rval;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[218,219,220,170,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236],"tindex":"b1a567f8-2ebe-11e6-99d1-3dbb4a724352","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next(), 1);\n                changed = changed || added;\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[237,238,239,240,241,242,243,244,245],"tindex":"b1a567f9-2ebe-11e6-99d1-1104af1671f6","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:626","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.StaticBucketMap.this.containsKey(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[246,247],"tindex":"b1a58f0a-2ebe-11e6-99d1-af96abd7a2f4","method":{"position":"org.apache.commons.collections4.list.PredicatedList:94","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().get(index);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[188,248,249,250,251,252],"tindex":"b1a5b61b-2ebe-11e6-99d1-79172103fcfd","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag<?>"},"failures":[253,254],"tindex":"b1a5b61c-2ebe-11e6-99d1-17d887c59e18","method":{"position":"org.apache.commons.collections4.CollectionUtils:606","type":"CtMethodImpl","sourcecode":"public static <O>int cardinality(final O obj, final java.lang.Iterable<? super O> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n        {\n            if (coll instanceof java.util.Set<?>) {\n                return ((java.util.Set<? super O>)(coll)).contains(obj) ? 1 : 0;\n            } \n            if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n                return ((org.apache.commons.collections4.Bag<? super O>)(coll)).getCount(obj);\n            } \n            int int = 0;\n            if (obj == null) {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (element == null) {\n                        count++;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (obj.equals(element)) {\n                        count++;\n                    } \n                }\n            }\n            return count;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[255,256,257,258],"tindex":"b1a5dd2d-2ebe-11e6-99d1-911a9f095643","method":{"position":"org.apache.commons.collections4.MapUtils:1204","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        {\n            return (map == null) || (map.isEmpty());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:74","type":"CtBinaryOperatorImpl","sourcecode":"(transformers.size()) == 0"},"failures":[259],"tindex":"b1a5dd2e-2ebe-11e6-99d1-6d13533bf2fa","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:70","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if ((transformers.size()) == 0) {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n            } \n            if ((transformers.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<T, T>[] org.apache.commons.collections4.Transformer<T, T>[] = transformers.toArray(new org.apache.commons.collections4.Transformer[transformers.size()]);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , cmds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[],"tindex":"b1a6043f-2ebe-11e6-99d1-d5d39f79aacb","method":{"position":"org.apache.commons.collections4.ClosureUtils:182","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName, paramTypes, args));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[260,261,262,263,264,265],"tindex":"b1a62b50-2ebe-11e6-99d1-593ed430f03e","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:252","type":"CtMethodImpl","sourcecode":"private void buildScript(final int start1, final int end1, final int start2, final int end2, final org.apache.commons.collections4.sequence.EditScript<T> script) {\n    if ((start2 - end2) > (start1 - start2)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.sequence.SequencesComparator.Snake org.apache.commons.collections4.sequence.SequencesComparator.Snake = getMiddleSnake(start1, end1, start2, end2);\n            if (((middle == null) || (((middle.getStart()) == end1) && ((middle.getDiag()) == (end1 - end2)))) || (((middle.getEnd()) == start1) && ((middle.getDiag()) == (start1 - start2)))) {\n                int int = start1;\n                int int = start2;\n                while ((i < end1) || (j < end2)) {\n                    if (((i < end1) && (j < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(i), java.util.List<T>.get(j)))) {\n                        script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                        ++i;\n                        ++j;\n                    } else {\n                        if ((end1 - start1) > (end2 - start2)) {\n                            script.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(i)));\n                            ++i;\n                        } else {\n                            script.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(j)));\n                            ++j;\n                        }\n                    }\n                }\n            } else {\n                buildScript(start1, middle.getStart(), start2, ((middle.getStart()) - (middle.getDiag())), script);\n                for (int int = middle.getStart() ; i < (middle.getEnd()) ; ++i) {\n                    script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                }\n                buildScript(middle.getEnd(), end1, ((middle.getEnd()) - (middle.getDiag())), end2, script);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"end2","end2":"start1","end1":"start2","start2":"start2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[266],"tindex":"b1a65261-2ebe-11e6-99d1-ed3f7d8fee08","method":{"position":"org.apache.commons.collections4.ListUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> selectRejected(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[267,268,269],"tindex":"b1a67972-2ebe-11e6-99d1-19367663c855","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[270],"tindex":"b1a67973-2ebe-11e6-99d1-fd8d6f680330","method":{"position":"org.apache.commons.collections4.QueueUtils:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(queue);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"b1a67974-2ebe-11e6-99d1-4f4e861ea35d","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(object, 1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b1a6a085-2ebe-11e6-99d1-edade4e044d3","method":{"position":"org.apache.commons.collections4.MapUtils:623","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return 0;\n            } \n            return shortObject.shortValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1077","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"b1a6a086-2ebe-11e6-99d1-3beaf5fa40ed","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isBitSet(final java.lang.String key, final int bitIndex, final int lengthInBits) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(lengthInBits)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((key == null) || (bitIndex >= lengthInBits)) {\n                return false;\n            } \n            final int int = bitIndex / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = bitIndex % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            return ((key.charAt(index)) & (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(bit))) != 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"lengthInBits"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"b1a6a087-2ebe-11e6-99d1-dda0394cc67f","method":{"position":"org.apache.commons.collections4.list.PredicatedList:102","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"b1a6c798-2ebe-11e6-99d1-4335ca7cc850","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:283","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            return node == null ? null : node.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"b1a6c799-2ebe-11e6-99d1-9da3c839195c","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:758","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    while (true) {\n                        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        if (child.isEmpty()) {\n                            child = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        } \n                        if ((child.int) <= (node.int)) {\n                            return child;\n                        } \n                        node = child;\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323],"tindex":"b1a6eeaa-2ebe-11e6-99d1-e9a1c61fe1ef","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:252","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getEntry(final java.lang.Object k) {\n    if (k == null) {\n        {\n            final K K = castKey(k);\n            if (key == null) {\n                return null;\n            } \n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K)) ? entry : null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[6],"tindex":"b1a6eeab-2ebe-11e6-99d1-a5dfe1e5400e","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:91","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[324],"tindex":"b1a6eeac-2ebe-11e6-99d1-776d8b2f2ac7","method":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        {\n            if (obj == (org.apache.commons.collections4.functors.ConstantTransformer.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                return false;\n            } \n            final java.lang.Object java.lang.Object = ((org.apache.commons.collections4.functors.ConstantTransformer<?, ?>)(obj)).getConstant();\n            return (otherConstant == (getConstant())) || ((otherConstant != null) && (otherConstant.equals(getConstant())));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[325,326,327,328,329,330,331,332],"tindex":"b1a715bd-2ebe-11e6-99d1-bb1ea5148582","method":{"position":"org.apache.commons.collections4.map.CompositeMap:133","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized void addComposited(final java.util.Map<K, V> map) throws java.lang.IllegalArgumentException {\n    if ((map.size()) > 0) {\n        throw new java.lang.IllegalArgumentException();\n    } else {\n        {\n            for (int int = (java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].keySet(), map.keySet());\n                if ((intersect.size()) != 0) {\n                    if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                        throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n                    } \n                    org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i], map, intersect);\n                } \n            }\n            final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) + 1];\n            java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int);\n            temp[((temp.int) - 1)] = map;\n            org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"b1a73cce-2ebe-11e6-99d1-055b14ae0891","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:221","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return java.util.Map<V, K>.get(value);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[333,334,335,336],"tindex":"b1a73ccf-2ebe-11e6-99d1-71aad9164380","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:589","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(n.getKey());\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:72","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[337,338],"tindex":"b1a763e0-2ebe-11e6-99d1-f71a71462c56","method":{"position":"org.apache.commons.collections4.CollectionUtils:1770","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> transformingCollection(final java.util.Collection<E> collection, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (collection == null) {\n        {\n            return org.apache.commons.collections4.collection.TransformedCollection.transformingCollection(collection, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[339],"tindex":"b1a763e1-2ebe-11e6-99d1-958761a8ffed","method":{"position":"org.apache.commons.collections4.IteratorUtils:297","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start) {\n    if (start < 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[340,341,159,342,343,344,345],"tindex":"b1a763e2-2ebe-11e6-99d1-f36c0081d14a","method":{"position":"org.apache.commons.collections4.CollectionUtils:1250","type":"CtMethodImpl","sourcecode":"public static java.lang.Object get(final java.lang.Object object, final int index) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            int int = index;\n            if (i < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + i));\n            } \n            if (object instanceof java.util.Map<?, ?>) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(object));\n                final java.util.Iterator<?> java.util.Iterator<?> = map.entrySet().iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.lang.Object[]) {\n                return ((java.lang.Object[])(object))[i];\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.next();\n                    } \n                    it.next();\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object instanceof java.util.Collection<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(object)).iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.nextElement();\n                    } else {\n                        it.nextElement();\n                    }\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object == null) {\n                throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n            } else {\n                try {\n                    return java.lang.reflect.Array.get(object, i);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"b1a78af3-2ebe-11e6-99d1-71f87cee5aab","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2061","type":"CtMethodImpl","sourcecode":"public V getKey(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,2,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489],"tindex":"b1a78af4-2ebe-11e6-99d1-c50de00a2a76","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[490],"tindex":"b1a7b205-2ebe-11e6-99d1-eb16c4ab0f57","method":{"position":"org.apache.commons.collections4.map.LinkedMap:154","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index < 0) {\n        {\n            return getEntry(index).getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[346,491,347,492,493,494,495,348,349,496,497,350,498,351,499,352,353,354,500,501,502,503,504,505,506,507,355,508,356,509,510,511,512,357,358,513,514,359,515,360,516,361,362,363,517,518,519,520,521],"tindex":"b1a7d916-2ebe-11e6-99d1-e586c1a5ab5d","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:74","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map, final V dummyValue) {\n    if (map == null) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"The map must not be null\");\n            } \n            return new org.apache.commons.collections4.set.MapBackedSet<E, V>(map , dummyValue);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"b1a7d917-2ebe-11e6-99d1-39308abe5a65","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:726","type":"CtMethodImpl","sourcecode":"protected K entryKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            return entry.getKey();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,522,523,288,289,290,524,291,292,293,294,295,296,297,298,299,300,301,302,303,304,525,526,527,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,528,529,321,322,323,530],"tindex":"b1a7d918-2ebe-11e6-99d1-9fed53a58a13","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:79","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal K castKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return ((K)(key));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[531,532,533,534,535,536,537,538],"tindex":"b1a80029-2ebe-11e6-99d1-73d70f912106","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:97","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            return decorated().remove(object, count);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[539],"tindex":"b1a8002a-2ebe-11e6-99d1-91d79569b8cd","method":{"position":"org.apache.commons.collections4.bag.SynchronizedSortedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedSortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.SynchronizedSortedBag<E>(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"b1a8002b-2ebe-11e6-99d1-b15227fc63c7","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.set.TransformedSortedSet<E> org.apache.commons.collections4.set.TransformedSortedSet<E> = new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573],"tindex":"b1a8273c-2ebe-11e6-99d1-a52a5bf3ffb6","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:202","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            boolean boolean = false;\n            for (final E E : coll) {\n                result |= add(e);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1594","type":"CtBinaryOperatorImpl","sourcecode":"c == null"},"failures":[574],"tindex":"b1a8273d-2ebe-11e6-99d1-25532ac7482d","method":{"position":"org.apache.commons.collections4.CollectionUtils:1567","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c) {\n    if (c == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, c, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602],"tindex":"b1a8273e-2ebe-11e6-99d1-19add8ba075e","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:455","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key2 = (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<K>)(key2)).get();\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"b1a84e4f-2ebe-11e6-99d1-c1990d20a15c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:582","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<K>lookup(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:238","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[],"tindex":"b1a84e50-2ebe-11e6-99d1-57bd4fd9e195","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:340","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> mutator) {\n    if (mutator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.collection.CompositeCollection.this.org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> = mutator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[603,604,605,606,607,608,609,610,611],"tindex":"b1a87561-2ebe-11e6-99d1-15e22e169790","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                {\n                    return decorated().getKey(value);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) == null"},"failures":[612],"tindex":"b1a87562-2ebe-11e6-99d1-4d00231d0e33","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:45","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> umodifiableListIterator(final java.util.ListIterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableListIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"b1a87563-2ebe-11e6-99d1-c76795e55811","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:221","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return java.util.Map<V, K>.get(value);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639],"tindex":"b1a89c74-2ebe-11e6-99d1-1f0a35e72453","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().java.util.Map<K, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[1,0],"tindex":"b1a89c75-2ebe-11e6-99d1-cbd3ba3fe981","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:246","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((multi.size()) == 2) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key1 != null) && (key2.equals(multi.getKey(1)))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"b1a89c76-2ebe-11e6-99d1-bb2bef40fbf3","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"b1a8c387-2ebe-11e6-99d1-01d0a4db451f","method":{"position":"org.apache.commons.collections4.list.PredicatedList:94","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().get(index);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655],"tindex":"b1a8c388-2ebe-11e6-99d1-ebfc06a264c1","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:154","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return (indexOf(value)) != (-1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[656,657],"tindex":"b1a8c389-2ebe-11e6-99d1-cb64ec550926","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"b1a8c38a-2ebe-11e6-99d1-f5e677090480","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:708","type":"CtMethodImpl","sourcecode":"private void atomic(final java.lang.Runnable r, final int bucket) {\n    if (r == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bucket >= (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int)) {\n                r.run();\n                return ;\n            } \n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][bucket]) {\n                atomic(r, (bucket + 1));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[658],"tindex":"b1a8ea9b-2ebe-11e6-99d1-5fd25c93ba70","method":{"position":"org.apache.commons.collections4.CollectionUtils:1329","type":"CtMethodImpl","sourcecode":"public static int size(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return 0;\n            } \n            int int = 0;\n            if (object instanceof java.util.Map<?, ?>) {\n                total = ((java.util.Map<?, ?>)(object)).size();\n            } else if (object instanceof java.util.Collection<?>) {\n                total = ((java.util.Collection<?>)(object)).size();\n            } else if (object instanceof java.lang.Object[]) {\n                total = ((java.lang.Object[])(object)).int;\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    total++;\n                    it.next();\n                }\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    total++;\n                    it.nextElement();\n                }\n            } else {\n                try {\n                    total = java.lang.reflect.Array.getLength(object);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n            return total;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[659,660,661,662,303,304,525,526,527,663,305,306,664,307,308,309,310,665,311,666,312,667,668,313,314,669,670,671,315,316,317,318,319,320,672,673,674,675,528,676,677,529,321,322,323,530],"tindex":"b1a911ac-2ebe-11e6-99d1-116bbecbee40","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:110","type":"CtMethodImpl","sourcecode":"final boolean isBitSet(final K key, final int bitIndex, final int lengthInBits) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(lengthInBits)) {\n        {\n            if (bitIndex == 0) {\n                {\n                    if (key == null) {\n                        return false;\n                    } \n                    return org.apache.commons.collections4.trie.KeyAnalyzer<? super K>.isBitSet(key, bitIndex, lengthInBits);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"bitIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"b1a911ad-2ebe-11e6-99d1-71a49671ae81","method":{"position":"org.apache.commons.collections4.SetUtils:178","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> synchronizedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            if (set == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return java.util.Collections.synchronizedSet(set);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[678],"tindex":"b1a911ae-2ebe-11e6-99d1-99529f3d9f89","method":{"position":"org.apache.commons.collections4.TransformerUtils:149","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> asTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"b1a911af-2ebe-11e6-99d1-09218f44ca6d","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:330","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryAfter(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"b1a938c0-2ebe-11e6-99d1-efce8236b415","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1517","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (doRemoveValue(o)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[679],"tindex":"b1a938c1-2ebe-11e6-99d1-b76d862a7099","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:142","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[346,491,347,492,493,494,495,348,349,496,497,350,498,351,499,352,353,354,507,355,508,356,509,510,511,512,357,358,513,514,359,515,360,516,361,362,363,364,365,680,681,682,366,367,368,369,370,683,371,372,684,685,373,374,686,687,688,375,376,377,689,690,378,379,380,381,382,383,691,384,692,693,694,695,696,697,698,385,386,387,388,389,699,390,391,700,701,392,393,702,703,704,394,395,396,705,706,397,398,399,400,401,402,707,708,403,404,405,406,709,710,711,712,713,714,715,716,717,718,719,720,407,408,409,410,411,721,412,413,722,723,414,415,724,725,726,416,417,418,727,728,419,420,421,422,423,424,729,730,731,732,434,435,436,437,438,733,439,440,734,735,441,442,736,737,738,443,444,445,739,740,446,447,448,449,450,451,741,742,0,1,2,3,743,744,745,746,747,748,749,750,452,453,751,454,455,456,752,753,457,754,458,755,756,459,460,757,758,759,760,761,762,461,462,463,763,764,765,766,464,767,768,465,466,467,468,469,470,769,770,771,471,772,773,774,472,473,474,475,476,775,477,478,776,777,479,480,778,779,780,481,482,483,781,782,484,485,486,487,488,489],"tindex":"b1a938c2-2ebe-11e6-99d1-652eee65b678","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:412","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtBinaryOperatorImpl","sourcecode":"from == null"},"failures":[],"tindex":"b1a95fd3-2ebe-11e6-99d1-171358502367","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:716","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> from, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> to, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (to == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (to != null) {\n                if (from == null) {\n                    to.setBlack(dataElement);\n                } else {\n                    to.copyColor(from, dataElement);\n                }\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"to"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"b1a95fd4-2ebe-11e6-99d1-218c744ab03d","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:207","type":"CtMethodImpl","sourcecode":"public void setReverseSort(final int index) {\n    if (index < 0) {\n        {\n            checkLocked();\n            java.util.BitSet.set(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtBinaryOperatorImpl","sourcecode":"nCopies <= 0"},"failures":[],"tindex":"b1a986e5-2ebe-11e6-99d1-1ba529dd0e2a","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:125","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies <= 0) {\n        {\n            if (nCopies > 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return getBag().add(transform(object), nCopies);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"nCopies"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[783,784,366,367,785,368,369,370,683,371,372,373,374,786,787,788,789],"tindex":"b1a986e6-2ebe-11e6-99d1-3d942de16135","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        {\n            if (obj == (org.apache.commons.collections4.map.Flat3Map.this)) {\n                return true;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(obj);\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((int) != (other.size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                java.lang.Object java.lang.Object = null;\n                switch (int) {\n                    case 3 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 2 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 1 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                }\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"b1a9adf7-2ebe-11e6-99d1-19ec798c1045","method":{"position":"org.apache.commons.collections4.map.SingletonMap:231","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return isEqualValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"b1a9adf8-2ebe-11e6-99d1-4d593c6b1d12","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                {\n                    return decorated().getKey(value);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,679,806],"tindex":"b1a9adf9-2ebe-11e6-99d1-916fae9461bb","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index > 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[807,808,171,809,172,810,603,604,605,811,812,173,174,813,175,176,814,177,178,179,815,180,181,816,817,818,819,182,183,184,185,820,821,822,186,823,824,825,187,826,188,189,190,191,827,192,828,829,830,831,832,833,834,193,835,4,194,195,196,197,836,198,199,837,200,201,202,838,203,204,839,205,840,841,206,207,842,843,844,208,209,210,155,156,157,211,845,846,212,213,847,848,214,158,215,216,217],"tindex":"b1a9d50a-2ebe-11e6-99d1-c366fb228c59","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:547","type":"CtMethodImpl","sourcecode":"private K doRemoveValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getKey();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b1a9d50b-2ebe-11e6-99d1-7fbf2b76415a","method":{"position":"org.apache.commons.collections4.MapUtils:802","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key, final long defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return defaultValue;\n            } \n            return longObject.longValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[849,237,238,239,240,241,242,243,244,245,850,851,336,852,853,854],"tindex":"b1a9d50c-2ebe-11e6-99d1-31c6d7b91114","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return true;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"b1a9fc1d-2ebe-11e6-99d1-cd20745647dd","method":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.comparators.BooleanComparator.this) == object) || ((object instanceof org.apache.commons.collections4.comparators.BooleanComparator) && ((org.apache.commons.collections4.comparators.BooleanComparator.this.boolean) == (((org.apache.commons.collections4.comparators.BooleanComparator)(object)).boolean)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[855,856,857,858,859,860,861,862,863,864,865,866,867,868],"tindex":"b1a9fc1e-2ebe-11e6-99d1-4d26a9eacf69","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:339","type":"CtMethodImpl","sourcecode":"private int decrement(int index) {\n    if (index < 0) {\n        {\n            index--;\n            if (index < 0) {\n                index = (int) - 1;\n            } \n            return index;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898],"tindex":"b1aa232f-2ebe-11e6-99d1-45296994ccb2","method":{"position":"org.apache.commons.collections4.list.TransformedList:119","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            return getList().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[384,899],"tindex":"b1aa2330-2ebe-11e6-99d1-797d7f555d3e","method":{"position":"org.apache.commons.collections4.map.LinkedMap:143","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntry(index).getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"b1aa2331-2ebe-11e6-99d1-f189d5786564","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:146","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"b1aa2332-2ebe-11e6-99d1-4d73025c9cff","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:255","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (java.util.Set<E>.contains(next)) {\n                    setRetainAll.add(next);\n                } \n            }\n            if ((setRetainAll.size()) == (java.util.Set<E>.size())) {\n                return false;\n            } \n            if ((setRetainAll.size()) == 0) {\n                clear();\n            } else {\n                for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                    if (!(setRetainAll.contains(it.next()))) {\n                        it.remove();\n                    } \n                }\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"b1aa4a43-2ebe-11e6-99d1-170e46ccc592","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:758","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    while (true) {\n                        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        if (child.isEmpty()) {\n                            child = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        } \n                        if ((child.int) <= (node.int)) {\n                            return child;\n                        } \n                        node = child;\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag<?>"},"failures":[186,212,900,901,902,903,904,905,906,907,908,909,910,911,912,913,675,914,266,915,690,916,706,728,917,918,596,919,920,13,921,922,62,740,923,924,110,766,325,326,327,328,329,330,331,332,925,926,927,782,928,929,930,931,932,933,934,935,936,937,938,939,940,941,253,942,159,943,944,945,946,947,948,949,950],"tindex":"b1aa4a44-2ebe-11e6-99d1-9d18410cfbf7","method":{"position":"org.apache.commons.collections4.CollectionUtils:438","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Map<O, java.lang.Integer> getCardinalityMap(final java.lang.Iterable<? extends O> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n        {\n            final java.util.Map<O, java.lang.Integer> java.util.Map<O, java.lang.Integer> = new java.util.HashMap<O, java.lang.Integer>();\n            for (final O O : coll) {\n                final java.lang.Integer java.lang.Integer = count.get(obj);\n                if (c == null) {\n                    count.put(obj, java.lang.Integer.valueOf(1));\n                } else {\n                    count.put(obj, java.lang.Integer.valueOf(((c.intValue()) + 1)));\n                }\n            }\n            return count;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[951,952,953],"tindex":"b1aa7155-2ebe-11e6-99d1-35408ec6f491","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:278","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,657,1034,1035,1036,1037,1038,1039,1040,1041],"tindex":"b1aa7156-2ebe-11e6-99d1-fd2f8aa1086f","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:78","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[1042,1043],"tindex":"b1aa7157-2ebe-11e6-99d1-139b5d750780","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.TransformedBag<E> org.apache.commons.collections4.bag.TransformedBag<E> = new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[1044,1045],"tindex":"b1aa9868-2ebe-11e6-99d1-2b6ffee28475","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:281","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return null;\n            } \n            purgeBeforeWrite();\n            return super.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[1046],"tindex":"b1aa9869-2ebe-11e6-99d1-5de51b0a0a91","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:547","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final int index) {\n    if (index < 0) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.remove(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078],"tindex":"b1aa986a-2ebe-11e6-99d1-4525146c6192","method":{"position":"org.apache.commons.collections4.list.TreeList:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index > 0) {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index).getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[206],"tindex":"b1aabf7b-2ebe-11e6-99d1-bbbde07b43e7","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:238","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(e.getKey(), e.getValue());\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[834,195,196,197,207],"tindex":"b1aabf7c-2ebe-11e6-99d1-0b2dc1deedbf","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:255","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return doRemoveKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:916","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"b1aabf7d-2ebe-11e6-99d1-c1c72b162883","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:110","type":"CtMethodImpl","sourcecode":"final boolean isBitSet(final K key, final int bitIndex, final int lengthInBits) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(lengthInBits)) {\n        {\n            if (bitIndex == 0) {\n                {\n                    if (key == null) {\n                        return false;\n                    } \n                    return org.apache.commons.collections4.trie.KeyAnalyzer<? super K>.isBitSet(key, bitIndex, lengthInBits);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"lengthInBits"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}