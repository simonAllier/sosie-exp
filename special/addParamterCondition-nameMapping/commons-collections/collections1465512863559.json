{"failureDictionary":{"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":82,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":280,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":271,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":411,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":442,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":559,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":226,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx4":476,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":556,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSerializeDeserializeThenCompare":387,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":581,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":633,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":655,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectEqualsSelf":642,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetIteratorRemoveChangesMap":798,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":657,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":656,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":201,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":148,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":336,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":109,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":56,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":759,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListCompatibility":375,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":294,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":318,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullValue":783,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":213,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":146,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":731,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking":288,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":77,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListSerialization":382,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":131,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSimpleSerialization":402,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectEqualsSelf":517,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":445,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":606,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":190,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":796,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":673,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":92,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":758,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":100,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":324,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":663,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":122,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":430,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":54,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":110,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":558,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":502,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":595,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":788,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":314,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListSerialization":378,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":28,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":57,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":120,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":716,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":778,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":424,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":37,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":38,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":634,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":611,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":281,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":497,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":625,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":11,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListCompatibility":289,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":515,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":410,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":645,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":376,"org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf":346,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":305,"org.apache.commons.collections4.map.FixedSizeMapTest.testFullMapCompatibility":792,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":351,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":145,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":608,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":725,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":524,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":6,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToString":316,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":617,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":648,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":639,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":246,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":750,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":267,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":415,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSerializeDeserializeThenCompare":393,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":679,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":216,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":529,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":171,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":132,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":507,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSimpleSerialization":362,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":591,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":130,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":129,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":93,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":126,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":199,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":447,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":186,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":278,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":542,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":155,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":187,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":80,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":245,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":478,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":701,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":71,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":666,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":425,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":683,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":676,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":35,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":745,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":575,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRetainAll":803,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":695,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking":299,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListCompatibility":369,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":588,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":114,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":371,"org.apache.commons.collections4.list.TransformedListTest.testCanonicalFullCollectionExists":330,"org.apache.commons.collections4.map.FixedSizeMapTest.testEqualsNull":806,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":357,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCanonicalFullCollectionExists":523,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":605,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":30,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":812,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":755,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":274,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":206,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":660,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":669,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":257,"org.apache.commons.collections4.list.FixedSizeListTest.testSimpleSerialization":374,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":69,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":285,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx1":539,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":283,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":175,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":191,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":192,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":193,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":562,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":135,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":691,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":511,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":724,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":377,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":770,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":465,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":268,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsContract":334,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":42,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":83,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":153,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking2":300,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":621,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":59,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":630,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":194,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":180,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":536,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":401,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":359,"org.apache.commons.collections4.IteratorUtilsTest.testToList":646,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":530,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":240,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":223,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":236,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":631,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":439,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetIteratorRemoveChangesMap":262,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":571,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsSelfHashCode":519,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":142,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":578,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":24,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":152,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":133,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":151,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":756,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":557,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":303,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListCompatibility":383,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":123,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":587,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":533,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":437,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":582,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":757,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":777,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":613,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":98,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":181,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":127,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":480,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":55,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":23,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":118,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":108,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":577,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":128,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":18,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":154,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":693,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":684,"org.apache.commons.collections4.set.CompositeSetTest.testSimpleSerialization":763,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":709,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":722,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":753,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":568,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":538,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":416,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove3":256,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove2":255,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove1":254,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":603,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":475,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":492,"org.apache.commons.collections4.list.TransformedListTest.testCollectionSize":315,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":554,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":686,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":58,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueCompatibility":391,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":203,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":290,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":671,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":29,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":166,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":576,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":185,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":535,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":647,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":487,"org.apache.commons.collections4.map.ListOrderedMap2Test.testIndexOf":342,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":413,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":205,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":296,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":308,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":277,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":409,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":52,"org.apache.commons.collections4.list.GrowthListTest.testSerializeDeserializeThenCompare":367,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":261,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":53,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":728,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":629,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":499,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":473,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":627,"org.apache.commons.collections4.list.TransformedListTest.testObjectEqualsSelf":329,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":802,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":446,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":567,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":107,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":564,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":355,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":433,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":744,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":767,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":140,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":747,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":531,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":212,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":328,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":616,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":217,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":674,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":749,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":247,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":690,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":677,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":489,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":97,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":43,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":70,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":761,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":81,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":202,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":221,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":696,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListSerialization":311,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":678,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":106,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":0,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":781,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":231,"org.apache.commons.collections4.list.TreeListTest.testBug35258":667,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":95,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":628,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":689,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":322,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":63,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":46,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":429,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":356,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":269,"org.apache.commons.collections4.list.TransformedListTest.testEqualsNull":331,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":66,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":65,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":64,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":149,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":124,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":326,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":607,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":275,"org.apache.commons.collections4.map.FixedSizeMapTest.testCanonicalFullCollectionExists":805,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":327,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":21,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":78,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":189,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":88,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":479,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":765,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":125,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":586,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":493,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEqualsNull":518,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":31,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testDecorate":264,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":309,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":89,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":723,"org.apache.commons.collections4.list.GrowthListTest.testSimpleSerialization":368,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":276,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":661,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":799,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":215,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":169,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":483,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking2":306,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":776,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":653,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":652,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":651,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":211,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":460,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":7,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":41,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":474,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":99,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":572,"org.apache.commons.collections4.map.FixedSizeMapTest.testSerializeDeserializeThenCompare":811,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":432,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":210,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListSerialization":384,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":579,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":794,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":214,"org.apache.commons.collections4.list.GrowthListTest.testEmptyListSerialization":366,"org.apache.commons.collections4.map.LRUMapTest.testLRU":143,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":681,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":9,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":317,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":726,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":20,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":218,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":414,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":137,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":198,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":164,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":509,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":565,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":751,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":25,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveAll":786,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":2,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":8,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":602,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSimpleSerialization":388,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":60,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":208,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":644,"org.apache.commons.collections4.map.FixedSizeMapTest.testEmptyMapCompatibility":790,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":498,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSimpleSerialization":354,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":141,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":195,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":624,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":508,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullKey":789,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectEqualsSelf":804,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":349,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":150,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":188,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":113,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":764,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":79,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":161,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":461,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":537,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":103,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":637,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":466,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":117,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":179,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":40,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":182,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":39,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":718,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":604,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":583,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":732,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":610,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":74,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":454,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":687,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":712,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":638,"org.apache.commons.collections4.list.GrowthListTest.testFullListCompatibility":365,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectHashCodeEqualsContract":643,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":459,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":441,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":418,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":253,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":580,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":754,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":427,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":532,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":248,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":51,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":795,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":319,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSimpleSerialization":350,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":670,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":219,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSimpleSerialization":400,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":16,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":34,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":505,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":243,"org.apache.commons.collections4.list.UnmodifiableListTest.testSerializeDeserializeThenCompare":385,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":119,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":347,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":325,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":361,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":405,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":412,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":156,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":541,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":10,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":286,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":337,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":512,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalFullCollectionExists":760,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":730,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":481,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":566,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":440,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":703,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":163,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":237,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":649,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":720,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":457,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":771,"org.apache.commons.collections4.bag.CollectionBagTest.testSimpleSerialization":358,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":780,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":548,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":170,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueCompatibility":389,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":620,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":721,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":407,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":506,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":17,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSimpleSerialization":394,"org.apache.commons.collections4.set.ListOrderedSetTest.testSimpleSerialization":398,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":115,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":748,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":282,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":534,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":196,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsContract":520,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":138,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":510,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":116,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":729,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":249,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalEmptyCollectionExists":762,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":45,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":471,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":738,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":662,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":768,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":233,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":708,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":176,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":272,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":177,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":178,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":766,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":435,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveChangesMap":259,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":618,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":784,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":422,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":694,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":338,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":200,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":96,"org.apache.commons.collections4.list.GrowthListTest.testFullListSerialization":364,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":423,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":740,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":94,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":406,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":752,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":340,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":640,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":609,"org.apache.commons.collections4.list.TreeListTest.testRemove":665,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":516,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":501,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":688,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":312,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":22,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":27,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":513,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":612,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":73,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":72,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":36,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":453,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":292,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueSerialization":392,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":592,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":692,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":111,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":769,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":543,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":550,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsSelfHashCode":335,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":793,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":713,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":158,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":104,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":174,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":85,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":209,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":310,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":494,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":775,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":801,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":773,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":147,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSimpleSerialization":521,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":774,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":417,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":76,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":266,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":589,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":105,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":399,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":168,"org.apache.commons.collections4.list.TreeListTest.testListEquals":672,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":699,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":574,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":345,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":636,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":260,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":112,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":697,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":698,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":12,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":719,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":320,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":13,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":298,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":528,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Map":772,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":62,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":284,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":711,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":157,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":428,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":207,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":225,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListCompatibility":381,"org.apache.commons.collections4.list.GrowthListTest.testEmptyListCompatibility":363,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":584,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":650,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":339,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":251,"org.apache.commons.collections4.map.FixedSizeMapTest.testCanonicalEmptyCollectionExists":807,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapHashCode":779,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":702,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":525,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":569,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":184,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":594,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapClear":791,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":160,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":287,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":743,"org.apache.commons.collections4.map.FixedSizeMapTest.testSimpleSerialization":808,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":419,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":464,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":668,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":635,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":420,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":736,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":242,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":452,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":555,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove1":227,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":295,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove2":228,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":785,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":47,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove3":229,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking2":307,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":343,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":563,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":344,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":503,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":33,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":321,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":102,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":165,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":101,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":75,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":443,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":183,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":599,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":49,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":735,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":615,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":91,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":491,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":197,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":540,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":685,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":470,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":26,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":733,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":44,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":463,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":482,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":86,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":87,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":279,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":710,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":121,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":484,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":450,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":739,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":477,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":421,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":600,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSimpleSerialization":396,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":273,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":601,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":553,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":291,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":297,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":136,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":593,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":19,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectHashCodeEqualsSelfHashCode":810,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":159,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":485,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":5,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":250,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":451,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":561,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":68,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":397,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":224,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":239,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":436,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetIteratorRemoveChangesMap":782,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":14,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":434,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":360,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":682,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":714,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":220,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":549,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":675,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":341,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":455,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":172,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":352,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":139,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":496,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":547,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":546,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":488,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":241,"org.apache.commons.collections4.list.TransformedListTest.testCanonicalEmptyCollectionExists":332,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":252,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":230,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":585,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":265,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":545,"org.apache.commons.collections4.set.CompositeSetTest.testContains":737,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":263,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":162,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":797,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":469,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":504,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":527,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking":293,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":659,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":486,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":456,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":552,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":500,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":746,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":664,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":408,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":353,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":235,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":707,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":715,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":598,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":222,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":623,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":658,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":800,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":3,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":614,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":134,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":544,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":704,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":706,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":705,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":560,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":462,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":90,"org.apache.commons.collections4.list.SetUniqueListTest.testSimpleSerialization":380,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":570,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":490,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":204,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":641,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveChangesMap":232,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":458,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":654,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":717,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":373,"org.apache.commons.collections4.list.UnmodifiableListTest.testSimpleSerialization":386,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":48,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":514,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":234,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":495,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":444,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":596,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":348,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":734,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":379,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":619,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":448,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":573,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":270,"org.apache.commons.collections4.list.TransformedListTest.testFullListSerialization":301,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":632,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":468,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":258,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking2":304,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":597,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":449,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":1,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":551,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":431,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectHashCodeEqualsContract":809,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":313,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":526,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":84,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":144,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":700,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":741,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":626,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":742,"org.apache.commons.collections4.map.FixedSizeMapTest.testMakeMap":787,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":395,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":15,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":173,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":238,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":244,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":67,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":32,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":727,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":404,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":622,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx5":403,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":438,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":167,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":426,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":680,"org.apache.commons.collections4.list.TransformedListTest.testSimpleSerialization":333,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":323,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListSerialization":370,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking":302,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":61,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":472,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueSerialization":390,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListSerialization":372,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":467,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCanonicalEmptyCollectionExists":522,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":590},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"1bfd0401-2e95-11e6-bd8b-27104f51cf5a","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:298","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            (int)++;\n            java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n            int -= mut.int;\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:85","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[],"tindex":"1bfe1572-2e95-11e6-bd8b-df1dec678c20","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:188","type":"CtMethodImpl","sourcecode":"public void setIterator(final int index, final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator.hasNext()) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    checkNotStarted();\n                    if (iterator == null) {\n                        throw new java.lang.NullPointerException(\"Iterator must not be null\");\n                    } \n                    java.util.ArrayList<java.util.Iterator<? extends E>>.set(index, iterator);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[32],"tindex":"1bfe3c83-2e95-11e6-bd8b-d522bf334243","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169],"tindex":"1bfe3c84-2e95-11e6-bd8b-9f09c34c08b6","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:582","type":"CtMethodImpl","sourcecode":"protected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if ((previous.getValue()) == null) {\n        {\n            if (previous == null) {\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } else {\n                previous.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"previous"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[],"tindex":"1bff4df5-2e95-11e6-bd8b-f39317241da0","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:72","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().add(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263],"tindex":"1bff7506-2e95-11e6-bd8b-bb66502ef931","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:146","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<K, V>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[264,265],"tindex":"1bff9c17-2e95-11e6-bd8b-c7e49e6f5ba0","method":{"position":"org.apache.commons.collections4.bag.PredicatedSortedBag:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedSortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedSortedBag<E>(bag , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[266,267],"tindex":"1bff9c18-2e95-11e6-bd8b-096bea709729","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:56","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures, final org.apache.commons.collections4.Closure<? super E> defaultClosure) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(closures);\n            if ((predicates.int) != (closures.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and closure arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n            } \n            return new org.apache.commons.collections4.functors.SwitchClosure<E>(predicates , closures , defaultClosure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"1bffc329-2e95-11e6-bd8b-6fbc65968713","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:136","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"1bffc32a-2e95-11e6-bd8b-63986c249133","method":{"position":"org.apache.commons.collections4.CollectionUtils:300","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (a == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<O> org.apache.commons.collections4.Predicate<O> = org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            return org.apache.commons.collections4.CollectionUtils.subtract(a, b, p);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[268,269,270,271,272,273,274],"tindex":"1bffea3b-2e95-11e6-bd8b-a3130ee7722d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:631","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextSmaller(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getLeft(dataElement)) != null) {\n                rval = greatestNode(node.getLeft(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getLeft(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"1c00114c-2e95-11e6-bd8b-eb3dc1e0a847","method":{"position":"org.apache.commons.collections4.ListUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> selectRejected(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[275],"tindex":"1c00385d-2e95-11e6-bd8b-03c11fc910f2","method":{"position":"org.apache.commons.collections4.SplitMapUtils:63","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:75","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[276],"tindex":"1c0170de-2e95-11e6-bd8b-55a4b97b7e88","method":{"position":"org.apache.commons.collections4.ListUtils:418","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> predicatedList(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if (list.isEmpty()) {\n        {\n            return org.apache.commons.collections4.list.PredicatedList.predicatedList(list, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[277,278],"tindex":"1c02d06f-2e95-11e6-bd8b-534a550c9a1c","method":{"position":"org.apache.commons.collections4.map.LazyMap:160","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final K K = ((K)(key));\n                final V V = org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(castKey);\n                java.util.Map<K, V>.put(castKey, value);\n                return value;\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[279,280,281,282,283],"tindex":"1c02d070-2e95-11e6-bd8b-d141b3e4fdfc","method":{"position":"org.apache.commons.collections4.map.CompositeMap:413","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].remove(key);\n                } \n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"1c02f781-2e95-11e6-bd8b-9dba7d0a9b90","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:342","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            boolean boolean = false;\n            if (coll != null) {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final boolean boolean = remove(i.next(), 1);\n                    result = result || changed;\n                }\n            } \n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:207","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"1c02f782-2e95-11e6-bd8b-ddb7cbd34235","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:141","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.java.util.Iterator<? extends E> = iterator;\n            E = null;\n            boolean = false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:764","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335],"tindex":"1c02f783-2e95-11e6-bd8b-eb6b9826a167","method":{"position":"org.apache.commons.collections4.list.TransformedList:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformingList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list == null) {\n        {\n            return new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:889","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[336,337],"tindex":"1c031e94-2e95-11e6-bd8b-952a9924ec38","method":{"position":"org.apache.commons.collections4.IteratorUtils:695","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> filteredIterator(final java.util.Iterator<? extends E> iterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterIterator<E>(iterator , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[338,339],"tindex":"1c031e95-2e95-11e6-bd8b-6567f1fc0942","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:129","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().containsAll(coll);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[340,341],"tindex":"1c031e96-2e95-11e6-bd8b-bd6fe0e69f0a","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:344","type":"CtMethodImpl","sourcecode":"public java.lang.Object remove(final int index) {\n    if (index < 0) {\n        {\n            final java.lang.Object java.lang.Object = java.util.List<E>.remove(index);\n            remove(obj);\n            return obj;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"1c0345a7-2e95-11e6-bd8b-b9900c1800c6","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1020","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (index < 0) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            rangeCheck(index, int);\n                            checkModCount();\n                            return org.apache.commons.collections4.list.AbstractLinkedList<E>.set((index + (int)), obj);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[342,343,344,345,346],"tindex":"1c0345a8-2e95-11e6-bd8b-f90aec33504c","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:410","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return java.util.List<K>.indexOf(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:66","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402],"tindex":"1c0345a9-2e95-11e6-bd8b-bd1968239616","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:89","type":"CtMethodImpl","sourcecode":"protected void setCollection(final java.util.Collection<E> coll) {\n    if (coll == null) {\n        {\n            org.apache.commons.collections4.collection.AbstractCollectionDecorator.this.java.util.Collection<E> = coll;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[403,404,405],"tindex":"1c036cba-2e95-11e6-bd8b-f5b1810c78e1","method":{"position":"org.apache.commons.collections4.PredicateUtils:437","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[275,406],"tindex":"1c036cbb-2e95-11e6-bd8b-1d6c0d5ddb2c","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            if (object == (org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[407,408,409,410,411,412,413,414,36,415,416,417,418,50,419,420,421,51,422,423,424,425,426,427,428,429,71,430,431,432,433,434,435,85,436,437,438,439,440,441,442,443,100,444,445,446,447,448,449,450,451,452,453,114,454,455,456,457,458,459,460,461,128,462,463,464,465,466,467,468,469,150,470,471,472,473,474,475],"tindex":"1c036cbc-2e95-11e6-bd8b-5f6cb1b9a468","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:946","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"1c0393cd-2e95-11e6-bd8b-4b998ab9cc7b","method":{"position":"org.apache.commons.collections4.map.LinkedMap:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"1c0393ce-2e95-11e6-bd8b-d97b2934ee8e","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:80","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n            } \n            for (int int = 0 ; i < 1000 ; i++) {\n                if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                    break;\n                } \n                if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n                    coll = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(coll)).decorated();\n                } else if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n                    coll = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(coll)).decorated();\n                } \n            }\n            if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(((org.apache.commons.collections4.BoundedCollection<E>)(coll)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"1c0393cf-2e95-11e6-bd8b-2d322b5c45d3","method":{"position":"org.apache.commons.collections4.MapUtils:762","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key, final short defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return defaultValue;\n            } \n            return shortObject.shortValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"1c03bae0-2e95-11e6-bd8b-a1f410526967","method":{"position":"org.apache.commons.collections4.ListUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> selectRejected(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[],"tindex":"1c03bae1-2e95-11e6-bd8b-bd8333dc2fa1","method":{"position":"org.apache.commons.collections4.PredicateUtils:174","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceofPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(type);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"1c03bae2-2e95-11e6-bd8b-6bb8fa86aba6","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:713","type":"CtMethodImpl","sourcecode":"protected int entryHashCode(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[476],"tindex":"1c03e1f3-2e95-11e6-bd8b-4fccceecec99","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:72","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            return new org.apache.commons.collections4.functors.OnePredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"1c040904-2e95-11e6-bd8b-3b31e1d7f804","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:77","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index > 0) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[477],"tindex":"1c043015-2e95-11e6-bd8b-973b63061d0d","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:264","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 != null) {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key3"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:153","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[478],"tindex":"1c043016-2e95-11e6-bd8b-e5fef2af9260","method":{"position":"org.apache.commons.collections4.ComparatorUtils:119","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Comparator<E> reversedComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            return new org.apache.commons.collections4.comparators.ReverseComparator<E>(comparator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[479],"tindex":"1c045727-2e95-11e6-bd8b-d33e91fe6d60","method":{"position":"org.apache.commons.collections4.functors.TransformerClosure:48","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> transformerClosure(final org.apache.commons.collections4.Transformer<? super E, ?> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            return new org.apache.commons.collections4.functors.TransformerClosure<E>(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:921","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"1c045728-2e95-11e6-bd8b-975230d3751e","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:188","type":"CtMethodImpl","sourcecode":"public void setIterator(final int index, final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator.hasNext()) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    checkNotStarted();\n                    if (iterator == null) {\n                        throw new java.lang.NullPointerException(\"Iterator must not be null\");\n                    } \n                    java.util.ArrayList<java.util.Iterator<? extends E>>.set(index, iterator);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"1c045729-2e95-11e6-bd8b-bf41369ccd82","method":{"position":"org.apache.commons.collections4.IteratorUtils:805","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.Node node) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                throw new java.lang.NullPointerException(\"Node must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(node);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[480,481],"tindex":"1c04572a-2e95-11e6-bd8b-6faaf6e30f49","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return false;\n            } \n            return (entry.getValue()) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:764","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"1c047e3b-2e95-11e6-bd8b-e7e6d88a371f","method":{"position":"org.apache.commons.collections4.IteratorUtils:763","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> loopingListIterator(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (list == null) {\n                throw new java.lang.NullPointerException(\"List must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingListIterator<E>(list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:266","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[],"tindex":"1c05418c-2e95-11e6-bd8b-d74c0ca91c4c","method":{"position":"org.apache.commons.collections4.set.CompositeSet:330","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.set.CompositeSet.SetMutator<E> mutator) {\n    if (mutator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E> = mutator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"1c05689d-2e95-11e6-bd8b-a92e309ef2db","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1711","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(inRange(castKey(key)))) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"1c05689e-2e95-11e6-bd8b-dd6ad370f620","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1020","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (index < 0) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            rangeCheck(index, int);\n                            checkModCount();\n                            return org.apache.commons.collections4.list.AbstractLinkedList<E>.set((index + (int)), obj);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[482],"tindex":"1c058faf-2e95-11e6-bd8b-dfdcde30bdee","method":{"position":"org.apache.commons.collections4.CollectionUtils:1307","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map.Entry<K, V> get(final java.util.Map<K, V> map, final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            return org.apache.commons.collections4.CollectionUtils.get(map.entrySet(), index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[483,484],"tindex":"1c058fb0-2e95-11e6-bd8b-c94e443a0033","method":{"position":"org.apache.commons.collections4.TransformerUtils:273","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (transformers == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, defaultTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[485,345,343,344],"tindex":"1c058fb1-2e95-11e6-bd8b-c922a2332e5e","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:245","type":"CtMethodImpl","sourcecode":"public void putAll(int index, final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                final K K = entry.getKey();\n                final boolean boolean = containsKey(key);\n                put(index, entry.getKey(), entry.getValue());\n                if (!contains) {\n                    index++;\n                } else {\n                    index = (indexOf(entry.getKey())) + 1;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"1c05b6c2-2e95-11e6-bd8b-094e34ac4f24","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:738","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((multi.size()) >= 2) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[172,176,177,178,181,182,187,191,192,193,196,197,212,216,220,223,227,228,229,232,233,239,243,247,250,254,255,256,259,260],"tindex":"1c05b6c3-2e95-11e6-bd8b-a5eeb70f299d","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.containsKey(key)) {\n                final V V = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.get(key);\n                if (value == null ? (entry.getValue()) == null : value.equals(entry.getValue())) {\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.remove(key);\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.remove(value);\n                    return true;\n                } \n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:123","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"1c05ddd4-2e95-11e6-bd8b-23818d41392c","method":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:107","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> comparatorPredicate(final T object, final java.util.Comparator<T> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ComparatorPredicate.comparatorPredicate(object, comparator, org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"1c05ddd5-2e95-11e6-bd8b-934b9b325972","method":{"position":"org.apache.commons.collections4.MapUtils:641","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return 0;\n            } \n            return integerObject.intValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[25,27,486,487,488,489,490,491,492,493,494,495,496,497,28,498,499,500,29,501,502,503,504,505,506,507,508,509,30,31,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524],"tindex":"1c05ddd6-2e95-11e6-bd8b-37f66ad95875","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:55","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[525,526,527,528],"tindex":"1c0604e7-2e95-11e6-bd8b-d33182327438","method":{"position":"org.apache.commons.collections4.list.TreeList:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index > 0) {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index);\n            final E E = node.E;\n            node.setValue(obj);\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"1c0604e8-2e95-11e6-bd8b-77aed535751b","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:199","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            final int int = hash(key1, key2);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[96,529],"tindex":"1c062bf9-2e95-11e6-bd8b-c5539e530a39","method":{"position":"org.apache.commons.collections4.map.LinkedMap:143","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntry(index).getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[],"tindex":"1c062bfa-2e95-11e6-bd8b-d5ee7367acd3","method":{"position":"org.apache.commons.collections4.map.LinkedMap:238","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[530,531],"tindex":"1c062bfb-2e95-11e6-bd8b-b7bda6cf7aaa","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:68","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[532],"tindex":"1c062bfc-2e95-11e6-bd8b-eb9479b69bfb","method":{"position":"org.apache.commons.collections4.ClosureUtils:218","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if (closures == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"1c062bfd-2e95-11e6-bd8b-15991a82d88a","method":{"position":"org.apache.commons.collections4.MapUtils:782","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key, final int defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return defaultValue;\n            } \n            return integerObject.intValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[482],"tindex":"1c06530e-2e95-11e6-bd8b-47d5df43a464","method":{"position":"org.apache.commons.collections4.CollectionUtils:1194","type":"CtMethodImpl","sourcecode":"private static void checkIndexBounds(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + index));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[484],"tindex":"1c06530f-2e95-11e6-bd8b-b3f05ea04502","method":{"position":"org.apache.commons.collections4.TransformerUtils:250","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[284,285,286,287,290,291,292,293,294,295,296,297,298,300,303,305,308,309,312,313,314,317,318,319,320,322,323,324,325,328],"tindex":"1c06ef50-2e95-11e6-bd8b-8da83e515ce3","method":{"position":"org.apache.commons.collections4.list.TransformedList:119","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            return getList().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[533],"tindex":"1c06ef51-2e95-11e6-bd8b-733e70f062c2","method":{"position":"org.apache.commons.collections4.BagUtils:136","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.TransformedBag.transformingBag(bag, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[534],"tindex":"1c071662-2e95-11e6-bd8b-5f826e89077d","method":{"position":"org.apache.commons.collections4.TransformerUtils:379","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.MapTransformer.mapTransformer(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[535],"tindex":"1c071663-2e95-11e6-bd8b-b37590931b00","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:292","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"1c071664-2e95-11e6-bd8b-8701581de218","method":{"position":"org.apache.commons.collections4.SetUtils:306","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.set.PredicatedSortedSet.predicatedSortedSet(set, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[536],"tindex":"1c071665-2e95-11e6-bd8b-619327112c8a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2111","type":"CtMethodImpl","sourcecode":"public K remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.removeValue(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[537,538,62,477],"tindex":"1c073d76-2e95-11e6-bd8b-298e5e48dded","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:384","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((multi.size()) == 3) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[539],"tindex":"1c073d77-2e95-11e6-bd8b-63d2206714dd","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:53","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"1c073d78-2e95-11e6-bd8b-f3d6af0b9b75","method":{"position":"org.apache.commons.collections4.MapUtils:297","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Float) {\n                return ((java.lang.Float)(answer));\n            } \n            return java.lang.Float.valueOf(answer.floatValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573],"tindex":"1c076489-2e95-11e6-bd8b-fb0ffbfddb15","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:70","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            decorated().add(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1278","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[574,478,575,576,577,578,579,580,581,582,583,584],"tindex":"1c07648a-2e95-11e6-bd8b-2d7084f58493","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:329","type":"CtMethodImpl","sourcecode":"private void clear(final int i) {\n    if (i == (-1)) {\n        {\n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616],"tindex":"1c07648b-2e95-11e6-bd8b-a7751ddef0dd","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntrySet().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"1c07648c-2e95-11e6-bd8b-8f740e733e01","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:210","type":"CtMethodImpl","sourcecode":"public boolean removeMapping(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (valuesForKey == null) {\n                return false;\n            } \n            final boolean boolean = valuesForKey.remove(value);\n            if (removed == false) {\n                return false;\n            } \n            if (valuesForKey.isEmpty()) {\n                remove(key);\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"1c078b9d-2e95-11e6-bd8b-8d6ec36146a7","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1020","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (index < 0) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            rangeCheck(index, int);\n                            checkModCount();\n                            return org.apache.commons.collections4.list.AbstractLinkedList<E>.set((index + (int)), obj);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[],"tindex":"1c078b9e-2e95-11e6-bd8b-cd34491ad693","method":{"position":"org.apache.commons.collections4.IteratorUtils:744","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> loopingIterator(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingIterator<E>(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[617,618,619,620,621,622],"tindex":"1c078b9f-2e95-11e6-bd8b-abc8ef3db6f6","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(object, 1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644],"tindex":"1c078ba0-2e95-11e6-bd8b-85c48fe22c64","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1322","type":"CtMethodImpl","sourcecode":"private boolean doEquals(final java.lang.Object obj, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (obj instanceof java.util.Map) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                try {\n                    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = getMapIterator(dataElement) ; it.hasNext() ; ) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        final java.lang.Object java.lang.Object = it.getValue();\n                        if ((value.equals(other.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                } catch (final java.lang.ClassCastException ex) {\n                    return false;\n                } catch (final java.lang.NullPointerException ex) {\n                    return false;\n                }\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[645],"tindex":"1c07b2b1-2e95-11e6-bd8b-bfa175aef2ca","method":{"position":"org.apache.commons.collections4.functors.IfClosure:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[566,572],"tindex":"1c07b2b2-2e95-11e6-bd8b-8b5ee7db5fd0","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:230","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            final boolean boolean = java.util.Set<E>.remove(object);\n            if (result) {\n                super.remove(object);\n            } \n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:80","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[646,647,648],"tindex":"1c07d9c3-2e95-11e6-bd8b-63ab49c0b77d","method":{"position":"org.apache.commons.collections4.IteratorUtils:1000","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(iterator, 10);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[1,26],"tindex":"1c07d9c4-2e95-11e6-bd8b-47d1cc8326e7","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            final org.apache.commons.collections4.bag.TransformedBag<E> org.apache.commons.collections4.bag.TransformedBag<E> = new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[649,650],"tindex":"1c07d9c5-2e95-11e6-bd8b-19fa33a315a9","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (set == null) {\n                throw new java.lang.IllegalArgumentException(\"Set must not be null\");\n            } \n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (((set.size()) > 0) || ((list.size()) > 0)) {\n                throw new java.lang.IllegalArgumentException(\"Set and List must be empty\");\n            } \n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[651,652,653,654,655,656,657,658],"tindex":"1c0800d6-2e95-11e6-bd8b-6d52cce9a88b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1415","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if ((contains(obj)) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(entry.getKey());\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"1c0800d7-2e95-11e6-bd8b-71afebf93c82","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:547","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final int index) {\n    if (index > 0) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.remove(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"1c0800d8-2e95-11e6-bd8b-75e113d905fe","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:978","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.add((index + (int)), obj);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)++;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"1c0827e9-2e95-11e6-bd8b-b5fc301149d5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:538","type":"CtMethodImpl","sourcecode":"private V doRemoveKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[659,660,436,437,438,439,440,441,442,443,100,107,661,662,462,463,464,465,466,663,467,468,469,150,157,158,159],"tindex":"1c0827ea-2e95-11e6-bd8b-35753b7ac99e","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:205","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(super.getEntry(key)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[664,665,666,525,667,668,669,670,671,672,673,674,675,676,528,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696],"tindex":"1c09d59b-2e95-11e6-bd8b-8b5e1d450e41","method":{"position":"org.apache.commons.collections4.list.TreeList:413","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> get(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode.this;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = indexRelativeToMe < 0 ? getLeftSubTree() : getRightSubTree();\n            if (nextNode == null) {\n                return null;\n            } \n            return nextNode.get(indexRelativeToMe);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[280,281,282,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,283,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765],"tindex":"1c09fcac-2e95-11e6-bd8b-bd945f6f6d52","method":{"position":"org.apache.commons.collections4.set.CompositeSet:343","type":"CtMethodImpl","sourcecode":"public synchronized void addComposited(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set);\n                if ((intersects.size()) > 0) {\n                    if ((org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n                    } \n                    getMutator().resolveCollision(org.apache.commons.collections4.set.CompositeSet.this, existingSet, set, intersects);\n                    if ((org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0) {\n                        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n                    } \n                } \n            }\n            java.util.List<java.util.Set<E>>.add(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1784","type":"CtBinaryOperatorImpl","sourcecode":"(collection == null) || ((collection.size()) != 1)"},"failures":[766,767],"tindex":"1c09fcad-2e95-11e6-bd8b-99c6e9cfc419","method":{"position":"org.apache.commons.collections4.CollectionUtils:1770","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> transformingCollection(final java.util.Collection<E> collection, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if ((collection == null) || ((collection.size()) != 1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.collection.TransformedCollection.transformingCollection(collection, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[768,769,770,771],"tindex":"1c09fcae-2e95-11e6-bd8b-67e8382bde14","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:200","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return n.V;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[772],"tindex":"1c0a23bf-2e95-11e6-bd8b-efa814387e75","method":{"position":"org.apache.commons.collections4.CollectionUtils:1329","type":"CtMethodImpl","sourcecode":"public static int size(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return 0;\n            } \n            int int = 0;\n            if (object instanceof java.util.Map<?, ?>) {\n                total = ((java.util.Map<?, ?>)(object)).size();\n            } else if (object instanceof java.util.Collection<?>) {\n                total = ((java.util.Collection<?>)(object)).size();\n            } else if (object instanceof java.lang.Object[]) {\n                total = ((java.lang.Object[])(object)).int;\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    total++;\n                    it.next();\n                }\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    total++;\n                    it.nextElement();\n                }\n            } else {\n                try {\n                    total = java.lang.reflect.Array.getLength(object);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n            return total;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811],"tindex":"1c0a23c0-2e95-11e6-bd8b-bfdd36afdd3b","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:72","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        {\n            return new org.apache.commons.collections4.map.FixedSizeMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"1c0a4ad1-2e95-11e6-bd8b-a7847c231def","method":{"position":"org.apache.commons.collections4.MapUtils:822","type":"CtMethodImpl","sourcecode":"public static <K>float getFloatValue(final java.util.Map<? super K, ?> map, final K key, final float defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (floatObject == null) {\n                return defaultValue;\n            } \n            return floatObject.floatValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[812],"tindex":"1c0a4ad2-2e95-11e6-bd8b-41de3662833e","method":{"position":"org.apache.commons.collections4.CollectionUtils:663","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection != null) && (closure != null)) {\n                for (final T T : collection) {\n                    closure.execute(element);\n                }\n            } \n            return closure;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[],"tindex":"1c0a4ad3-2e95-11e6-bd8b-8bff14532bd6","method":{"position":"org.apache.commons.collections4.IteratorUtils:412","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end) {\n    if (end == end) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start , end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end","end":"end"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"1c0a4ad4-2e95-11e6-bd8b-ad015e4a489f","method":{"position":"org.apache.commons.collections4.map.SingletonMap:265","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            switch (map.size()) {\n                case 0 :\n                    return ;\n                case 1 :\n                    final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> = map.entrySet().iterator().next();\n                    put(entry.getKey(), entry.getValue());\n                    return ;\n                default :\n                    throw new java.lang.IllegalArgumentException(\"The map size must be 0 or 1\");\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}