{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":364,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":768,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":388,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":584,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":640,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":215,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":178,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":27,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":129,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":212,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":727,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":741,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":187,"org.apache.commons.collections4.CollectionUtilsTest.collect":76,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":157,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":464,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueRemove":145,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":170,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":8,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":535,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":664,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":466,"org.apache.commons.collections4.CollectionUtilsTest.get":759,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":418,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":590,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":237,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":251,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":347,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":96,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":80,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":40,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":365,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":519,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking":747,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":379,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":733,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSimpleSerialization":267,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":618,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":504,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":699,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":43,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":143,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":424,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":644,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":659,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":256,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":141,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":544,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":409,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":392,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":462,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":108,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":665,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":214,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":668,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":57,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":120,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":249,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":469,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":351,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":600,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":443,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":601,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":602,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":670,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":583,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":696,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":384,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":554,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":244,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":677,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":99,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastValues":723,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":0,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":518,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":31,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":394,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":260,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":106,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":438,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":617,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":497,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":717,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":391,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":760,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":482,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":718,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":92,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":507,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":333,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":20,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":502,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":503,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":501,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":425,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":477,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":701,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":198,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":295,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":566,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":382,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":615,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":387,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":408,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":746,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":445,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":362,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":352,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":680,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":373,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":577,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":735,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":520,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":2,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":15,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":537,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":708,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":641,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":276,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":325,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastEntrySet":721,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":366,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":29,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":367,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":756,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":368,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":191,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":625,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":405,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastEntrySet":714,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":147,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":517,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":168,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":622,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":230,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":345,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":127,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":540,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":218,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":302,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":512,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":281,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":354,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":542,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":1,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":610,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":389,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":562,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking2":242,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":73,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":471,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":119,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":184,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":496,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":547,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":634,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":713,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":227,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":95,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":524,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":688,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":738,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":561,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":560,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":508,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":559,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":91,"org.apache.commons.collections4.map.LRUMapTest.testReset":529,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":213,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectEqualsSelf":265,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":243,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":48,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":68,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":454,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":14,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":164,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":107,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":271,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":631,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":742,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":450,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":86,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":294,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":377,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":404,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":627,"org.apache.commons.collections4.functors.AllPredicateTest.nullCollectionToGetInstance":674,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":195,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":478,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":433,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":465,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":69,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":417,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":530,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullStream":133,"org.apache.commons.collections4.map.LinkedMapTest.testReset":621,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":545,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":663,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":737,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":494,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":565,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":350,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":11,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":709,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":224,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":336,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":181,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":439,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":564,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":330,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":287,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":3,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":305,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":210,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":431,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":444,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":139,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":470,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":289,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":233,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":90,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":655,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":321,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":736,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":608,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":732,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":7,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":449,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":589,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":239,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":245,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":750,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":495,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":79,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":582,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":459,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":766,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":323,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":81,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":460,"org.apache.commons.collections4.map.HashedMapTest.testClone":574,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":461,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking2":687,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":25,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":100,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":47,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":363,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":315,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSerializeDeserializeThenCompare":270,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":700,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":194,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":223,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":662,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":220,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":689,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":429,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":396,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":522,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":316,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":87,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastKeySet":722,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":37,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":258,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorIsSerializable":264,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":402,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":649,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":648,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":650,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":578,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":506,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionSize":153,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":626,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":346,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":611,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":629,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":383,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":105,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":661,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":660,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":50,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":620,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":427,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":684,"org.apache.commons.collections4.map.LinkedMapTest.testClone":619,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":10,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":254,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":66,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":338,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":614,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":361,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":4,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":456,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":374,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":457,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":458,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":341,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":340,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":339,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":536,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":117,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":30,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":595,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":531,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":526,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":380,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":591,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":725,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking2":754,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":93,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIsEmpty":158,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":731,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":355,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":724,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":124,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":416,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":122,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":639,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":476,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":13,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":489,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":102,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":453,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":246,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":419,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":61,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":407,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":274,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRetainAll":161,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":97,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":532,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":283,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":681,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":52,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":329,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":764,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":280,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":116,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":115,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":695,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":114,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":149,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":672,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":259,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":447,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":46,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":490,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":686,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":607,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":317,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":628,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":228,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":171,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":669,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":395,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":422,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":739,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsContract":268,"org.apache.commons.collections4.map.LRUMapTest.testLRU":525,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":250,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":189,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":592,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":694,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":514,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":82,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":263,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":309,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":221,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":6,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":306,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":555,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":261,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":42,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":472,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":581,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking":751,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":553,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":523,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":479,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":676,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":55,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":552,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePoll":148,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":716,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":381,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":173,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":296,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":298,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":697,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":493,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":609,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":335,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":563,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":654,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":62,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":35,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":543,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":606,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":603,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":85,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":685,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":28,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":510,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":743,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":682,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":188,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":730,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":372,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":480,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":467,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":632,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":636,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":763,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":18,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":488,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":638,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":16,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":308,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":442,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":666,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":740,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":728,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":75,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":324,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":356,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray2":152,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":452,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":278,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":21,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":51,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":252,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":440,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":455,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":576,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":160,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking":683,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":257,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":293,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":491,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":568,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":49,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":587,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":332,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":569,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":190,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":118,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":197,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":399,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":231,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":24,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":277,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":505,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":475,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":769,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":222,"org.apache.commons.collections4.queue.TransformedQueueTest.testFullQueueSerialization":150,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":421,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":635,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":172,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":304,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":484,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":204,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":679,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":176,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":719,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":579,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":474,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":126,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":637,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":515,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEmptyListSort":262,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":314,"org.apache.commons.collections4.queue.TransformedQueueTest.testSerializeDeserializeThenCompare":163,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":761,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":331,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":357,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":299,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":613,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":533,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":646,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":110,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":103,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":292,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":400,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":359,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":290,"org.apache.commons.collections4.queue.TransformedQueueTest.testFullQueueCompatibility":146,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":348,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":616,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":349,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":123,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":426,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":711,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":34,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":767,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":499,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":498,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":247,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":500,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":94,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":371,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":370,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":642,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsSelfHashCode":269,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":369,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":757,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":593,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":707,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":174,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":235,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":70,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":712,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":199,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":33,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":206,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":623,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":571,"org.apache.commons.collections4.map.LRUMapTest.testClone":516,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":282,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":657,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":588,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":406,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":647,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":534,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":692,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":441,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":376,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":749,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":604,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":275,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":17,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":658,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":327,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":140,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToString":154,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":745,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":104,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":193,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":253,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":288,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":241,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":337,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":77,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":179,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":570,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":358,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":586,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":667,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":180,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":88,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":744,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":128,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":138,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":137,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":487,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":656,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":225,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":758,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":232,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":573,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":432,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":446,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":541,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":585,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":448,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":319,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":706,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":307,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":211,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":238,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastKeySet":715,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":434,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIteratorRemove":155,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":219,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":301,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":272,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":575,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":653,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":311,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":320,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":645,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":652,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":651,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":375,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":130,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":643,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":60,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":83,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":436,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":509,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":468,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":423,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":196,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":297,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":285,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":612,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":463,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":539,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":710,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":762,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":413,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":414,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":44,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":415,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":704,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":162,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":134,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":334,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":300,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":428,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":63,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":451,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":41,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":209,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":234,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":240,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":71,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":513,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":549,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":572,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":705,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":217,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":39,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":156,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":344,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":594,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":630,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":5,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":567,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":397,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":291,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":279,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":22,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":131,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":132,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":205,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":481,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":144,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":521,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":203,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":202,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":313,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":310,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":360,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":318,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":691,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":12,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":398,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":169,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":201,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":101,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":303,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":273,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":551,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":605,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking":236,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":624,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionClear":159,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":678,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":208,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":266,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":483,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":765,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":175,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":185,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":580,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":671,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":59,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":65,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":56,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":693,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":729,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":186,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":166,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":98,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":192,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx4":675,"org.apache.commons.collections4.IteratorUtilsTest.testAsIterable":734,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":511,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":167,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":200,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":286,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":216,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":538,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":386,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":420,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":385,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":492,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":226,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":32,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":690,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":109,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":486,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":485,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":125,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":720,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":435,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking2":752,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":23,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":378,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":550,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":142,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":89,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":411,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":412,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":84,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":410,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":430,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":596,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":58,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":698,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":111,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":112,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":113,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":403,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":284,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":151,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":702,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":229,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":121,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking":753,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":597,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":598,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":177,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":342,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":548,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking2":748,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":72,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":703,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":207,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":393,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":248,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":390,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":401,"org.apache.commons.collections4.IteratorUtilsTest.testToArray":673,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":183,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":326,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":182,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":74,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":527,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking":755,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":558,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":343,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":556,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":557,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":53,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":599,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":633,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":322,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":353,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":165,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":135,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":136,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":328,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":255,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":528,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":437,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":67,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":473,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":312,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":726,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":546,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":19},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3,4,5],"tindex":"3765ea88-3f23-11e6-82c0-ed99ddb57fcf","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:68","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75],"tindex":"376686c9-3f23-11e6-82c0-0576fac179d5","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:93","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().get(key);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1065","type":"CtBinaryOperatorImpl"},"failures":[76],"tindex":"376686ca-3f23-11e6-82c0-ebd0574814e8","method":{"position":"org.apache.commons.collections4.CollectionUtils:1063","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.util.Iterator<? extends I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if ((inputIterator != null) && (transformer != null)) {\n        {\n            if ((inputIterator != null) && (transformer != null)) {\n                while (inputIterator.hasNext()) {\n                    final I I = inputIterator.next();\n                    final O O = transformer.transform(item);\n                    outputCollection.add(value);\n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputIterator":"inputIterator","transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"3766addb-3f23-11e6-82c0-f302307b5f80","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:105","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"3766addc-3f23-11e6-82c0-35020a7b30e2","method":{"position":"org.apache.commons.collections4.map.SingletonMap:287","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl"},"failures":[77],"tindex":"3766addd-3f23-11e6-82c0-7be5fa87046e","method":{"position":"org.apache.commons.collections4.list.TransformedList:142","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        {\n            coll = transform(coll);\n            return getList().addAll(index, coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl"},"failures":[78],"tindex":"3766d4ee-3f23-11e6-82c0-195096237b68","method":{"position":"org.apache.commons.collections4.SplitMapUtils:142","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"3766d4ef-3f23-11e6-82c0-255d45717dc8","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                if (object == (org.apache.commons.collections4.collection.SynchronizedCollection.this)) {\n                    return true;\n                } \n                return (object == (org.apache.commons.collections4.collection.SynchronizedCollection.this)) || (decorated().equals(object));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl"},"failures":[79,80],"tindex":"3766fc00-3f23-11e6-82c0-ad829d72d57a","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"3766fc01-3f23-11e6-82c0-63d3094e9d24","method":{"position":"org.apache.commons.collections4.MapUtils:526","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key, final java.lang.Float defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"3766fc02-3f23-11e6-82c0-739eb437abb0","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:163","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            return (lookupKey(key)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"37672313-3f23-11e6-82c0-b305694cc361","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedBag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.SynchronizedBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl"},"failures":[81,82,83,84],"tindex":"37672314-3f23-11e6-82c0-15fb7e7f242c","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            if (object == (org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.this)) {\n                return true;\n            } \n            return java.util.Map.Entry<K, V>.equals(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"37674a25-3f23-11e6-82c0-f96faefb5dd1","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:475","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"37677136-3f23-11e6-82c0-01ce767142a9","method":{"position":"org.apache.commons.collections4.MapUtils:1542","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.PredicatedSortedMap.predicatedSortedMap(map, keyPred, valuePred);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1027","type":"CtInvocationImpl"},"failures":[85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130],"tindex":"37677137-3f23-11e6-82c0-15cb683931e2","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:79","type":"CtMethodImpl","sourcecode":"static boolean isValidBitIndex(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex >= 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl"},"failures":[131,132,133,134,135,136,137,138],"tindex":"37677138-3f23-11e6-82c0-1f714dd31f2a","method":{"position":"org.apache.commons.collections4.MapUtils:938","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void debugPrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (map == null) {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"37679849-3f23-11e6-82c0-5b588ef58667","method":{"position":"org.apache.commons.collections4.map.SingletonMap:189","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if (isEqualKey(key)) {\n                return V;\n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[21,139,140,141,142,143],"tindex":"3767984a-3f23-11e6-82c0-4b8517301f02","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:113","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.TransformedQueue:77","type":"CtBinaryOperatorImpl"},"failures":[144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165],"tindex":"3767984b-3f23-11e6-82c0-c586f9c590da","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if ((queue.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:182","type":"CtBinaryOperatorImpl"},"failures":[166],"tindex":"3767bf5c-3f23-11e6-82c0-471a5ae87595","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:89","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (valueTransformer == null) {\n        {\n            final org.apache.commons.collections4.map.TransformedSortedMap<K, V> org.apache.commons.collections4.map.TransformedSortedMap<K, V> = new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"valueTransformer":"valueTransformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl"},"failures":[167],"tindex":"3767bf5d-3f23-11e6-82c0-6fb84273efeb","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:109","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"3767bf5e-3f23-11e6-82c0-21fc73f5d50f","method":{"position":"org.apache.commons.collections4.MapUtils:108","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<? super K, V> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                return map.get(key);\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"3767e66f-3f23-11e6-82c0-453861fbedae","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:352","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.util.Collection<V> getCollection(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((java.util.Collection<V>)(decorated().get(key)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"3767e670-3f23-11e6-82c0-3de8e6d7ce14","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:285","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<E>.indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"3767e671-3f23-11e6-82c0-5714ec7af582","method":{"position":"org.apache.commons.collections4.MapUtils:364","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<K, V> map, final K key, final V defaultValue) {\n    if (map == null) {\n        {\n            if (map != null) {\n                final V V = map.get(key);\n                if (answer != null) {\n                    return answer;\n                } \n            } \n            return defaultValue;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl"},"failures":[168],"tindex":"3767e672-3f23-11e6-82c0-ffbdfe67e23e","method":{"position":"org.apache.commons.collections4.CollectionUtils:684","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    closure.execute(iterator.next());\n                }\n            } \n            return closure;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[169],"tindex":"37680d83-3f23-11e6-82c0-b150c3fe26e9","method":{"position":"org.apache.commons.collections4.TransformerUtils:149","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> asTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            return org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(closure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[170,171,172,173,174,175,176,177,178,179,180],"tindex":"37680d84-3f23-11e6-82c0-efce97768d00","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:210","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E value) {\n    if (index > 0) {\n        {\n            if (index > 0) {\n                {\n                    final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n                    addNodeBefore(node, value);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"37680d85-3f23-11e6-82c0-2fd59e743ab2","method":{"position":"org.apache.commons.collections4.map.CompositeMap:465","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            if (obj instanceof java.util.Map) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                return org.apache.commons.collections4.map.CompositeMap.this.entrySet().equals(map.entrySet());\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[181,182,183,184],"tindex":"37680d86-3f23-11e6-82c0-db10fe46e511","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:76","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((preds.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(preds[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(preds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtInvocationImpl"},"failures":[89,90,91,107,114,115,117,120,121,124,125,126,127,128,185,186,187,188,189,190,191,192,193,194,195],"tindex":"37683497-3f23-11e6-82c0-03337f9c6774","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:480","type":"CtMethodImpl","sourcecode":"V removeEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (h.isInternalNode()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (h.isInternalNode()) {\n                    removeInternalEntry(h);\n                } else {\n                    removeExternalEntry(h);\n                }\n            } \n            decrementSize();\n            return h.setKeyValue(null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229],"tindex":"37683498-3f23-11e6-82c0-a9db2ec86935","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            if ((java.util.Set<E>.contains(object)) == false) {\n                super.add(index, object);\n                java.util.Set<E>.add(object);\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[77,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258],"tindex":"37685ba9-3f23-11e6-82c0-8b7d2ff11ecc","method":{"position":"org.apache.commons.collections4.list.TransformedList:119","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            return getList().get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:183","type":"CtBinaryOperatorImpl"},"failures":[259,260,261,262,263,264,265,266,267,268,269,270],"tindex":"37685baa-3f23-11e6-82c0-dfc44b742677","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:149","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (reverse == true) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.add(comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reverse":"reverse"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:79","type":"CtBinaryOperatorImpl"},"failures":[271],"tindex":"37685bab-3f23-11e6-82c0-87c3134b0d40","method":{"position":"org.apache.commons.collections4.BagUtils:136","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        {\n            return org.apache.commons.collections4.bag.TransformedBag.transformingBag(bag, transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl"},"failures":[272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"tindex":"37685bac-3f23-11e6-82c0-e5c11cad53e5","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[78,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,21,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,166,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665],"tindex":"376882bd-3f23-11e6-82c0-a9aae746c9ff","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:381","type":"CtMethodImpl","sourcecode":"protected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return key == null ? org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object : key;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl"},"failures":[666,667,668,669,670],"tindex":"3768a9ce-3f23-11e6-82c0-15ba4f2ea115","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:246","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            for (int int = 0 ; i < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; i++) {\n                synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][i]) {\n                    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][i];\n                    while (n != null) {\n                        if (((n.V) == value) || (((n.V) != null) && (n.V.equals(value)))) {\n                            return true;\n                        } \n                        n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"3768a9cf-3f23-11e6-82c0-3bd61b90a14d","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1004","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    rangeCheck(index, ((int) + 1));\n                    final int int = coll.size();\n                    if (cSize == 0) {\n                        return false;\n                    } \n                    checkModCount();\n                    org.apache.commons.collections4.list.AbstractLinkedList<E>.addAll(((int) + index), coll);\n                    int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n                    int += cSize;\n                    (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n                    return true;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl"},"failures":[671],"tindex":"3768d0e0-3f23-11e6-82c0-c5994aba04ef","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:69","type":"CtMethodImpl","sourcecode":"public boolean evaluate(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return java.lang.Class<?>.isInstance(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl"},"failures":[672],"tindex":"3768d0e1-3f23-11e6-82c0-2554801d747b","method":{"position":"org.apache.commons.collections4.CollectionUtils:552","type":"CtMethodImpl","sourcecode":"public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n    if (input == null) {\n        {\n            return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"3768d0e2-3f23-11e6-82c0-1bab93d28a65","method":{"position":"org.apache.commons.collections4.TransformerUtils:273","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, defaultTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:956","type":"CtBinaryOperatorImpl"},"failures":[673],"tindex":"3768f7f3-3f23-11e6-82c0-0b9f396910a9","method":{"position":"org.apache.commons.collections4.IteratorUtils:955","type":"CtMethodImpl","sourcecode":"public static java.lang.Object[] toArray(final java.util.Iterator<?> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            final java.util.List<?> java.util.List<?> = org.apache.commons.collections4.IteratorUtils.toList(iterator, 100);\n            return list.toArray();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[674,675],"tindex":"3768f7f4-3f23-11e6-82c0-9d3935e9b55b","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:79","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((preds.int) == 1) {\n                return preds[0];\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"3768f7f5-3f23-11e6-82c0-59a9bedbc986","method":{"position":"org.apache.commons.collections4.ListUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> union(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list1.size()) > (list2.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>(list1);\n            result.addAll(list2);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list2"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"3768f7f6-3f23-11e6-82c0-cd681adf6e9d","method":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (classToInstantiate == null) {\n                throw new java.lang.IllegalArgumentException(\"Class to instantiate must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate);\n            } \n            return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate , paramTypes , args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl"},"failures":[676],"tindex":"37691f07-3f23-11e6-82c0-fd0eb2ab0dcd","method":{"position":"org.apache.commons.collections4.PredicateUtils:469","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> asPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl"},"failures":[340],"tindex":"37691f08-3f23-11e6-82c0-1539b03a947c","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:764","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((((multi.size()) >= 3) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl"},"failures":[144],"tindex":"37691f09-3f23-11e6-82c0-6ba7aba1bf53","method":{"position":"org.apache.commons.collections4.QueueUtils:93","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.queue.TransformedQueue.transformingQueue(queue, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl"},"failures":[677],"tindex":"37691f0a-3f23-11e6-82c0-b5e13e48962d","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:174","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().removeAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"3769461b-3f23-11e6-82c0-41927bbada1b","method":{"position":"org.apache.commons.collections4.IteratorUtils:669","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Iterator<O> transformedIterator(final java.util.Iterator<? extends I> iterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transform) {\n    if (transform == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (transform == null) {\n                throw new java.lang.NullPointerException(\"Transformer must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.TransformIterator<I, O>(iterator , transform);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transform"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl"},"failures":[678],"tindex":"3769461c-3f23-11e6-82c0-7d57e1ddf6d6","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:379","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,167,695],"tindex":"3769461d-3f23-11e6-82c0-b57fe52ec0cd","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"3769461e-3f23-11e6-82c0-dfa475f02cfc","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:851","type":"CtMethodImpl","sourcecode":"private java.util.SortedMap<K, V> getPrefixMapByBits(final K key, final int offsetInBits, final int lengthInBits) {\n    if (offsetInBits == 0) {\n        {\n            final int int = offsetInBits + lengthInBits;\n            if (offsetLength > (lengthInBits(key))) {\n                throw new java.lang.IllegalArgumentException(((((offsetInBits + \" + \") + lengthInBits) + \" > \") + (lengthInBits(key))));\n            } \n            if (offsetLength == 0) {\n                return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this;\n            } \n            return new PrefixRangeMap(key , offsetInBits , lengthInBits);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"offsetInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:76","type":"CtBinaryOperatorImpl"},"failures":[696],"tindex":"37696d2f-3f23-11e6-82c0-c36c3623352d","method":{"position":"org.apache.commons.collections4.functors.IfClosure:70","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if ((falseClosure == null) || (trueClosure == null)) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if ((trueClosure == null) || (falseClosure == null)) {\n                throw new java.lang.IllegalArgumentException(\"Closures must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.IfClosure<E>(predicate , trueClosure , falseClosure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseClosure":"trueClosure","trueClosure":"falseClosure"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.EqualPredicate:109","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"37696d30-3f23-11e6-82c0-d916082664e5","method":{"position":"org.apache.commons.collections4.functors.EqualPredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> equalPredicate(final T object, final org.apache.commons.collections4.Equator<T> equator) {\n    if (equator != null) {\n        {\n            if (object == null) {\n                return org.apache.commons.collections4.functors.NullPredicate.nullPredicate();\n            } \n            return new org.apache.commons.collections4.functors.EqualPredicate<T>(object , equator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:816","type":"CtBinaryOperatorImpl"},"failures":[338,339,340,341,342,337,21,334,335,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383],"tindex":"37696d31-3f23-11e6-82c0-c5117305b9f9","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:815","type":"CtMethodImpl","sourcecode":"protected void checkKey(final org.apache.commons.collections4.keyvalue.MultiKey<?> key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                {\n                    if (key == null) {\n                        throw new java.lang.NullPointerException(\"Key must not be null\");\n                    } \n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl"},"failures":[697],"tindex":"37696d32-3f23-11e6-82c0-0dab3be4d3af","method":{"position":"org.apache.commons.collections4.IteratorUtils:781","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.NodeList nodeList) {\n    if (nodeList == null) {\n        {\n            if (nodeList == null) {\n                throw new java.lang.NullPointerException(\"NodeList must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(nodeList);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"nodeList"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"37699443-3f23-11e6-82c0-61fd25b0da21","method":{"position":"org.apache.commons.collections4.set.CompositeSet:425","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Set) {\n                final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(obj));\n                return ((set.size()) == (org.apache.commons.collections4.set.CompositeSet.this.size())) && (set.containsAll(org.apache.commons.collections4.set.CompositeSet.this));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"37699444-3f23-11e6-82c0-dd9aa7b513c7","method":{"position":"org.apache.commons.collections4.CollectionUtils:279","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> disjunction(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (a == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, ((helper.max(obj)) - (helper.min(obj))));\n            }\n            return helper.list();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"37699445-3f23-11e6-82c0-81e6a323e0a2","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl"},"failures":[297,299,312,315,317,330,348,349,351,352,353,356,358,361,362,392,393,395,396,397,400,406,438,439,441,442,443,446,448,451,452,480,481,483,484,485,488,490,493,494,538,539,541,542,543,546,548,551,552,579,580,582,583,584,587,589,592,593,698,699,700,701,702,703,704,705,706,707,708,630,631,633,634,635,638,640,643,644],"tindex":"37699446-3f23-11e6-82c0-333161eaea1f","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:946","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[26],"tindex":"3769bb57-3f23-11e6-82c0-592588be59f6","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:542","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V set(final int index, final V value) {\n    if (index < 0) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.setValue(index, value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"3769bb58-3f23-11e6-82c0-d7d02b32ee63","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:767","type":"CtMethodImpl","sourcecode":"private static void makeBlack(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            if (node != null) {\n                node.setBlack(dataElement);\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"3769bb59-3f23-11e6-82c0-b56f56db2ba6","method":{"position":"org.apache.commons.collections4.MapUtils:486","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key, final java.lang.Integer defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl"},"failures":[304,305,308,310,313,314,322,323,326,328,331,332],"tindex":"3769e26a-3f23-11e6-82c0-179245f6aec1","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:108","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        {\n            return java.util.Map<E, ? super V>.containsKey(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl"},"failures":[709],"tindex":"3769e26b-3f23-11e6-82c0-43a89cbdb294","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:129","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl"},"failures":[710],"tindex":"3769e26c-3f23-11e6-82c0-8dc47e3c2419","method":{"position":"org.apache.commons.collections4.PredicateUtils:535","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(transformer, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"3769e26d-3f23-11e6-82c0-f7b5b90aed9a","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1004","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    rangeCheck(index, ((int) + 1));\n                    final int int = coll.size();\n                    if (cSize == 0) {\n                        return false;\n                    } \n                    checkModCount();\n                    org.apache.commons.collections4.list.AbstractLinkedList<E>.addAll(((int) + index), coll);\n                    int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n                    int += cSize;\n                    (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n                    return true;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"376a097e-3f23-11e6-82c0-73d9471a7e24","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:259","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.lang.Object put(final K key, final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(1);\n                coll.add(((V)(value)));\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.add(((V)(value)));\n            }\n            return result ? value : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl"},"failures":[516,519,526,532,533,538,539,541,542,543,544,546,548,551,552,556,557,558,559,560,561,570,571,572,624,625,630,631,633,634,635,638,640,643,644,648,649,650,651,652,653,662],"tindex":"376a097f-3f23-11e6-82c0-f3ada3a95532","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:205","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(super.getEntry(key)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl"},"failures":[711],"tindex":"376a0980-3f23-11e6-82c0-9ff0bcf89537","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:238","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(e.getKey(), e.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl"},"failures":[203,712],"tindex":"376a3091-3f23-11e6-82c0-1fe555f2e99e","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:331","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Set<E> createSetBasedOnList(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (list == null) {\n        {\n            java.util.Set<E> java.util.Set<E>;\n            if (set.getClass().equals(java.util.HashSet.java.util.HashSet.java.lang.Class)) {\n                subSet = new java.util.HashSet<E>(list.size());\n            } else {\n                try {\n                    subSet = set.getClass().newInstance();\n                } catch (final java.lang.InstantiationException ie) {\n                    subSet = new java.util.HashSet<E>();\n                } catch (final java.lang.IllegalAccessException iae) {\n                    subSet = new java.util.HashSet<E>();\n                }\n            }\n            subSet.addAll(list);\n            return subSet;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[713,27,714,715,716,34,717,718,719,720,721,722,723,63,724,725,726],"tindex":"376a3092-3f23-11e6-82c0-31cf656882b6","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:266","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            V V = null;\n            if (decorated().containsKey(key)) {\n                result = decorated().remove(key);\n                java.util.List<K>.remove(key);\n            } \n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"376a3093-3f23-11e6-82c0-57c8b94cd09f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1547","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final boolean includeDuplicates) {\n    if ((b == null) || (a == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), includeDuplicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl"},"failures":[335,334,336,337],"tindex":"376a3094-3f23-11e6-82c0-7532000a5b52","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:532","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key3 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((((multi.size()) == 4) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key3"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"376a57a5-3f23-11e6-82c0-e7ea10e2c1ed","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[196,197,199,202,205,727,206,209,210,728,729],"tindex":"376a57a6-3f23-11e6-82c0-e33bc7bff8dd","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:102","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index < 0) {\n        {\n            return decorated().set(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"376a57a7-3f23-11e6-82c0-7b0978d3a678","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2115","type":"CtMethodImpl","sourcecode":"public V removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"376a57a8-3f23-11e6-82c0-1d8e626e7a14","method":{"position":"org.apache.commons.collections4.MapUtils:1474","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        {\n            return org.apache.commons.collections4.map.MultiValueMap.multiValueMap(map, collectionFactory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtBinaryOperatorImpl"},"failures":[335,336,337],"tindex":"376a57a9-3f23-11e6-82c0-218bc0ee21ad","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:426","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl"},"failures":[730,731,732],"tindex":"376a7eba-3f23-11e6-82c0-dbe800eb523c","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:162","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n            E = null;\n            boolean = false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:161","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"376a7ebb-3f23-11e6-82c0-7bbdfd5cfede","method":{"position":"org.apache.commons.collections4.iterators.IteratorChain:159","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.Queue<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:161","type":"CtBinaryOperatorImpl"},"failures":[697,733,734],"tindex":"376a7ebc-3f23-11e6-82c0-f71efacbe660","method":{"position":"org.apache.commons.collections4.IteratorUtils:904","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"376a7ebd-3f23-11e6-82c0-171cd44d5126","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:210","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E value) {\n    if (index > 0) {\n        {\n            if (index > 0) {\n                {\n                    final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n                    addNodeBefore(node, value);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1278","type":"CtBinaryOperatorImpl"},"failures":[735,736,737,738,739,740,741,742,743,744,745,746],"tindex":"376aa5ce-3f23-11e6-82c0-433710200d67","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:313","type":"CtMethodImpl","sourcecode":"private boolean set(final int i) {\n    if (i == (-1)) {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = java.util.ArrayList<java.util.Iterator<? extends E>>.get(i);\n            if (it.hasNext()) {\n                java.util.ArrayList<E>.set(i, it.next());\n                java.util.BitSet.set(i);\n                return true;\n            } \n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[77,747,241,748],"tindex":"376aa5cf-3f23-11e6-82c0-53c5d46bdfb5","method":{"position":"org.apache.commons.collections4.list.TransformedList:155","type":"CtMethodImpl","sourcecode":"public E set(final int index, E object) {\n    if (index > 0) {\n        {\n            object = transform(object);\n            return getList().set(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ClosureUtils:355","type":"CtBinaryOperatorImpl"},"failures":[749],"tindex":"376aa5d0-3f23-11e6-82c0-3557304d7382","method":{"position":"org.apache.commons.collections4.ClosureUtils:354","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchMapClosure(final java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>> objectsAndClosures) {\n    if (objectsAndClosures == null) {\n        {\n            if (objectsAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = objectsAndClosures.remove(null);\n            final int int = objectsAndClosures.size();\n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> : objectsAndClosures.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<E>equalPredicate(entry.getKey());\n                trs[i] = entry.getValue();\n                i++;\n            }\n            return org.apache.commons.collections4.ClosureUtils.<E>switchClosure(preds, trs, def);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndClosures":"objectsAndClosures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"376aa5d1-3f23-11e6-82c0-cf25f64ba1f7","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:93","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().get(key);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl"},"failures":[750],"tindex":"376acce2-3f23-11e6-82c0-53dffd75161f","method":{"position":"org.apache.commons.collections4.BagUtils:116","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.bag.PredicatedBag.predicatedBag(bag, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[751,752,753,754,755,756],"tindex":"376acce3-3f23-11e6-82c0-95729a1ac02e","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:78","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl"},"failures":[757,758],"tindex":"376acce4-3f23-11e6-82c0-dd1e6d679bb3","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                result |= remove(name);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[759,760,761,762,763],"tindex":"376acce5-3f23-11e6-82c0-dfce5b875778","method":{"position":"org.apache.commons.collections4.CollectionUtils:1194","type":"CtMethodImpl","sourcecode":"private static void checkIndexBounds(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + index));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl"},"failures":[764],"tindex":"376acce6-3f23-11e6-82c0-abd0d8bede29","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        {\n            if (objectsAndTransformers == null) {\n                {\n                    if (objectsAndTransformers == null) {\n                        throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n                    } \n                    final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n                    final int int = objectsAndTransformers.size();\n                    final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n                    final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n                    int int = 0;\n                    for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                        preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                        trs[(i++)] = entry.getValue();\n                    }\n                    return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"376af3f7-3f23-11e6-82c0-6b7be4c50e00","method":{"position":"org.apache.commons.collections4.CollectionUtils:80","type":"CtMethodImpl","sourcecode":"public final int max(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            return java.lang.Math.max(freqA(obj), freqB(obj));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl"},"failures":[765,766,767,768,769],"tindex":"376af3f8-3f23-11e6-82c0-e7afa4c29782","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:210","type":"CtMethodImpl","sourcecode":"public boolean removeMapping(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (valuesForKey == null) {\n                return false;\n            } \n            final boolean boolean = valuesForKey.remove(value);\n            if (removed == false) {\n                return false;\n            } \n            if (valuesForKey.isEmpty()) {\n                remove(key);\n            } \n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"376af3f9-3f23-11e6-82c0-352c7b04c1ac","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        {\n            if (objectsAndTransformers == null) {\n                {\n                    if (objectsAndTransformers == null) {\n                        throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n                    } \n                    final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n                    final int int = objectsAndTransformers.size();\n                    final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n                    final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n                    int int = 0;\n                    for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                        preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                        trs[(i++)] = entry.getValue();\n                    }\n                    return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl"},"failures":[296,311,329],"tindex":"376b1b0a-3f23-11e6-82c0-13c7aa611767","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:130","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            java.util.Map<E, ? super V>.remove(obj);\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:816","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"376b1b0b-3f23-11e6-82c0-6f2bc14ea2f2","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:815","type":"CtMethodImpl","sourcecode":"protected void checkKey(final org.apache.commons.collections4.keyvalue.MultiKey<?> key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                {\n                    if (key == null) {\n                        throw new java.lang.NullPointerException(\"Key must not be null\");\n                    } \n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328590085/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}