{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":383,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":537,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":164,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":40,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":7,"org.apache.commons.collections4.bag.TransformedBagTest.testSimpleSerialization":174,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":29,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":196,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":285,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":399,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":424,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":464,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":571,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":111,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":447,"org.apache.commons.collections4.ListUtilsTest.testIntersectListWithNoOverlapAndDifferentTypes":486,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":324,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":627,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":284,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testCanonicalEmptyCollectionExists":437,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":625,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":631,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":133,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIteratorRemove":505,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":12,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":131,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":237,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":395,"org.apache.commons.collections4.CollectionUtilsTest.collect":440,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":481,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIsEmpty":503,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":483,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":145,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":226,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":482,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testEqualsNull":514,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":58,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":553,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":409,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":59,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":347,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":143,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":401,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":402,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":667,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":685,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":699,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":355,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":137,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":659,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":216,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":526,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":189,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":647,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":339,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":463,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":363,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEmptyMapCompatibility":429,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":657,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":390,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":286,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":130,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":318,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":336,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":60,"org.apache.commons.collections4.bag.TransformedBagTest.testCanonicalFullCollectionExists":176,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":253,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":559,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":333,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":507,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains2":574,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains1":573,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":41,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":50,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":480,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":645,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":633,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":274,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":478,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":201,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":479,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":595,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":700,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":271,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":102,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":279,"org.apache.commons.collections4.CollectionUtilsTest.select":670,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":423,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":305,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":466,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":432,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":705,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":524,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":37,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":448,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":510,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":565,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRetainAll":616,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":265,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":697,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":254,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":412,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":413,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":499,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":411,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":706,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":95,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":593,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":21,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testGetSet":492,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":290,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":328,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":405,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":522,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":679,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":623,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":225,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":669,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":25,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":396,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":349,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":332,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListCompatibility":681,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":33,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":31,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":462,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":260,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":296,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":493,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":384,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":691,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":381,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastValues":562,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":643,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":74,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":353,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":44,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":635,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":82,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":183,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":234,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":589,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":280,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":379,"org.apache.commons.collections4.list.UnmodifiableListTest.testDecorateFactory":179,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":243,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":221,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":78,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":374,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":107,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":24,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":403,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":267,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":81,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":248,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":155,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":303,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":275,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":641,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClear":311,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":642,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":181,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":231,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":154,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":442,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":90,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":140,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":169,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":388,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":426,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":110,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":322,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":77,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":220,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":86,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":662,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":197,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":661,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":73,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":327,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":13,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":373,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":329,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":612,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":309,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":418,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":673,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":266,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":620,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":278,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":245,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":410,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":67,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":124,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":186,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":400,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":323,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":210,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":406,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":638,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":104,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectEqualsSelf":119,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":251,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":421,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":125,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":317,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":23,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":504,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":83,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":93,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":430,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":255,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":394,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":656,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":695,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCanonicalEmptyCollectionExists":519,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":20,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":527,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":215,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":227,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":142,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":207,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectEqualsSelf":171,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":539,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":116,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":198,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":684,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":563,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":369,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":404,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":632,"org.apache.commons.collections4.functors.AllPredicateTest.emptyCollectionToGetInstance":242,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":150,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":637,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":375,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":416,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":610,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":415,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":414,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":428,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":293,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":457,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":535,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":454,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":30,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":54,"org.apache.commons.collections4.map.LRUMapTest.testClone":533,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testCanonicalFullCollectionExists":438,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsSelfHashCode":173,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":101,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":545,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":288,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":694,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":678,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":106,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":233,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":602,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":63,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":144,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_Decorate":587,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":256,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":618,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":224,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":608,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":658,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":185,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":194,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":163,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":348,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorSet":556,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":123,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":18,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":446,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":338,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":398,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsContract":709,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":85,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":320,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":32,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":112,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":52,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":607,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":71,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":103,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":84,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":208,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":701,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":434,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsContract":516,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":557,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":297,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":380,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":689,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":9,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":19,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":148,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":307,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":366,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap":114,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":529,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":193,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":677,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":549,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":314,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":170,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":364,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":5,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsContract":121,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":392,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":99,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":453,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":16,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":461,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":546,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":622,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":310,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":319,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":425,"org.apache.commons.collections4.functors.AllPredicateTest.singletonCollectionToGetInstance":244,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":46,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":382,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray2":511,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":128,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testSerializeDeserializeThenCompare":431,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":35,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":66,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":258,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":134,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":489,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":343,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":690,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsSelfHashCode":435,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithEmptyMap":113,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":252,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":592,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":580,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":422,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":36,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":199,"org.apache.commons.collections4.CollectionUtilsTest.filter":247,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":655,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":222,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":177,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":277,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":459,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":132,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":387,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":168,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":138,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":331,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":172,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":528,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":680,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":188,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":240,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":581,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":109,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":439,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":445,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":291,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":127,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":397,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":652,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":70,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains2":640,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":264,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains1":639,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":272,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":686,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":2,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":8,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":141,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":209,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSimpleSerialization":518,"org.apache.commons.collections4.CollectionUtilsTest.addIgnoreNull":664,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":3,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":508,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":609,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":72,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":57,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSerializeDeserializeThenCompare":513,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":292,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":586,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":79,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":702,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":386,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":15,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":206,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":555,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":236,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":203,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":190,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":229,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":465,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":569,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":356,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":541,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":682,"org.apache.commons.collections4.bag.TransformedBagTest.testCanonicalEmptyCollectionExists":175,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":126,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":597,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":98,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":552,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":76,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":62,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":668,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":230,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":149,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":159,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":444,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":494,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":543,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":687,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":692,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectEqualsSelf":433,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":321,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":100,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":588,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":211,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":205,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":548,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionSize":509,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":151,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":525,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":22,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":6,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":282,"org.apache.commons.collections4.map.HashedMapTest.testClone":530,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":585,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":498,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":377,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":532,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":572,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":624,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":591,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":427,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":629,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":354,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":55,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":683,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":688,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":564,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":351,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":582,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":455,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":0,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":467,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":276,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":672,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":287,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":646,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":157,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":648,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetHashCode":497,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":269,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":649,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":294,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEqualsNull":120,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":262,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":315,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":458,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":68,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":334,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":118,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":300,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":152,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":644,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":708,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":475,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":621,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":476,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":477,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":192,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":246,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":306,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":326,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectEqualsSelf":515,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClear":273,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":340,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":268,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":212,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":161,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":91,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":389,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":506,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":601,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":615,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":263,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":34,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":600,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":257,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":312,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":554,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":371,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":48,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":160,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":341,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":281,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":337,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":666,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":663,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":182,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":653,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":250,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":538,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":61,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":42,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":614,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":65,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":219,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":241,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":135,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":594,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":603,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":191,"org.apache.commons.collections4.CollectionUtilsTest.isFull":259,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":451,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":184,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":456,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":417,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":352,"org.apache.commons.collections4.map.LinkedMapTest.testClone":536,"org.apache.commons.collections4.ListUtilsTest.testSelect":665,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionClear":500,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":651,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":650,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":703,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":14,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":675,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":578,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":213,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":270,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":540,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":158,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":316,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":378,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":674,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":584,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":289,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":568,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":147,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":313,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":707,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":577,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":634,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":676,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":368,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":560,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":38,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":345,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":599,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":330,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":365,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":239,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":218,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":484,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":605,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":358,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx5":238,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsSelfHashCode":517,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":576,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":53,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":214,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":550,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":165,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":372,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":139,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":342,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":178,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":575,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":604,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":359,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":443,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":39,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":223,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":228,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":534,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":654,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_Decorate":598,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":636,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":362,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":361,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":360,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":367,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":80,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":249,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":542,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":693,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":583,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":419,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":407,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":570,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":385,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":474,"org.apache.commons.collections4.CollectionUtilsTest.find":488,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":561,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":626,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":217,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":370,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":117,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":501,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":441,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":596,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":64,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":302,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":473,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":472,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":471,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":566,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":671,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":468,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":469,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":502,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":470,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":27,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":490,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":408,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":136,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":26,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":75,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":590,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":299,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":420,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":325,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":105,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":180,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":393,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testSimpleSerialization":436,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":617,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":195,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":129,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":298,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":4,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":162,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":301,"org.apache.commons.collections4.ListUtilsTest.testIntersectNonEmptySubset":485,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":450,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":344,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":567,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":115,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":521,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiClear":97,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":335,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":491,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":496,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":698,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":304,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCanonicalFullCollectionExists":520,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":200,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":531,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":696,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testComparator":495,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":94,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToString":512,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":551,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":88,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":146,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":167,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":558,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":606,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":295,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":630,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":350,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":153,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":87,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":204,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":547,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":391,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":232,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":523,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":108,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":92,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":261,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":10,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":235,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":202,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":376,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":611,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":69,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":283,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":357,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":346,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":460,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":613,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":704,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":452,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":187,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":49,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":579,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKeyInverse":308,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":544,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":45,"org.apache.commons.collections4.ListUtilsTest.testIntersectionOrderInsensitivity":487,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":628,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":166,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":449,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":619,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":660},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[0,1,2,3],"tindex":"cc553d3e-3e76-11e6-a913-477feeb31671","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:245","type":"CtMethodImpl","sourcecode":"public void putAll(int index, final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                final K K = entry.getKey();\n                final boolean boolean = containsKey(key);\n                put(index, entry.getKey(), entry.getValue());\n                if (!contains) {\n                    index++;\n                } else {\n                    index = (indexOf(entry.getKey())) + 1;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[4],"tindex":"cc57d54f-3e76-11e6-a913-7304124410d8","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:63","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[5],"tindex":"cc57d550-3e76-11e6-a913-fdd966d2ca75","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:78","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if (map != null) {\n        {\n            return new org.apache.commons.collections4.map.PredicatedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"cc57d551-3e76-11e6-a913-cf1cdf6b7884","method":{"position":"org.apache.commons.collections4.MapUtils:1542","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.PredicatedSortedMap.predicatedSortedMap(map, keyPred, valuePred);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[6,7,8,9,10],"tindex":"cc57d552-3e76-11e6-a913-67cd0119ef42","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:223","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[11],"tindex":"cc57fc63-3e76-11e6-a913-b7c80cf92bf5","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"tindex":"cc57fc64-3e76-11e6-a913-71bb8d5adf97","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:259","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.lang.Object put(final K key, final java.lang.Object value) {\n    if (value == null) {\n        {\n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(1);\n                coll.add(((V)(value)));\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.add(((V)(value)));\n            }\n            return result ? value : null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"cc58bfb5-3e76-11e6-a913-e7e69ce3adc6","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1043","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index > 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    rangeCheck(index, ((int) + 1));\n                    checkModCount();\n                    return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this, index);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"tindex":"cc58bfb6-3e76-11e6-a913-1b6ec1d701bf","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:76","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            return decorated().remove(object, count);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[86],"tindex":"cc58bfb7-3e76-11e6-a913-fffd355231f6","method":{"position":"org.apache.commons.collections4.BagUtils:194","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    return org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(bag);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:551","type":"CtBinaryOperatorImpl","sourcecode":"equator == null"},"failures":[87,88],"tindex":"cc58bfb8-3e76-11e6-a913-07b7d5bbd2c4","method":{"position":"org.apache.commons.collections4.ListUtils:546","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b, final org.apache.commons.collections4.Equator<? super E> equator) {\n    if (equator == null) {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n            } \n            final org.apache.commons.collections4.sequence.SequencesComparator<E> org.apache.commons.collections4.sequence.SequencesComparator<E> = new org.apache.commons.collections4.sequence.SequencesComparator<E>(a , b , equator);\n            final org.apache.commons.collections4.sequence.EditScript<E> org.apache.commons.collections4.sequence.EditScript<E> = comparator.getScript();\n            final org.apache.commons.collections4.ListUtils.LcsVisitor<E> org.apache.commons.collections4.ListUtils.LcsVisitor<E> = new org.apache.commons.collections4.ListUtils.LcsVisitor<E>();\n            script.visit(visitor);\n            return visitor.getSubSequence();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"tindex":"cc58e6c9-3e76-11e6-a913-87eed435b5ed","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        {\n            return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"cc58e6ca-3e76-11e6-a913-7589f1cd8fc1","method":{"position":"org.apache.commons.collections4.set.CompositeSet:265","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeSet without a SetMutator strategy\");\n            } \n            return org.apache.commons.collections4.set.CompositeSet.SetMutator<E>.addAll(org.apache.commons.collections4.set.CompositeSet.this, java.util.List<java.util.Set<E>>, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"cc58e6cb-3e76-11e6-a913-75fb8de43744","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[110,111],"tindex":"cc58e6cc-3e76-11e6-a913-139155006ffb","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:518","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[112],"tindex":"cc590ddd-3e76-11e6-a913-3532f10db0ff","method":{"position":"org.apache.commons.collections4.TransformerUtils:192","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[113,114],"tindex":"cc590dde-3e76-11e6-a913-d9f8a6c7e852","method":{"position":"org.apache.commons.collections4.MapUtils:1217","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        {\n            return !(org.apache.commons.collections4.MapUtils.isEmpty(map));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[60],"tindex":"cc590ddf-3e76-11e6-a913-f178c593f6bd","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:224","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            final boolean boolean = super.retainAll(coll);\n            if (changed) {\n                reindex();\n            } \n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[115,116,117,118],"tindex":"cc590de0-3e76-11e6-a913-a77e033ce924","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1054","type":"CtMethodImpl","sourcecode":"protected void rangeCheck(final int index, final int beyond) {\n    if (index < 0) {\n        {\n            if ((index < 0) || (index >= beyond)) {\n                throw new java.lang.IndexOutOfBoundsException(((((\"Index '\" + index) + \"' out of bounds for size '\") + (int)) + \"'\"));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"cc590de1-3e76-11e6-a913-857d6209370a","method":{"position":"org.apache.commons.collections4.IteratorUtils:649","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> objectGraphIterator(final E root, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectGraphIterator<E>(root , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[119,120,121,122],"tindex":"cc5934f2-3e76-11e6-a913-b529a1b26453","method":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            if ((org.apache.commons.collections4.comparators.TransformingComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.TransformingComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.TransformingComparator<?, ?> org.apache.commons.collections4.comparators.TransformingComparator<?, ?> = ((org.apache.commons.collections4.comparators.TransformingComparator<?, ?>)(object));\n                return null == (java.util.Comparator<O>) ? null == (comp.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(comp.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>);\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[123,124,125,126,127,128,129,130,131,132,133,134],"tindex":"cc5934f3-3e76-11e6-a913-996bd8460abb","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:329","type":"CtMethodImpl","sourcecode":"private void clear(final int i) {\n    if (i == (-1)) {\n        {\n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"cc598314-3e76-11e6-a913-ddda896aed77","method":{"position":"org.apache.commons.collections4.ListUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> union(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list1.size())) {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>(list1);\n            result.addAll(list2);\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"cc59aa25-3e76-11e6-a913-ffc373aa6562","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,78,79,164,165,166,167,168,169,170,171,172,173,174,175,176,177],"tindex":"cc59aa26-3e76-11e6-a913-6d198a359fc1","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:57","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"cc59aa27-3e76-11e6-a913-f9fa3f496069","method":{"position":"org.apache.commons.collections4.CollectionUtils:326","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final org.apache.commons.collections4.Predicate<O> p) {\n    if ((a == null) || (a == null)) {\n        {\n            final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>();\n            final org.apache.commons.collections4.bag.HashBag<O> org.apache.commons.collections4.bag.HashBag<O> = new org.apache.commons.collections4.bag.HashBag<O>();\n            for (final O O : b) {\n                if (p.evaluate(element)) {\n                    bag.add(element);\n                } \n            }\n            for (final O O : a) {\n                if (!(bag.remove(element, 1))) {\n                    list.add(element);\n                } \n            }\n            return list;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[178],"tindex":"cc59d138-3e76-11e6-a913-093d1ea2c359","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:142","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[179],"tindex":"cc59d139-3e76-11e6-a913-3df8e168a432","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.List<E> java.util.List<E> = ((java.util.List<E>)(list));\n                return tmpList;\n            } \n            return new org.apache.commons.collections4.list.UnmodifiableList<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"cc59d13a-3e76-11e6-a913-559b35dd3818","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:279","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.FixedOrderComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.FixedOrderComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(object));\n                return null == (java.util.Map<T, java.lang.Integer>) ? null == (comp.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(comp.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (comp.int))) && ((boolean) == (comp.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[180,181],"tindex":"cc59f84b-3e76-11e6-a913-4b771c8ddfed","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:112","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1265","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213],"tindex":"cc59f84c-3e76-11e6-a913-f57e182b5a7a","method":{"position":"org.apache.commons.collections4.list.PredicatedList:128","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i == (-1)) {\n        {\n            return new PredicatedListIterator(decorated().listIterator(i));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"cc59f84d-3e76-11e6-a913-b39710c359a4","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237],"tindex":"cc59f84e-3e76-11e6-a913-37442d12aa1f","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1463","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o == null) {\n        {\n            return containsKey(o);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"cc59f84f-3e76-11e6-a913-899e7da9c2bc","method":{"position":"org.apache.commons.collections4.BagUtils:194","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    return org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(bag);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[238,239,240,241,241,242,243,243,244,245],"tindex":"cc5a1f60-3e76-11e6-a913-05025dc400bd","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:79","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((preds.int) == 1) {\n                return preds[0];\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(preds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[246,247,248,249],"tindex":"cc5a1f61-3e76-11e6-a913-f3dfc5ca56ae","method":{"position":"org.apache.commons.collections4.CollectionUtils:747","type":"CtMethodImpl","sourcecode":"public static <T>boolean filter(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            boolean boolean = false;\n            if ((collection != null) && (predicate != null)) {\n                for (final java.util.Iterator<T> java.util.Iterator<T> = collection.iterator() ; it.hasNext() ; ) {\n                    if (!(predicate.evaluate(it.next()))) {\n                        it.remove();\n                        result = true;\n                    } \n                }\n            } \n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[250,251,252,253,254,144,255,256,257,258],"tindex":"cc5a1f62-3e76-11e6-a913-f3a5e71b7107","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:361","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                return retainAll(((org.apache.commons.collections4.Bag<?>)(coll)));\n            } \n            return retainAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(coll));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[],"tindex":"cc5a1f63-3e76-11e6-a913-3137e9038820","method":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:109","type":"CtMethodImpl","sourcecode":"public T transform(final java.lang.Class<? extends T> input) {\n    if (input == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            try {\n                if (input == null) {\n                    throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Input object was not an instanceof Class, it was a null object\");\n                } \n                final java.lang.reflect.Constructor<? extends T> java.lang.reflect.Constructor<? extends T> = input.getConstructor(java.lang.Class<?>[]);\n                return con.newInstance(java.lang.Object[]);\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: The constructor must exist and be public \");\n            } catch (final java.lang.InstantiationException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: InstantiationException\" , ex);\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor must be public\" , ex);\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor threw an exception\" , ex);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1467","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[259],"tindex":"cc5a1f64-3e76-11e6-a913-d5579450380c","method":{"position":"org.apache.commons.collections4.CollectionUtils:1466","type":"CtMethodImpl","sourcecode":"public static boolean isFull(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).isFull();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.isFull();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return false;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[],"tindex":"cc5a4675-3e76-11e6-a913-31ef6b607eda","method":{"position":"org.apache.commons.collections4.ClosureUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326],"tindex":"cc5a4676-3e76-11e6-a913-d700b8fefbba","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        {\n            return new org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K>(normalMap , reverseMap , inverseMap);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.NullPointerException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"cc5a4677-3e76-11e6-a913-f90204dca110","method":{"position":"org.apache.commons.collections4.MapUtils:1089","type":"CtMethodImpl","sourcecode":"public static <K>void safeAddToMap(final java.util.Map<? super K, java.lang.Object> map, final K key, final java.lang.Object value) throws java.lang.NullPointerException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.NullPointerException();\n    } else {\n        {\n            if (value != null) {\n                {\n                    map.put(key, (value == null ? \"\" : value));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.NullPointerException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[251,253,327,256],"tindex":"cc5a4678-3e76-11e6-a913-611c2160268c","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[226,328],"tindex":"cc5a4679-3e76-11e6-a913-ef1f6ab744f4","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:101","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[329,330],"tindex":"cc5a6d8a-3e76-11e6-a913-c5b8fb195785","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:236","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    removeNode(node);\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:190","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"cc5a6d8b-3e76-11e6-a913-5bbd60a57530","method":{"position":"org.apache.commons.collections4.IteratorUtils:824","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[],"tindex":"cc5a6d8c-3e76-11e6-a913-8dfacdcaee81","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:413","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        {\n            if ((obj instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n                return false;\n            } \n            return (((org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger)(obj)).int) == (int);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[],"tindex":"cc5a6d8d-3e76-11e6-a913-cb52eb9616c9","method":{"position":"org.apache.commons.collections4.CollectionUtils:89","type":"CtMethodImpl","sourcecode":"public final int min(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Math.min(freqA(obj), freqB(obj));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[331,332],"tindex":"cc5a949e-3e76-11e6-a913-a997ec165c8c","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:281","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if (key == null) {\n                return null;\n            } \n            purgeBeforeWrite();\n            return super.remove(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[333,334,335,336,337,338,339,11,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428],"tindex":"cc5a949f-3e76-11e6-a913-bb5d2dfc661b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:755","type":"CtMethodImpl","sourcecode":"private static void makeRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node != null) {\n                node.setRed(dataElement);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[333,334,335,336,337,338,342,343,344,339,11,340,341,345,347,346,348,349,350,351,352,353,354,429,355,430,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,431,432,433,434,435,436,437,438],"tindex":"cc5b30e0-3e76-11e6-a913-cbf2862b25aa","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final org.apache.commons.collections4.OrderedBidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedBidiMap<K, V> org.apache.commons.collections4.OrderedBidiMap<K, V> = ((org.apache.commons.collections4.OrderedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[439],"tindex":"cc5b30e1-3e76-11e6-a913-7519d78a469e","method":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.PredicatedQueue<E> predicatedQueue(final java.util.Queue<E> Queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.queue.PredicatedQueue<E>(Queue , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[55],"tindex":"cc5b30e2-3e76-11e6-a913-0991fe162280","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                changed |= remove(o);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"cc5b57f3-3e76-11e6-a913-df2b3cfef787","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:134","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1039","type":"CtBinaryOperatorImpl","sourcecode":"inputCollection != null"},"failures":[440],"tindex":"cc5b57f4-3e76-11e6-a913-b76ce055c718","method":{"position":"org.apache.commons.collections4.CollectionUtils:1037","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.lang.Iterable<? extends I> inputCollection, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if (inputCollection != null) {\n        {\n            if (inputCollection != null) {\n                return org.apache.commons.collections4.CollectionUtils.collect(inputCollection.iterator(), transformer, outputCollection);\n            } \n            return outputCollection;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputCollection":"inputCollection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[15,35],"tindex":"cc5b57f5-3e76-11e6-a913-afd85ef91503","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:429","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.Iterator<? extends java.util.Map.Entry<K, V>> nextIterator(int count) {\n    if (count > 3) {\n        {\n            if (count > 3) {\n                {\n                    if (!(keyIterator.hasNext())) {\n                        return null;\n                    } \n                    final K K = keyIterator.next();\n                    final org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>>() {\n                        public java.util.Map.Entry<K, V> transform(final V input) {\n                            return new java.util.Map.Entry<K, V>() {\n                                public K getKey() {\n                                    return key;\n                                }\n\n                                public V getValue() {\n                                    return input;\n                                }\n\n                                public V setValue(V value) {\n                                    throw new java.lang.UnsupportedOperationException();\n                                }\n                            };\n                        }\n                    };\n                    return new org.apache.commons.collections4.iterators.TransformIterator<V, java.util.Map.Entry<K, V>>(new ValuesIterator(key) , transformer);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467],"tindex":"cc5b7f06-3e76-11e6-a913-89f38ba2fa96","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:205","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(super.getEntry(key)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"cc5b7f07-3e76-11e6-a913-99d4107bf6c2","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:999","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return addAll(int, coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[],"tindex":"cc5b7f08-3e76-11e6-a913-dfe7a3265e7f","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:157","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Closure<T> coerce(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            return ((org.apache.commons.collections4.Closure<T>)(closure));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[214,215,216,217,218,219,220,221,222,468,469,470,471,472,473,474,223,224,225,226,227,228,475,476,477,229,230,231,232,233,234,235,236,237,478,479,480,481,482,483,484],"tindex":"cc5b7f09-3e76-11e6-a913-61fe118fee7c","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.lang.Comparable)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (o == (org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.this)) {\n                        return true;\n                    } else if (!(o instanceof java.util.Map.Entry)) {\n                        return false;\n                    } \n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(o));\n                    if ((org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(K, other.getKey())) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(V, other.getValue()))) {\n                        return true;\n                    } \n                    return false;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:540","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[333,334,335,336,337,338,340,341,342,343,344,339,11,347,345,346,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,381,382,383,384,386,387,388,379,380,391,389,390,394,392,393,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428],"tindex":"cc5ba61a-3e76-11e6-a913-4f593651d4a2","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1866","type":"CtMethodImpl","sourcecode":"private void setLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[7],"tindex":"cc5ba61b-3e76-11e6-a913-297935cc62d7","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:426","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key4 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key4"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"cc5ba61c-3e76-11e6-a913-79761f5c696a","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1415","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if ((contains(obj)) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(entry.getKey());\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[485,486,487],"tindex":"cc5bcd2d-3e76-11e6-a913-f15829cd63d2","method":{"position":"org.apache.commons.collections4.ListUtils:89","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> intersection(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list1.size()) > (list2.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            java.util.List<? extends E> java.util.List<? extends E> = list1;\n            java.util.List<? extends E> java.util.List<? extends E> = list2;\n            if ((list1.size()) > (list2.size())) {\n                smaller = list2;\n                larger = list1;\n            } \n            final java.util.HashSet<E> java.util.HashSet<E> = new java.util.HashSet<E>(smaller);\n            for (final E E : larger) {\n                if (hashSet.contains(e)) {\n                    result.add(e);\n                    hashSet.remove(e);\n                } \n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[488],"tindex":"cc5c1b4e-3e76-11e6-a913-8b17363f7b0b","method":{"position":"org.apache.commons.collections4.CollectionUtils:641","type":"CtMethodImpl","sourcecode":"public static <T>T find(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (collection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection != null) && (predicate != null)) {\n                for (final T T : collection) {\n                    if (predicate.evaluate(item)) {\n                        return item;\n                    } \n                }\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"cc5c1b4f-3e76-11e6-a913-1fd8035f4296","method":{"position":"org.apache.commons.collections4.MapUtils:466","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key, final java.lang.Short defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[88],"tindex":"cc5c4260-3e76-11e6-a913-9919d690a375","method":{"position":"org.apache.commons.collections4.ListUtils:574","type":"CtMethodImpl","sourcecode":"public static java.lang.String longestCommonSubsequence(final java.lang.CharSequence a, final java.lang.CharSequence b) {\n    if ((b == null) || (b == null)) {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"CharSequence must not be null\");\n            } \n            final java.util.List<java.lang.Character> java.util.List<java.lang.Character> = org.apache.commons.collections4.ListUtils.longestCommonSubsequence(new org.apache.commons.collections4.ListUtils.CharSequenceAsList(a), new org.apache.commons.collections4.ListUtils.CharSequenceAsList(b));\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            for (java.lang.Character java.lang.Character : lcs) {\n                sb.append(ch);\n            }\n            return sb.toString();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:167","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[489],"tindex":"cc5c4261-3e76-11e6-a913-d7b15e1644f0","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            if (set == null) {\n                throw new java.lang.IllegalArgumentException(\"Set must not be null\");\n            } \n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (((set.size()) > 0) || ((list.size()) > 0)) {\n                throw new java.lang.IllegalArgumentException(\"Set and List must be empty\");\n            } \n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"cc5c4262-3e76-11e6-a913-6b3f63c1d55f","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:542","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V set(final int index, final V value) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.setValue(index, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[490,491],"tindex":"cc5c4263-3e76-11e6-a913-85214b2a0c45","method":{"position":"org.apache.commons.collections4.CollectionUtils:722","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    final T T = iterator.next();\n                    if (iterator.hasNext()) {\n                        closure.execute(element);\n                    } else {\n                        return element;\n                    }\n                }\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:120","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"cc5c6974-3e76-11e6-a913-fff29de7b1ac","method":{"position":"org.apache.commons.collections4.IteratorUtils:763","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> loopingListIterator(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (list == null) {\n                throw new java.lang.NullPointerException(\"List must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingListIterator<E>(list);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[333,334,335,336,337,338,339,11,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428],"tindex":"cc5c6975-3e76-11e6-a913-1de4b92d28ec","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:734","type":"CtMethodImpl","sourcecode":"private static boolean isRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            return (node != null) && (node.isRed(dataElement));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[6,7],"tindex":"cc5c6976-3e76-11e6-a913-d7f702c3e8d0","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:357","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520],"tindex":"cc5c6977-3e76-11e6-a913-adee75c57668","method":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(set , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"cc5c9088-3e76-11e6-a913-f7d559d51202","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().java.util.Map<K, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"cc5c9089-3e76-11e6-a913-29bde6deb16f","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:586","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<V>lookup(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[521,522,71,72,523,524,82,83],"tindex":"cc5c908a-3e76-11e6-a913-d9c82d5cc1ea","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:97","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            return decorated().remove(object, count);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"cc5c908b-3e76-11e6-a913-2f8bdbec353e","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1043","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index > 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    rangeCheck(index, ((int) + 1));\n                    checkModCount();\n                    return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this, index);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"cc5c908c-3e76-11e6-a913-05abd681a505","method":{"position":"org.apache.commons.collections4.IteratorUtils:718","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> filteredListIterator(final java.util.ListIterator<? extends E> listIterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                {\n                    if (listIterator == null) {\n                        throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n                    } \n                    if (predicate == null) {\n                        throw new java.lang.NullPointerException(\"Predicate must not be null\");\n                    } \n                    return new org.apache.commons.collections4.iterators.FilterListIterator<E>(listIterator , predicate);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"cc5c908d-3e76-11e6-a913-7f69f31ca5b7","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.lang.Comparable)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (o == (org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.this)) {\n                        return true;\n                    } else if (!(o instanceof java.util.Map.Entry)) {\n                        return false;\n                    } \n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(o));\n                    if ((org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(K, other.getKey())) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(V, other.getValue()))) {\n                        return true;\n                    } \n                    return false;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[525,526],"tindex":"cc5cb79e-3e76-11e6-a913-c137217b133f","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[],"tindex":"cc5cb79f-3e76-11e6-a913-dbcf487fd3fc","method":{"position":"org.apache.commons.collections4.map.LinkedMap:228","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.containsKey(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[527],"tindex":"cc5cb7a0-3e76-11e6-a913-2d86004fc9f3","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:146","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"cc5cb7a1-3e76-11e6-a913-936a1ed95a63","method":{"position":"org.apache.commons.collections4.IteratorUtils:718","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> filteredListIterator(final java.util.ListIterator<? extends E> listIterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                {\n                    if (listIterator == null) {\n                        throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n                    } \n                    if (predicate == null) {\n                        throw new java.lang.NullPointerException(\"Predicate must not be null\");\n                    } \n                    return new org.apache.commons.collections4.iterators.FilterListIterator<E>(listIterator , predicate);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.NullPointerException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"cc5cb7a2-3e76-11e6-a913-a7091f31b6a6","method":{"position":"org.apache.commons.collections4.MapUtils:1089","type":"CtMethodImpl","sourcecode":"public static <K>void safeAddToMap(final java.util.Map<? super K, java.lang.Object> map, final K key, final java.lang.Object value) throws java.lang.NullPointerException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.NullPointerException();\n    } else {\n        {\n            if (value != null) {\n                {\n                    map.put(key, (value == null ? \"\" : value));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.NullPointerException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[528,529],"tindex":"cc5cdeb3-3e76-11e6-a913-47a124b53ecb","method":{"position":"org.apache.commons.collections4.functors.WhileClosure:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> whileClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> closure, final boolean doLoop) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.WhileClosure<E>(predicate , closure , doLoop);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"cc5cdeb4-3e76-11e6-a913-97143bdc1d15","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:81","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.collection.TransformedCollection<E> transformedCollection(final java.util.Collection<E> collection, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.collection.TransformedCollection<E> org.apache.commons.collections4.collection.TransformedCollection<E> = new org.apache.commons.collections4.collection.TransformedCollection<E>(collection , transformer);\n            if ((collection.size()) > 0) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(collection.toArray()));\n                collection.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[525,526],"tindex":"cc5cdeb5-3e76-11e6-a913-c79e7e11f178","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"cc5cdeb6-3e76-11e6-a913-fb2b19d8d90e","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:89","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if ((map.size()) > 0) {\n        {\n            final org.apache.commons.collections4.map.TransformedSortedMap<K, V> org.apache.commons.collections4.map.TransformedSortedMap<K, V> = new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"cc5cdeb7-3e76-11e6-a913-9d84671f8810","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:412","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"cc5cdeb8-3e76-11e6-a913-5b8efde5eaa5","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:429","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.Iterator<? extends java.util.Map.Entry<K, V>> nextIterator(int count) {\n    if (count > 3) {\n        {\n            if (count > 3) {\n                {\n                    if (!(keyIterator.hasNext())) {\n                        return null;\n                    } \n                    final K K = keyIterator.next();\n                    final org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>>() {\n                        public java.util.Map.Entry<K, V> transform(final V input) {\n                            return new java.util.Map.Entry<K, V>() {\n                                public K getKey() {\n                                    return key;\n                                }\n\n                                public V getValue() {\n                                    return input;\n                                }\n\n                                public V setValue(V value) {\n                                    throw new java.lang.UnsupportedOperationException();\n                                }\n                            };\n                        }\n                    };\n                    return new org.apache.commons.collections4.iterators.TransformIterator<V, java.util.Map.Entry<K, V>>(new ValuesIterator(key) , transformer);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[530,531,532,533,451,534,535,536,465,537,538,539,540],"tindex":"cc5dc919-3e76-11e6-a913-bf799fc774ce","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:302","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            _putAll(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"cc5dc91a-3e76-11e6-a913-cfd3ea5cc1bc","method":{"position":"org.apache.commons.collections4.CollectionUtils:227","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> union(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (b == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, helper.max(obj));\n            }\n            return helper.list();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[342,343,344,340,352,372,373,541,542,543,544,289,290,545,296,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,110,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,15,16,17,19,28,30,31,36,42,44,617,618,619,620,621,622,623,0,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,111,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,46,48,49],"tindex":"cc5dc91b-3e76-11e6-a913-cb85c0997df2","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:93","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[664],"tindex":"cc5df02c-3e76-11e6-a913-6337b5ed2368","method":{"position":"org.apache.commons.collections4.CollectionUtils:1086","type":"CtMethodImpl","sourcecode":"public static <T>boolean addIgnoreNull(final java.util.Collection<T> collection, final T object) {\n    if (collection == null) {\n        {\n            if (collection == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            return (object != null) && (collection.add(object));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[489],"tindex":"cc5df02d-3e76-11e6-a913-05adf900f80c","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:119","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.List<E> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            final java.util.Set<E> java.util.Set<E> = new java.util.HashSet<E>(list);\n            list.retainAll(set);\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[665,666,667,668,669,670,671,672,673,674,675],"tindex":"cc5df02e-3e76-11e6-a913-c14850e1eac3","method":{"position":"org.apache.commons.collections4.CollectionUtils:510","type":"CtMethodImpl","sourcecode":"public static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((a.size()) != (b.size())) {\n        {\n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n            if ((helper.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (helper.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n                return false;\n            } \n            for (final java.lang.Object java.lang.Object : helper.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n                if ((helper.freqA(obj)) != (helper.freqB(obj))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"cc5df02f-3e76-11e6-a913-2ffd8fe07651","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:330","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryAfter(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[4,676],"tindex":"cc5df030-3e76-11e6-a913-ad1386dc1194","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:79","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().remove(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709],"tindex":"cc5df031-3e76-11e6-a913-e1f4c93ed89d","method":{"position":"org.apache.commons.collections4.list.TransformedList:151","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i == (-1)) {\n        {\n            return new TransformedListIterator(getList().listIterator(i));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895040/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}