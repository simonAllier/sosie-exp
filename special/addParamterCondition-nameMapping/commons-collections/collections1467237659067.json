{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":302,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":525,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":178,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":17,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":584,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":24,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":60,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":278,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":400,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":69,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":617,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":479,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":555,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":554,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":282,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSerializeDeserializeThenCompare":172,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":245,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":396,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":249,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":251,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":228,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":250,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":10,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":441,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":295,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":408,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":576,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":636,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":517,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":605,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":351,"org.apache.commons.collections4.set.ListOrderedSetTest.testCanonicalEmptyCollectionExists":484,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":510,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListCompatibility":154,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":402,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicate":186,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":403,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":311,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":324,"org.apache.commons.collections4.list.GrowthListTest.testFullListCompatibility":144,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":359,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":206,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionClear":474,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":523,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":104,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":570,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":84,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":343,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":639,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListSerialization":161,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":367,"org.apache.commons.collections4.ListUtilsTest.testLazyList":459,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":192,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":497,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSimpleSerialization":121,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":391,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":610,"org.apache.commons.collections4.CollectionUtilsTest.addAllForElements":296,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":339,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":89,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":336,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":183,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":248,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":284,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":246,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":247,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":503,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":99,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":36,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":325,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":427,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":591,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":539,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":344,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSimpleSerialization":137,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":419,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":86,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSimpleSerialization":123,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":330,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToString":469,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":430,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":550,"org.apache.commons.collections4.ListUtilsTest.testEquals":420,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":622,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":73,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":565,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":606,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":194,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":32,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":273,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":322,"org.apache.commons.collections4.list.UnmodifiableListTest.testSerializeDeserializeThenCompare":164,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":182,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":2,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":411,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":619,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":412,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListSerialization":157,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":410,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":331,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":140,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":511,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":61,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":620,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":405,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":581,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":252,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":305,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":8,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":552,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":397,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":498,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":553,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":301,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":353,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":87,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListCompatibility":307,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":196,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":59,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":83,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":546,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":155,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":520,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":387,"org.apache.commons.collections4.bag.CollectionBagTest.testSimpleSerialization":129,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":190,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":209,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":386,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":357,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":130,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":569,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueCompatibility":166,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":285,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":56,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":242,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":516,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSimpleSerialization":171,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":384,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":223,"org.apache.commons.collections4.set.ListOrderedSetTest.testSimpleSerialization":125,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":615,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":212,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":378,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":489,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":19,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":476,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":113,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":114,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":538,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":494,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":616,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSerializeDeserializeThenCompare":170,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":447,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":3,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":54,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":560,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":238,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":262,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":611,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":383,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":211,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":78,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":107,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSimpleSerialization":141,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":294,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":531,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":532,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":530,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":91,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":592,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":608,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":377,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":416,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":580,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":642,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":595,"org.apache.commons.collections4.list.GrowthListTest.testFullListSerialization":143,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":409,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":109,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":7,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":593,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":401,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":633,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":462,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":406,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":288,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":551,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":23,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":528,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":527,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking":189,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListCompatibility":148,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":395,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":292,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":320,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":472,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":529,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":266,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":205,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":98,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":635,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":229,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":634,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":150,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":471,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":64,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":97,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":310,"org.apache.commons.collections4.map.FixedSizeMapTest.testEqualsNull":42,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueSerialization":169,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":271,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":373,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":128,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":404,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":283,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":612,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":287,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":379,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":415,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":253,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":414,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":413,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":28,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":34,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":426,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":431,"org.apache.commons.collections4.list.FixedSizeListTest.testSimpleSerialization":153,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":18,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":5,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":79,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":319,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":304,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":631,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":224,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":575,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":496,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":240,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsSelfHashCode":456,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":638,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":535,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":156,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":227,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":293,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":122,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectEqualsSelf":481,"org.apache.commons.collections4.set.ListOrderedSetTest.testCanonicalFullCollectionExists":482,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":601,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":542,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":352,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":11,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":341,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":49,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsContract":334,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":399,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":177,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":557,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":185,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":585,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":613,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":13,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking2":429,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":176,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":468,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":255,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":466,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":326,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":513,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":1,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":315,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":385,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":180,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":120,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":370,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":138,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":439,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":423,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":303,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":460,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":368,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":393,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":582,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":25,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":193,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":335,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testEqualsNull":453,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListCompatibility":160,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":574,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":579,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":200,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":533,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":578,"org.apache.commons.collections4.list.GrowthListTest.testEmptyListCompatibility":142,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":202,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":348,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":316,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":225,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":100,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListCompatibility":162,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":418,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":623,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":445,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":291,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":213,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":81,"org.apache.commons.collections4.map.FixedSizeMapTest.testCanonicalEmptyCollectionExists":43,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapHashCode":29,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":389,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":461,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":597,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":257,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectHashCodeEqualsContract":485,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":609,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":9,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":48,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":65,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":566,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":197,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":306,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":583,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":299,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":101,"org.apache.commons.collections4.map.FixedSizeMapTest.testSimpleSerialization":44,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":437,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":493,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":68,"org.apache.commons.collections4.ListUtilsTest.testHashCode":487,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":500,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":618,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":604,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":398,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":526,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":174,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":14,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":501,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":110,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":96,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":312,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":30,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":562,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":179,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking2":188,"org.apache.commons.collections4.CollectionUtilsTest.addIgnoreNull":491,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":495,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":230,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":111,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":465,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":52,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":549,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":327,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":388,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":244,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":548,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":600,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":599,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":236,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":499,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":637,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":85,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":512,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueCompatibility":168,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":276,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":564,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":308,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":360,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":201,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":540,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":590,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":53,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":112,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":62,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":559,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":237,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":67,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":313,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":317,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":587,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":588,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":621,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":94,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":6,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":58,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":181,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":507,"org.apache.commons.collections4.list.GrowthListTest.testSerializeDeserializeThenCompare":146,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":508,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":264,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":509,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":279,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":381,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":502,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSimpleSerialization":119,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":27,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":444,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectEqualsSelf":454,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":280,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":358,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":309,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":314,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":272,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":536,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":50,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":355,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":39,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":184,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectHashCodeEqualsSelfHashCode":46,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":90,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":175,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":256,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":432,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":425,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":603,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsContract":455,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":95,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":433,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":490,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":76,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":126,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":103,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":265,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":572,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":630,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":452,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":124,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":199,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":80,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":337,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":443,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":77,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":333,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray2":450,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":139,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":232,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":233,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToString":451,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":234,"org.apache.commons.collections4.SetUtilsTest.testHashCode":436,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":258,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":345,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":518,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":131,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":390,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":596,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":571,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":300,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":558,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":632,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetHashCode":442,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":643,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":375,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":449,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":297,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":346,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":340,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":108,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":289,"org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering":463,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":602,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":210,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":545,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":71,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectHashCodeEqualsSelfHashCode":486,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":594,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking":428,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":21,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":356,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":480,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":116,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":328,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":519,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":625,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":561,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":57,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":127,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":132,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":382,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":504,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":505,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":506,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":628,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":627,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":577,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":626,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":624,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":332,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":372,"org.apache.commons.collections4.map.FixedSizeMapTest.testCanonicalFullCollectionExists":41,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":235,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":349,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":369,"org.apache.commons.collections4.SetUtilsTest.testEquals":435,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":208,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":254,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":640,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":362,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":38,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testDecorateFactory":438,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":204,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":376,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":347,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":534,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":644,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":267,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicate":270,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":221,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":259,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":363,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":66,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":226,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":231,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCanonicalFullCollectionExists":458,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":589,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCanonicalEmptyCollectionExists":457,"org.apache.commons.collections4.list.SetUniqueListTest.testSimpleSerialization":159,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":467,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":607,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":290,"org.apache.commons.collections4.SetUtilsTest.testEmptyIfNull":434,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":286,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":366,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":365,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":364,"org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.testEqualsAndHashCode":106,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":371,"org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.testEqualsAndHashCode":105,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":115,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":318,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":475,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":417,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":488,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":20,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":260,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":522,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":277,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":521,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":117,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":222,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":152,"org.apache.commons.collections4.list.UnmodifiableListTest.testSimpleSerialization":165,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":563,"org.apache.commons.collections4.list.GrowthListTest.testSimpleSerialization":147,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":207,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":374,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testComparator":440,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":37,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":543,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking2":191,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":203,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":219,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":218,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":492,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":217,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":88,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":274,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":135,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":214,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":215,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":216,"org.apache.commons.collections4.set.ListOrderedSetTest.testEqualsNull":483,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":407,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":158,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":198,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":92,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":524,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":22,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":556,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":220,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":598,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":241,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":102,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":195,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":473,"org.apache.commons.collections4.map.FixedSizeMapTest.testSerializeDeserializeThenCompare":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":394,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":75,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListSerialization":163,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":35,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":12,"org.apache.commons.collections4.list.GrowthListTest.testEmptyListSerialization":145,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":342,"org.apache.commons.collections4.map.LRUMapTest.testLRU":567,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":275,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":338,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":323,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":93,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":74,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectHashCodeEqualsContract":45,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":470,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":63,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":321,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":537,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":478,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":547,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":586,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":421,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":422,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":261,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":568,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":281,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":354,"org.apache.commons.collections4.map.FixedSizeMapTest.testMakeMap":31,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSimpleSerialization":173,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiRemove":298,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":514,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":118,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":392,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":239,"org.apache.commons.collections4.map.FixedSizeMapTest.testEmptyMapCompatibility":33,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSimpleSerialization":133,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":243,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":629,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":380,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":268,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":263,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":573,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":361,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":82,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":350,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":477,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":541,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":424,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":269,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectEqualsSelf":40,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListSerialization":149,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":329,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":136,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":72,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking":187,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionSize":448,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":614,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIsEmpty":446,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":515,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":55,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueSerialization":167,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":464,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":70,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListSerialization":151,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":641,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":544},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[0,1,2,3,4,5],"tindex":"f636710f-3e44-11e6-a4d2-ab594197fbe1","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:502","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"f636e640-3e44-11e6-a4d2-df73057592b6","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:130","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            java.util.Map<E, ? super V>.remove(obj);\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[6],"tindex":"f636e641-3e44-11e6-a4d2-911ab5686ec9","method":{"position":"org.apache.commons.collections4.QueueUtils:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(queue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f636e642-3e44-11e6-a4d2-81b093e51eb0","method":{"position":"org.apache.commons.collections4.MapUtils:762","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key, final short defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return defaultValue;\n            } \n            return shortObject.shortValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[7],"tindex":"f636e643-3e44-11e6-a4d2-81f4ddf0dbe0","method":{"position":"org.apache.commons.collections4.CollectionUtils:1527","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(java.lang.Iterable<? extends O> a, java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (b == null)) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[8,9,10],"tindex":"f6370d54-3e44-11e6-a4d2-31b2b50fc33a","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:97","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[11,12,13,14,15,16,17,18],"tindex":"f6370d55-3e44-11e6-a4d2-832ae9bf2329","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                    if ((entry.getValue()) == null) {\n                        return true;\n                    } \n                }\n            } else {\n                for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                    if (isEqualValue(value, entry.getValue())) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[19,20,21,22,23,24,25,26,27,28],"tindex":"f6373466-3e44-11e6-a4d2-034fa82e8794","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1959","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            boolean[][dataElement.ordinal()] = node.boolean[][dataElement.ordinal()];\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"f6373467-3e44-11e6-a4d2-7fbacb13cf6c","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:72","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.FixedSizeMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[48,49],"tindex":"f6373468-3e44-11e6-a4d2-6919ddef0dd1","method":{"position":"org.apache.commons.collections4.ListUtils:352","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if (collection == null) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : collection) {\n                if (!(remove.contains(obj))) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"f6375b79-3e44-11e6-a4d2-4162333d0a3f","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:739","type":"CtMethodImpl","sourcecode":"protected V entryValue(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[],"tindex":"f6375b7a-3e44-11e6-a4d2-3379a10c7065","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:645","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            if (obj == (org.apache.commons.collections4.map.ListOrderedMap.EntrySetView.this)) {\n                return true;\n            } \n            return getEntrySet().equals(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"f6375b7b-3e44-11e6-a4d2-8713849244d9","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:352","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.util.Collection<V> getCollection(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((java.util.Collection<V>)(decorated().get(key)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,11,69,70,12,71,72,73,74,75,76,77,78,79,80,81,82,15,83,84,16,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99],"tindex":"f6375b7c-3e44-11e6-a4d2-9584b0358be2","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:946","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key != null) {\n                {\n                    return org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[100,101,102,103,104,105,106],"tindex":"f637828d-3e44-11e6-a4d2-1d0a015a4a10","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:65","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        {\n            if ((obj instanceof java.util.Map) == false) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj == (org.apache.commons.collections4.keyvalue.AbstractMapEntry.this)) {\n                        return true;\n                    } \n                    if ((obj instanceof java.util.Map.Entry) == false) {\n                        return false;\n                    } \n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n                    return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[107,108],"tindex":"f637828e-3e44-11e6-a4d2-db98de88799a","method":{"position":"org.apache.commons.collections4.MapUtils:1756","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> iterableMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return map instanceof org.apache.commons.collections4.IterableMap ? ((org.apache.commons.collections4.IterableMap<K, V>)(map)) : new org.apache.commons.collections4.map.AbstractMapDecorator<K, V>(map) {            };\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[109,110,111,112,113],"tindex":"f637a99f-3e44-11e6-a4d2-39bf5882ecc8","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[114,115],"tindex":"f637a9a0-3e44-11e6-a4d2-2d63d0ef6d83","method":{"position":"org.apache.commons.collections4.CollectionUtils:774","type":"CtMethodImpl","sourcecode":"public static <T>boolean filterInverse(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.filter(collection, (predicate == null ? null : org.apache.commons.collections4.PredicateUtils.notPredicate(predicate)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[116],"tindex":"f637a9a1-3e44-11e6-a4d2-dbca5db0fd1e","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:379","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[117],"tindex":"f637a9a2-3e44-11e6-a4d2-4f79f69fdda4","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[],"tindex":"f637a9a3-3e44-11e6-a4d2-ef6711b49f81","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:475","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key2 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key2"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[],"tindex":"f637d0b4-3e44-11e6-a4d2-5bfbe7bf8ed0","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:252","type":"CtMethodImpl","sourcecode":"private void buildScript(final int start1, final int end1, final int start2, final int end2, final org.apache.commons.collections4.sequence.EditScript<T> script) {\n    if ((start1 - start2) > (end1 - start2)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.sequence.SequencesComparator.Snake org.apache.commons.collections4.sequence.SequencesComparator.Snake = getMiddleSnake(start1, end1, start2, end2);\n            if (((middle == null) || (((middle.getStart()) == end1) && ((middle.getDiag()) == (end1 - end2)))) || (((middle.getEnd()) == start1) && ((middle.getDiag()) == (start1 - start2)))) {\n                int int = start1;\n                int int = start2;\n                while ((i < end1) || (j < end2)) {\n                    if (((i < end1) && (j < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(i), java.util.List<T>.get(j)))) {\n                        script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                        ++i;\n                        ++j;\n                    } else {\n                        if ((end1 - start1) > (end2 - start2)) {\n                            script.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(i)));\n                            ++i;\n                        } else {\n                            script.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(j)));\n                            ++j;\n                        }\n                    }\n                }\n            } else {\n                buildScript(start1, middle.getStart(), start2, ((middle.getStart()) - (middle.getDiag())), script);\n                for (int int = middle.getStart() ; i < (middle.getEnd()) ; ++i) {\n                    script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                }\n                buildScript(middle.getEnd(), end1, ((middle.getEnd()) - (middle.getDiag())), end2, script);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"start2","end2":"end1","end1":"start1","start2":"start2"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"f637d0b5-3e44-11e6-a4d2-eb321c862847","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:586","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<V>lookup(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:66","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173],"tindex":"f637f7c6-3e44-11e6-a4d2-f132818fbeb3","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:89","type":"CtMethodImpl","sourcecode":"protected void setCollection(final java.util.Collection<E> coll) {\n    if (coll == null) {\n        {\n            org.apache.commons.collections4.collection.AbstractCollectionDecorator.this.java.util.Collection<E> = coll;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[174,175,176,177],"tindex":"f637f7c7-3e44-11e6-a4d2-9b292da69997","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:93","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().remove(object, count);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[178,179,180],"tindex":"f637f7c8-3e44-11e6-a4d2-0704e8c2e5b6","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:577","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[181,182],"tindex":"f637f7c9-3e44-11e6-a4d2-8d8933cce305","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:71","type":"CtBinaryOperatorImpl","sourcecode":"(closures.size()) == 0"},"failures":[183],"tindex":"f6381eda-3e44-11e6-a4d2-330d085bf873","method":{"position":"org.apache.commons.collections4.ClosureUtils:218","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if ((closures.size()) == 0) {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"f6381edb-3e44-11e6-a4d2-292d7763ce9c","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"f6381edc-3e44-11e6-a4d2-21b0ad202ef4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:586","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<V>lookup(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:93","type":"CtBinaryOperatorImpl","sourcecode":"end < start"},"failures":[184],"tindex":"f6381edd-3e44-11e6-a4d2-7df3efd6f53b","method":{"position":"org.apache.commons.collections4.IteratorUtils:431","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start, final int end) {\n    if (end < end) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start , end);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end","end":"end"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:74","type":"CtBinaryOperatorImpl","sourcecode":"(transformers.size()) == 0"},"failures":[185],"tindex":"f6381ede-3e44-11e6-a4d2-2b8b1c2036d8","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:70","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if ((transformers.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n            } \n            if ((transformers.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<T, T>[] org.apache.commons.collections4.Transformer<T, T>[] = transformers.toArray(new org.apache.commons.collections4.Transformer[transformers.size()]);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , cmds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[186,114,115],"tindex":"f63845ef-3e44-11e6-a4d2-dd5ccc44c43e","method":{"position":"org.apache.commons.collections4.PredicateUtils:451","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NotPredicate.notPredicate(predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[187,188],"tindex":"f63845f0-3e44-11e6-a4d2-e79f8dea522f","method":{"position":"org.apache.commons.collections4.list.TransformedList:137","type":"CtMethodImpl","sourcecode":"public void add(final int index, E object) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            object = transform(object);\n            getList().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"f63845f1-3e44-11e6-a4d2-1d92068f1bde","method":{"position":"org.apache.commons.collections4.MapUtils:1262","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableMap.unmodifiableMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"f63845f2-3e44-11e6-a4d2-2d55fb26fd73","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"f63845f3-3e44-11e6-a4d2-6972b4b3682c","method":{"position":"org.apache.commons.collections4.MapUtils:1506","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> synchronizedSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedSortedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"f63845f4-3e44-11e6-a4d2-97abd9757279","method":{"position":"org.apache.commons.collections4.IteratorUtils:649","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> objectGraphIterator(final E root, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectGraphIterator<E>(root , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[189,190,191],"tindex":"f6386d05-3e44-11e6-a4d2-2f186b458ddc","method":{"position":"org.apache.commons.collections4.list.TransformedList:131","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        {\n            return getList().remove(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[192,193,194,195,196],"tindex":"f6386d06-3e44-11e6-a4d2-8d250c26bd49","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:246","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            for (int int = 0 ; i < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; i++) {\n                synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][i]) {\n                    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][i];\n                    while (n != null) {\n                        if (((n.V) == value) || (((n.V) != null) && (n.V.equals(value)))) {\n                            return true;\n                        } \n                        n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[197],"tindex":"f6386d07-3e44-11e6-a4d2-11cd255dbedc","method":{"position":"org.apache.commons.collections4.ClosureUtils:129","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> whileClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"f6386d08-3e44-11e6-a4d2-63aa1ccdb64c","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:946","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key != null) {\n                {\n                    return org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[198],"tindex":"f6386d09-3e44-11e6-a4d2-d55edd312dc4","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f638941a-3e44-11e6-a4d2-792ed1cee357","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void putAll(final java.util.Map<? extends K, ?> map) {\n    if (map != null) {\n        {\n            if (map instanceof org.apache.commons.collections4.MultiMap) {\n                for (final java.util.Map.Entry<? extends K, java.lang.Object> java.util.Map.Entry<? extends K, java.lang.Object> : ((org.apache.commons.collections4.MultiMap<? extends K, V>)(map)).entrySet()) {\n                    putAll(entry.getKey(), ((java.util.Collection<V>)(entry.getValue())));\n                }\n            } else {\n                for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"f638941b-3e44-11e6-a4d2-0f129cbff010","method":{"position":"org.apache.commons.collections4.CollectionUtils:1212","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.lang.Iterable<T> iterable, final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            if (iterable instanceof java.util.List<?>) {\n                return ((java.util.List<T>)(iterable)).get(index);\n            } \n            return org.apache.commons.collections4.CollectionUtils.get(iterable.iterator(), index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,8,228,229,230,231,232,233,234,9,10,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257],"tindex":"f638941c-3e44-11e6-a4d2-996b1dbf13e3","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:79","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal K castKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return ((K)(key));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[76,258,259,260],"tindex":"f638941d-3e44-11e6-a4d2-0fb6188f04cb","method":{"position":"org.apache.commons.collections4.map.Flat3Map:244","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(value);\n            } \n            if (value == null) {\n                switch (int) {\n                    case 3 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                switch (int) {\n                    case 3 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 2 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 1 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f638bb2e-3e44-11e6-a4d2-493f6f849630","method":{"position":"org.apache.commons.collections4.MapUtils:695","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return 0.0;\n            } \n            return doubleObject.doubleValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[261,262,263,264],"tindex":"f638bb2f-3e44-11e6-a4d2-6b889f6042e7","method":{"position":"org.apache.commons.collections4.map.CompositeMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsValue(value)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[],"tindex":"f638bb30-3e44-11e6-a4d2-d9a498fa2a60","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:65","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        {\n            if ((obj instanceof java.util.Map) == false) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj == (org.apache.commons.collections4.keyvalue.AbstractMapEntry.this)) {\n                        return true;\n                    } \n                    if ((obj instanceof java.util.Map.Entry) == false) {\n                        return false;\n                    } \n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n                    return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"f638bb31-3e44-11e6-a4d2-b9ccec98aca4","method":{"position":"org.apache.commons.collections4.set.CompositeSet:282","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f638e242-3e44-11e6-a4d2-4325473712e1","method":{"position":"org.apache.commons.collections4.MapUtils:782","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key, final int defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return defaultValue;\n            } \n            return integerObject.intValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[265,266,267,268,269],"tindex":"f638e243-3e44-11e6-a4d2-3180eb0c8b7b","method":{"position":"org.apache.commons.collections4.MapUtils:915","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void verbosePrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (label != null) {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"label"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"f638e244-3e44-11e6-a4d2-c3e1f4129e8b","method":{"position":"org.apache.commons.collections4.map.SingletonMap:189","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (isEqualKey(key)) {\n                return V;\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[270],"tindex":"f638e245-3e44-11e6-a4d2-85743b3a3cb2","method":{"position":"org.apache.commons.collections4.PredicateUtils:256","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate1 == null)) {\n        {\n            return org.apache.commons.collections4.functors.AndPredicate.<T>andPredicate(predicate1, predicate2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],"tindex":"f638e246-3e44-11e6-a4d2-e1ee95cf14e2","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:568","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.KeySetView.this.org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object>.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[295],"tindex":"f6390957-3e44-11e6-a4d2-5f34403a474e","method":{"position":"org.apache.commons.collections4.CollectionUtils:1120","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Iterator<? extends C> iterator) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            while (iterator.hasNext()) {\n                changed |= collection.add(iterator.next());\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[296],"tindex":"f6390958-3e44-11e6-a4d2-510cc158f81b","method":{"position":"org.apache.commons.collections4.CollectionUtils:1154","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final C[] elements) {\n    if (collection instanceof java.util.List<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final C C : elements) {\n                changed |= collection.add(element);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[228],"tindex":"f6390959-3e44-11e6-a4d2-29067c9d0108","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:101","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[235],"tindex":"f639095a-3e44-11e6-a4d2-21e406e16b1b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1720","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[297],"tindex":"f639095b-3e44-11e6-a4d2-e1c1035b3482","method":{"position":"org.apache.commons.collections4.map.LazyMap:96","type":"CtMethodImpl","sourcecode":"public static <V, K>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[298,299],"tindex":"f639306c-3e44-11e6-a4d2-2dcdd1ec27a3","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[300,301],"tindex":"f639306d-3e44-11e6-a4d2-d37b92303276","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:87","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count > 3) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (count == 1) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    synchronized(java.lang.Object) {\n                        return getBag().add(object, count);\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[302],"tindex":"f639306e-3e44-11e6-a4d2-81c87c7a891c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            if ((node != null) && (node.getKey().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtBinaryOperatorImpl","sourcecode":"i < 0"},"failures":[303,304,305,306,307,308,309,310,311,312,313,314,315,316,190,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334],"tindex":"f639306f-3e44-11e6-a4d2-b19a3b273d19","method":{"position":"org.apache.commons.collections4.list.TransformedList:151","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i < 0) {\n        {\n            return new TransformedListIterator(getList().listIterator(i));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[335,21],"tindex":"f6393070-3e44-11e6-a4d2-77b06bdc3188","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1517","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            return (doRemoveValue(o)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:908","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"f6395781-3e44-11e6-a4d2-c7ed35e550d7","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:71","type":"CtMethodImpl","sourcecode":"static boolean isNullBitKey(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getLeft(dataElement)) == node"},"failures":[336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,335,302,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,19,404,405,406,20,407,408,409,410,411,412,413,414,415,21,416,417,22,23,418,419,24,25,26,27,28],"tindex":"f6395782-3e44-11e6-a4d2-617471e6b221","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1866","type":"CtMethodImpl","sourcecode":"private void setLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"f6395783-3e44-11e6-a4d2-b101189f6e46","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            return java.util.Map<E, ? super V>.keySet().equals(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"f6395784-3e44-11e6-a4d2-9de2290cc946","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return java.util.Set<E>.containsAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f6395785-3e44-11e6-a4d2-8120f3ee3586","method":{"position":"org.apache.commons.collections4.MapUtils:297","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Float) {\n                return ((java.lang.Float)(answer));\n            } \n            return java.lang.Float.valueOf(answer.floatValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtBinaryOperatorImpl","sourcecode":"((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))"},"failures":[420],"tindex":"f6397e96-3e44-11e6-a4d2-e72263c15748","method":{"position":"org.apache.commons.collections4.ListUtils:244","type":"CtMethodImpl","sourcecode":"public static boolean isEqualList(final java.util.Collection<?> list1, final java.util.Collection<?> list2) {\n    if (((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))) {\n        {\n            if (list1 == list2) {\n                return true;\n            } \n            if (((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))) {\n                return false;\n            } \n            final java.util.Iterator<?> java.util.Iterator<?> = list1.iterator();\n            final java.util.Iterator<?> java.util.Iterator<?> = list2.iterator();\n            java.lang.Object java.lang.Object = null;\n            java.lang.Object java.lang.Object = null;\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                obj1 = it1.next();\n                obj2 = it2.next();\n                if (!(obj1 == null ? obj2 == null : obj1.equals(obj2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[421,422,423],"tindex":"f6397e97-3e44-11e6-a4d2-6b0378342ea8","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"f6397e98-3e44-11e6-a4d2-77a50516a6a8","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == (org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"f6397e99-3e44-11e6-a4d2-a5b6861ad13e","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:87","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count > 3) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (count == 1) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    synchronized(java.lang.Object) {\n                        return getBag().add(object, count);\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:977","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"f6397e9a-3e44-11e6-a4d2-a1b05c32b96f","method":{"position":"org.apache.commons.collections4.IteratorUtils:888","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Enumeration<E> asEnumeration(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorEnumeration<E>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[],"tindex":"f639a5ab-3e44-11e6-a4d2-792d1cd39530","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:413","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        {\n            if ((obj instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n                return false;\n            } \n            return (((org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger)(obj)).int) == (int);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtBinaryOperatorImpl","sourcecode":"to != null"},"failures":[],"tindex":"f639a5ac-3e44-11e6-a4d2-9389a437a500","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:716","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> from, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> to, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (from != null) {\n        {\n            if (to != null) {\n                if (from == null) {\n                    to.setBlack(dataElement);\n                } else {\n                    to.copyColor(from, dataElement);\n                }\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"to":"from"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[424,424,425,425,426],"tindex":"f639a5ad-3e44-11e6-a4d2-f35322342219","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:69","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Predicate<T> coerce(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return ((org.apache.commons.collections4.Predicate<T>)(predicate));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[427],"tindex":"f639a5ae-3e44-11e6-a4d2-ef8a31e4485a","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f639a5af-3e44-11e6-a4d2-4169ca18b0ef","method":{"position":"org.apache.commons.collections4.MapUtils:623","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return 0;\n            } \n            return shortObject.shortValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[303,304,305,306,308,309,310,428,311,312,313,314,315,429,316,190,317,318,320,321,322,323,324,325,326,328,329,330,331,333],"tindex":"f639a5b0-3e44-11e6-a4d2-49337f005f22","method":{"position":"org.apache.commons.collections4.list.TransformedList:119","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                {\n                    return getList().get(index);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[430,431,432],"tindex":"f639ccc1-3e44-11e6-a4d2-c39943203d45","method":{"position":"org.apache.commons.collections4.map.LRUMap:175","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            moveToMRU(entry);\n            return entry.getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[353,376,377,385,335,302,397,19,413,414,415,23,24,25,26,27,28],"tindex":"f639ccc2-3e44-11e6-a4d2-7327b1bd4a25","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:163","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            return (lookupKey(key)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[433],"tindex":"f639ccc3-3e44-11e6-a4d2-8d4043f1f7ff","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,120,453,454,455,456,121,457,458],"tindex":"f639ccc4-3e44-11e6-a4d2-3f8075f9cff2","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> unmodifiableSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                return set;\n            } \n            return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.LazyList:92","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[459],"tindex":"f639ccc5-3e44-11e6-a4d2-cd67848ceae8","method":{"position":"org.apache.commons.collections4.list.LazyList:78","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.LazyList<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (factory == null) {\n        {\n            return new org.apache.commons.collections4.list.LazyList<E>(list , factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,124,479,480,481,482,483,484,125,485,486],"tindex":"f639ccc6-3e44-11e6-a4d2-6b6f41e6ffbf","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:100","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[487],"tindex":"f639f3d7-3e44-11e6-a4d2-7ba577d76c89","method":{"position":"org.apache.commons.collections4.ListUtils:281","type":"CtMethodImpl","sourcecode":"public static int hashCodeForList(final java.util.Collection<?> list) {\n    if (list == null) {\n        {\n            if (list == null) {\n                return 0;\n            } \n            int int = 1;\n            final java.util.Iterator<?> java.util.Iterator<?> = list.iterator();\n            while (it.hasNext()) {\n                final java.lang.Object java.lang.Object = it.next();\n                hashCode = (31 * hashCode) + (obj == null ? 0 : obj.hashCode());\n            }\n            return hashCode;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"f639f3d8-3e44-11e6-a4d2-4511b1c6f26d","method":{"position":"org.apache.commons.collections4.list.TransformedList:119","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                {\n                    return getList().get(index);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"f639f3d9-3e44-11e6-a4d2-955d3cd9c605","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[488],"tindex":"f639f3da-3e44-11e6-a4d2-7f9d15df8bbe","method":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, java.lang.Boolean> predicateTransformer(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.PredicateTransformer<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[489],"tindex":"f639f3db-3e44-11e6-a4d2-8ba9e63bf67d","method":{"position":"org.apache.commons.collections4.functors.MapTransformer:49","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            return new org.apache.commons.collections4.functors.MapTransformer<I, O>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[490],"tindex":"f639f3dc-3e44-11e6-a4d2-a9d53ee75790","method":{"position":"org.apache.commons.collections4.PredicateUtils:517","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[491],"tindex":"f639f3dd-3e44-11e6-a4d2-55db8bd455dc","method":{"position":"org.apache.commons.collections4.CollectionUtils:1086","type":"CtMethodImpl","sourcecode":"public static <T>boolean addIgnoreNull(final java.util.Collection<T> collection, final T object) {\n    if (collection == null) {\n        {\n            if (collection == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            return (object != null) && (collection.add(object));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538],"tindex":"f63a1aee-3e44-11e6-a4d2-7d18a936976e","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                return null;\n            } \n            return super.getEntry(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[539],"tindex":"f63a1aef-3e44-11e6-a4d2-95950c2187aa","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:143","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"f63a1af0-3e44-11e6-a4d2-691dafe4e9c6","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:105","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[540,541,542,543,544,545,546,547,548,549,550,551,64,552,553,554,555,556,557,558,559,560,561,562,563,564,498,503,507,508,565,566,510,511,512,513,514,515,567,568,569,570,571,572,573,574,575,576,577,72,578,579,13,14,580,581,582,431,432,583,584,585,586,79,587,588,259,260,589,590,591,592,593,594,595,596,597,598,86,599,600,17,18,601,602,603,604,605,606,607,608,609,526,530,531,610,611,533,534,535,536,537,538,612,613,614,98,615,616,617,618,619,620,621,622,623,624,180,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643],"tindex":"f63a1af1-3e44-11e6-a4d2-6d4d8a089ac8","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:582","type":"CtMethodImpl","sourcecode":"protected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (entry == null) {\n        {\n            if (previous == null) {\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } else {\n                previous.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[644],"tindex":"f63a4202-3e44-11e6-a4d2-7bc287e3563c","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398293/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}