{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":203,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":229,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":214,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":39,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":142,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":92,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":125,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":25,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":194,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":48,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":119,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":230,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":255,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":20,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":21,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":210,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":246,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":5,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":56,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":150,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":52,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":129,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking2":162,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":78,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":88,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":176,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":86,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":216,"org.apache.commons.collections4.list.TransformedListTest.testCollectionSize":170,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":75,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":87,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":149,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":173,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":27,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":224,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":245,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":66,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":145,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking":143,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":72,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":47,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":240,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":77,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":51,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":126,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":122,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":68,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":83,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":151,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":163,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":174,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":110,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":231,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":3,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":28,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectEqualsSelf":58,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":8,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":97,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEmptyIterator":55,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":179,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":197,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":134,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":79,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":98,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":115,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":42,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":146,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":152,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":249,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":169,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":95,"org.apache.commons.collections4.list.TransformedListTest.testObjectEqualsSelf":184,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":105,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":6,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":180,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":227,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testGetSetComparator":53,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":112,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":19,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":14,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":102,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":128,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":141,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":69,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":193,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":183,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":241,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListCompatibility":144,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":211,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalEmptyCollectionExists":61,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":195,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":107,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":220,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":207,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":93,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":160,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":217,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveChangesMap":90,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":242,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":192,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":252,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":131,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":196,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":96,"org.apache.commons.collections4.list.TransformedListTest.testCanonicalEmptyCollectionExists":187,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToString":171,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsContract":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":34,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSerializeDeserializeThenCompare":65,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":251,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":1,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListSerialization":166,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":233,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":116,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":218,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking":148,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":204,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":36,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":243,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":41,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":137,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsSelfHashCode":64,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":177,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":132,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":219,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":238,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":239,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":253,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":237,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":213,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":29,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":111,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":74,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":100,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":15,"org.apache.commons.collections4.list.TransformedListTest.testEqualsNull":186,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":208,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEqualsNull":60,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":181,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":45,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":84,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":182,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRemoveChangesMap":120,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":32,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":38,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":46,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":16,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":94,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":17,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":235,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":234,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking":154,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":30,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":130,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":167,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":236,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":247,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":191,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":133,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":147,"org.apache.commons.collections4.list.TransformedListTest.testCanonicalFullCollectionExists":185,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":228,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":121,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":118,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":123,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":212,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":76,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":205,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":124,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":225,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":73,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":43,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsSelfHashCode":190,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":91,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":67,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":164,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":104,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":31,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":35,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":222,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":136,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":221,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":165,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":140,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":209,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":23,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":89,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":0,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":248,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":2,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalFullCollectionExists":59,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":80,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":108,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking2":161,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":135,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":101,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":117,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":44,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":206,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicate":26,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsContract":189,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":226,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":37,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":113,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":81,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking2":155,"org.apache.commons.collections4.list.TransformedListTest.testFullListSerialization":156,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSimpleSerialization":62,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":50,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":175,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking2":159,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":70,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":106,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":153,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":172,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":201,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":114,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":168,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":109,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":250,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":18,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":139,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":254,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":232,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":103,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":24,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":85,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":40,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":33,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":11,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesRemoveChangesMap":99,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":202,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":71,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":22,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":244,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":57,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":127,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":158,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":12,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":13,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":215,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":4,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":198,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":199,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":200,"org.apache.commons.collections4.list.TransformedListTest.testSimpleSerialization":188,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":223,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":178,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":54,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking":157,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":138,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":82},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:292","type":"CtBinaryOperatorImpl","sourcecode":"cur == null"},"failures":[],"tindex":"a4f7628b-2eab-11e6-b111-05612a624bba","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:271","type":"CtMethodImpl","sourcecode":"protected void registerCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                if ((ref.get()) == null) {\n                    it.remove();\n                } \n            }\n            java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.add(new java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>(cursor));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cur":"cursor"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"a4f84cec-2eab-11e6-b111-29e0c81a1793","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:404","type":"CtMethodImpl","sourcecode":"public java.util.Iterator<V> iterator(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(containsKey(key))) {\n                return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n            } \n            return new ValuesIterator(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[0,1,2,3,4,4,5,6,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"a4f84ced-2eab-11e6-b111-4d4eff26e1ce","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:78","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Predicate<?>... predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n            } \n            for (int int = 0 ; i < (predicates.int) ; i++) {\n                if ((predicates[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[26],"tindex":"a4f873fe-2eab-11e6-b111-4bc92cc43b70","method":{"position":"org.apache.commons.collections4.PredicateUtils:502","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsFalsePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NullIsFalsePredicate.nullIsFalsePredicate(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"a4f89b0f-2eab-11e6-b111-f13c1e785a26","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:231","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[27,28,29,30,31,32],"tindex":"a4f8c220-2eab-11e6-b111-cb2c97bbc5d9","method":{"position":"org.apache.commons.collections4.map.LazyMap:160","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key instanceof java.util.Collection<?>) {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final K K = ((K)(key));\n                final V V = org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(castKey);\n                java.util.Map<K, V>.put(castKey, value);\n                return value;\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"a4f8c221-2eab-11e6-b111-333f8230499d","method":{"position":"org.apache.commons.collections4.MapUtils:742","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key, final byte defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return defaultValue;\n            } \n            return byteObject.byteValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"a4f8e932-2eab-11e6-b111-c16285417222","method":{"position":"org.apache.commons.collections4.MapUtils:659","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return 0L;\n            } \n            return longObject.longValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[33],"tindex":"a4f91043-2eab-11e6-b111-6ba9adf6fc25","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:76","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((preds.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(preds[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1112","type":"CtBinaryOperatorImpl","sourcecode":"x == yFormerParent"},"failures":[34,35,36,37,38,39,40,41,42,43],"tindex":"a4f93754-2eab-11e6-b111-0bff2c2be69c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1908","type":"CtMethodImpl","sourcecode":"private void swapColors(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n            node.boolean[][dataElement.ordinal()] ^= boolean[][dataElement.ordinal()];\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"x":"node","yFormerParent":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl","sourcecode":"transform == null"},"failures":[],"tindex":"a4f93755-2eab-11e6-b111-2164d22b8309","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:203","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <I, O>org.apache.commons.collections4.Transformer<I, O> coerce(final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.Transformer<I, O>)(transformer));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"tindex":"a4f95e66-2eab-11e6-b111-e3beff090b98","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:224","type":"CtMethodImpl","sourcecode":"public void setComparator(final java.util.Comparator<? super E> comp) {\n    if (comp == null) {\n        {\n            checkNotStarted();\n            java.util.Comparator<? super E> = comp;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comp"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138],"tindex":"a4f98577-2eab-11e6-b111-a1305c11cdef","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:85","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value instanceof java.util.Iterator<?>) {\n        {\n            return decorated().containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:313","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"a4f98578-2eab-11e6-b111-cbd7f8e7894a","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:350","type":"CtMethodImpl","sourcecode":"protected void broadcastNodeInserted(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        {\n            final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator();\n            while (it.hasNext()) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = ref.get();\n                if (cursor == null) {\n                    it.remove();\n                } else {\n                    cursor.nodeInserted(node);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtBinaryOperatorImpl","sourcecode":"(values) == null"},"failures":[139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190],"tindex":"a4f9d399-2eab-11e6-b111-dba9a4f440cc","method":{"position":"org.apache.commons.collections4.list.TransformedList:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformingList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list == null) {\n        {\n            return new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtInvocationImpl","sourcecode":"c.isEmpty()"},"failures":[],"tindex":"a4f9faaa-2eab-11e6-b111-2d43aa7b7120","method":{"position":"org.apache.commons.collections4.list.TreeList:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> c) {\n    if (c.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (c.isEmpty()) {\n                return false;\n            } \n            int += c.size();\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(c);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = (org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null ? cTree : org.apache.commons.collections4.list.TreeList.AVLNode<E>.addAll(cTree, int);\n            int += c.size();\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtBinaryOperatorImpl","sourcecode":"index < ((size) / 2)"},"failures":[191,192,193],"tindex":"a4fa21bb-2eab-11e6-b111-5f3d14e28196","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:87","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count < (count / 2)) {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().add(object, count);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"count","index":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:408","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"a4fa48cc-2eab-11e6-b111-cfec24e25810","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1729","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[34,35,36,37,38,39,40,41,42,43],"tindex":"a4fa48cd-2eab-11e6-b111-2345c65498c8","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:755","type":"CtMethodImpl","sourcecode":"private static void makeRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            if (node != null) {\n                node.setRed(dataElement);\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[1,194],"tindex":"a4fa6fde-2eab-11e6-b111-536fc38011e2","method":{"position":"org.apache.commons.collections4.ClosureUtils:279","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures) {\n    if (closures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtBinaryOperatorImpl","sourcecode":"newCapacity <= oldCapacity"},"failures":[],"tindex":"a4fae50f-2eab-11e6-b111-092da6aec82c","method":{"position":"org.apache.commons.collections4.list.PredicatedList:128","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i <= i) {\n        {\n            return new PredicatedListIterator(decorated().listIterator(i));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"oldCapacity":"i","newCapacity":"i"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[195,196,197,198,199],"tindex":"a4fb0c20-2eab-11e6-b111-599f471bf15d","method":{"position":"org.apache.commons.collections4.MapUtils:938","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void debugPrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (label == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"label"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"a4fb3331-2eab-11e6-b111-3b85393bfec3","method":{"position":"org.apache.commons.collections4.ListUtils:492","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> fixedSizeList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            return org.apache.commons.collections4.list.FixedSizeList.fixedSizeList(list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[200],"tindex":"a4fb3332-2eab-11e6-b111-6b2047ef603f","method":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformerPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformerPredicate<T>(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:236","type":"CtBinaryOperatorImpl","sourcecode":"(end) >= (maxElements)"},"failures":[],"tindex":"a4fb3333-2eab-11e6-b111-818ea4855025","method":{"position":"org.apache.commons.collections4.IteratorUtils:412","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end) {\n    if (start >= start) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start , end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"maxElements":"start","end":"start"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1175","type":"CtBinaryOperatorImpl","sourcecode":"(y.getRight(dataElement)) != null"},"failures":[201,202,203,34,35,36,37,38,39,40,41,42,43],"tindex":"a4fb5a44-2eab-11e6-b111-cd569b93b5f9","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1015","type":"CtMethodImpl","sourcecode":"private void doRedBlackDeleteFixup(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> replacementNode, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((replacementNode.getRight(dataElement)) != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = replacementNode;\n            while ((currentNode != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()])) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(currentNode, dataElement))) {\n                if (currentNode.isLeftChild(dataElement)) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = getRightChild(getParent(currentNode, dataElement), dataElement);\n                    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(siblingNode, dataElement)) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(siblingNode, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getParent(currentNode, dataElement), dataElement);\n                        rotateLeft(getParent(currentNode, dataElement), dataElement);\n                        siblingNode = getRightChild(getParent(currentNode, dataElement), dataElement);\n                    } \n                    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getLeftChild(siblingNode, dataElement), dataElement)) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getRightChild(siblingNode, dataElement), dataElement))) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n                        currentNode = getParent(currentNode, dataElement);\n                    } else {\n                        if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getRightChild(siblingNode, dataElement), dataElement)) {\n                            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getLeftChild(siblingNode, dataElement), dataElement);\n                            org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n                            rotateRight(siblingNode, dataElement);\n                            siblingNode = getRightChild(getParent(currentNode, dataElement), dataElement);\n                        } \n                        copyColor(getParent(currentNode, dataElement), siblingNode, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getRightChild(siblingNode, dataElement), dataElement);\n                        rotateLeft(getParent(currentNode, dataElement), dataElement);\n                        currentNode = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()];\n                    }\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = getLeftChild(getParent(currentNode, dataElement), dataElement);\n                    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(siblingNode, dataElement)) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(siblingNode, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getParent(currentNode, dataElement), dataElement);\n                        rotateRight(getParent(currentNode, dataElement), dataElement);\n                        siblingNode = getLeftChild(getParent(currentNode, dataElement), dataElement);\n                    } \n                    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getRightChild(siblingNode, dataElement), dataElement)) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getLeftChild(siblingNode, dataElement), dataElement))) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n                        currentNode = getParent(currentNode, dataElement);\n                    } else {\n                        if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getLeftChild(siblingNode, dataElement), dataElement)) {\n                            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getRightChild(siblingNode, dataElement), dataElement);\n                            org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n                            rotateLeft(siblingNode, dataElement);\n                            siblingNode = getLeftChild(getParent(currentNode, dataElement), dataElement);\n                        } \n                        copyColor(getParent(currentNode, dataElement), siblingNode, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getLeftChild(siblingNode, dataElement), dataElement);\n                        rotateRight(getParent(currentNode, dataElement), dataElement);\n                        currentNode = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()];\n                    }\n                }\n            }\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(currentNode, dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"y":"replacementNode","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:239","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Short"},"failures":[],"tindex":"a4fb8155-2eab-11e6-b111-079da44ae1fe","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:413","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Short) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n                return false;\n            } \n            return (((org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger)(obj)).int) == (int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[26],"tindex":"a4fba866-2eab-11e6-b111-8f4167ef2d47","method":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsFalsePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsFalsePredicate<T>(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[204,205,206,207],"tindex":"a4fba867-2eab-11e6-b111-b3e479fc3155","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:200","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return n.V;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[208],"tindex":"a4fbcf78-2eab-11e6-b111-ef219fb0ac0e","method":{"position":"org.apache.commons.collections4.CollectionUtils:1717","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> synchronizedCollection(final java.util.Collection<C> collection) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            return org.apache.commons.collections4.collection.SynchronizedCollection.synchronizedCollection(collection);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:147","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[209,210],"tindex":"a4fbcf79-2eab-11e6-b111-ed8c9ddf508c","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:423","type":"CtMethodImpl","sourcecode":"public V setValue(final int index, final V value) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final K K = java.util.List<K>.get(index);\n            return put(key, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:317","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251],"tindex":"a4fbf68a-2eab-11e6-b111-f7608a9f6a7d","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:708","type":"CtMethodImpl","sourcecode":"protected <T>java.lang.Object toReference(final org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength type, final T referent, final int hash) {\n    if (hash > 0) {\n        {\n            if (type == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n                return referent;\n            } \n            if (type == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n                return new org.apache.commons.collections4.map.AbstractReferenceMap.SoftRef<T>(hash , referent , org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.java.lang.ref.ReferenceQueue<java.lang.Object>);\n            } \n            if (type == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n                return new org.apache.commons.collections4.map.AbstractReferenceMap.WeakRef<T>(hash , referent , org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.java.lang.ref.ReferenceQueue<java.lang.Object>);\n            } \n            throw new java.lang.Error();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"hash"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:379","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[],"tindex":"a4fc1d9b-2eab-11e6-b111-45dbf9d2353f","method":{"position":"org.apache.commons.collections4.MapUtils:364","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<K, V> map, final K key, final V defaultValue) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final V V = map.get(key);\n                if (answer != null) {\n                    return answer;\n                } \n            } \n            return defaultValue;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtBinaryOperatorImpl","sourcecode":"index < ((size) / 2)"},"failures":[],"tindex":"a4fc1d9c-2eab-11e6-b111-9196cdfa1423","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:77","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < (index / 2)) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl","sourcecode":"timeUnit == null"},"failures":[],"tindex":"a4fc1d9d-2eab-11e6-b111-5390b4dad2b3","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:629","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key3 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"key3"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[252,253,254,255],"tindex":"a4fc44ae-2eab-11e6-b111-776eb02c9124","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:210","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E value) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n            addNodeBefore(node, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1086","type":"CtBinaryOperatorImpl","sourcecode":"it != null"},"failures":[],"tindex":"a4fc6bbf-2eab-11e6-b111-b908af89fdcf","method":{"position":"org.apache.commons.collections4.IteratorUtils:955","type":"CtMethodImpl","sourcecode":"public static java.lang.Object[] toArray(final java.util.Iterator<?> iterator) {\n    if (iterator != null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            final java.util.List<?> java.util.List<?> = org.apache.commons.collections4.IteratorUtils.toList(iterator, 100);\n            return list.toArray();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"it":"iterator"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":37,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}