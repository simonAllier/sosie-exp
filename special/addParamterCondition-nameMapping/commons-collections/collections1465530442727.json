{"failureDictionary":{"org.apache.commons.collections4.IteratorUtilsTest.testToList":3,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":0,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":1,"org.apache.commons.collections4.IteratorUtilsTest.testToArray":4,"org.apache.commons.collections4.IteratorUtilsTest.testToArray2":5,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":2},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtBinaryOperatorImpl","sourcecode":"nCopies <= 0"},"failures":[0,1,2,3,4,5],"tindex":"09ff2a5a-2ebe-11e6-aea3-5f725070522b","method":{"position":"org.apache.commons.collections4.IteratorUtils:1017","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator, final int estimatedSize) {\n    if (estimatedSize <= 0) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (estimatedSize < 1) {\n                throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(estimatedSize);\n            while (iterator.hasNext()) {\n                list.add(iterator.next());\n            }\n            return list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"estimatedSize"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:128","type":"CtBinaryOperatorImpl","sourcecode":"maxSize < 1"},"failures":[],"tindex":"0a0089eb-2ebe-11e6-aea3-1b272ec03433","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1043","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this, index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"maxSize":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1142","type":"CtBinaryOperatorImpl","sourcecode":"(bitIndex >= 0) && (bitIndex < lengthInBits)"},"failures":[],"tindex":"0a01744c-2ebe-11e6-aea3-81513cec2b64","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:77","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if ((index >= 0) && (bitIndex < index)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"index","bitIndex":"index"},"type":"special","returnInThen":false,"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":3,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}