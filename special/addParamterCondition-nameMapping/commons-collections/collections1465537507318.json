{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":1135,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":867,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":321,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":563,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":628,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":806,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":1168,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":988,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testRemove":944,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":9,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":179,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":173,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":925,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":1140,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":745,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testEqualsNull":475,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":63,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":184,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":673,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsContract":488,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":652,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":747,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":1098,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListCompatibility":287,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":593,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":812,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":263,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":355,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":850,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":1108,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":21,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionClear":237,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":406,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":658,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":868,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":1032,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":1095,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":882,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetClearChangesMap":1014,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testEqualsNull":282,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":1116,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":219,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":608,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":3,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSimpleSerialization":79,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":784,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":418,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":1089,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectEqualsSelf":448,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSimpleSerialization":1080,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":1087,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":1002,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":1046,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":124,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":955,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":599,"org.apache.commons.collections4.CollectionUtilsTest.select":86,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":1167,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":632,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":647,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":222,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":361,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":682,"org.apache.commons.collections4.set.ListOrderedSet2Test.testObjectEqualsSelf":478,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":163,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":584,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":1183,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":567,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":743,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":33,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":653,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveAll":248,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":182,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":44,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":381,"org.apache.commons.collections4.list.GrowthListTest.testObjectHashCodeEqualsContract":395,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":353,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":750,"org.apache.commons.collections4.list.UnmodifiableListTest.testEqualsNull":413,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":1150,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":515,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMakeMap":1060,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":854,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":928,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":822,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":724,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":823,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":1141,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectEqualsSelf":284,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":824,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":961,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":442,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":1102,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListCompatibility":342,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":805,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullIterator":946,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":187,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":559,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":692,"org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf":978,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":1136,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":172,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":348,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":933,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":24,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":1106,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":416,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":657,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":1005,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":569,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":510,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":313,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":104,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":31,"org.apache.commons.collections4.map.SingletonMapTest.testEmptyMapCompatibility":968,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":239,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":1148,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":225,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":88,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":719,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":260,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":433,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":70,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":607,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":777,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":1019,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":566,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":762,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove3":1021,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":1020,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":910,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":911,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":912,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":432,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":524,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":17,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":787,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":369,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":889,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":383,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":161,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":322,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":1075,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":782,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":783,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEmptyMapCompatibility":1063,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":781,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":600,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":757,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":902,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":526,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":425,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":1122,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRetainAll":251,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":704,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":1162,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCanonicalEmptyCollectionExists":126,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":885,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":603,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":562,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":583,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":521,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":726,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":167,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":865,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSerializeDeserializeThenCompare":954,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":855,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":1182,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":293,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToString":200,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":519,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":876,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":799,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectEqualsSelf":895,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":1165,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRetainAll":518,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":659,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectHashCodeEqualsContract":286,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListCompatibility":294,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalFullCollectionExists":1077,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":1067,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":235,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":452,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":675,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":909,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":930,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":629,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":300,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectEqualsSelf":435,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":1071,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":247,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":541,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":1149,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":869,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":186,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":870,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":1001,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":871,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectEqualsSelf":497,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectEqualsSelf":419,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":1172,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":613,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":210,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":580,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":531,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":509,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastEntrySet":993,"org.apache.commons.collections4.map.ListOrderedMapTest.testEqualsNull":1035,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEqualsNull":501,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":656,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":610,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx1":145,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":340,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":848,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalEmptyCollectionExists":976,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":51,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":678,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectEqualsSelf":281,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":193,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":551,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":792,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":223,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEqualsNull":949,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testBagEqualsSelf":415,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":857,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testComparatorCompatibility":893,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":1083,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":195,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":314,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":1101,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorSet":943,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":680,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":1091,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsContract":367,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":522,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":832,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":564,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":966,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":700,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":231,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":332,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":229,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":1053,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":752,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":527,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":373,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":0,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectHashCodeEqualsContract":499,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsContract":457,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":1062,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":43,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":65,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":1117,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":458,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":60,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":92,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":244,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":776,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":685,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsContract":898,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":1138,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":622,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":979,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":288,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":1134,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":20,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testEqualsNull":77,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":298,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":663,"org.apache.commons.collections4.list.GrowthListTest.testEqualsNull":394,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRemoveAll":505,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":699,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectHashCodeEqualsSelfHashCode":1036,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":698,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":697,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":788,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":423,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":16,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":441,"org.apache.commons.collections4.queue.TransformedQueueTest.testEqualsNull":498,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":1029,"org.apache.commons.collections4.map.LRUMapTest.testReset":654,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":181,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectEqualsSelf":148,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":1070,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListCompatibility":403,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":735,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectEqualsSelf":309,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":1184,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":226,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":1066,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":32,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectEqualsSelf":122,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":100,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":619,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":211,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":731,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":11,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":262,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":880,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":579,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":963,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":1130,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSimpleSerialization":897,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":615,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":464,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":758,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":128,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":746,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":436,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":969,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":96,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":592,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":668,"org.apache.commons.collections4.map.LinkedMapTest.testReset":605,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testEqualsNull":276,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":651,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":683,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsContract":277,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":774,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":703,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":853,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":1055,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":130,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":116,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":377,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":203,"org.apache.commons.collections4.list.UnmodifiableListTest.testObjectEqualsSelf":412,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsContract":973,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":838,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":55,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":720,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":702,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":228,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":999,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":544,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesClearChangesMap":1013,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":138,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":330,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":942,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":160,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":327,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":317,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":713,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":725,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":751,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":453,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRetainAll":255,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":343,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":15,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":643,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsContract":952,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapHashCode":1004,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":539,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":830,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":1185,"org.apache.commons.collections4.MapUtilsTest.testInvertMap":146,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":730,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":1078,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":409,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":811,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":918,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRetainAll":267,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":346,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":349,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":99,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":212,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":775,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":329,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":430,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":804,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":932,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveAll":258,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":740,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":132,"org.apache.commons.collections4.list.GrowthListTest.testSerializeDeserializeThenCompare":391,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":454,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":741,"org.apache.commons.collections4.map.HashedMapTest.testClone":796,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":742,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":25,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":986,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":1126,"org.apache.commons.collections4.map.SingletonMapTest.testMakeMap":959,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":866,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":1107,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":533,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":1104,"org.apache.commons.collections4.list.TransformedListTest.testObjectEqualsSelf":365,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSerializeDeserializeThenCompare":151,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":257,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":901,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":202,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":650,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsContract":78,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":197,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":299,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":888,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":437,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":571,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":661,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":7,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":534,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":12,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":66,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectEqualsSelf":456,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":1024,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":364,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":967,"org.apache.commons.collections4.SetUtilsTest.testHashCode":82,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":214,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":385,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":577,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":336,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":637,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":636,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":404,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":638,"org.apache.commons.collections4.CollectionUtilsTest.emptyCollection":523,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":800,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":786,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":2,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":614,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":833,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":849,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":617,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetHashCode":64,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":153,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":886,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsSelfHashCode":1082,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":72,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveAll":264,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":1097,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":101,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":30,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":372,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":649,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectHashCodeEqualsContract":283,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":648,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":606,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":602,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":392,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":1105,"org.apache.commons.collections4.map.LinkedMapTest.testClone":609,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveAll":503,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":511,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":359,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":1051,"org.apache.commons.collections4.map.ListOrderedMapTest.testCanonicalEmptyCollectionExists":1040,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":339,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":532,"org.apache.commons.collections4.map.ListOrderedMapTest.testCanonicalFullCollectionExists":1041,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":840,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":836,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":864,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":424,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":438,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":1127,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":737,"org.apache.commons.collections4.list.TransformedListTest.testEqualsNull":366,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":738,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":877,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":739,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":1178,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":843,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":842,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":674,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":841,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":6,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":363,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":1003,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":53,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":246,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":170,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":817,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":669,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectEqualsSelf":1034,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":665,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectHashCodeEqualsContract":274,"org.apache.commons.collections4.SetUtilsTest.testEquals":83,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveAll":250,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":883,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":813,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testDecorateFactory":62,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":18,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":1121,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":858,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":934,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":382,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":1073,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":48,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":591,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":1112,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":46,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCanonicalFullCollectionExists":81,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRetainAll":506,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCanonicalEmptyCollectionExists":80,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":627,"org.apache.commons.collections4.map.ListOrderedMapTest.testFullMapCompatibility":1007,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":230,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":756,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":1061,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":1115,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":445,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":769,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":1114,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEqualsNull":447,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":1113,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":440,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":27,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":734,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToString":215,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":350,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":594,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":582,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":388,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":22,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":1119,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testComparator":61,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":95,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":670,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":295,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":375,"org.apache.commons.collections4.set.TransformedSetTest.testSetEquals":468,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":89,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":543,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectHashCodeEqualsContract":496,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":41,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":40,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":308,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":39,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":397,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":1058,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectEqualsSelf":427,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":728,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":770,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":297,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":829,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":535,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectEqualsSelf":500,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":616,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":206,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":570,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":597,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsContract":150,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":185,"org.apache.commons.collections4.map.LRUMapTest.testLRU":664,"org.apache.commons.collections4.map.ListOrderedMapTest.testPreviousKey":992,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":462,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":473,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":354,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":1076,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":119,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":305,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":814,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":794,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectHashCodeEqualsContract":1037,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":240,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":555,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":198,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":553,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":693,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalFullCollectionExists":977,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveAll":516,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":998,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":1052,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":753,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectHashCodeEqualsContract":311,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":164,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":390,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":1,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":920,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":803,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":378,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":691,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":1125,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":662,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":759,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":1110,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":1100,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRetainAll":269,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":411,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":507,"org.apache.commons.collections4.set.ListOrderedSet2Test.testEqualsNull":479,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":110,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":690,"org.apache.commons.collections4.map.ListOrderedMapTest.testFirstKey":989,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":995,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":884,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":545,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":547,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":773,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":831,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":144,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":701,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":642,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":1144,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":681,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":1022,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":525,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":937,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":59,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":242,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":828,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalEmptyCollectionExists":1079,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":825,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":10,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":296,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":987,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":790,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":1000,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":929,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":5,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":960,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":1153,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testBagEqualsSelf":109,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":875,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":760,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":748,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":117,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectEqualsSelf":272,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":380,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":1146,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectEqualsSelf":278,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":620,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":1147,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":624,"org.apache.commons.collections4.list.GrowthListTest.testFullListCompatibility":379,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":513,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":768,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex":980,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":626,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testComparatorIsSerializable":894,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":155,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":1068,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":139,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":723,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":900,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutNullKey":1009,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsSelfHashCode":121,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":540,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":859,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":1025,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":325,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyIterator":945,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":733,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":846,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":356,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":721,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveAll":270,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":111,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":935,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSimpleSerialization":125,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":736,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToString":232,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":798,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRetainAll":265,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":402,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorOrder":940,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetEquals":489,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":400,"org.apache.commons.collections4.list.UnmodifiableListTest.testSerializeDeserializeThenCompare":410,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsSelfHashCode":899,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":107,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":1156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":1157,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":1026,"org.apache.commons.collections4.set.TransformedSetTest.testSerializeDeserializeThenCompare":469,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":1155,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":362,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":771,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":371,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":706,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":93,"org.apache.commons.collections4.list.SetUniqueListTest.testObjectHashCodeEqualsContract":291,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":809,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":136,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testUnmodifiable":1043,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":707,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":42,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":574,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRetainAll":504,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":341,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":983,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetClearChangesMap":1015,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEqualsNull":285,"org.apache.commons.collections4.map.ListOrderedMapTest.testSimpleSerialization":1039,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":785,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":129,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":201,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":596,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":623,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":137,"org.apache.commons.collections4.list.PredicatedListTest.testEqualsNull":338,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":764,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":1033,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":292,"org.apache.commons.collections4.map.ListOrderedMapTest.testSerializeDeserializeThenCompare":1038,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":1133,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":1023,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":970,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":1030,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":801,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":1054,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":755,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":922,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":1132,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":166,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":114,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":913,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":625,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":1123,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsContract":449,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":795,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":1074,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectEqualsSelf":947,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":915,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":914,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":974,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":142,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":135,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":530,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":1044,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":860,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":548,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":835,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":919,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":634,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":671,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":56,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsContract":502,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":1131,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":1170,"org.apache.commons.collections4.list.UnmodifiableListTest.testObjectHashCodeEqualsContract":414,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":28,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":98,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":102,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":575,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":862,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":171,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":154,"org.apache.commons.collections4.set.TransformedSortedSetTest.testEqualsNull":491,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":851,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":115,"org.apache.commons.collections4.collection.TransformedCollectionTest.testEqualsNull":273,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":91,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":401,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":604,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":852,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":1154,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":47,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":315,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":399,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":601,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":1145,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":54,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":334,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":1151,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":1012,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":779,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":778,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":957,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":1137,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":451,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":780,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":962,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":19,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":874,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":630,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":873,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":213,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":872,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":331,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":234,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":118,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":815,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":908,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":323,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":123,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":174,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectEqualsSelf":465,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":1011,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":611,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":1124,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":1160,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":1159,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":1158,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":971,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveAll":252,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":407,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRetainAll":249,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveAll":1027,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":709,"org.apache.commons.collections4.map.LRUMapTest.testClone":655,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":645,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":810,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":581,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":635,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":351,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":446,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":106,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":303,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":672,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsContract":1081,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":722,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":921,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsSelfHashCode":75,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":879,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":87,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testRandomListSort":890,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":368,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":826,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsContract":420,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":508,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":927,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":1069,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":221,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":224,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectEqualsSelf":481,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":646,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":542,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":29,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":956,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":985,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":1143,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":113,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":357,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsContract":477,"org.apache.commons.collections4.list.SetUniqueListTest.testObjectEqualsSelf":289,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":347,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectEqualsSelf":487,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":839,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":152,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalEmptyCollectionExists":950,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveAll":254,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":319,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":434,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":1177,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":708,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":808,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":861,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEqualsNull":426,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":1169,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testEqualsNull":279,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListCompatibility":398,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":157,"org.apache.commons.collections4.list.GrowthListTest.testObjectEqualsSelf":393,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":514,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectHashCodeEqualsContract":467,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":13,"org.apache.commons.collections4.list.GrowthListTest.testEmptyListCompatibility":370,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":422,"org.apache.commons.collections4.set.PredicatedSetTest.testEqualsNull":466,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectEqualsSelf":439,"org.apache.commons.collections4.set.UnmodifiableSetTest.testEqualsNull":486,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectHashCodeEqualsContract":493,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":1179,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":1093,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":52,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":208,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsContract":428,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":1166,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":68,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":374,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":767,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":1186,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":389,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":1064,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":644,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":58,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":204,"org.apache.commons.collections4.set.TransformedSetTest.testObjectHashCodeEqualsContract":472,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":217,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectHashCodeEqualsContract":483,"org.apache.commons.collections4.list.PredicatedListTest.testObjectEqualsSelf":337,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":429,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":711,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":85,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":714,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":679,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":727,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains3":1018,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":1142,"org.apache.commons.collections4.set.TransformedSetTest.testEqualsNull":471,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":807,"org.apache.commons.collections4.set.ListOrderedSet2Test.testObjectHashCodeEqualsContract":480,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":729,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":191,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":537,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains2":1017,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":907,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains1":1016,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":554,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":178,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":345,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastKeySet":994,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":715,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":333,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":194,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":1047,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":550,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testOrderedMapIterator":938,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSerializeDeserializeThenCompare":474,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":797,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":358,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":1129,"org.apache.commons.collections4.set.TransformedSetTest.testObjectEqualsSelf":470,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":641,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":924,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":538,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":556,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":633,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":640,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":639,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveAll":268,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":917,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":878,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":8,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":631,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectEqualsSelf":275,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":717,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":789,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":1109,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":749,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":965,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":598,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":444,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":546,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":461,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":834,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":744,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":484,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutNullValue":1010,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":677,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":261,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":588,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":589,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":590,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":90,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":335,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":916,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":905,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":837,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":549,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":887,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":732,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectEqualsSelf":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":1171,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":997,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":344,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":793,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":936,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":687,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":710,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":984,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":199,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":906,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":192,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectHashCodeEqualsContract":280,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionClear":220,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":1031,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":847,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":1048,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":816,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":1050,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":1049,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFullMapCompatibility":1065,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":241,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEqualsNull":896,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":618,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":705,"org.apache.commons.collections4.list.GrowthListTest.testCollectionClear":386,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":1086,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":572,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":431,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEqualsNull":495,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray2":73,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":459,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectEqualsSelf":492,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":981,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToString":74,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectEqualsSelf":476,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":1096,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":162,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":991,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":761,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":417,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":660,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":141,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":1120,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRetainAll":271,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":455,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":140,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":863,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":188,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":1090,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":536,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":302,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":529,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":312,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":573,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":1059,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":1180,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":103,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":143,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":26,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalFullCollectionExists":948,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":318,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":517,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":552,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":689,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":827,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":612,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":1161,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":243,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":180,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":1173,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":149,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":176,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":763,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRetainAll":1028,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":802,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":463,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyMapIterator":941,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":528,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectEqualsSelf":460,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicateEx1":147,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":105,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":189,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":304,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":396,"org.apache.commons.collections4.map.ListOrderedMapTest.testMakeMap":996,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSimpleSerialization":951,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicateEx1":1174,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":558,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":1099,"org.apache.commons.collections4.list.FixedSizeListTest.testEqualsNull":310,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":97,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":245,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":1111,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testReverseListSort":891,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":216,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":964,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":408,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":791,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":1092,"org.apache.commons.collections4.map.ListOrderedMapTest.testLastKey":990,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":306,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":168,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":190,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":676,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":926,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":931,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":561,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":595,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":953,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":560,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":772,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":205,"org.apache.commons.collections4.SetUtilsTest.testEmptyIfNull":84,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":183,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":443,"org.apache.commons.collections4.map.SingletonMapTest.testSimpleSerialization":975,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":1008,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":301,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":1118,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":34,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":256,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":238,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":1163,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":4,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":766,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":450,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":765,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":1128,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":376,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":49,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEmptyListSort":892,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":307,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":512,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":716,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":177,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":982,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":218,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":688,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":881,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":57,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":421,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":384,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":14,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":586,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":587,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":585,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":712,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":818,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":108,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":36,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":37,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":196,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":38,"org.apache.commons.collections4.set.ListOrderedSetTest.testEqualsNull":482,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":1152,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":120,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":207,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":578,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory":939,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":387,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":903,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":165,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":209,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":1164,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":45,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":819,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":236,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":820,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":1139,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":845,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":320,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":405,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":686,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRetainAll":253,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":1094,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":1057,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":1088,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":904,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":175,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectEqualsSelf":494,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":568,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":233,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":324,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":1045,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":352,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":520,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":958,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":565,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":576,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsSelfHashCode":972,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":1085,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":133,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":158,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":666,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":1103,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":1042,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":1084,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":94,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":696,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":328,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":485,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":1181,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":694,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":844,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":923,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":326,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":695,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":1175,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":1176,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCanonicalFullCollectionExists":127,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":821,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":621,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":131,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":856,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":1056,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRetainAll":259,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":134,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":159,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveAll":266,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":360,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":667,"org.apache.commons.collections4.map.ListOrderedMapTest.testEmptyMapCompatibility":1006,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":316,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":718,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionSize":71,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":169,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIsEmpty":69,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":754,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":112,"org.apache.commons.collections4.list.SetUniqueListTest.testEqualsNull":290,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":557,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":227,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSerializeDeserializeThenCompare":490,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":684,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":1072},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[0,1,2,3,4],"tindex":"7cd36c5a-2ece-11e6-9947-bb4eac093bf6","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:255","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return doRemoveKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[5,6],"tindex":"7cd5411b-2ece-11e6-9947-59952ae2848a","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1515","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<V> java.util.Iterator<V> = iterator() ; it.hasNext() ; ) {\n                final V V = it.next();\n                if (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(value, o)) {\n                    it.remove();\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[7],"tindex":"7cd5682c-2ece-11e6-9947-b7e4c6b2662e","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:75","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"7cd58f3d-2ece-11e6-9947-83752dd51e4e","method":{"position":"org.apache.commons.collections4.IteratorUtils:763","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> loopingListIterator(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.NullPointerException(\"List must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingListIterator<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"7cd58f3e-2ece-11e6-9947-3de1a6d1a772","method":{"position":"org.apache.commons.collections4.set.CompositeSet:388","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Set<E> set) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    java.util.List<java.util.Set<E>>.remove(set);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,6,42,43,44,45,46,47,48,49,50,51,52],"tindex":"7cd5b64f-2ece-11e6-9947-35b469b0afa2","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:56","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int bitIndex(final java.lang.String key, final int offsetInBits, final int lengthInBits, final java.lang.String other, final int otherOffsetInBits, final int otherLengthInBits) {\n    if (otherOffsetInBits == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = true;\n            if (((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n            } \n            final int int = offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = otherOffsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = beginIndex1 + (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = beginIndex2 + (otherLengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = java.lang.Math.max(endIndex1, endIndex2);\n            char char = 0;\n            char char = 0;\n            for (int int = 0 ; i < length ; i++) {\n                final int int = beginIndex1 + i;\n                final int int = beginIndex2 + i;\n                if (index1 >= endIndex1) {\n                    k = 0;\n                } else {\n                    k = key.charAt(index1);\n                }\n                if ((other == null) || (index2 >= endIndex2)) {\n                    f = 0;\n                } else {\n                    f = other.charAt(index2);\n                }\n                if (k != f) {\n                    final int int = k ^ f;\n                    return ((i * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(x))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                } \n                if (k != 0) {\n                    allNull = false;\n                } \n            }\n            if (allNull) {\n                return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"otherOffsetInBits"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[53,54],"tindex":"7cd60470-2ece-11e6-9947-f1b08b96c205","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            if (object == (org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"7cd60471-2ece-11e6-9947-4fca167f6987","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"7cd62b82-2ece-11e6-9947-973097bb3c73","method":{"position":"org.apache.commons.collections4.map.LinkedMap:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[54],"tindex":"7cd62b83-2ece-11e6-9947-d7df7fc3bf35","method":{"position":"org.apache.commons.collections4.SplitMapUtils:184","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"7cd65294-2ece-11e6-9947-f57b84bc4951","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:77","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"7cd65295-2ece-11e6-9947-694faf29b325","method":{"position":"org.apache.commons.collections4.list.GrowthList:69","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.GrowthList<E> growthList(final java.util.List<E> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.GrowthList<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[55,56,57,58,59],"tindex":"7cd679a6-2ece-11e6-9947-59ebc9eab078","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:111","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            return node.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,7,75,76,77,78,79,80,81,82,83,84,85],"tindex":"7cd679a7-2ece-11e6-9947-63ee56151e12","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> unmodifiableSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                return set;\n            } \n            return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[86],"tindex":"7cd6a0b8-2ece-11e6-9947-af508bb26f98","method":{"position":"org.apache.commons.collections4.CollectionUtils:898","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> select(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection != null) && (predicate != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[87,88,89,90,91,92,93,94,95,96],"tindex":"7cd6a0b9-2ece-11e6-9947-79a0d2ed59cc","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:49","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Predicate<T>[] copy(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Predicate<T>[])(predicates.clone()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[8,9,10,14,15,16,18,19,21,22,23,25,26,28,31,32,36,37,38,39,40,41,6,44,48,50,51,52],"tindex":"7cd6c7ca-2ece-11e6-9947-b91b8355e73c","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:758","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        {\n            while (true) {\n                org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (child.isEmpty()) {\n                    child = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((child.int) <= (node.int)) {\n                    return child;\n                } \n                node = child;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"7cd7b22b-2ece-11e6-9947-71ffe4fe0437","method":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:134","type":"CtMethodImpl","sourcecode":"public void setEnumeration(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        {\n            org.apache.commons.collections4.iterators.EnumerationIterator.this.java.util.Enumeration<? extends E> = enumeration;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:697","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"7cd7d93c-2ece-11e6-9947-9f039ab6472b","method":{"position":"org.apache.commons.collections4.iterators.IteratorEnumeration:91","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            org.apache.commons.collections4.iterators.IteratorEnumeration.this.java.util.Iterator<? extends E> = iterator;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"7cd7d93d-2ece-11e6-9947-e58b2714fa33","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],"tindex":"7cd7d93e-2ece-11e6-9947-c3b04d1cd093","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = ((org.apache.commons.collections4.Bag<E>)(bag));\n                return tmpBag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableBag<E>(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"7cd8004f-2ece-11e6-9947-576c36f5f4ef","method":{"position":"org.apache.commons.collections4.MapUtils:506","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key, final java.lang.Long defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[128,129],"tindex":"7cd80050-2ece-11e6-9947-7dbcc7be8e9d","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    purgeBeforeRead();\n                    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n                    if (entry == null) {\n                        return false;\n                    } \n                    return (entry.getValue()) != null;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"7cd80051-2ece-11e6-9947-7f3d1854365d","method":{"position":"org.apache.commons.collections4.MapUtils:546","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key, final java.lang.Double defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[130],"tindex":"7cd82762-2ece-11e6-9947-85d1847be9ca","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:129","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[131,132,133,134,135,136,137,138,139,140,141,142],"tindex":"7cd82763-2ece-11e6-9947-9714881754d2","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:108","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.containsKey(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[143],"tindex":"7cd82764-2ece-11e6-9947-d71c1c8084ff","method":{"position":"org.apache.commons.collections4.TransformerUtils:149","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> asTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            return org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(closure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[144],"tindex":"7cd84e75-2ece-11e6-9947-b592cd1abdf5","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:154","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[145],"tindex":"7cd84e76-2ece-11e6-9947-29fcc6dc4343","method":{"position":"org.apache.commons.collections4.PredicateUtils:211","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[146],"tindex":"7cd84e77-2ece-11e6-9947-034356664d3b","method":{"position":"org.apache.commons.collections4.MapUtils:1060","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<V, K> invertMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        {\n            final java.util.Map<V, K> java.util.Map<V, K> = new java.util.HashMap<V, K>(map.size());\n            for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n                out.put(entry.getValue(), entry.getKey());\n            }\n            return out;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[147],"tindex":"7cd87588-2ece-11e6-9947-bb459bcb2565","method":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[148,149,150,151],"tindex":"7cd87589-2ece-11e6-9947-33b8c61026d6","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:332","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            if ((org.apache.commons.collections4.comparators.ComparatorChain.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.ComparatorChain.this.getClass())) {\n                final org.apache.commons.collections4.comparators.ComparatorChain<?> org.apache.commons.collections4.comparators.ComparatorChain<?> = ((org.apache.commons.collections4.comparators.ComparatorChain<?>)(object));\n                return (null == (java.util.BitSet) ? null == (chain.java.util.BitSet) : java.util.BitSet.equals(chain.java.util.BitSet)) && (null == (java.util.List<java.util.Comparator<E>>) ? null == (chain.java.util.List<java.util.Comparator<?>>) : java.util.List<java.util.Comparator<E>>.equals(chain.java.util.List<java.util.Comparator<?>>));\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SplitMapUtils:238","type":"CtBinaryOperatorImpl","sourcecode":"put instanceof java.util.Map"},"failures":[54],"tindex":"7cd89c9a-2ece-11e6-9947-ef61348aeeaf","method":{"position":"org.apache.commons.collections4.SplitMapUtils:234","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> writableMap(final org.apache.commons.collections4.Put<K, V> put) {\n    if (put instanceof java.util.Map) {\n        {\n            if (put == null) {\n                throw new java.lang.IllegalArgumentException(\"Put must not be null\");\n            } \n            if (put instanceof java.util.Map) {\n                return ((java.util.Map<K, V>)(put));\n            } \n            return new org.apache.commons.collections4.SplitMapUtils.WrappedPut<K, V>(put);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"put":"put"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[],"tindex":"7cd89c9b-2ece-11e6-9947-e38a8bcc3f28","method":{"position":"org.apache.commons.collections4.PredicateUtils:174","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceofPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(type);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[152],"tindex":"7cd89c9c-2ece-11e6-9947-6ba968bd5566","method":{"position":"org.apache.commons.collections4.ClosureUtils:145","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> doWhileClosure(final org.apache.commons.collections4.Closure<? super E> closure, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, true);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[153,154,155,156,157,158,159,160,161,162,163,164,165,166],"tindex":"7cd8c3ad-2ece-11e6-9947-8983dba26be2","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:154","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (indexOf(value)) != (-1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209],"tindex":"7cd8c3ae-2ece-11e6-9947-a149d899a98d","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:190","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : coll) {\n                if (java.util.Set<E>.add(e)) {\n                    temp.add(e);\n                } \n            }\n            return super.addAll(index, temp);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243],"tindex":"7cd8c3af-2ece-11e6-9947-af3beccf5496","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:202","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            boolean boolean = false;\n            for (final E E : coll) {\n                result |= add(e);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"7cd8eac0-2ece-11e6-9947-c3679041238d","method":{"position":"org.apache.commons.collections4.CollectionUtils:111","type":"CtMethodImpl","sourcecode":"private final int getFreq(final java.lang.Object obj, final java.util.Map<?, java.lang.Integer> freqMap) {\n    if (obj instanceof java.util.Map) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Integer java.lang.Integer = freqMap.get(obj);\n            if (count != null) {\n                return count.intValue();\n            } \n            return 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[130],"tindex":"7cd8eac1-2ece-11e6-9947-1557db9e2273","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"7cd8eac2-2ece-11e6-9947-0fdc964a6ac6","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:167","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator) throws java.lang.IndexOutOfBoundsException {\n    if (index > 0) {\n        {\n            setComparator(index, comparator, false);\n        }\n    } else {\n        throw new java.lang.IndexOutOfBoundsException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,170,171,175,178,179,287,181,182,190,193,194,195,197,198,201,202,203,204,205,288,206,207,209,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,109,107,108,123,122,124,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,210,224,478,479,480,227,241,481,482,483,484,485,486,487,488,489,490,491,492,493,63,65,77,76,78,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523],"tindex":"7cd911d3-2ece-11e6-9947-0fa9ebefb8b2","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            return (object == (org.apache.commons.collections4.collection.AbstractCollectionDecorator.this)) || (decorated().equals(object));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"7cd911d4-2ece-11e6-9947-d394e48d1ae6","method":{"position":"org.apache.commons.collections4.ClosureUtils:255","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, falseClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:167","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"7cd938e5-2ece-11e6-9947-eb86ccd5a1fd","method":{"position":"org.apache.commons.collections4.ListUtils:492","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> fixedSizeList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.FixedSizeList.fixedSizeList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[85],"tindex":"7cd95ff6-2ece-11e6-9947-ebfdf079f201","method":{"position":"org.apache.commons.collections4.set.PredicatedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSet<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSet<E>(set , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[],"tindex":"7cd95ff7-2ece-11e6-9947-3f3785cf1077","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1484","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupKey(obj)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[524,525,526,527,528,529,530,531],"tindex":"7cd95ff8-2ece-11e6-9947-b5c229c65f34","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.remove(key);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<java.lang.Object, K>.remove(value);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[532],"tindex":"7cd98709-2ece-11e6-9947-398e71016e3c","method":{"position":"org.apache.commons.collections4.IteratorUtils:316","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end) {\n    if (end < 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start , end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[54,533,534,535,536,537,538,539,131,132,540,541,133,542,134,543,544,135,136,545,546,547,548,549,550,551,552,137,138,553,554,139,555,140,556,557,141,142,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,128,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,129,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,144,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889],"tindex":"7cd9870a-2ece-11e6-9947-23424e9a04f1","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:381","type":"CtMethodImpl","sourcecode":"protected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return key == null ? org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object : key;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:197","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[890,891,892,893,894,895,896,897,898,899,900],"tindex":"7cd9ae1b-2ece-11e6-9947-3955d8c519fc","method":{"position":"org.apache.commons.collections4.ComparatorUtils:194","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>java.util.Comparator<I> transformedComparator(java.util.Comparator<O> comparator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.TransformingComparator<I, O>(transformer , comparator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[567,568,570,571,572,575,581,585,586,587,588,589,590,599,618,619,621,622,623,626,628,631,632,636,637,638,639,640,641,650,676,677,679,680,681,684,686,689,690,694,695,696,697,698,699,708,801,802,804,805,806,809,811,814,815,819,820,821,822,823,824,833,851,852,854,855,856,859,861,864,865,869,870,871,872,873,874,883,884,885,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916],"tindex":"7cd9ae1c-2ece-11e6-9947-6314f6d5b2b6","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[175,201,202,288,208,209],"tindex":"7cd9d52d-2ece-11e6-9947-4b4a4cf80193","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:284","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Set<E>.contains(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,18,19,21,22,23,26,28,31,32],"tindex":"7cd9d52e-2ece-11e6-9947-558a940c31f3","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1463","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            return containsKey(o);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[174,932],"tindex":"7cd9fc3f-2ece-11e6-9947-49faba8323db","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:133","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"7cd9fc40-2ece-11e6-9947-e345589c0b1c","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:109","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            if (object instanceof java.util.Collection<?>) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n                    if (count != null) {\n                        return count.int;\n                    } \n                    return 0;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"7cd9fc41-2ece-11e6-9947-41150d1a4a80","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:63","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return decorated().containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[933,934],"tindex":"7cda2352-2ece-11e6-9947-f553bfab593e","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:174","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().removeAll(coll);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[837,144],"tindex":"7cda2353-2ece-11e6-9947-5f8b15673674","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:692","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key4 != null) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((((multi.size()) == 5) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))))) && ((key5 == (multi.getKey(4))) || ((key5 != null) && (key5.equals(multi.getKey(4)))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key4"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[935],"tindex":"7cda2354-2ece-11e6-9947-5387757b8bc4","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[837],"tindex":"7cda4a65-2ece-11e6-9947-319001628901","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:264","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 != null) {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key3"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"7cda4a66-2ece-11e6-9947-f91c7a09a647","method":{"position":"org.apache.commons.collections4.MapUtils:1521","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"7cda7177-2ece-11e6-9947-a99bb95f8794","method":{"position":"org.apache.commons.collections4.iterators.TransformIterator:109","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends I> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.TransformIterator.this.java.util.Iterator<? extends I> = iterator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:93","type":"CtBinaryOperatorImpl","sourcecode":"end < start"},"failures":[936],"tindex":"7cda7178-2ece-11e6-9947-55e51aa05711","method":{"position":"org.apache.commons.collections4.IteratorUtils:412","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end) {\n    if (start < end) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end","end":"start"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[591,642,700,743,784,825,875,937],"tindex":"7cda7179-2ece-11e6-9947-9375ca4ee033","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1030","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<?, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"7cda717a-2ece-11e6-9947-25cd47909430","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:109","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            if (object instanceof java.util.Collection<?>) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n                    if (count != null) {\n                        return count.int;\n                    } \n                    return 0;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,511,1053,1054,1055,1056,1057,1058,1059,512,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,513,1070,1071,1072,1073,1074,1075,514,1076,1077,1078,1079,1080,1081,1082,1083],"tindex":"7cda988b-2ece-11e6-9947-138be4c77049","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:100","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.ListOrderedMap<K, V> listOrderedMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.ListOrderedMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[936],"tindex":"7cda988c-2ece-11e6-9947-0974f4e5c56d","method":{"position":"org.apache.commons.collections4.IteratorUtils:431","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start, final int end) {\n    if (start == start) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start","end":"start"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[1084,1085],"tindex":"7cdabf9d-2ece-11e6-9947-6b670c49c1b1","method":{"position":"org.apache.commons.collections4.ListUtils:531","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b) {\n    if ((a == null) || (b == null)) {\n        {\n            return org.apache.commons.collections4.ListUtils.longestCommonSubsequence(a, b, org.apache.commons.collections4.functors.DefaultEquator.defaultEquator());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[],"tindex":"7cdabf9e-2ece-11e6-9947-e5fed0b32385","method":{"position":"org.apache.commons.collections4.CollectionUtils:1176","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.util.Iterator<T> iterator, final int index) {\n    if (iterator.hasNext()) {\n        {\n            int int = index;\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(i);\n            while (iterator.hasNext()) {\n                i--;\n                if (i == (-1)) {\n                    return iterator.next();\n                } \n                iterator.next();\n            }\n            throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"7cdabf9f-2ece-11e6-9947-b7f96567bdf8","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"7cdabfa0-2ece-11e6-9947-b50db292932f","method":{"position":"org.apache.commons.collections4.ClosureUtils:145","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> doWhileClosure(final org.apache.commons.collections4.Closure<? super E> closure, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, true);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,935,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,244,245,1117,1118,246,247,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,0,1133,1134,1135,1136,1,2,3,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,4,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172],"tindex":"7cdae6b1-2ece-11e6-9947-7f75a43232de","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:538","type":"CtMethodImpl","sourcecode":"private V doRemoveKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if (key == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (key == null) {\n                        {\n                            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n                            if (node == null) {\n                                return null;\n                            } \n                            doRedBlackDelete(node);\n                            return node.getValue();\n                        }\n                    } else {\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"7cdae6b2-2ece-11e6-9947-5714ab4488b5","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:143","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"7cdae6b3-2ece-11e6-9947-0326dc244456","method":{"position":"org.apache.commons.collections4.MapUtils:426","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key, final java.lang.Number defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[1173],"tindex":"7cdb0dc4-2ece-11e6-9947-07ff6ea0781c","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:379","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"7cdb0dc5-2ece-11e6-9947-0fe78edf6b68","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"7cdb0dc6-2ece-11e6-9947-615e0b78ffd6","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:538","type":"CtMethodImpl","sourcecode":"private V doRemoveKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if (key == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (key == null) {\n                        {\n                            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n                            if (node == null) {\n                                return null;\n                            } \n                            doRedBlackDelete(node);\n                            return node.getValue();\n                        }\n                    } else {\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"7cdb0dc7-2ece-11e6-9947-ffa33a70bb5a","method":{"position":"org.apache.commons.collections4.MapUtils:234","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Short) {\n                return ((java.lang.Short)(answer));\n            } \n            return java.lang.Short.valueOf(answer.shortValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.NullPointerException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"7cdb34d8-2ece-11e6-9947-4996b07afc91","method":{"position":"org.apache.commons.collections4.MapUtils:1089","type":"CtMethodImpl","sourcecode":"public static <K>void safeAddToMap(final java.util.Map<? super K, java.lang.Object> map, final K key, final java.lang.Object value) throws java.lang.NullPointerException {\n    if (value == null) {\n        throw new java.lang.NullPointerException();\n    } else {\n        {\n            map.put(key, (value == null ? \"\" : value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[1174],"tindex":"7cdb34d9-2ece-11e6-9947-915f4737c46b","method":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsFalsePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsFalsePredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"7cdb34da-2ece-11e6-9947-7fcf308d231d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:538","type":"CtMethodImpl","sourcecode":"private V doRemoveKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if (key == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (key == null) {\n                        {\n                            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n                            if (node == null) {\n                                return null;\n                            } \n                            doRedBlackDelete(node);\n                            return node.getValue();\n                        }\n                    } else {\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"7cdb5beb-2ece-11e6-9947-99c976fdb1b0","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    purgeBeforeRead();\n                    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n                    if (entry == null) {\n                        return false;\n                    } \n                    return (entry.getValue()) != null;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[1175,1176,91,93,1177],"tindex":"7cdb5bec-2ece-11e6-9947-d5d1fa99ee5d","method":{"position":"org.apache.commons.collections4.PredicateUtils:421","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"7cdb5bed-2ece-11e6-9947-6755a8b8a48b","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:330","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryAfter(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:816","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[846,845,837,144,839,840,841,842,843,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886],"tindex":"7cdb82fe-2ece-11e6-9947-e959bb07fad0","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:815","type":"CtMethodImpl","sourcecode":"protected void checkKey(final org.apache.commons.collections4.keyvalue.MultiKey<?> key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                throw new java.lang.NullPointerException(\"Key must not be null\");\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1083","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"7cdb82ff-2ece-11e6-9947-9f8604930f54","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:79","type":"CtMethodImpl","sourcecode":"static boolean isValidBitIndex(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex >= 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"7cdb8300-2ece-11e6-9947-4f84736741ef","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2014","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            return (node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"7cdbaa11-2ece-11e6-9947-d7d8d53416a8","method":{"position":"org.apache.commons.collections4.ComparatorUtils:172","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullHighComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[1178],"tindex":"7cdbaa12-2ece-11e6-9947-4f372069221f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1717","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> synchronizedCollection(final java.util.Collection<C> collection) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            return org.apache.commons.collections4.collection.SynchronizedCollection.synchronizedCollection(collection);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:75","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[1179],"tindex":"7cdbaa13-2ece-11e6-9947-3fba08b82e19","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:119","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            final java.util.Set<E> java.util.Set<E> = new java.util.HashSet<E>(list);\n            list.retainAll(set);\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"7cdbd124-2ece-11e6-9947-195e3e47b5ef","method":{"position":"org.apache.commons.collections4.MapUtils:1542","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.PredicatedSortedMap.predicatedSortedMap(map, keyPred, valuePred);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"7cdbd125-2ece-11e6-9947-851fb15f18ce","method":{"position":"org.apache.commons.collections4.MapUtils:340","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if ((answer != null) && (answer instanceof java.util.Map)) {\n                    return ((java.util.Map<?, ?>)(answer));\n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[570,577,580,595,598,599,600,601,602],"tindex":"7cdbd126-2ece-11e6-9947-213ca923b830","method":{"position":"org.apache.commons.collections4.map.Flat3Map:197","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(key);\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                    }\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl","sourcecode":"predicatesAndClosures == null"},"failures":[88],"tindex":"7cdbf837-2ece-11e6-9947-393380aa946e","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:89","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicatesAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = predicatesAndClosures.remove(null);\n            final int int = predicatesAndClosures.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n            } \n            final org.apache.commons.collections4.Closure<E>[] org.apache.commons.collections4.Closure<E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> : predicatesAndClosures.entrySet()) {\n                preds[i] = entry.getKey();\n                closures[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchClosure<E>(false , preds , closures , defaultClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"7cdbf838-2ece-11e6-9947-3bb8fc99539a","method":{"position":"org.apache.commons.collections4.set.CompositeSet:388","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Set<E> set) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    java.util.List<java.util.Set<E>>.remove(set);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[561,562,600,601,573,609,604,651,652,624,727,729,732,733,719,720,722,723,724,796,834,835,807,845,884,885,857,1180,1181,1182,1183,1184,1185],"tindex":"7cdbf839-2ece-11e6-9947-1ddb0b258daa","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:179","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"7cdc1f4a-2ece-11e6-9947-c99b41506688","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:74","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(index, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[1186,563,564,565,581],"tindex":"7cdc1f4b-2ece-11e6-9947-0b278c6adfb4","method":{"position":"org.apache.commons.collections4.map.Flat3Map:437","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(key);\n            } \n            if ((int) == 0) {\n                return null;\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        return null;\n                    case 2 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        return null;\n                    case 1 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 0;\n                            return old;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            return null;\n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            return null;\n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 0;\n                                return old;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.util.EmptyStackException","condition":{"position":"org.apache.commons.collections4.ArrayStack:122","type":"CtBinaryOperatorImpl","sourcecode":"n <= 0"},"failures":[],"tindex":"7cdc6d6c-2ece-11e6-9947-7fdf6e6a1165","method":{"position":"org.apache.commons.collections4.ArrayStack:105","type":"CtMethodImpl","sourcecode":"public E peek(final int n) throws java.util.EmptyStackException {\n    if (n <= 0) {\n        {\n            final int int = ((size()) - n) - 1;\n            if (m < 0) {\n                throw new java.util.EmptyStackException();\n            } else {\n                return get(m);\n            }\n        }\n    } else {\n        throw new java.util.EmptyStackException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[],"tindex":"7cdc947d-2ece-11e6-9947-2377f4da2f5c","method":{"position":"org.apache.commons.collections4.IteratorUtils:335","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start, final int end) {\n    if (end < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}