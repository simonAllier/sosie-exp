{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":268,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":383,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":43,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":546,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":593,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":658,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":395,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":420,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":580,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":689,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":187,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":527,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":634,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":44,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":618,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":617,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx4":329,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testCanonicalEmptyCollectionExists":671,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":701,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":114,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEqualsNull":254,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":113,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":391,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":470,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":474,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":213,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":457,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":473,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":475,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":218,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":691,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":678,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastKeySet":150,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":405,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":519,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":224,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":304,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":603,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":651,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":343,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":397,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":398,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":572,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":576,"org.apache.commons.collections4.map.Flat3MapTest.testObjectEqualsSelf":32,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":493,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":353,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":441,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":18,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetClearChangesMap":166,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":508,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":339,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":578,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":19,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":103,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":172,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":107,"org.apache.commons.collections4.ListUtilsTest.testLazyList":209,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":316,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEmptyMapCompatibility":663,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":560,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":387,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":250,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":132,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":333,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":330,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":481,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":472,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":703,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":471,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":740,"org.apache.commons.collections4.map.TransformedMapTest.testValuesClearChangesMap":189,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":240,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":249,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":645,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testConstructors":274,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":717,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":289,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":315,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":629,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullValue":230,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":88,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":340,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":676,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":286,"org.apache.commons.collections4.map.TransformedMapTest.testEqualsNull":192,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":419,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":583,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":49,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":214,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":598,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":666,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":319,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":528,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":62,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":639,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":20,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":604,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":683,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":426,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":408,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":636,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":738,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapClear":238,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":409,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":407,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":732,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":551,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":247,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":277,"org.apache.commons.collections4.map.TransformedMapTest.testSerializeDeserializeThenCompare":197,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":637,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":401,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":552,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream":430,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":3,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveAll":170,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":456,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":434,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":392,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":692,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":347,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":200,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":69,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":183,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":575,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":241,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":613,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":606,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":537,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":384,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":487,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveChangesMap":163,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":381,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":351,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":119,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":39,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":507,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":705,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":1,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":22,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":720,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":467,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":179,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":145,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":379,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":70,"org.apache.commons.collections4.map.TransformedMapTest.testFullMapCompatibility":176,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":446,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":273,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":370,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":577,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRetainAll":157,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":399,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsContract":753,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":328,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":494,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":296,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":248,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":747,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":559,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":54,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":623,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":464,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":517,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":585,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":746,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":429,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":116,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":485,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":378,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":422,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":226,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":445,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":27,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":140,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":143,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":492,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":59,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":715,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":101,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsSelfHashCode":258,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":323,"org.apache.commons.collections4.bag.HashBagTest.testObjectHashCodeEqualsContract":737,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":630,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":729,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":369,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":66,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":206,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":235,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":320,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":311,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSimpleSerialization":256,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":414,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":549,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":198,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":557,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":761,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":406,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":478,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":244,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":631,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":396,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":499,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":282,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":300,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":402,"org.apache.commons.collections4.map.UnmodifiableMapTest.testFullMapCompatibility":239,"org.apache.commons.collections4.list.TreeListTest.testRemove":280,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":708,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":225,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":292,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":417,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":509,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":312,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":2,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":664,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":305,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":388,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":94,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNull":655,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":712,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":754,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":646,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":278,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":693,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":440,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":87,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetIteratorRemoveChangesMap":229,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":522,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":582,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":633,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":755,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":458,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":581,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":121,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":647,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":644,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":616,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":270,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":90,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":680,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":243,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":365,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":762,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":211,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":400,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":309,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":702,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":72,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":707,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":371,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":412,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":563,"org.apache.commons.collections4.bag.TreeBagTest.testObjectHashCodeEqualsContract":722,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":411,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectEqualsSelf":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":410,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":497,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":424,"org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie":498,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":565,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":161,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":285,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":29,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":160,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":159,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":554,"org.apache.commons.collections4.map.LRUMapTest.testClone":263,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testCanonicalFullCollectionExists":672,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":596,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":30,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":506,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":586,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":85,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":752,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":562,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveChangesMap":326,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":524,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":518,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":466,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":155,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":490,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":308,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_Decorate":148,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testBagEqualsSelf":118,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveAll":181,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsContract":134,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":223,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":56,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":455,"org.apache.commons.collections4.CollectionUtilsTest.collateException2":477,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":677,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":713,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":597,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":609,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":41,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":82,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":186,"org.apache.commons.collections4.list.TreeListTest.testListEquals":288,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":346,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":38,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":122,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":526,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":335,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":5,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":251,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":394,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":620,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":110,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":659,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":545,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":427,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":321,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":232,"org.apache.commons.collections4.map.Flat3MapTest.testObjectHashCodeEqualsContract":33,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":488,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":668,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":760,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":318,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsSelfHashCode":196,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":293,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":380,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsContract":758,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":11,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":363,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":741,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRetainAll":188,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":662,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":79,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetClearChangesMap":162,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":68,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":361,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":735,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":389,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":531,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":35,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":436,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":553,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":574,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":421,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":675,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":382,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":55,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":513,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":106,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testSerializeDeserializeThenCompare":665,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":80,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":544,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":543,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":542,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":727,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMakeMap":234,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":726,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":725,"org.apache.commons.collections4.map.LRUMapTest.testReset":501,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastValues":151,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":337,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":759,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":437,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsSelfHashCode":669,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":242,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":418,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsContract":730,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":129,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":640,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":711,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":447,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":435,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":139,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":571,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":657,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":63,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":100,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":718,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":322,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":595,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":279,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":377,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":694,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":567,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":682,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":154,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":153,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":152,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":199,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":556,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":748,"org.apache.commons.collections4.map.UnmodifiableMapTest.testCanonicalFullCollectionExists":253,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":514,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":284,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullStream":431,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":525,"org.apache.commons.collections4.map.LinkedMapTest.testReset":558,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":635,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":96,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":529,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":602,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":393,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":548,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":310,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":301,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":480,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":130,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":52,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":652,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":6,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":10,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsSelfHashCode":654,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":7,"org.apache.commons.collections4.map.TransformedMapTest.testEmptyMapCompatibility":174,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":547,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":700,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":31,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":147,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":376,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":716,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":204,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":81,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":212,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":246,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":48,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":469,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":592,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":674,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":169,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":491,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":584,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":591,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":615,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":47,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":590,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":51,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":303,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":462,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":267,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":687,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":756,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":287,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":354,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":594,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":607,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":216,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":696,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":628,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":750,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":302,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectEqualsSelf":252,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":622,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":463,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":523,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":272,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectEqualsSelf":667,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":127,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":141,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":164,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":83,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":638,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":71,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":245,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":425,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":744,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":73,"org.apache.commons.collections4.map.HashedMapTest.testClone":260,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":500,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":757,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":262,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":373,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":690,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":228,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":423,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":698,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":352,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":115,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":681,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":349,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":489,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":533,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":555,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":4,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastEntrySet":149,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCanonicalEmptyCollectionExists":137,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":601,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":45,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":182,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":479,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":24,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":723,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":495,"org.apache.commons.collections4.map.TransformedMapTest.testMapHashCode":158,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":511,"org.apache.commons.collections4.map.TransformedMapTest.testMakeMap":171,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":156,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":89,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":569,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":550,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":177,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":331,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":25,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":661,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":745,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":697,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":742,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEmptyMapCompatibility":237,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":428,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":105,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":460,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":461,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":299,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":97,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":290,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":341,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":61,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":307,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":291,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":588,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":587,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":589,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":37,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":120,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":294,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":117,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":386,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":566,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":510,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":210,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":621,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":570,"org.apache.commons.collections4.map.TransformedMapTest.testSimpleSerialization":194,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsSelfHashCode":135,"org.apache.commons.collections4.map.TransformedMapTest.testObjectEqualsSelf":190,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":367,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":0,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":342,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":142,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":334,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":313,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":74,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":26,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":709,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":269,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":144,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":295,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":600,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":599,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":444,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":612,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":264,"org.apache.commons.collections4.list.TreeListTest.testBug35258":283,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":561,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":649,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":632,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":123,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":222,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":86,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":564,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":413,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":350,"org.apache.commons.collections4.bag.HashBagTest.testObjectEqualsSelf":736,"org.apache.commons.collections4.map.LinkedMapTest.testClone":266,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":98,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":306,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":175,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":314,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":203,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":220,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":221,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":643,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":438,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":168,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":12,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":281,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":624,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":271,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":259,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":724,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":728,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":126,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":131,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":374,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":92,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":15,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":77,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":14,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":13,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":520,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":57,"org.apache.commons.collections4.map.TransformedMapTest.testCanonicalFullCollectionExists":191,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":452,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":641,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":686,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":733,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":704,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":364,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":642,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":515,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":344,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":605,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":111,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":503,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":146,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":205,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetIndexed":17,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":108,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":362,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":443,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":476,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":356,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":95,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":208,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":439,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":368,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":695,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":336,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":650,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":357,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":625,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":521,"org.apache.commons.collections4.bag.TreeBagTest.testEmptyBagCompatibility":719,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":454,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":459,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":265,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":627,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":579,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":165,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":227,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":201,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":710,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":706,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":749,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":360,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":359,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":751,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":358,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":317,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":215,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":46,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":185,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":415,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":403,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":626,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":688,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":375,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":453,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCanonicalFullCollectionExists":138,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":324,"org.apache.commons.collections4.bag.HashBagTest.testEmptyBagCompatibility":734,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":442,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":366,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":534,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsContract":763,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":516,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":610,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":451,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":483,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":450,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":484,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":684,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":327,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":739,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":448,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":449,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullKey":236,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":404,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory":764,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":184,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":67,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":125,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":416,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":180,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":619,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":60,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":568,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":679,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":390,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testSimpleSerialization":670,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":91,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutNullKey":173,"org.apache.commons.collections4.map.TransformedMapTest.testCanonicalEmptyCollectionExists":193,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":532,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":338,"org.apache.commons.collections4.map.LRUMapTest.testLRU":502,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":685,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":743,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":298,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":102,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":332,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":99,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":124,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":202,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":21,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutNullValue":167,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":261,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":648,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":233,"org.apache.commons.collections4.map.UnmodifiableMapTest.testUnmodifiable":219,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsContract":257,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":614,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":660,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":76,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":538,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsContract":653,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":109,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":178,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":504,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":699,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":348,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":65,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":541,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":64,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":673,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":385,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":465,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":486,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":731,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":78,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":16,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSimpleSerialization":136,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":468,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":539,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":540,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":372,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":536,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":217,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":512,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":276,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx5":275,"org.apache.commons.collections4.map.UnmodifiableMapTest.testCanonicalEmptyCollectionExists":255,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":355,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":482,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":345,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":573,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":608,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsContract":195,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":297,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":112,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":432,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":433,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":207,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":505,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":496,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":535,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":231,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRemoveChangesMap":325,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":656,"org.apache.commons.collections4.bag.TreeBagTest.testObjectEqualsSelf":721,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":128,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":530,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":611,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":714},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[0],"tindex":"1d619a1a-3e45-11e6-a396-dd27207044be","method":{"position":"org.apache.commons.collections4.map.LazyMap:96","type":"CtMethodImpl","sourcecode":"public static <V, K>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[],"tindex":"1d61e83b-3e45-11e6-a396-51d197e085bd","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:169","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[1,2],"tindex":"1d620f4c-3e45-11e6-a396-a9e6638b8195","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:97","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[3,4,5,6,7],"tindex":"1d620f4d-3e45-11e6-a396-5ffc49784cda","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:447","type":"CtMethodImpl","sourcecode":"public V put(int index, final K key, final V value) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = decorated();\n            if (m.containsKey(key)) {\n                final V V = m.remove(key);\n                final int int = java.util.List<K>.indexOf(key);\n                java.util.List<K>.remove(pos);\n                if (pos < index) {\n                    index--;\n                } \n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return result;\n            } else {\n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return null;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[8,9,10,11,12,13,14,15,16,17],"tindex":"1d620f4e-3e45-11e6-a396-1764fb7e64de","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:195","type":"CtMethodImpl","sourcecode":"public K getKey(final int index) {\n    if (index < 0) {\n        {\n            return K[][index];\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"1d62365f-3e45-11e6-a396-5356d78a9890","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.Flat3Map.this)) {\n                return true;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(obj);\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((int) != (other.size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                java.lang.Object java.lang.Object = null;\n                switch (int) {\n                    case 3 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 2 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 1 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                }\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115],"tindex":"1d623660-3e45-11e6-a396-67349018c1d3","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:215","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(int, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"1d625d71-3e45-11e6-a396-71709b6e95f7","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:106","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().getCount(object);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[],"tindex":"1d625d72-3e45-11e6-a396-7df896a7232f","method":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:109","type":"CtMethodImpl","sourcecode":"public T transform(final java.lang.Class<? extends T> input) {\n    if (input == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            try {\n                if (input == null) {\n                    throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Input object was not an instanceof Class, it was a null object\");\n                } \n                final java.lang.reflect.Constructor<? extends T> java.lang.reflect.Constructor<? extends T> = input.getConstructor(java.lang.Class<?>[]);\n                return con.newInstance(java.lang.Object[]);\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: The constructor must exist and be public \");\n            } catch (final java.lang.InstantiationException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: InstantiationException\" , ex);\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor must be public\" , ex);\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor threw an exception\" , ex);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146],"tindex":"1d628483-3e45-11e6-a396-1fc14ba4cbec","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                return bag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableSortedBag<E>(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"1d628484-3e45-11e6-a396-494161a6c9f3","method":{"position":"org.apache.commons.collections4.SetUtils:274","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> synchronizedSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return java.util.Collections.synchronizedSortedSet(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"1d628485-3e45-11e6-a396-a979f023a569","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:336","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object key, final java.lang.Object value) {\n    if (key != null) {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return false;\n            } \n            return coll.contains(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"1d628486-3e45-11e6-a396-d911808a1471","method":{"position":"org.apache.commons.collections4.SplitMapUtils:142","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[],"tindex":"1d62ab97-3e45-11e6-a396-213f4384e7e9","method":{"position":"org.apache.commons.collections4.CollectionUtils:1137","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Enumeration<? extends C> enumeration) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            while (enumeration.hasMoreElements()) {\n                changed |= collection.add(enumeration.nextElement());\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197],"tindex":"1d62ab98-3e45-11e6-a396-ab0a15fed248","method":{"position":"org.apache.commons.collections4.map.TransformedMap:76","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map == null) {\n        {\n            return new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[9,10,11],"tindex":"1d62ab99-3e45-11e6-a396-abfc45bb3bab","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:577","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key4 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key4"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[],"tindex":"1d62ab9a-3e45-11e6-a396-478f2b6ee12b","method":{"position":"org.apache.commons.collections4.SplitMapUtils:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.SplitMapUtils.WrappedPut.this)) {\n                return true;\n            } \n            return (obj instanceof org.apache.commons.collections4.SplitMapUtils.WrappedPut) && (((org.apache.commons.collections4.SplitMapUtils.WrappedPut<?, ?>)(obj)).org.apache.commons.collections4.Put<?, ?>.equals(org.apache.commons.collections4.SplitMapUtils.WrappedPut.this.org.apache.commons.collections4.Put<K, V>));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[198],"tindex":"1d62d2ab-3e45-11e6-a396-81030240abec","method":{"position":"org.apache.commons.collections4.map.LinkedMap:183","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index > 0) {\n                {\n                    return remove(get(index));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[],"tindex":"1d62d2ac-3e45-11e6-a396-cf32d24b4f81","method":{"position":"org.apache.commons.collections4.map.SingletonMap:534","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.SingletonMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != 1) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = other.entrySet().iterator().next();\n            return (isEqualKey(entry.getKey())) && (isEqualValue(entry.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"1d62d2ad-3e45-11e6-a396-739cbb01d7c4","method":{"position":"org.apache.commons.collections4.SplitMapUtils:79","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Get<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[199,200],"tindex":"1d62d2ae-3e45-11e6-a396-773fc5cbab14","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return null;\n            } \n            return super.getEntry(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[201,202,203,204,205,206,207,208],"tindex":"1d62d2af-3e45-11e6-a396-f9d75e6b64ca","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            removeIfExpired(key, now());\n            return super.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1069","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"1d62f9c0-3e45-11e6-a396-4550ab42648b","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:57","type":"CtMethodImpl","sourcecode":"static boolean isOutOfBoundsIndex(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)) {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[209],"tindex":"1d62f9c1-3e45-11e6-a396-2133befcfe9c","method":{"position":"org.apache.commons.collections4.list.LazyList:78","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.LazyList<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list == null) {\n        {\n            return new org.apache.commons.collections4.list.LazyList<E>(list , factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[210,211],"tindex":"1d62f9c2-3e45-11e6-a396-5927f97f6b0e","method":{"position":"org.apache.commons.collections4.ListUtils:400","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(list);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"1d62f9c3-3e45-11e6-a396-bb64a0b9a0a2","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:179","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (comparator == null) {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.set(index, comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(index);\n            } else {\n                java.util.BitSet.clear(index);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"1d62f9c4-3e45-11e6-a396-f3e6e5967ee6","method":{"position":"org.apache.commons.collections4.IteratorUtils:1000","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(iterator, 10);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:219","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[212,213,214,215,216],"tindex":"1d62f9c5-3e45-11e6-a396-4325a79d25e4","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:340","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> mutator) {\n    if (mutator == null) {\n        {\n            org.apache.commons.collections4.collection.CompositeCollection.this.org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> = mutator;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[201,217,202,203,204,205,206,207,208],"tindex":"1d6320d6-3e45-11e6-a396-8bef91b467d3","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:488","type":"CtMethodImpl","sourcecode":"private void removeIfExpired(final java.lang.Object key, final long now) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Long java.lang.Long = java.util.Map<java.lang.Object, java.lang.Long>.get(key);\n            if (isExpired(now, expirationTimeObject)) {\n                remove(key);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259],"tindex":"1d6320d7-3e45-11e6-a396-8d7d7c5b9359","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:62","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"1d6320d8-3e45-11e6-a396-731cd81b7839","method":{"position":"org.apache.commons.collections4.MapUtils:722","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key, final boolean defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (booleanObject == null) {\n                return defaultValue;\n            } \n            return booleanObject.booleanValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[260,261,262,263,264,265,29,266,267,268,269,270,271],"tindex":"1d6320d9-3e45-11e6-a396-61c91dc0fa9b","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:302","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            _putAll(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[272,273],"tindex":"1d6320da-3e45-11e6-a396-d1f07b30935f","method":{"position":"org.apache.commons.collections4.functors.MapTransformer:49","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        {\n            if (map == null) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            return new org.apache.commons.collections4.functors.MapTransformer<I, O>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl","sourcecode":"timeUnit == null"},"failures":[274],"tindex":"1d6347eb-3e45-11e6-a396-79c766a6d8f5","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:194","type":"CtMethodImpl","sourcecode":"private static long validateAndConvertToMillis(final long timeToLive, final java.util.concurrent.TimeUnit timeUnit) {\n    if (timeUnit == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (timeUnit == null) {\n                throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n            } \n            return java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.convert(timeToLive, timeUnit);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"timeUnit"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"1d6347ec-3e45-11e6-a396-b7f32e2dd7d9","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:73","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().removeValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[275,276,277],"tindex":"1d6347ed-3e45-11e6-a396-6fbb4a48ca09","method":{"position":"org.apache.commons.collections4.PredicateUtils:437","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[278],"tindex":"1d6347ee-3e45-11e6-a396-4b11a3485ca2","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:136","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"1d6347ef-3e45-11e6-a396-4d1868a31481","method":{"position":"org.apache.commons.collections4.ListUtils:442","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list == null) {\n        {\n            return org.apache.commons.collections4.list.TransformedList.transformingList(list, transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314],"tindex":"1d6347f0-3e45-11e6-a396-3545a0fc43db","method":{"position":"org.apache.commons.collections4.list.TreeList:413","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode.this;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = indexRelativeToMe < 0 ? getLeftSubTree() : getRightSubTree();\n            if (nextNode == null) {\n                return null;\n            } \n            return nextNode.get(indexRelativeToMe);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[283,284,280,294,297,298,299,300,310,311,312],"tindex":"1d636f01-3e45-11e6-a396-33e6b68ee1aa","method":{"position":"org.apache.commons.collections4.list.TreeList:570","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> remove(final int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return removeSelf();\n            } \n            if (indexRelativeToMe > 0) {\n                setRight(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) < 0) {\n                    (int)++;\n                } \n            } else {\n                setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) > 0) {\n                    (int)--;\n                } \n            }\n            recalcHeight();\n            return balance();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:151","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[],"tindex":"1d636f02-3e45-11e6-a396-17e251c86876","method":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:86","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.DualHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[315,316,317,318,319,320,321,231,322,323,324,325,326,327],"tindex":"1d636f03-3e45-11e6-a396-c1de81207a8f","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[],"tindex":"1d636f04-3e45-11e6-a396-93f55c8bc8a1","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:629","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key1 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"1d639615-3e45-11e6-a396-6d2788f03a81","method":{"position":"org.apache.commons.collections4.MapUtils:1247","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> synchronizedMap(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            return java.util.Collections.synchronizedMap(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[328],"tindex":"1d639616-3e45-11e6-a396-ffacd0c8f66d","method":{"position":"org.apache.commons.collections4.ClosureUtils:279","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures) {\n    if (closures == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[329],"tindex":"1d639617-3e45-11e6-a396-cd35283e205a","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:72","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            return new org.apache.commons.collections4.functors.OnePredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,316,361,362,363,317,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424],"tindex":"1d639618-3e45-11e6-a396-f59e1625053c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:195","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            return node == null ? null : node.getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[425,426],"tindex":"1d63bd29-3e45-11e6-a396-23cccb625083","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"1d63bd2a-3e45-11e6-a396-cb8f592884f5","method":{"position":"org.apache.commons.collections4.MapUtils:782","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key, final int defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return defaultValue;\n            } \n            return integerObject.intValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"1d63bd2b-3e45-11e6-a396-ad790acffdb4","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"1d63bd2c-3e45-11e6-a396-47f571f91ea1","method":{"position":"org.apache.commons.collections4.MapUtils:1521","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"1d63bd2d-3e45-11e6-a396-2107e9ad5e9e","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:330","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryAfter(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[8,9,10,11],"tindex":"1d63bd2e-3e45-11e6-a396-9fc2987ddcc8","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:532","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((((multi.size()) == 4) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[427,141],"tindex":"1d63e43f-3e45-11e6-a396-ebbcbae08623","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:60","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedBag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedBag<E>(bag , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[428,429,430,431,432,433,434,435,436,437],"tindex":"1d63e440-3e45-11e6-a396-4b9a868f2c9d","method":{"position":"org.apache.commons.collections4.MapUtils:968","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\nprivate static void verbosePrintInternal(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map, final org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>> lineage, final boolean debug) {\n    if (label != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            if (map == null) {\n                if (label != null) {\n                    out.print(label);\n                    out.print(\" = \");\n                } \n                out.println(\"null\");\n                return ;\n            } \n            if (label != null) {\n                out.print(label);\n                out.println(\" = \");\n            } \n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println(\"{\");\n            lineage.push(map);\n            for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : map.entrySet()) {\n                final java.lang.Object java.lang.Object = entry.getKey();\n                final java.lang.Object java.lang.Object = entry.getValue();\n                if ((childValue instanceof java.util.Map) && (!(lineage.contains(childValue)))) {\n                    org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, (childKey == null ? \"null\" : childKey), ((java.util.Map<?, ?>)(childValue)), lineage, debug);\n                } else {\n                    org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n                    out.print(childKey);\n                    out.print(\" = \");\n                    final int int = lineage.indexOf(childValue);\n                    if (lineageIndex == (-1)) {\n                        out.print(childValue);\n                    } else if (((lineage.size()) - 1) == lineageIndex) {\n                        out.print(\"(this Map)\");\n                    } else {\n                        out.print(((\"(ancestor[\" + ((((lineage.size()) - 1) - lineageIndex) - 1)) + \"] Map)\"));\n                    }\n                    if (debug && (childValue != null)) {\n                        out.print(' ');\n                        out.println(childValue.getClass().getName());\n                    } else {\n                        out.println();\n                    }\n                }\n            }\n            lineage.pop();\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println((debug ? \"} \" + (map.getClass().getName()) : \"}\"));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"label"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"1d63e441-3e45-11e6-a396-5de3cd990c87","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:180","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                {\n                    synchronized(java.lang.Object) {\n                        return decorated().retainAll(coll);\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[272],"tindex":"1d63e442-3e45-11e6-a396-d988348a1019","method":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:51","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformedPredicate<T>(transformer , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"1d640b53-3e45-11e6-a396-d7025fdd4996","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:105","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:93","type":"CtBinaryOperatorImpl","sourcecode":"end < start"},"failures":[438],"tindex":"1d640b54-3e45-11e6-a396-95a62c9c7da2","method":{"position":"org.apache.commons.collections4.IteratorUtils:316","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end) {\n    if (start < end) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end","end":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476],"tindex":"1d640b55-3e45-11e6-a396-8d6ff00cf508","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:140","type":"CtMethodImpl","sourcecode":"static boolean compare(final java.lang.Object a, final java.lang.Object b) {\n    if ((b == null) || (a == null)) {\n        {\n            return a == null ? b == null : a.equals(b);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[477,478],"tindex":"1d640b56-3e45-11e6-a396-f9ad47d337b8","method":{"position":"org.apache.commons.collections4.CollectionUtils:1567","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c) {\n    if ((b == null) || (b == null)) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, c, true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[347,368,369,380,382,383,392,399,410,411,412,417,420,421,422,423,424],"tindex":"1d640b57-3e45-11e6-a396-3746e1f5bba9","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:163","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            return (lookupKey(key)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"1d640b58-3e45-11e6-a396-d77b82a557de","method":{"position":"org.apache.commons.collections4.SplitMapUtils:158","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[479],"tindex":"1d643269-3e45-11e6-a396-89e433731bed","method":{"position":"org.apache.commons.collections4.PredicateUtils:517","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"1d64326a-3e45-11e6-a396-4d86df684847","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1043","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this, index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[8,9,10,11],"tindex":"1d64326b-3e45-11e6-a396-a9d803b1710a","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:384","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((multi.size()) == 3) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[480,481,482,483,484,485,486,487,488,489,164,490,491,492,493,494,495,496,497],"tindex":"1d64326c-3e45-11e6-a396-cdcd7d685d68","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:139","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            return decorated().removeAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:71","type":"CtBinaryOperatorImpl","sourcecode":"trie == null"},"failures":[498],"tindex":"1d64326d-3e45-11e6-a396-05ab94396983","method":{"position":"org.apache.commons.collections4.TrieUtils:44","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie == null) {\n        {\n            return org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(trie);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"1d64597e-3e45-11e6-a396-9d96c5ce2ef2","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:72","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            return decorated().add(object, count);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[499,500,182,501,263,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,264,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,266,559,560,198,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,267,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,16],"tindex":"1d64597f-3e45-11e6-a396-13fcf41313ac","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:262","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if ((entry.getValue()) == null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = link;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"1d645980-3e45-11e6-a396-55fc5d017f06","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1051","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<?, V>.containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"1d645981-3e45-11e6-a396-6b28af294601","method":{"position":"org.apache.commons.collections4.MapUtils:526","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key, final java.lang.Float defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,535,545,548,549,552,553,554,555,556,30,625,626,627,628,629,630,631,632,583,593,596,597,600,601,602,603,604,633,634,635,636,637,638,639,640,641],"tindex":"1d648092-3e45-11e6-a396-4d28e2226d6a","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:564","type":"CtMethodImpl","sourcecode":"protected void removeMapping(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if ((entry.getValue()) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            removeEntry(entry, hashIndex, previous);\n            (int)--;\n            destroyEntry(entry);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[499],"tindex":"1d648093-3e45-11e6-a396-a1ae06a66c3c","method":{"position":"org.apache.commons.collections4.SplitMapUtils:184","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[642,643],"tindex":"1d648094-3e45-11e6-a396-cb544c7e73d6","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1240","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntryInSubtree(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> parentOfSubtree) {\n    if (node == null) {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, parentOfSubtree);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[330,331,332,333,334,335,339,340,341,342,336,337,338,344,345,343,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,316,361,362,363,317,364,365,366,367,368,369,370,371,372,373,374,379,380,381,382,383,384,376,377,378,386,387,385,389,390,388,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424],"tindex":"1d648095-3e45-11e6-a396-a960b6dcbfc5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1866","type":"CtMethodImpl","sourcecode":"private void setLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            if ((node.getParent(dataElement)) == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[],"tindex":"1d648096-3e45-11e6-a396-c73d38ee1863","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:143","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 1) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[279,280,281,282,283,284,285,286,644,645,287,288,289,290,646,647,291,292,648,649,293,650,651,294,295,296,297,298,299,300,301,302,303,304,652,305,306,307,308,309,310,311,312,313,314,653,654],"tindex":"1d64a7a7-3e45-11e6-a396-cb3d6e5cf8b4","method":{"position":"org.apache.commons.collections4.list.TreeList:286","type":"CtMethodImpl","sourcecode":"private void checkInterval(final int index, final int startIndex, final int endIndex) {\n    if (index > 0) {\n        {\n            if ((index < startIndex) || (index > endIndex)) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + index) + \", size=\") + (size())));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtInvocationImpl","sourcecode":"h.isInternalNode()"},"failures":[],"tindex":"1d64a7a8-3e45-11e6-a396-9b14e3237450","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:531","type":"CtMethodImpl","sourcecode":"private void removeInternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (h.isInternalNode()) {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isInternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an internal Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.int = h.int;\n            {\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) && ((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != h)) {\n                    p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                } else {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                }\n                if ((child.int) > (parent.int)) {\n                    child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n                } \n            }\n            {\n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } else {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                }\n            }\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false"},"failures":[],"tindex":"1d64ceb9-3e45-11e6-a396-016d97bcb552","method":{"position":"org.apache.commons.collections4.map.LinkedMap:238","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[315],"tindex":"1d64ceba-3e45-11e6-a396-7d4d51309282","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[655,656],"tindex":"1d64cebb-3e45-11e6-a396-15e5a72a00c9","method":{"position":"org.apache.commons.collections4.MapUtils:1204","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (map == null) || (map.isEmpty());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"1d64cebc-3e45-11e6-a396-99e341851117","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1866","type":"CtMethodImpl","sourcecode":"private void setLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            if ((node.getParent(dataElement)) == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[657,658,659,660,30],"tindex":"1d64cebd-3e45-11e6-a396-9d30a42c73df","method":{"position":"org.apache.commons.collections4.map.Flat3Map:437","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(key);\n            } \n            if ((int) == 0) {\n                return null;\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        return null;\n                    case 2 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        return null;\n                    case 1 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 0;\n                            return old;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            return null;\n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            return null;\n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 0;\n                                return old;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[661,662],"tindex":"1d64f5ce-3e45-11e6-a396-c3ccd3dd01ba","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:298","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            if (!(contains(object))) {\n                decorated().add(object);\n                java.util.List<E>.add(index, object);\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[],"tindex":"1d64f5cf-3e45-11e6-a396-9f39f4497a35","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,663,353,664,354,355,356,357,358,359,360,316,361,362,363,317,364,365,366,367,368,369,370,665,666,667,668,669,670,671,672],"tindex":"1d651ce0-3e45-11e6-a396-bd1a82b82649","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final org.apache.commons.collections4.OrderedBidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedBidiMap<K, V> org.apache.commons.collections4.OrderedBidiMap<K, V> = ((org.apache.commons.collections4.OrderedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"1d651ce1-3e45-11e6-a396-95dfbbde1b1f","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:547","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[344,345,347,348,349,350,352,389,390,391,392,393,394,395,397,403,673,674],"tindex":"1d651ce2-3e45-11e6-a396-d1d93dbeb868","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:681","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> leastNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getLeft(dataElement)) != null) {\n                    rval = rval.getLeft(dataElement);\n                }\n            } \n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"1d651ce3-3e45-11e6-a396-13d2a20af2d3","method":{"position":"org.apache.commons.collections4.map.LinkedMap:183","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index > 0) {\n                {\n                    return remove(get(index));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"1d651ce4-3e45-11e6-a396-df09b0238451","method":{"position":"org.apache.commons.collections4.SetUtils:326","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.set.TransformedSortedSet.transformingSortedSet(set, transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtBinaryOperatorImpl","sourcecode":"cursor == null"},"failures":[675,676,677,678,679],"tindex":"1d651ce5-3e45-11e6-a396-d3587dab6282","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:288","type":"CtMethodImpl","sourcecode":"protected void unregisterCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = ref.get();\n                if (cur == null) {\n                    it.remove();\n                } else if (cur == cursor) {\n                    ref.clear();\n                    it.remove();\n                    break;\n                } \n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"1d6543f6-3e45-11e6-a396-db107cf1a684","method":{"position":"org.apache.commons.collections4.ClosureUtils:255","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, falseClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715],"tindex":"1d6543f7-3e45-11e6-a396-33378f3e27ad","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntrySet().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false"},"failures":[344,345,347,348,349,352,389,390,392,393,394,397,399,402,403],"tindex":"1d6543f8-3e45-11e6-a396-3bb3fa42d02d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1484","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupKey(obj)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"1d6543f9-3e45-11e6-a396-f3066e4b22e4","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[716,717,718,719,720,721,722,723,724,725,119,120,134,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763],"tindex":"1d6543fa-3e45-11e6-a396-b52877c1d136","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:538","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == (org.apache.commons.collections4.bag.AbstractMapBag.this)) {\n                return true;\n            } \n            if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.Bag<?> org.apache.commons.collections4.Bag<?> = ((org.apache.commons.collections4.Bag<?>)(object));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n                if ((other.getCount(element)) != (getCount(element))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"1d656b0b-3e45-11e6-a396-6160f2be80f2","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:180","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                {\n                    synchronized(java.lang.Object) {\n                        return decorated().retainAll(coll);\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"1d656b0c-3e45-11e6-a396-b7069b90a31c","method":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        {\n            if (classToInstantiate == null) {\n                throw new java.lang.IllegalArgumentException(\"Class to instantiate must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate);\n            } \n            return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate , paramTypes , args);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:52","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[764],"tindex":"1d656b0d-3e45-11e6-a396-43d7df624a0b","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:46","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final org.apache.commons.collections4.OrderedMapIterator<K, ? extends V> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398408/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"OrderedMapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMapIterator<K, V> org.apache.commons.collections4.OrderedMapIterator<K, V> = ((org.apache.commons.collections4.OrderedMapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator<K, V>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}