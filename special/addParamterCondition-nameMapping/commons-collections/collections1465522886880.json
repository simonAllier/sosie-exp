{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":590,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContainsAll":650,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":635,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":832,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":523,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":699,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":854,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":300,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":627,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":776,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testSimpleSerialization":282,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":289,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":376,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":721,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx4":68,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testRemove":475,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":100,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":517,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":598,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":141,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetIteratorRemoveChangesMap":394,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":931,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":202,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":23,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsContract":201,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":143,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":558,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":236,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":501,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":884,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":782,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":561,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":815,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":268,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":338,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":833,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":556,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":846,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":568,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":108,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":180,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":594,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":552,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":708,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":420,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":895,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":548,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":363,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":393,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":16,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":716,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":199,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":680,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":889,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":235,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":943,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":703,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":626,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":539,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":875,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":934,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":858,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":139,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":389,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":146,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":693,"org.apache.commons.collections4.list.TreeListTest.testFullListSerialization":33,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":932,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":608,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":322,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":819,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testObjectHashCodeEqualsContract":738,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":792,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":120,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":599,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":793,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":354,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":794,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":301,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":447,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":417,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableIteratorImmutability":244,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullIterator":477,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":775,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":364,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":464,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":591,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":639,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":443,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":560,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":860,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":331,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":421,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":467,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":606,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":227,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":115,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":26,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":107,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":207,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":173,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":533,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":857,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":158,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":920,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":927,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":921,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":922,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableIteratorIteration":243,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":2,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":695,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":183,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":765,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":537,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":351,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":178,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":179,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":177,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":153,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":890,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":903,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":576,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":362,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":621,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":747,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":939,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":197,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":849,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":853,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":874,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":122,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":307,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":713,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":54,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSerializeDeserializeThenCompare":485,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":830,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":820,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":894,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":30,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":246,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":20,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":841,"org.apache.commons.collections4.list.TreeListTest.testFullListCompatibility":34,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":769,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":222,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":424,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":624,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":109,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":45,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":346,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":87,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":916,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":70,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":399,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":348,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":374,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":365,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":573,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":757,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":607,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":834,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":835,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":836,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":232,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":631,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":461,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":57,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":871,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":723,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":683,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":495,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":813,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":334,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":673,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":41,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":188,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEqualsNull":480,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":416,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":822,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":330,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":432,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":521,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":559,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorSet":474,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":550,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":801,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":710,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":698,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":855,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":361,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":729,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":646,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":148,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":587,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":210,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":453,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":286,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":172,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":569,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":596,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testObjectEqualsSelf":736,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":918,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":589,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":250,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":405,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":184,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":430,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":233,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":419,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":131,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":78,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":935,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":345,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":127,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":234,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":844,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":356,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":584,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":870,"org.apache.commons.collections4.functors.AllPredicateTest.nullCollectionToGetInstance":69,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":154,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":110,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":142,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testObjectHashCodeEqualsSelfHashCode":284,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":883,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullStream":89,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":929,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":459,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":170,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":43,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":818,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":31,"org.apache.commons.collections4.list.TreeListTest.testCollectionSize":46,"org.apache.commons.collections4.set.CompositeSetTest.testSimpleSerialization":240,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":930,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":315,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":79,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":328,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":230,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":37,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":11,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsSelfHashCode":63,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":493,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":116,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":762,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":460,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":519,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":473,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":536,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":62,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":121,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":147,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":378,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":14,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":455,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsContract":483,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":754,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":678,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":799,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":908,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":439,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":126,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":271,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":781,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":457,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":76,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":726,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":643,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":171,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":492,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":529,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":774,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":136,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":755,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":50,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":137,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":442,"org.apache.commons.collections4.map.HashedMapTest.testClone":766,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":138,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":335,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":578,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":204,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":831,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":451,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":748,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":909,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":449,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":398,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":902,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsContract":211,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":435,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":251,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":532,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":917,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":526,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":862,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":221,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":739,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":224,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":209,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":749,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":488,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":462,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":203,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":658,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":359,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":511,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":17,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":505,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":226,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":868,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":40,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":266,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":770,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":24,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":182,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":593,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":802,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":814,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":238,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":507,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":850,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":734,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":651,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":486,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":682,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":295,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":48,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":25,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":696,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testFullIterator":276,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":386,"org.apache.commons.collections4.list.TreeListTest.testBug35258":55,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":892,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":450,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":39,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":342,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":49,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":808,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":805,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":441,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":829,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":579,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":133,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":134,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":500,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":842,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":135,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":670,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":914,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":811,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":810,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":809,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":936,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":940,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":572,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":787,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":514,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":847,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":701,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":503,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":783,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":377,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":575,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testObjectEqualsSelf":278,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":823,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":61,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":452,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":882,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":242,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":152,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":344,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":567,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":165,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":566,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":437,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":565,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":668,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":130,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":885,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testRemove":277,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":380,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":873,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":329,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":454,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":402,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":247,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":395,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":761,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":385,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":434,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":258,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":261,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":641,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":704,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":124,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":661,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":74,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":166,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":249,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":742,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":731,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":750,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":1,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFirstKey":371,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":861,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":887,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":499,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":391,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":28,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":299,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":637,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":332,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":412,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":256,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":784,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":190,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":664,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":433,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":228,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsContract":64,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":379,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":541,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":592,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":773,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":581,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":93,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":155,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":563,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":446,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":375,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":95,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":272,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":241,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testObjectHashCodeEqualsContract":283,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":900,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":919,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":848,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":169,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":800,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":602,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":722,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":373,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":663,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":926,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":525,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":798,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":671,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":795,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":324,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":248,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":186,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":684,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":339,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":944,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":941,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":353,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":193,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":612,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":840,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":36,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":156,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":318,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":144,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":648,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":522,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":604,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":605,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":101,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":164,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":509,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":656,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIsEmpty":297,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":513,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":119,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":369,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray2":287,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":231,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":418,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":679,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":756,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":438,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":824,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":638,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyIterator":476,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":129,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":368,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":392,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":807,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":117,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":13,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":288,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":728,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":406,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":497,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":557,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":12,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":686,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.initializationError":352,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":132,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":381,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":768,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":732,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":265,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorOrder":471,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":263,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":427,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":510,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":615,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":746,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":616,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":614,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testCanonicalFullCollectionExists":279,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":167,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":367,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":779,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":764,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream":3,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":865,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalFullCollectionExists":237,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":4,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":102,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":337,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":181,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":640,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":151,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":103,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":654,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":0,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":886,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":309,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":741,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":326,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":160,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":245,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":588,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":83,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":327,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":291,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":771,"org.apache.commons.collections4.list.TreeListTest.testSerializeDeserializeThenCompare":35,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":88,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicateEx1":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":586,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":717,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":689,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":409,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":923,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":225,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":302,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":577,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":644,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":191,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":350,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":8,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectEqualsSelf":478,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":925,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":924,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":336,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":763,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalEmptyCollectionExists":239,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testSerializeDeserializeThenCompare":735,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":825,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":804,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":215,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testCanonicalEmptyCollectionExists":281,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":314,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":494,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":585,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":629,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":712,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":866,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":827,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":508,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":403,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":543,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":440,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":816,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":44,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":410,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":264,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":429,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":436,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":106,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":715,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":217,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":613,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":817,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":901,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":262,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":891,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":603,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":229,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":675,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":609,"org.apache.commons.collections4.list.TreeListTest.testRemove":53,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":730,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray2":198,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":707,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":175,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":174,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":38,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":415,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":595,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":502,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":176,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":59,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":298,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":355,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testEqualsNull":737,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":839,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":838,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":837,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":18,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":411,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":58,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":785,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":915,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":498,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":42,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":665,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":898,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":580,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":619,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":692,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":618,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":617,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":269,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":390,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":319,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":458,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":727,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":780,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":872,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":697,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":384,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":397,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":382,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":254,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":383,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":118,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":744,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":666,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":685,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":400,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":425,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":796,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":360,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":535,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":347,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":743,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":759,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":491,"org.apache.commons.collections4.list.TreeListTest.testListEquals":15,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":662,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":305,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":7,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":601,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":681,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":516,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":899,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":408,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":303,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":304,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":325,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":677,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":465,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":22,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":80,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalEmptyCollectionExists":481,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":104,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":317,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":545,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":5,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":725,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":778,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":826,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":709,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":628,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":667,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":534,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":512,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":468,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":489,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":642,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":634,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":554,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":625,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiableIterator":259,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":205,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":96,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":163,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":540,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":308,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":524,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testLastKey":370,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":401,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":293,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":466,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":220,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":56,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":123,"org.apache.commons.collections4.QueueUtilsTest.testEmptyQueue":632,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":504,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":600,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":777,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":125,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":422,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":213,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":752,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":531,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":912,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":388,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":111,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testOrderedMapIterator":469,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":767,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":583,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":490,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":292,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":366,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":528,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":655,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":753,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":530,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":843,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiMapIteratorSet":487,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":113,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":185,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":562,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":928,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":145,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":212,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":911,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":358,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":724,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":888,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":32,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":340,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":803,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":140,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":192,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":672,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":733,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":711,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":879,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":880,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":881,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":316,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":933,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":907,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":216,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":546,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":90,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":428,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":9,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":719,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":195,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":128,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":630,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":687,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testEqualsNull":280,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":189,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":426,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":910,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":85,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":812,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":786,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetIteratorRemoveChangesMap":387,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":547,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":863,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray2":208,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":84,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":86,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":29,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":296,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":320,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":714,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":444,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":538,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":19,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":157,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":688,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":404,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":574,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":718,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":828,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":549,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":751,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":253,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":343,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":864,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":423,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":896,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":942,"org.apache.commons.collections4.set.CompositeSetTest.testContains":214,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalFullCollectionExists":479,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":21,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":797,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":72,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":496,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":620,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":506,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":159,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":657,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":702,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":414,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":223,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":99,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":904,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":52,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":772,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIsEmpty":290,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":75,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":706,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":431,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":194,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":313,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":321,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":47,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyMapIterator":472,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":255,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":260,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":98,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSimpleSerialization":482,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":445,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":913,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":570,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx4":67,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":564,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":396,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":357,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":270,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":187,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":553,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":257,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":91,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":310,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":312,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":311,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":372,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":852,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":484,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":745,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray2":294,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":851,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":168,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":676,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":645,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":252,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":571,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":527,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":456,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":622,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":162,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":610,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":705,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":161,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":582,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":636,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":323,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":112,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":845,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":518,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":877,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":878,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":876,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":788,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":897,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":341,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":694,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":611,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":413,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory":470,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":869,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":653,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":905,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":544,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":623,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":660,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":674,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":789,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIsEmpty":196,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":790,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":520,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":597,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":700,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":806,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":267,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testSerializeDeserializeThenCompare":285,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":555,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testDecorateFactory":273,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":551,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":73,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":906,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":859,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":649,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":690,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":647,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":60,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":633,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":856,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":82,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":867,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":652,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testIterator":274,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":65,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":938,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":758,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":515,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":306,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":659,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":218,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":463,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":448,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":219,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":669,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":937,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":542,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":200,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":691,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":105,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":893,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":81,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":66,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":333,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testEmptyIterator":275,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":720,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":791,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":740,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":821,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":27,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":92,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":94,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":760,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":114,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":150,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIsEmpty":206,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":77,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":407,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":349},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtBinaryOperatorImpl","sourcecode":"((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))"},"failures":[],"tindex":"725a462f-2eac-11e6-833a-23b4091b5944","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:143","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((list1.size()) != (list2.size()))) {\n        {\n            return decorated().retainAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:784","type":"CtBinaryOperatorImpl","sourcecode":"integerObject == null"},"failures":[0,1],"tindex":"725b0880-2eac-11e6-833a-671a0f0ea9ab","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:230","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = java.util.Set<E>.remove(object);\n            if (result) {\n                super.remove(object);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"integerObject":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[],"tindex":"725b2f91-2eac-11e6-833a-c97973b6375f","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:344","type":"CtMethodImpl","sourcecode":"public java.lang.Object remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Object java.lang.Object = java.util.List<E>.remove(index);\n            remove(obj);\n            return obj;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:208","type":"CtBinaryOperatorImpl","sourcecode":"entry == (header)"},"failures":[],"tindex":"725b56a2-2eac-11e6-833a-6ff4305ed704","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:317","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryBefore(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        {\n            if (entry == entry) {\n                {\n                    return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","header":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtBinaryOperatorImpl","sourcecode":"count != null"},"failures":[],"tindex":"725b56a3-2eac-11e6-833a-873d45d3c2a8","method":{"position":"org.apache.commons.collections4.CollectionUtils:111","type":"CtMethodImpl","sourcecode":"private final int getFreq(final java.lang.Object obj, final java.util.Map<?, java.lang.Integer> freqMap) {\n    if (obj != null) {\n        {\n            final java.lang.Integer java.lang.Integer = freqMap.get(obj);\n            if (count != null) {\n                return count.intValue();\n            } \n            return 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"725b7db4-2eac-11e6-833a-93a6f2bebc1c","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[2,3,4,5],"tindex":"725b7db5-2eac-11e6-833a-2ff7f7038f12","method":{"position":"org.apache.commons.collections4.MapUtils:915","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void verbosePrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (label != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"label"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[6],"tindex":"725ba4c6-2eac-11e6-833a-1b95605f0015","method":{"position":"org.apache.commons.collections4.PredicateUtils:487","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsExceptionPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((predicate == null) || (predicate == null)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.NullIsExceptionPredicate.nullIsExceptionPredicate(predicate);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtFieldReadImpl","sourcecode":"exhausted"},"failures":[7],"tindex":"725bcbd7-2eac-11e6-833a-9f3e1a789f81","method":{"position":"org.apache.commons.collections4.CollectionUtils:1588","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c, final boolean includeDuplicates) {\n    if (includeDuplicates) {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"The collections must not be null\");\n            } \n            if (c == null) {\n                throw new java.lang.IllegalArgumentException(\"The comparator must not be null\");\n            } \n            final int int = (a instanceof java.util.Collection<?>) && (b instanceof java.util.Collection<?>) ? java.lang.Math.max(1, ((((java.util.Collection<?>)(a)).size()) + (((java.util.Collection<?>)(b)).size()))) : 10;\n            final java.util.Iterator<O> java.util.Iterator<O> = new org.apache.commons.collections4.iterators.CollatingIterator<O>(c , a.iterator() , b.iterator());\n            if (includeDuplicates) {\n                return org.apache.commons.collections4.IteratorUtils.toList(iterator, totalSize);\n            } else {\n                final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>(totalSize);\n                O O = null;\n                while (iterator.hasNext()) {\n                    final O O = iterator.next();\n                    if ((lastItem == null) || (!(lastItem.equals(item)))) {\n                        mergedList.add(item);\n                    } \n                    lastItem = item;\n                }\n                mergedList.trimToSize();\n                return mergedList;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"exhausted":"includeDuplicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[8],"tindex":"725bf2e8-2eac-11e6-833a-d9afcbd69fe4","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:94","type":"CtBinaryOperatorImpl","sourcecode":"items == null"},"failures":[9,10],"tindex":"725c19f9-2eac-11e6-833a-c3731c8e574a","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:357","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"items":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry"},"failures":[9,11],"tindex":"725c19fa-2eac-11e6-833a-35c11c4fac86","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:404","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key4 instanceof java.util.Map.Entry) {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key4"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"tindex":"725c410b-2eac-11e6-833a-b9d3a177fdce","method":{"position":"org.apache.commons.collections4.list.TreeList:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> c) {\n    if ((c.size()) > (c.size())) {\n        {\n            if (c.isEmpty()) {\n                return false;\n            } \n            int += c.size();\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(c);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = (org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null ? cTree : org.apache.commons.collections4.list.TreeList.AVLNode<E>.addAll(cTree, int);\n            int += c.size();\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"c","list2":"c"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:764","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[50],"tindex":"725c8f2c-2eac-11e6-833a-571d7da06e09","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:81","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.collection.TransformedCollection<E> transformedCollection(final java.util.Collection<E> collection, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (collection == null) {\n        {\n            final org.apache.commons.collections4.collection.TransformedCollection<E> org.apache.commons.collections4.collection.TransformedCollection<E> = new org.apache.commons.collections4.collection.TransformedCollection<E>(collection , transformer);\n            if ((collection.size()) > 0) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(collection.toArray()));\n                collection.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.DefaultedMap:128","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"725c8f2d-2eac-11e6-833a-951284e7a598","method":{"position":"org.apache.commons.collections4.MapUtils:1664","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (transformerFactory == null) {\n        {\n            return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, transformerFactory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformerFactory"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1006","type":"CtBinaryOperatorImpl","sourcecode":"lineageIndex == (-1)"},"failures":[],"tindex":"725c8f2e-2eac-11e6-833a-6fcc80ec4f59","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:272","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<E>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lineageIndex":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:341","type":"CtBinaryOperatorImpl","sourcecode":"(values) != null"},"failures":[],"tindex":"725cb63f-2eac-11e6-833a-d19c58fce41b","method":{"position":"org.apache.commons.collections4.ListUtils:126","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> subtract(final java.util.List<E> list1, final java.util.List<? extends E> list2) {\n    if (list1 != null) {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>();\n            final org.apache.commons.collections4.bag.HashBag<E> org.apache.commons.collections4.bag.HashBag<E> = new org.apache.commons.collections4.bag.HashBag<E>(list2);\n            for (final E E : list1) {\n                if (!(bag.remove(e, 1))) {\n                    result.add(e);\n                } \n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"list1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtBinaryOperatorImpl","sourcecode":"index >= (size)"},"failures":[51,52,53,54,55,56,57,12,58,13,14,15,16,17,59,18,19,20,60,21,22,61,23,24,25,26,27,28,29,30,31,32,62,36,37,38,39,40,41,42,43,44,45,48,49,63,64],"tindex":"725cb640-2eac-11e6-833a-0398e11abf33","method":{"position":"org.apache.commons.collections4.list.TreeList:286","type":"CtMethodImpl","sourcecode":"private void checkInterval(final int index, final int startIndex, final int endIndex) {\n    if (index >= index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < startIndex) || (index > endIndex)) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + index) + \", size=\") + (size())));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[65,66,67,68,69],"tindex":"725cdd51-2eac-11e6-833a-d9683788f390","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:96","type":"CtMethodImpl","sourcecode":"static <T>org.apache.commons.collections4.Predicate<T>[] validate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = new org.apache.commons.collections4.Predicate[predicates.size()];\n            int int = 0;\n            for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : predicates) {\n                preds[i] = predicate;\n                if ((preds[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n                i++;\n            }\n            return preds;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[70,71,72,73,74,75,76,77,78,79],"tindex":"725cdd52-2eac-11e6-833a-c7175e557cea","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> collectionSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.CollectionSortedBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:548","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[79],"tindex":"725cdd53-2eac-11e6-833a-bfa272d7299b","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(object, 1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:261","type":"CtUnaryOperatorImpl","sourcecode":"!(obj1 == null ? obj2 == null : obj1.equals(obj2))"},"failures":[],"tindex":"725d0464-2eac-11e6-833a-696c191f1c30","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(value == null ? value == null : obj1.equals(obj2))) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (value == null) {\n                        for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                            while (entry != null) {\n                                if ((entry.getValue()) == null) {\n                                    return true;\n                                } \n                                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                            }\n                        }\n                    } else {\n                        for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                            while (entry != null) {\n                                if (isEqualValue(value, entry.getValue())) {\n                                    return true;\n                                } \n                                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                            }\n                        }\n                    }\n                    return false;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj2":"value","obj1":"value"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"725d2b75-2eac-11e6-833a-2de813d4a8fc","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:246","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                result |= remove(name);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[9,10,11,80,81],"tindex":"725d2b76-2eac-11e6-833a-7b7b862f7706","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:223","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2) {\n    if ((key2 instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[82,83],"tindex":"725d5287-2eac-11e6-833a-87ded9a9bf4a","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:254","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:916","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"725d5288-2eac-11e6-833a-3d61be1ac1b9","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:169","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake getMiddleSnake(final int start1, final int end1, final int start2, final int end2) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(end1)) {\n        {\n            final int int = end1 - start1;\n            final int int = end2 - start2;\n            if ((m == 0) || (n == 0)) {\n                return null;\n            } \n            final int int = m - n;\n            final int int = n + m;\n            final int int = ((sum % 2) == 0 ? sum : sum + 1) / 2;\n            int[][(1 + offset)] = start1;\n            int[][(1 + offset)] = end1 + 1;\n            for (int int = 0 ; d <= offset ; ++d) {\n                for (int int = -d ; k <= d ; k += 2) {\n                    final int int = k + offset;\n                    if ((k == (-d)) || ((k != d) && ((int[][(i - 1)]) < (int[][(i + 1)])))) {\n                        int[][i] = int[][(i + 1)];\n                    } else {\n                        int[][i] = (int[][(i - 1)]) + 1;\n                    }\n                    int int = int[][i];\n                    int int = ((x - start1) + start2) - k;\n                    while (((x < end1) && (y < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = ++x;\n                        ++y;\n                    }\n                    if ((((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))) {\n                        if ((int[][(i - delta)]) <= (int[][i])) {\n                            return buildSnake(int[][(i - delta)], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n                for (int int = delta - d ; k <= (delta + d) ; k += 2) {\n                    final int int = (k + offset) - delta;\n                    if ((k == (delta - d)) || ((k != (delta + d)) && ((int[][(i + 1)]) <= (int[][(i - 1)])))) {\n                        int[][i] = (int[][(i + 1)]) - 1;\n                    } else {\n                        int[][i] = int[][(i - 1)];\n                    }\n                    int int = (int[][i]) - 1;\n                    int int = ((x - start1) + start2) - k;\n                    while (((x >= start1) && (y >= start2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = x--;\n                        y--;\n                    }\n                    if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n                        if ((int[][i]) <= (int[][(i + delta)])) {\n                            return buildSnake(int[][i], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n            }\n            throw new java.lang.RuntimeException(\"Internal Error\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"end1"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[84,2,85,86,87,88,3,89,90,91,92,93,94,95,4,96,5,97],"tindex":"725d7999-2eac-11e6-833a-07d641733e72","method":{"position":"org.apache.commons.collections4.MapUtils:1037","type":"CtMethodImpl","sourcecode":"private static void printIndent(final java.io.PrintStream out, final int indent) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(indent)) {\n        {\n            if (indent == indent) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    for (int int = 0 ; i < indent ; i++) {\n                        out.print(org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.java.lang.String);\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"indent","end":"indent"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtBinaryOperatorImpl","sourcecode":"mapSize == 0"},"failures":[98,99],"tindex":"725da0aa-2eac-11e6-833a-07abb15479c7","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:851","type":"CtMethodImpl","sourcecode":"private java.util.SortedMap<K, V> getPrefixMapByBits(final K key, final int offsetInBits, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        {\n            final int int = offsetInBits + lengthInBits;\n            if (offsetLength > (lengthInBits(key))) {\n                throw new java.lang.IllegalArgumentException(((((offsetInBits + \" + \") + lengthInBits) + \" > \") + (lengthInBits(key))));\n            } \n            if (offsetLength == 0) {\n                return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this;\n            } \n            return new PrefixRangeMap(key , offsetInBits , lengthInBits);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mapSize":"lengthInBits"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[100,101,102,103],"tindex":"725eb21b-2eac-11e6-833a-dd5cf26ecb0b","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:362","type":"CtMethodImpl","sourcecode":"public int size(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return 0;\n            } \n            return coll.size();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:153","type":"CtBinaryOperatorImpl","sourcecode":"answer != null"},"failures":[104,105],"tindex":"725eb21c-2eac-11e6-833a-c77776285add","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:186","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            V V = null;\n            if (java.util.Map<K, V>.containsKey(key)) {\n                value = java.util.Map<K, V>.remove(key);\n                java.util.Map<V, K>.remove(value);\n            } \n            return value;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtBinaryOperatorImpl","sourcecode":"estimatedSize < 1"},"failures":[106,107,108,109],"tindex":"725eb21d-2eac-11e6-833a-e3f0d19b7807","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:228","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final int index) {\n    if (index < 1) {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" is less than zero\"));\n            } \n            if (index >= (int)) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" is invalid for size \") + (int)));\n            } \n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            if (index < ((int) / 2)) {\n                entry = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                }\n            } else {\n                entry = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                }\n            }\n            return entry;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"estimatedSize":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:127","type":"CtBinaryOperatorImpl","sourcecode":"(size % 2) == 0"},"failures":[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191],"tindex":"725ed92e-2eac-11e6-833a-8f953ab6824e","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:470","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V> createEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next, final int hashCode, final K key, final V value) {\n    if ((hashCode % 2) == 0) {\n        {\n            return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>(org.apache.commons.collections4.map.AbstractReferenceMap.this , next , hashCode , key , value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"hashCode"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"725f003f-2eac-11e6-833a-1fbdd5b5702d","method":{"position":"org.apache.commons.collections4.set.CompositeSet:282","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"725f0040-2eac-11e6-833a-9f1656aafe19","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:317","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryBefore(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        {\n            if (entry == entry) {\n                {\n                    return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtBinaryOperatorImpl","sourcecode":"(entry.after) != (header)"},"failures":[],"tindex":"725f0041-2eac-11e6-833a-e1403afbbc1a","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:726","type":"CtMethodImpl","sourcecode":"protected K entryKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != entry) {\n        {\n            return entry.getKey();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","header":"entry","after":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:252","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,70,71,72,73,74,77,78,79,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468],"tindex":"725f2752-2eac-11e6-833a-d1cc34d16ff7","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:47","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableIterator<E>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:52","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"tindex":"725f4e63-2eac-11e6-833a-39f6fd121775","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:46","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final org.apache.commons.collections4.OrderedMapIterator<K, ? extends V> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"OrderedMapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMapIterator<K, V> org.apache.commons.collections4.OrderedMapIterator<K, V> = ((org.apache.commons.collections4.OrderedMapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator<K, V>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[209],"tindex":"725f4e64-2eac-11e6-833a-4f8a599f6503","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[],"tindex":"725f4e65-2eac-11e6-833a-b743e58a6a90","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                {\n                    throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:128","type":"CtBinaryOperatorImpl","sourcecode":"maxSize < 1"},"failures":[488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546],"tindex":"725f7576-2eac-11e6-833a-3db566c174fc","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:111","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 1) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            return node.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"maxSize":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl","sourcecode":"timeUnit == null"},"failures":[547,548,549,550,551,552,553,554,555,556,557,444,486,558,445,446,559,447,448,449,450,560,451,561,562,563,564,452,565,566,567,568,569,570,453,571,572,573,454,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631],"tindex":"725f9c87-2eac-11e6-833a-1d13efac1c43","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1229","type":"CtMethodImpl","sourcecode":"private static void checkValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"725fc398-2eac-11e6-833a-b183c32a69d6","method":{"position":"org.apache.commons.collections4.ListUtils:75","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> defaultIfNull(final java.util.List<T> list, final java.util.List<T> defaultList) {\n    if ((defaultList.isEmpty()) && (list.isEmpty())) {\n        {\n            if (defaultList == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return list == null ? defaultList : list;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"defaultList"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtFieldReadImpl","sourcecode":"slotFilled"},"failures":[],"tindex":"725fc399-2eac-11e6-833a-cb8c701e7837","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1945","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.SortedMap<K, V> createRangeMap(final K fromKey, final boolean fromInclusive, final K toKey, final boolean toInclusive) {\n    if (toInclusive) {\n        {\n            return new RangeEntryMap(fromKey , fromInclusive , toKey , toInclusive);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"slotFilled":"toInclusive"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtFieldReadImpl","sourcecode":"slotFilled"},"failures":[],"tindex":"725feaaa-2eac-11e6-833a-8fbb3f57ae57","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1817","type":"CtMethodImpl","sourcecode":"protected boolean inToRange(final K key, final boolean forceInclusive) {\n    if (forceInclusive) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final K K = getToKey();\n            final boolean boolean = isToInclusive();\n            final int int = getKeyAnalyzer().compare(key, toKey);\n            if (toInclusive || forceInclusive) {\n                return ret <= 0;\n            } else {\n                return ret < 0;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"slotFilled":"forceInclusive"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.ReplacementsFinder:90","type":"CtBinaryOperatorImpl","sourcecode":"(pendingDeletions.isEmpty()) && (pendingInsertions.isEmpty())"},"failures":[],"tindex":"725feaab-2eac-11e6-833a-99ae7cff890d","method":{"position":"org.apache.commons.collections4.ListUtils:75","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> defaultIfNull(final java.util.List<T> list, final java.util.List<T> defaultList) {\n    if ((defaultList.isEmpty()) && (list.isEmpty())) {\n        {\n            if (defaultList == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return list == null ? defaultList : list;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingDeletions":"defaultList","pendingInsertions":"list"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[632,633],"tindex":"725feaac-2eac-11e6-833a-0d4d3ea95ab0","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[634,98,99],"tindex":"726011bd-2eac-11e6-833a-578eb780303e","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1195","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> previousEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> start) {\n    if (start == null) {\n        {\n            if ((start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                throw new java.lang.IllegalArgumentException(\"must have come from somewhere!\");\n            } \n            if ((start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == start) {\n                if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                    return start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    return followRight(start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n                }\n            } else {\n                org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                while (((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (node == (node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n                    node = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n                if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                    return null;\n                } \n                if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                    if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n                            return null;\n                        } else {\n                            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        }\n                    } else {\n                        return node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    }\n                } else {\n                    return followRight(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"start"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[635,636,413,637,638,639],"tindex":"72605fde-2eac-11e6-833a-5b64cafc9b7b","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"726086ef-2eac-11e6-833a-714cf1103560","method":{"position":"org.apache.commons.collections4.MapUtils:659","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return 0L;\n            } \n            return longObject.longValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:331","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"726086f0-2eac-11e6-833a-47e0e6bf7290","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:733","type":"CtMethodImpl","sourcecode":"protected void setNextNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> next) {\n    if (next == next) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.list.AbstractLinkedList.Node.this.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = next;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"next","header":"next"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:291","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[640],"tindex":"7260ae01-2eac-11e6-833a-f1510e6c5f24","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:86","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final V defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(defaultValue));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:181","type":"CtBinaryOperatorImpl","sourcecode":"(currentIterator) != null"},"failures":[],"tindex":"7260ae02-2eac-11e6-833a-ab9f1b110976","method":{"position":"org.apache.commons.collections4.IteratorUtils:824","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator != null) {\n        {\n            return org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentIterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtBinaryOperatorImpl","sourcecode":"(isLocked) == false"},"failures":[],"tindex":"7260d513-2eac-11e6-833a-3dd2b1b80375","method":{"position":"org.apache.commons.collections4.ComparatorUtils:135","type":"CtMethodImpl","sourcecode":"public static java.util.Comparator<java.lang.Boolean> booleanComparator(final boolean trueFirst) {\n    if (trueFirst == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.comparators.BooleanComparator.booleanComparator(trueFirst);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isLocked":"trueFirst"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:238","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[],"tindex":"7260d514-2eac-11e6-833a-a9a9e77062d2","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:340","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> mutator) {\n    if (mutator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.collection.CompositeCollection.this.org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> = mutator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtBinaryOperatorImpl","sourcecode":"(node.getLeft(dataElement)) != null"},"failures":[548,547,549,550,551,552,553,554,555,556,557,444,486,558,445,446,559,447,448,449,450,560,451,561,562,563,564,452,565,566,567,568,569,570,453,571,572,573,454,574,575,576,577,578,579,580,581,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631],"tindex":"72612335-2eac-11e6-833a-8780ad05d5a3","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:791","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? null : node.getParent(dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[641,642,643,195,205,644,645,646,252,647,648,266,649,286,650,651,293,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,343,344,345,346,347,349,351,691,692,693,694,695,696,697,353,354,355,356,357,358,359,361,362,363,364,365,367,369,373,374,375,376,377,379,381,388,389,390,391,393,395,398,399,403,414,418,434,435,436,437,438,439,440,445,446,447,448,449,450,451,698,699,700,701,702,703,704,705,104,459,460,461,462,463,464,465,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,105],"tindex":"72614a46-2eac-11e6-833a-e15a7d2cb8d9","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"72614a47-2eac-11e6-833a-d1c59f83c591","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(value == null ? value == null : obj1.equals(obj2))) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (value == null) {\n                        for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                            while (entry != null) {\n                                if ((entry.getValue()) == null) {\n                                    return true;\n                                } \n                                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                            }\n                        }\n                    } else {\n                        for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                            while (entry != null) {\n                                if (isEqualValue(value, entry.getValue())) {\n                                    return true;\n                                } \n                                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                            }\n                        }\n                    }\n                    return false;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1084","type":"CtInvocationImpl","sourcecode":"java.util.Iterator.class.isAssignableFrom(method.getReturnType())"},"failures":[],"tindex":"72617158-2eac-11e6-833a-75610e1120bf","method":{"position":"org.apache.commons.collections4.SplitMapUtils:158","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key.isAssignableFrom(key.getReturnType())) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.util.Iterator.class":"key","method":"key"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:317","type":"CtBinaryOperatorImpl","sourcecode":"cursor == null"},"failures":[],"tindex":"72617159-2eac-11e6-833a-957c4bc63fda","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:271","type":"CtMethodImpl","sourcecode":"protected void registerCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                if ((ref.get()) == null) {\n                    it.remove();\n                } \n            }\n            java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.add(new java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>(cursor));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[10,11,80],"tindex":"7261986a-2eac-11e6-833a-0354711f89e5","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:426","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key3 == null) {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key3"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:187","type":"CtBinaryOperatorImpl","sourcecode":"cachedNode == null"},"failures":[732,528],"tindex":"7261986b-2eac-11e6-833a-bbbb7beefa0a","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void updateNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == null) {\n        {\n            super.updateNode(node, value);\n            broadcastNodeChanged(node);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cachedNode":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[733],"tindex":"7261bf7c-2eac-11e6-833a-0133ec3aa3e5","method":{"position":"org.apache.commons.collections4.CollectionUtils:494","type":"CtMethodImpl","sourcecode":"public static boolean isProperSubCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if (b != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((a.size()) < (b.size())) && (org.apache.commons.collections4.CollectionUtils.isSubCollection(a, b));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"b"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"7261bf7d-2eac-11e6-833a-874e2b242194","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:400","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        {\n            return get(java.util.List<K>.get(index));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:379","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[734],"tindex":"7261bf7e-2eac-11e6-833a-8b6cbf6bc17d","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (map != null) {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[735,736,737,738,739],"tindex":"7261e68f-2eac-11e6-833a-678de1e0de62","method":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:109","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if ((object instanceof java.util.Map.Entry) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.ReverseComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.ReverseComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.ReverseComparator<?> org.apache.commons.collections4.comparators.ReverseComparator<?> = ((org.apache.commons.collections4.comparators.ReverseComparator<?>)(object));\n                return java.util.Comparator<E>.equals(thatrc.java.util.Comparator<?>);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[740,741,742,743,744,745,143,746,184,747],"tindex":"7261e690-2eac-11e6-833a-e384f337bd7b","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:951","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key instanceof java.util.Enumeration<?>) {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.remove(key);\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1265","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[748,749,750,751,752,753,754,740,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,742,799,800,801,802,803,804,805,806,807,9,10,11,80,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,744,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,745,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,746,930,931,932,933,934,935,936],"tindex":"72620da1-2eac-11e6-833a-4d6d8f61335f","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:535","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> createEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next, final int hashCode, final K key, final V value) {\n    if (hashCode == (-1)) {\n        {\n            return new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>(next , hashCode , convertKey(key) , value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"hashCode"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:108","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[937,938],"tindex":"72620da2-2eac-11e6-833a-7977fa5fc8fe","method":{"position":"org.apache.commons.collections4.ListUtils:531","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b) {\n    if (a.isEmpty()) {\n        {\n            return org.apache.commons.collections4.ListUtils.longestCommonSubsequence(a, b, org.apache.commons.collections4.functors.DefaultEquator.defaultEquator());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[496,939,527],"tindex":"726234b3-2eac-11e6-833a-67b74fddb4d4","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:143","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object value) {\n    if (value == null) {\n        {\n            int int = (int) - 1;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i--;\n            }\n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[940,941],"tindex":"726234b4-2eac-11e6-833a-ab522c6f00bb","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1515","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if ((o instanceof java.util.Map<?, ?>) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<V> java.util.Iterator<V> = iterator() ; it.hasNext() ; ) {\n                final V V = it.next();\n                if (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(value, o)) {\n                    it.remove();\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"o"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:325","type":"CtBinaryOperatorImpl","sourcecode":"(nodeCount) == 0"},"failures":[],"tindex":"72625bc5-2eac-11e6-833a-6f9486f5e8b7","method":{"position":"org.apache.commons.collections4.IteratorUtils:412","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end) {\n    if (start == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"start"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:55","type":"CtBinaryOperatorImpl","sourcecode":"trie instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"72625bc6-2eac-11e6-833a-43ae4f9436d0","method":{"position":"org.apache.commons.collections4.MapUtils:1521","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:239","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Short"},"failures":[],"tindex":"72625bc7-2eac-11e6-833a-a52082143c43","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:518","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value instanceof java.lang.Short) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:908","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"726282d8-2eac-11e6-833a-93dd4c6dc0ae","method":{"position":"org.apache.commons.collections4.MapUtils:1037","type":"CtMethodImpl","sourcecode":"private static void printIndent(final java.io.PrintStream out, final int indent) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(indent)) {\n        {\n            if (indent == indent) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    for (int int = 0 ; i < indent ; i++) {\n                        out.print(org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.java.lang.String);\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"indent"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"726282d9-2eac-11e6-833a-c9a6dde297ae","method":{"position":"org.apache.commons.collections4.PredicateUtils:487","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsExceptionPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((predicate == null) || (predicate == null)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.NullIsExceptionPredicate.nullIsExceptionPredicate(predicate);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtUnaryOperatorImpl","sourcecode":"!(excess.isEmpty())"},"failures":[],"tindex":"726282da-2eac-11e6-833a-7f6a5266f766","method":{"position":"org.apache.commons.collections4.CollectionUtils:1642","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<java.util.List<E>> permutations(final java.util.Collection<E> collection) {\n    if (((collection.size()) > 0) || ((collection.size()) > 0)) {\n        {\n            if (!(collection.isEmpty())) {\n                {\n                    final org.apache.commons.collections4.iterators.PermutationIterator<E> org.apache.commons.collections4.iterators.PermutationIterator<E> = new org.apache.commons.collections4.iterators.PermutationIterator<E>(collection);\n                    final java.util.Collection<java.util.List<E>> java.util.Collection<java.util.List<E>> = new java.util.LinkedList<java.util.List<E>>();\n                    while (it.hasNext()) {\n                        result.add(it.next());\n                    }\n                    return result;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"excess":"collection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1077","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"7262a9eb-2eac-11e6-833a-61eab6a74fbe","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:93","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(count)) {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().remove(object, count);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"count"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[942],"tindex":"7262a9ec-2eac-11e6-833a-6f836ffc1d68","method":{"position":"org.apache.commons.collections4.TransformerUtils:149","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> asTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            return org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(closure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:379","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[],"tindex":"7262a9ed-2eac-11e6-833a-9f9f674452dd","method":{"position":"org.apache.commons.collections4.map.CompositeMap:156","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized java.util.Map<K, V> removeComposited(final java.util.Map<K, V> map) {\n    if (map != null) {\n        {\n            final int int = org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int;\n            for (int int = 0 ; i < size ; ++i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].equals(map)) {\n                    final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[size - 1];\n                    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, i);\n                    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], (i + 1), temp, i, ((size - i) - 1));\n                    org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n                    return map;\n                } \n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:215","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"7262d0fe-2eac-11e6-833a-55f4bae891d2","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            if ((node != null) && (node.getKey().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:141","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[943],"tindex":"7262d0ff-2eac-11e6-833a-db6caff5d4ed","method":{"position":"org.apache.commons.collections4.CollectionUtils:208","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>java.util.Collection<T> emptyIfNull(final java.util.Collection<T> collection) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return collection == null ? org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.java.util.Collection : collection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:58","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"7262d100-2eac-11e6-833a-352d4b413bc9","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:349","type":"CtMethodImpl","sourcecode":"public void addComposited(final java.util.Collection<E> compositeCollection) {\n    if (compositeCollection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.List<java.util.Collection<E>>.add(compositeCollection);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"compositeCollection"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"7262f811-2eac-11e6-833a-a92df5468f3b","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                {\n                    throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:83","type":"CtBinaryOperatorImpl","sourcecode":"((set.size()) > 0) || ((list.size()) > 0)"},"failures":[],"tindex":"7262f812-2eac-11e6-833a-1fe427554b1d","method":{"position":"org.apache.commons.collections4.CollectionUtils:1642","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<java.util.List<E>> permutations(final java.util.Collection<E> collection) {\n    if (((collection.size()) > 0) || ((collection.size()) > 0)) {\n        {\n            if (!(collection.isEmpty())) {\n                {\n                    final org.apache.commons.collections4.iterators.PermutationIterator<E> org.apache.commons.collections4.iterators.PermutationIterator<E> = new org.apache.commons.collections4.iterators.PermutationIterator<E>(collection);\n                    final java.util.Collection<java.util.List<E>> java.util.Collection<java.util.List<E>> = new java.util.LinkedList<java.util.List<E>>();\n                    while (it.hasNext()) {\n                        result.add(it.next());\n                    }\n                    return result;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"collection","list":"collection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[944],"tindex":"7262f813-2eac-11e6-833a-af1da4e9a6b9","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:101","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:804","type":"CtBinaryOperatorImpl","sourcecode":"longObject == null"},"failures":[250],"tindex":"7262f814-2eac-11e6-833a-713b4ddb4242","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longObject":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"72631f25-2eac-11e6-833a-1bb6ab97371d","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:714","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1) {\n    if (null == key1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((multi.size()) >= 1) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:971","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"72631f26-2eac-11e6-833a-375ebc54a1ac","method":{"position":"org.apache.commons.collections4.map.LRUMap:296","type":"CtMethodImpl","sourcecode":"protected void reuseMapping(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(hashCode)) {\n        {\n            try {\n                final int int = hashIndex(entry.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = tmp[removeIndex];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n                while ((loop != entry) && (loop != null)) {\n                    previous = loop;\n                    loop = loop.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                }\n                if (loop == null) {\n                    throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][removeIndex])) + \" previous=\") + previous) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                } \n                (int)++;\n                removeEntry(entry, removeIndex, previous);\n                reuseEntry(entry, hashIndex, hashCode, key, value);\n                addEntry(entry, hashIndex);\n            } catch (final java.lang.NullPointerException ex) {\n                throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + entry) + \" entryIsHeader=\") + (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"hashCode"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"72639457-2eac-11e6-833a-73274251288b","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:196","type":"CtMethodImpl","sourcecode":"public void setForwardSort(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.BitSet.clear(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"72639458-2eac-11e6-833a-631467bd927f","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final K K : mapToCopy.keySet()) {\n                if (!(containsKey(key))) {\n                    throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n                } \n            }\n            java.util.Map<K, V>.putAll(mapToCopy);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":90,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}