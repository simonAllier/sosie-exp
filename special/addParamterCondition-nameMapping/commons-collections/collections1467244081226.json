{"failureDictionary":{"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":350,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":351,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":510,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":395,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":706,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":747,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":311,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":617,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":294,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":624,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":154,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":419,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":163,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":414,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":738,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":448,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":339,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":638,"org.apache.commons.collections4.CollectionUtilsTest.collect":785,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":168,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":639,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":849,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":460,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":640,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":942,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":553,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRetainAll":12,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":425,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":861,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":925,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":243,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":562,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":352,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":189,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":254,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":821,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":455,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":388,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":106,"org.apache.commons.collections4.ListUtilsTest.testLazyList":786,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":890,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectEqualsSelf":563,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":2,"org.apache.commons.collections4.bag.TransformedBagTest.testCanonicalFullCollectionExists":520,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsContract":596,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":313,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":104,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEqualsNull":578,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":749,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":920,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":192,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":730,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":336,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":537,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":716,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":926,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":422,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEqualsNull":593,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":282,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":481,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":630,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":649,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":230,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":238,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":178,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":521,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":772,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":833,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":691,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":289,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":326,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":705,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalEmptyCollectionExists":579,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":584,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":927,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":329,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":869,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":212,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsSelfHashCode":610,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":38,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":936,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":232,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":382,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":826,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":509,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":35,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsSelfHashCode":582,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":684,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":345,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":620,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":686,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":504,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":118,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":303,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":889,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":756,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":503,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":655,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":505,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":463,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":685,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":195,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":698,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":535,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":615,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":284,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":396,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":219,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":672,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":811,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":100,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":251,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":881,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":532,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":338,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":892,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":787,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":268,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":409,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":270,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":779,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":791,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":773,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":144,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":142,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":334,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":176,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":276,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSimpleSerialization":580,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEqualsNull":606,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":297,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":614,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":681,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":863,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":835,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":904,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":379,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":492,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectEqualsSelf":514,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":66,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":427,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":499,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":152,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":643,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":148,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":896,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":166,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":723,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":810,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRetainAll":0,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":40,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":541,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":897,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx1":945,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":635,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":726,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":187,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":266,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":669,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":223,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":430,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":87,"org.apache.commons.collections4.set.MapBackedSetTest.testCanonicalEmptyCollectionExists":77,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":775,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":269,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":384,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":165,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":393,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":78,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":508,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":728,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":293,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":714,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":877,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":666,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":526,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":7,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":812,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":470,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":496,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":344,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":865,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":743,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":440,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":767,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":876,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":875,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":874,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":150,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":935,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":782,"org.apache.commons.collections4.map.LRUMapTest.testReset":855,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":421,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":8,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSimpleSerialization":608,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":273,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":171,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":346,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":629,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":489,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":559,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":560,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":740,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":250,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":588,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":26,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":485,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":899,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":647,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":517,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":928,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastEntrySet":29,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":859,"org.apache.commons.collections4.map.LinkedMapTest.testReset":893,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":864,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":924,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":467,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":764,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":880,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":771,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":798,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":477,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":161,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":437,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":255,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":76,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":687,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":15,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":879,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":71,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":113,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":143,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":260,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":115,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":114,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":208,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":90,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":403,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":534,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":204,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":389,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":417,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":692,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":799,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":248,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":797,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":934,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":916,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":62,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":41,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":164,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":271,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":677,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":457,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":700,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":709,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":840,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":498,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRetainAll":4,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":257,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":265,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":663,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":402,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":500,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":704,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":64,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":139,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":331,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":217,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":302,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":653,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":765,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":281,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":56,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":750,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":671,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":646,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":436,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":923,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":433,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":407,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":533,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":854,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":719,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":79,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":160,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":182,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":573,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":57,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":932,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":340,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":117,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":194,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":483,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":145,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":722,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":131,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":209,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":229,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":910,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":909,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":453,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":911,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":898,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":288,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":290,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":901,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":542,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":23,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":304,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":753,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":946,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":52,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":136,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":137,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":135,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":317,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalFullCollectionExists":605,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":466,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":922,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":921,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":252,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":18,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":947,"org.apache.commons.collections4.list.TreeListTest.testBug35258":792,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":377,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":200,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":751,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":191,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":375,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":376,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":406,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":175,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":555,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":778,"org.apache.commons.collections4.list.GrowthListTest.testListListIterator":469,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":862,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":627,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":495,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":699,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":411,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalFullCollectionExists":577,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":856,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":193,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":805,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking2":449,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":308,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":819,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":291,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":202,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":603,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsContract":581,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":482,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":108,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":632,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":903,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":128,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":127,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":126,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":558,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":851,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":801,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":19,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":158,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectEqualsSelf":604,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":735,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":220,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRetainAll":3,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":822,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":333,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":857,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":473,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":21,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":70,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":245,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":316,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":830,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":186,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":829,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":444,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":938,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":784,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastEntrySet":37,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastEntrySet":42,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains1":361,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains3":363,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains2":362,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":20,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":264,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":762,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":58,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":668,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":900,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":441,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":943,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":554,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":718,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":426,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":309,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":650,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":159,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":641,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":710,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":109,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRetainAll":1,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":110,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":599,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":659,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectEqualsSelf":576,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":111,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":94,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":241,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":277,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":285,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":434,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":102,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":91,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":870,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":278,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":494,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":512,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsContract":568,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":25,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":502,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":214,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":538,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":484,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":842,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":703,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":49,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalFullCollectionExists":592,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking":468,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":478,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":868,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":323,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":183,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":530,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":140,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":734,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":261,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":81,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":83,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":763,"org.apache.commons.collections4.bag.TransformedBagTest.testSimpleSerialization":518,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":878,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":915,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastEntrySet":24,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":475,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":729,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":808,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":300,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":531,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":103,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":327,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":780,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":589,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":256,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":834,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":628,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":754,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":237,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":31,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":493,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":480,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":741,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":745,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":761,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":746,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":544,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":93,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":690,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":527,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":65,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":149,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":335,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":776,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":813,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":848,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":36,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":179,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":944,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":400,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSerializeDeserializeThenCompare":598,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":847,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":696,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":211,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":190,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":688,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":796,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":275,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":242,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":665,"org.apache.commons.collections4.CollectionUtilsTest.transform2":783,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":101,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains3":134,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":107,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains2":133,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains1":132,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":551,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":794,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":22,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":324,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":74,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":452,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":130,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":169,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":450,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":545,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalEmptyCollectionExists":607,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":332,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":155,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":465,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":660,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":883,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":708,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":73,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":884,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":642,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":310,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":557,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":210,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":435,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":768,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":479,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":744,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSerializeDeserializeThenCompare":611,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":89,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":758,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":360,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":222,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":28,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":162,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":55,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":781,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":525,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":283,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":356,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":701,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":216,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":844,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":540,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":634,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":817,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":800,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":902,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":670,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":286,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":39,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":380,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":174,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":715,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":99,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":766,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRetainAll":13,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":72,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":809,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":84,"org.apache.commons.collections4.map.HashedMapTest.testEqualsNull":713,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":841,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":858,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":907,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":46,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":322,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEqualsNull":683,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":825,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":721,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":412,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":543,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":522,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":804,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":112,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":769,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":236,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":451,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":173,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":201,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":891,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":770,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":215,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":218,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":385,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":445,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":305,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":320,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":549,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsSelfHashCode":597,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":404,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":486,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":602,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains1":372,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains2":373,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains3":374,"org.apache.commons.collections4.list.TreeListTest.testRemove":788,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":667,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":240,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":658,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":11,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":43,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":287,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":820,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":818,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":905,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":206,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":296,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":795,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":711,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":680,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":53,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":397,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":410,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains1":120,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":894,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains3":122,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains2":121,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":147,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":181,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":752,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":886,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":918,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsSelfHashCode":516,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":664,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":80,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":529,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":908,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":359,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":357,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":358,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":860,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":689,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":843,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":814,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":14,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSimpleSerialization":595,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":9,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":462,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":213,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":221,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":832,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":552,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":343,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":919,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":68,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":262,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":123,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":488,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":124,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":125,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":235,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":231,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":645,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":274,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":292,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":369,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":267,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":370,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":116,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":368,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":47,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":929,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":45,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":392,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":188,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":295,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":515,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":662,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":885,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":777,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains2":365,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains3":366,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains1":364,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":550,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsSelfHashCode":569,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":546,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":626,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":931,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":561,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":636,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":199,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":398,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":138,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":471,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":587,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":198,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":601,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate":625,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":917,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":438,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":789,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":341,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":513,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":349,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":348,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":347,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":490,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":941,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":888,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":328,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":387,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":693,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":727,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":793,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":572,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":226,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":616,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":707,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":694,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":307,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":459,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":458,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":60,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":34,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":679,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":92,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":418,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":228,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":207,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":431,"org.apache.commons.collections4.CollectionUtilsTest.addIgnoreNull":930,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":939,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":86,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":225,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEqualsNull":565,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":50,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":177,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":446,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":156,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":846,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":914,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":61,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":96,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":906,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":913,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":575,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":816,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":912,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":839,"org.apache.commons.collections4.functors.AllPredicateTest.nullArrayToGetInstance":619,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":748,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSimpleSerialization":567,"org.apache.commons.collections4.bag.TransformedBagTest.testCanonicalEmptyCollectionExists":519,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":661,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":408,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":82,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":736,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":246,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":279,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":330,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":725,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":815,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":405,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":618,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":676,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":85,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":695,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalEmptyCollectionExists":566,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":574,"org.apache.commons.collections4.set.MapBackedSetTest.testCanonicalFullCollectionExists":75,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":556,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":866,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":887,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":678,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectEqualsSelf":682,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":167,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":48,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":353,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":306,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":355,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":586,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":354,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":129,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":739,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":239,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":882,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":720,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":249,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":501,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":940,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":837,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":224,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":838,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":391,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":157,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":651,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":27,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":119,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":413,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":536,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":487,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":507,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":755,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":203,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":656,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":153,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":948,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":280,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":180,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalEmptyCollectionExists":594,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":98,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":10,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":258,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":95,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":428,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":59,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":807,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":381,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":272,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":852,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":824,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":472,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":88,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":390,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":697,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":51,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":733,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":263,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":383,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":895,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":105,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":301,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":420,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":416,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":757,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":802,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Map":853,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":233,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":185,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":673,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":790,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":702,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":506,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":337,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":850,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":806,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":184,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":528,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":443,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":637,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":644,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":823,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":511,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx1":623,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":491,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":571,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":456,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":318,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":247,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":461,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":429,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":724,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":371,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":831,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":836,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":170,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":315,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":30,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":439,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":590,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":378,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":151,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":423,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":321,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":298,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":648,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":760,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":759,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":476,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":633,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking2":474,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":342,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":867,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsContract":609,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":196,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":312,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":652,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":933,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":319,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":937,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":146,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":432,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":827,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":828,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalFullCollectionExists":564,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":497,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":523,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":197,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":674,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":539,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":442,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":737,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking":447,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":631,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":394,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":454,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":325,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":259,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":732,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":585,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":464,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiClear":654,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":675,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":253,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":415,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":717,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":399,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSerializeDeserializeThenCompare":570,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":367,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":54,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectEqualsSelf":591,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":621,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSerializeDeserializeThenCompare":583,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":613,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":67,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":547,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":17,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking":424,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":612,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":873,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":205,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":803,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":32,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":657,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":33,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":845,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":871,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":401,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":872,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":600,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":622,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":244,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":524,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":299,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":742,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":63,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":774,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":172,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":69,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":141,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":227,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":548,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":314,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":5,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":44,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":386,"org.apache.commons.collections4.map.HashedMapTest.testObjectEqualsSelf":712,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":234,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":97,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":731},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"ea1dfc70-3e53-11e6-b77a-0f32e9990f87","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:143","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            return decorated().retainAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"ea1e4a91-3e53-11e6-b77a-e31224c26253","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:186","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            V V = null;\n            if (java.util.Map<K, V>.containsKey(key)) {\n                value = java.util.Map<K, V>.remove(key);\n                java.util.Map<V, K>.remove(value);\n            } \n            return value;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:82","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"ea1e4a92-3e53-11e6-b77a-711cb19a320b","method":{"position":"org.apache.commons.collections4.ComparatorUtils:235","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>E max(final E o1, final E o2, java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (comparator == null) {\n                        comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n                    } \n                    final int int = comparator.compare(o1, o2);\n                    return c > 0 ? o1 : o2;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"ea1e71a3-3e53-11e6-b77a-9de383de75a2","method":{"position":"org.apache.commons.collections4.IteratorUtils:1000","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (iterator instanceof java.util.ListIterator) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.IteratorUtils.toList(iterator, 10);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtBinaryOperatorImpl","sourcecode":"nCopies <= 0"},"failures":[46,47,48,49,50,51],"tindex":"ea1e71a4-3e53-11e6-b77a-456fd43f9dfe","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:125","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies <= 0) {\n        {\n            return getBag().add(transform(object), nCopies);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"nCopies"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[],"tindex":"ea1e71a5-3e53-11e6-b77a-95e0bbe93457","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1517","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (doRemoveValue(o)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"ea1e71a6-3e53-11e6-b77a-6b866341661a","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:92","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count > 3) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validate(object);\n            return decorated().add(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl","sourcecode":"sortedMap == null"},"failures":[52],"tindex":"ea1e98b7-3e53-11e6-b77a-575d22105cba","method":{"position":"org.apache.commons.collections4.MapUtils:1772","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableSortedMap<K, V> iterableSortedMap(final java.util.SortedMap<K, V> sortedMap) {\n    if (sortedMap == null) {\n        {\n            if (sortedMap == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return sortedMap instanceof org.apache.commons.collections4.IterableSortedMap ? ((org.apache.commons.collections4.IterableSortedMap<K, V>)(sortedMap)) : new org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>(sortedMap) {            };\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"sortedMap"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtBinaryOperatorImpl","sourcecode":"i < 0"},"failures":[53],"tindex":"ea1e98b8-3e53-11e6-b77a-dbc61cb0a4bd","method":{"position":"org.apache.commons.collections4.list.TransformedList:151","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new TransformedListIterator(getList().listIterator(i));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[54,55],"tindex":"ea1e98b9-3e53-11e6-b77a-25c52fb2dd68","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:254","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[],"tindex":"ea1e98ba-3e53-11e6-b77a-c335d992805f","method":{"position":"org.apache.commons.collections4.map.LinkedMap:238","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Dictionary) {\n                {\n                    return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"tindex":"ea1ebfcb-3e53-11e6-b77a-f5f97e63db4a","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:74","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map, final V dummyValue) {\n    if (map == null) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"The map must not be null\");\n            } \n            return new org.apache.commons.collections4.set.MapBackedSet<E, V>(map , dummyValue);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[105,106],"tindex":"ea1ebfcc-3e53-11e6-b77a-0fa736340643","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1511","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupValue(obj)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"ea1ebfcd-3e53-11e6-b77a-2baea2cb9ed2","method":{"position":"org.apache.commons.collections4.MapUtils:150","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.MultiMap) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (map != null) {\n                        final java.lang.Object java.lang.Object = map.get(key);\n                        if (answer != null) {\n                            if (answer instanceof java.lang.Boolean) {\n                                return ((java.lang.Boolean)(answer));\n                            } \n                            if (answer instanceof java.lang.String) {\n                                return java.lang.Boolean.valueOf(((java.lang.String)(answer)));\n                            } \n                            if (answer instanceof java.lang.Number) {\n                                final java.lang.Number java.lang.Number = ((java.lang.Number)(answer));\n                                return (n.intValue()) != 0 ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                            } \n                        } \n                    } \n                    return null;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"ea1ee6de-3e53-11e6-b77a-dd828e2c63c1","method":{"position":"org.apache.commons.collections4.IteratorUtils:588","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Collection<java.util.Iterator<? extends E>> iterators) {\n    if (comparator == null) {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[107,108],"tindex":"ea1ee6df-3e53-11e6-b77a-933d4b788c95","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,106,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,47,48,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,50,51,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378],"tindex":"ea1ee6e0-3e53-11e6-b77a-3b16b18caf69","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            return decorated().contains(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"ea1f0df1-3e53-11e6-b77a-7fd87cf5eb1d","method":{"position":"org.apache.commons.collections4.IteratorUtils:853","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"ea1f0df2-3e53-11e6-b77a-a76a4d5b3d36","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[379],"tindex":"ea1f0df3-3e53-11e6-b77a-3366ae32f5d3","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:140","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"ea1f3504-3e53-11e6-b77a-cbe65054d9d5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:582","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<K>lookup(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[380],"tindex":"ea1f3505-3e53-11e6-b77a-55256fda684c","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1278","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,204,205,402,403,206,7,207,404,405,209,406],"tindex":"ea1f3506-3e53-11e6-b77a-4fae624ce37f","method":{"position":"org.apache.commons.collections4.list.PredicatedList:128","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i == (-1)) {\n        {\n            return new PredicatedListIterator(decorated().listIterator(i));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"ea1f3507-3e53-11e6-b77a-09b7b45b8c5e","method":{"position":"org.apache.commons.collections4.FactoryUtils:120","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate) {\n    if (classToInstantiate == null) {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, null, null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[407],"tindex":"ea1f3508-3e53-11e6-b77a-2d12d3434de4","method":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,181,456,457,183,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,195,196,483,197,6,198,484,200,485,486,487,488],"tindex":"ea1f5c19-3e53-11e6-b77a-675474d86b2b","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:78","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedBag:78","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (bag != null)) && ((bag.size()) > 0)"},"failures":[489,252,254,490,491,46,255,492,493,9,256,494,495,496,497,498,499,500,501,502,503,504,505,47,48,506,257,258,507,259,508,509,260,510,511,261,512,513,514,515,516,517,518,519,520],"tindex":"ea1f5c1a-3e53-11e6-b77a-65d15bfa8b3c","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:57","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        {\n            return new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[521],"tindex":"ea1f5c1b-3e53-11e6-b77a-75d888c7b23d","method":{"position":"org.apache.commons.collections4.ClosureUtils:182","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName, paramTypes, args));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[522,523,524,509,525,526],"tindex":"ea1f5c1c-3e53-11e6-b77a-a5ce1cfa17fa","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (null == object) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return remove(object, 1);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[527,528],"tindex":"ea1f832d-3e53-11e6-b77a-f15be1483977","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:102","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[],"tindex":"ea1f832e-3e53-11e6-b77a-2d230f954995","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:143","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 1) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"ea1f832f-3e53-11e6-b77a-2794a0612882","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:79","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return decorated().remove(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"ea1f8330-3e53-11e6-b77a-cfab3200194e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2061","type":"CtMethodImpl","sourcecode":"public V getKey(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[529],"tindex":"ea1f8331-3e53-11e6-b77a-0d2e8bc8aa79","method":{"position":"org.apache.commons.collections4.map.Flat3Map:437","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(key);\n            } \n            if ((int) == 0) {\n                return null;\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        return null;\n                    case 2 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        return null;\n                    case 1 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 0;\n                            return old;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            return null;\n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            return null;\n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 0;\n                                return old;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548],"tindex":"ea1faa42-3e53-11e6-b77a-a716db1514e4","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:132","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object value) {\n    if (value == null) {\n        {\n            int int = 0;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i++;\n            }\n            return -1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"ea1faa43-3e53-11e6-b77a-6d60e07fb9ea","method":{"position":"org.apache.commons.collections4.MapUtils:340","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if ((answer != null) && (answer instanceof java.util.Map)) {\n                    return ((java.util.Map<?, ?>)(answer));\n                } \n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[549],"tindex":"ea1fd154-3e53-11e6-b77a-13f57397d730","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:183","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends J, ? extends U> map) {\n    if (map.isEmpty()) {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:317","type":"CtBinaryOperatorImpl","sourcecode":"cursor == null"},"failures":[550,551,552,553,554],"tindex":"ea1fd155-3e53-11e6-b77a-074b8ea86d06","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:288","type":"CtMethodImpl","sourcecode":"protected void unregisterCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = ref.get();\n                if (cur == null) {\n                    it.remove();\n                } else if (cur == cursor) {\n                    ref.clear();\n                    it.remove();\n                    break;\n                } \n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"ea1fd156-3e53-11e6-b77a-a3d5ab84120b","method":{"position":"org.apache.commons.collections4.map.LinkedMap:233","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtBinaryOperatorImpl","sourcecode":"bound > len"},"failures":[555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611],"tindex":"ea1ff867-3e53-11e6-b77a-1bf71dc80bf5","method":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:112","type":"CtMethodImpl","sourcecode":"protected void checkBound(final int bound, final int len, final java.lang.String type) {\n    if (len > bound) {\n        {\n            if (bound > len) {\n                throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s beyond the end of the array. \"));\n            } \n            if (bound < 0) {\n                throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s before the start of the array. \"));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"bound","bound":"len"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[612,613,614,615,616,617],"tindex":"ea1ff868-3e53-11e6-b77a-3f6cd7dc967c","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:143","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake buildSnake(final int start, final int diag, final int end1, final int end2) {\n    if (end2 < 0) {\n        {\n            int int = start;\n            while ((((end - diag) < end2) && (end < end1)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(end), java.util.List<T>.get((end - diag))))) {\n                ++end;\n            }\n            return new org.apache.commons.collections4.sequence.SequencesComparator.Snake(start , end , diag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"ea1ff869-3e53-11e6-b77a-219c7318ce1b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:252","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getEntry(final java.lang.Object k) {\n    if (k == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final K K = castKey(k);\n            if (key == null) {\n                return null;\n            } \n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K)) ? entry : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[618,619,620,621,622,623,624],"tindex":"ea1ff86a-3e53-11e6-b77a-9d2e151ef264","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:78","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Predicate<?>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n            } \n            for (int int = 0 ; i < (predicates.int) ; i++) {\n                if ((predicates[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[625],"tindex":"ea201f7b-3e53-11e6-b77a-e7ab10a5301b","method":{"position":"org.apache.commons.collections4.PredicateUtils:304","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate1 == null)) {\n        {\n            return org.apache.commons.collections4.functors.OrPredicate.<T>orPredicate(predicate1, predicate2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[435,441],"tindex":"ea201f7c-3e53-11e6-b77a-f74ff279fde5","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:230","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            final boolean boolean = java.util.Set<E>.remove(object);\n            if (result) {\n                super.remove(object);\n            } \n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"ea201f7d-3e53-11e6-b77a-212f251e5921","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[549],"tindex":"ea201f7e-3e53-11e6-b77a-73087d03c657","method":{"position":"org.apache.commons.collections4.SplitMapUtils:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.SplitMapUtils.WrappedPut.this)) {\n                return true;\n            } \n            return (obj instanceof org.apache.commons.collections4.SplitMapUtils.WrappedPut) && (((org.apache.commons.collections4.SplitMapUtils.WrappedPut<?, ?>)(obj)).org.apache.commons.collections4.Put<?, ?>.equals(org.apache.commons.collections4.SplitMapUtils.WrappedPut.this.org.apache.commons.collections4.Put<K, V>));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"ea201f7f-3e53-11e6-b77a-d98c520cefb1","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1240","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntryInSubtree(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> parentOfSubtree) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, parentOfSubtree);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"ea204590-3e53-11e6-b77a-69ab8adb492b","method":{"position":"org.apache.commons.collections4.MapUtils:722","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key, final boolean defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (booleanObject == null) {\n                return defaultValue;\n            } \n            return booleanObject.booleanValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"ea204591-3e53-11e6-b77a-d756d23a4e7c","method":{"position":"org.apache.commons.collections4.MapUtils:150","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.MultiMap) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (map != null) {\n                        final java.lang.Object java.lang.Object = map.get(key);\n                        if (answer != null) {\n                            if (answer instanceof java.lang.Boolean) {\n                                return ((java.lang.Boolean)(answer));\n                            } \n                            if (answer instanceof java.lang.String) {\n                                return java.lang.Boolean.valueOf(((java.lang.String)(answer)));\n                            } \n                            if (answer instanceof java.lang.Number) {\n                                final java.lang.Number java.lang.Number = ((java.lang.Number)(answer));\n                                return (n.intValue()) != 0 ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                            } \n                        } \n                    } \n                    return null;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[555],"tindex":"ea204592-3e53-11e6-b77a-47fe60b3f96b","method":{"position":"org.apache.commons.collections4.IteratorUtils:297","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start) {\n    if (start < 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[],"tindex":"ea204593-3e53-11e6-b77a-bfa4e356360e","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (null == object) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return remove(object, 1);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"ea204594-3e53-11e6-b77a-0d0baa15ea56","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:616","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            return getEntrySet().contains(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[626],"tindex":"ea206ca5-3e53-11e6-b77a-db8b35a2acd6","method":{"position":"org.apache.commons.collections4.CollectionUtils:606","type":"CtMethodImpl","sourcecode":"public static <O>int cardinality(final O obj, final java.lang.Iterable<? super O> coll) {\n    if (coll instanceof java.util.Set<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof java.util.Set<?>) {\n                return ((java.util.Set<? super O>)(coll)).contains(obj) ? 1 : 0;\n            } \n            if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n                return ((org.apache.commons.collections4.Bag<? super O>)(coll)).getCount(obj);\n            } \n            int int = 0;\n            if (obj == null) {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (element == null) {\n                        count++;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (obj.equals(element)) {\n                        count++;\n                    } \n                }\n            }\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[],"tindex":"ea206ca6-3e53-11e6-b77a-77b2571d74c9","method":{"position":"org.apache.commons.collections4.map.LinkedMap:238","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Dictionary) {\n                {\n                    return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[627,628],"tindex":"ea206ca7-3e53-11e6-b77a-71904290bda9","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1505","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return containsValue(o);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:534","type":"CtUnaryOperatorImpl","sourcecode":"!(h.isInternalNode())"},"failures":[629,627,630,631,632,633,634,635,636,637,638,639,640,628,641,642,643,644,645,646,647],"tindex":"ea206ca8-3e53-11e6-b77a-cf194b253016","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:480","type":"CtMethodImpl","sourcecode":"V removeEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isInternalNode())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (h.isInternalNode()) {\n                    removeInternalEntry(h);\n                } else {\n                    removeExternalEntry(h);\n                }\n            } \n            decrementSize();\n            return h.setKeyValue(null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[648,649,650,651,652],"tindex":"ea206ca9-3e53-11e6-b77a-d3876d5f4c5e","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:357","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            removeAllExpired(now());\n            return super.containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:51","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"ea206caa-3e53-11e6-b77a-3712a9261696","method":{"position":"org.apache.commons.collections4.IteratorUtils:1000","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (iterator instanceof java.util.ListIterator) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.IteratorUtils.toList(iterator, 10);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtBinaryOperatorImpl","sourcecode":"(inverseBidiMap) == null"},"failures":[653,654,28,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,32],"tindex":"ea2093bb-3e53-11e6-b77a-610633ab8130","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (normalMap == null) {\n        {\n            return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inverseBidiMap":"normalMap"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,529,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782],"tindex":"ea2093bc-3e53-11e6-b77a-6393296f7f1a","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1309","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((map.size()) != (size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = mapIterator();\n            try {\n                while (it.hasNext()) {\n                    final java.lang.Object java.lang.Object = it.next();\n                    final java.lang.Object java.lang.Object = it.getValue();\n                    if (value == null) {\n                        if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n                            return false;\n                        } \n                    } else {\n                        if ((value.equals(map.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                }\n            } catch (final java.lang.ClassCastException ignored) {\n                return false;\n            } catch (final java.lang.NullPointerException ignored) {\n                return false;\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"(inputIterator != null) && (transformer != null)"},"failures":[783,784,785],"tindex":"ea2093bd-3e53-11e6-b77a-f11007334c71","method":{"position":"org.apache.commons.collections4.CollectionUtils:1063","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.util.Iterator<? extends I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if ((inputIterator != null) && (transformer != null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((inputIterator != null) && (transformer != null)) {\n                while (inputIterator.hasNext()) {\n                    final I I = inputIterator.next();\n                    final O O = transformer.transform(item);\n                    outputCollection.add(value);\n                }\n            } \n            return outputCollection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputIterator":"inputIterator","transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[786],"tindex":"ea2093be-3e53-11e6-b77a-6bff78b6cf80","method":{"position":"org.apache.commons.collections4.list.LazyList:78","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.LazyList<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list == null) {\n        {\n            return new org.apache.commons.collections4.list.LazyList<E>(list , factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:153","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[787],"tindex":"ea20bacf-3e53-11e6-b77a-03d457624902","method":{"position":"org.apache.commons.collections4.ComparatorUtils:119","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Comparator<E> reversedComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            return new org.apache.commons.collections4.comparators.ReverseComparator<E>(comparator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl","sourcecode":"collectionFactory == null"},"failures":[],"tindex":"ea20bad0-3e53-11e6-b77a-cfdc07c4e071","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:120","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, ? super C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.MultiValueMap<K, V>(map , collectionFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[788,789,790,791,792,793,794,795,796,797,798,799],"tindex":"ea20bad1-3e53-11e6-b77a-858798efed24","method":{"position":"org.apache.commons.collections4.list.TreeList:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index < 0) {\n        {\n            (int)++;\n            checkInterval(index, 0, size());\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(index , obj , null , null);\n            } else {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(index, obj);\n            }\n            (int)++;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[800],"tindex":"ea20bad2-3e53-11e6-b77a-83e5e10fe44d","method":{"position":"org.apache.commons.collections4.TransformerUtils:379","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.MapTransformer.mapTransformer(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"ea20bad3-3e53-11e6-b77a-378d6a40b4f2","method":{"position":"org.apache.commons.collections4.MapUtils:1262","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableMap.unmodifiableMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[801],"tindex":"ea20e1e4-3e53-11e6-b77a-79beb629bd08","method":{"position":"org.apache.commons.collections4.list.TransformedList:127","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            return getList().lastIndexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[802,803,531,804,805],"tindex":"ea20e1e5-3e53-11e6-b77a-19f3c2461dec","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:236","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object value) {\n    if (value == null) {\n        {\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    removeNode(node);\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"ea20e1e6-3e53-11e6-b77a-e1f71029adc0","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:136","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[806,807,655,808,809,810,811,812],"tindex":"ea20e1e7-3e53-11e6-b77a-9d61ba6fad7d","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.remove(key);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<java.lang.Object, K>.remove(value);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:82","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"ea20e1e8-3e53-11e6-b77a-775aa8c4c948","method":{"position":"org.apache.commons.collections4.ComparatorUtils:235","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>E max(final E o1, final E o2, java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (comparator == null) {\n                        comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n                    } \n                    final int int = comparator.compare(o1, o2);\n                    return c > 0 ? o1 : o2;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:68","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[813],"tindex":"ea2108f9-3e53-11e6-b77a-9d7734d52060","method":{"position":"org.apache.commons.collections4.ClosureUtils:218","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if (closures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ClosureUtils:355","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndClosures == null"},"failures":[814],"tindex":"ea2108fa-3e53-11e6-b77a-c93930aa5e07","method":{"position":"org.apache.commons.collections4.ClosureUtils:354","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchMapClosure(final java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>> objectsAndClosures) {\n    if (objectsAndClosures == null) {\n        {\n            if (objectsAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = objectsAndClosures.remove(null);\n            final int int = objectsAndClosures.size();\n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> : objectsAndClosures.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<E>equalPredicate(entry.getKey());\n                trs[i] = entry.getValue();\n                i++;\n            }\n            return org.apache.commons.collections4.ClosureUtils.<E>switchClosure(preds, trs, def);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndClosures":"objectsAndClosures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"ea2108fb-3e53-11e6-b77a-2510a6e4d350","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:758","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            while (true) {\n                org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (child.isEmpty()) {\n                    child = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((child.int) <= (node.int)) {\n                    return child;\n                } \n                node = child;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"ea2108fc-3e53-11e6-b77a-95d4fd3f604b","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:202","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final E E : coll) {\n                result |= add(e);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[815,816,817,818],"tindex":"ea2108fd-3e53-11e6-b77a-eb24d93884a6","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:290","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E value) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            updateNode(node, value);\n            return oldValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[295,340],"tindex":"ea21300e-3e53-11e6-b77a-595d6a3fee8a","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:316","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            boolean boolean = false;\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : coll) {\n                if (contains(e)) {\n                    continue;\n                } \n                decorated().add(e);\n                toAdd.add(e);\n                changed = true;\n            }\n            if (changed) {\n                java.util.List<E>.addAll(index, toAdd);\n            } \n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[819,820,821,822,823,824,825,826,629,827,828,829,830,627,633,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,638,847,848,640,849,628,644],"tindex":"ea21300f-3e53-11e6-b77a-551e23bf88f7","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:140","type":"CtMethodImpl","sourcecode":"static boolean compare(final java.lang.Object a, final java.lang.Object b) {\n    if ((b == null) || (b == null)) {\n        {\n            return a == null ? b == null : a.equals(b);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[850],"tindex":"ea213010-3e53-11e6-b77a-cd4269b03d20","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:69","type":"CtMethodImpl","sourcecode":"public boolean evaluate(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            return java.lang.Class<?>.isInstance(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[227,228,229,230,231,232,233,238,239,240,241,242,243,244,47,48,257,258,259,260,261,271,272,273,274,275,276,277,288,289,290,291,292,293,294],"tindex":"ea213011-3e53-11e6-b77a-8386655c80c4","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:125","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.containsKey(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[851],"tindex":"ea213012-3e53-11e6-b77a-85b899ad8223","method":{"position":"org.apache.commons.collections4.CollectionUtils:774","type":"CtMethodImpl","sourcecode":"public static <T>boolean filterInverse(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.filter(collection, (predicate == null ? null : org.apache.commons.collections4.PredicateUtils.notPredicate(predicate)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"ea213013-3e53-11e6-b77a-676fdb4ad8e1","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:238","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(e.getKey(), e.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"ea215724-3e53-11e6-b77a-3b706aa868f1","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[852],"tindex":"ea215725-3e53-11e6-b77a-018785255be8","method":{"position":"org.apache.commons.collections4.CollectionUtils:1668","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> retainAll(final java.util.Collection<C> collection, final java.util.Collection<?> retain) {\n    if (collection instanceof java.util.List<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.retainAll(collection, retain);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"ea215726-3e53-11e6-b77a-6735d6e455f0","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:77","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index > 0) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[853],"tindex":"ea215727-3e53-11e6-b77a-b72759c643b2","method":{"position":"org.apache.commons.collections4.CollectionUtils:1382","type":"CtMethodImpl","sourcecode":"public static boolean sizeIsEmpty(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return true;\n            } else if (object instanceof java.util.Collection<?>) {\n                return ((java.util.Collection<?>)(object)).isEmpty();\n            } else if (object instanceof java.util.Map<?, ?>) {\n                return ((java.util.Map<?, ?>)(object)).isEmpty();\n            } else if (object instanceof java.lang.Object[]) {\n                return (((java.lang.Object[])(object)).int) == 0;\n            } else if (object instanceof java.util.Iterator<?>) {\n                return (((java.util.Iterator<?>)(object)).hasNext()) == false;\n            } else if (object instanceof java.util.Enumeration<?>) {\n                return (((java.util.Enumeration<?>)(object)).hasMoreElements()) == false;\n            } else {\n                try {\n                    return (java.lang.reflect.Array.getLength(object)) == 0;\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,854,855,856,857,858,859,860,861,862,863,724,725,726,727,728,729,730,864,731,865,732,866,867,733,734,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,739,740,741,742,743,744,745,902,746,903,747,904,905,748,749,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927],"tindex":"ea215728-3e53-11e6-b77a-c7389f16e801","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:262","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if ((entry.getValue()) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = link;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[928,929],"tindex":"ea217e39-3e53-11e6-b77a-99ad9c13831d","method":{"position":"org.apache.commons.collections4.functors.WhileClosure:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> whileClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> closure, final boolean doLoop) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.WhileClosure<E>(predicate , closure , doLoop);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[549],"tindex":"ea217e3a-3e53-11e6-b77a-e335aafd6e80","method":{"position":"org.apache.commons.collections4.SplitMapUtils:138","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[930],"tindex":"ea217e3b-3e53-11e6-b77a-25484cb4cc35","method":{"position":"org.apache.commons.collections4.CollectionUtils:1086","type":"CtMethodImpl","sourcecode":"public static <T>boolean addIgnoreNull(final java.util.Collection<T> collection, final T object) {\n    if (collection == null) {\n        {\n            if (collection == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            return (object != null) && (collection.add(object));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[931,932,933,934,935,819,820,821,822,823,936,824,825,826,629,937,827,828,938,829,830,631,632,633,634,635,636,831,832,833,834,835,939,836,940,837,838,941,942,637,839,840,841,842,843,943,844,845,846,638,944,847,848,639,640,849,642,643,644,645,646,647],"tindex":"ea217e3c-3e53-11e6-b77a-51ff7c65a50f","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:79","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal K castKey(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((K)(key));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"ea217e3d-3e53-11e6-b77a-8db55d851a28","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1051","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<?, V>.containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[945],"tindex":"ea21a54e-3e53-11e6-b77a-e1ffbcb7a919","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:53","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[],"tindex":"ea21a54f-3e53-11e6-b77a-71459701c706","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2014","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            return (node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"ea21a550-3e53-11e6-b77a-31f9cc4c137d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1243","type":"CtMethodImpl","sourcecode":"private static void checkKeyAndValue(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[946],"tindex":"ea21a551-3e53-11e6-b77a-2dc9252093f6","method":{"position":"org.apache.commons.collections4.MapUtils:1363","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map == null) {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"ea21a552-3e53-11e6-b77a-bd03e0ed1cea","method":{"position":"org.apache.commons.collections4.set.CompositeSet:245","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[947,948],"tindex":"ea21a553-3e53-11e6-b77a-01e88bb918eb","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241058241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}