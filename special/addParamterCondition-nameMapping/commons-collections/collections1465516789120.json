{"failureDictionary":{"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":37,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":121,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":6,"org.apache.commons.collections4.CollectionUtilsTest.union":54,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":88,"org.apache.commons.collections4.list.PredicatedListTest.testObjectEqualsSelf":109,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":124,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":138,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":56,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":55,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":43,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":166,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":10,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":72,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":61,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":1,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":164,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":18,"org.apache.commons.collections4.list.PredicatedListTest.testCanonicalFullCollectionExists":110,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":5,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":70,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":26,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":105,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":0,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":156,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking":68,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":34,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":27,"org.apache.commons.collections4.CollectionUtilsTest.collect":41,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":86,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":28,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":49,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":104,"org.apache.commons.collections4.CollectionUtilsTest.addIgnoreNull":51,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking":57,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToString":96,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":178,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":29,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":30,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":62,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":158,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":7,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":107,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":21,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":102,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":162,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":119,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":98,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":128,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":75,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking":79,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":157,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":90,"org.apache.commons.collections4.list.PredicatedListTest.testCanonicalEmptyCollectionExists":112,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":139,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":74,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsSelfHashCode":115,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":137,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":33,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":131,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":11,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":173,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":84,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":22,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":126,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":94,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":148,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":163,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":24,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":60,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":149,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":106,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":159,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":154,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":160,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":100,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":117,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":116,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalSet":63,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":122,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":140,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListSerialization":91,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":167,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":142,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":118,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":179,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":69,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":52,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking":73,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":83,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":19,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":150,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":36,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":152,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":165,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":174,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":48,"org.apache.commons.collections4.list.PredicatedListTest.testFullListSerialization":81,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":141,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":155,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":50,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":4,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":58,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":125,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":145,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":12,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":20,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":47,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":32,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":144,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":85,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":132,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":35,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":103,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":46,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking2":59,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":146,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":80,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":169,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":38,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":123,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking":82,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":136,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":180,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":77,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":153,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithEmptyMap":13,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":31,"org.apache.commons.collections4.list.PredicatedListTest.testSimpleSerialization":113,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":143,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":93,"org.apache.commons.collections4.list.PredicatedListTest.testEqualsNull":111,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap":16,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionSize":95,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":127,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":108,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":78,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":177,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":64,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRetainAll":39,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":129,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":172,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":135,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":42,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":120,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":66,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":176,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":175,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":23,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":45,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":99,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":40,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":65,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNonEmptyMap":14,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":87,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":97,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":25,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithEmptyMap":15,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":76,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":170,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":3,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":53,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":161,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx5":2,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":67,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":130,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":134,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":92,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":17,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":44,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":133,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":147,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":171,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":71,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":89,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":114,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":151,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":168},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[0],"tindex":"3fcda15a-2e9e-11e6-820a-85609a1e22a7","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[],"tindex":"3fce8bbb-2e9e-11e6-820a-fd118926ccda","method":{"position":"org.apache.commons.collections4.map.Flat3Map:437","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if ((key instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(key);\n            } \n            if ((int) == 0) {\n                return null;\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        return null;\n                    case 2 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        return null;\n                    case 1 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 0;\n                            return old;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            return null;\n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            return null;\n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 0;\n                                return old;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtBinaryOperatorImpl","sourcecode":"(index < 0) || (index >= sz)"},"failures":[],"tindex":"3fcf27fc-2e9e-11e6-820a-7b8667d2af50","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:128","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if ((index < 0) || (index >= index)) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sz":"index","index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"3fcf4f0d-2e9e-11e6-820a-110527ef1450","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[1],"tindex":"3fcf4f0e-2e9e-11e6-820a-1d317386f7e8","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:69","type":"CtMethodImpl","sourcecode":"public boolean evaluate(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return java.lang.Class<?>.isInstance(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:157","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.String"},"failures":[],"tindex":"3fcf761f-2e9e-11e6-820a-af062a7c5859","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:163","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key instanceof java.lang.String) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            return (lookupKey(key)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[2,3,4],"tindex":"3fcf7620-2e9e-11e6-820a-b595680a8629","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(preds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[5,6,7,8,9,10,11,12],"tindex":"3fcf9d31-2e9e-11e6-820a-5dd984d81325","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1030","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<?, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedBag:78","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (bag != null)) && ((bag.size()) > 0)"},"failures":[],"tindex":"3fcfc442-2e9e-11e6-820a-395720a855a6","method":{"position":"org.apache.commons.collections4.BagUtils:136","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.TransformedBag.transformingBag(bag, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"3fcfc443-2e9e-11e6-820a-fb9e06347c75","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:458","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if ((key instanceof java.util.Map) == false) {\n        {\n            java.util.Map<java.lang.Object, java.lang.Long>.remove(key);\n            return super.remove(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtBinaryOperatorImpl","sourcecode":"(h.parent.left) == h"},"failures":[],"tindex":"3fcfeb54-2e9e-11e6-820a-fb66970ee16c","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2363","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> findNext(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> prior) {\n    if (prior == h) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntryInSubtree(prior, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"parent":"prior","left":"prior","h":"prior"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[],"tindex":"3fd01265-2e9e-11e6-820a-877faa9cb11e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1574","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            return (node != null) && (node.getKey().equals(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:568","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[13,14,15,16],"tindex":"3fd01266-2e9e-11e6-820a-55d753b8db3e","method":{"position":"org.apache.commons.collections4.MapUtils:1204","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        {\n            return (map == null) || (map.isEmpty());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:676","type":"CtInvocationImpl","sourcecode":"current.isEmpty()"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"3fd03977-2e9e-11e6-820a-97991dc35abe","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:499","type":"CtMethodImpl","sourcecode":"private void removeExternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (h.isEmpty()) {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isExternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an external Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            } else {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            }\n            if ((child.int) > (parent.int)) {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            } else {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"current":"h"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[38],"tindex":"3fd08798-2e9e-11e6-820a-2f40c5cdb4f2","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n            } \n            java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[39,40],"tindex":"3fd08799-2e9e-11e6-820a-e9ffe906173e","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:180","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().retainAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:764","type":"CtBinaryOperatorImpl","sourcecode":"shortObject == null"},"failures":[],"tindex":"3fd0aeaa-2e9e-11e6-820a-0d48daac6a96","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:252","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getEntry(final java.lang.Object k) {\n    if (k == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final K K = castKey(k);\n            if (key == null) {\n                return null;\n            } \n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K)) ? entry : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"shortObject":"k"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1039","type":"CtBinaryOperatorImpl","sourcecode":"inputCollection != null"},"failures":[41],"tindex":"3fd0d5bb-2e9e-11e6-820a-a7a5fed480bf","method":{"position":"org.apache.commons.collections4.CollectionUtils:1037","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.lang.Iterable<? extends I> inputCollection, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if (inputCollection != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (inputCollection != null) {\n                {\n                    if (inputCollection != null) {\n                        return org.apache.commons.collections4.CollectionUtils.collect(inputCollection.iterator(), transformer, outputCollection);\n                    } \n                    return outputCollection;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputCollection":"inputCollection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[0],"tindex":"3fd0d5bc-2e9e-11e6-820a-75dab8eefa27","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:145","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1077","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"3fd0fccd-2e9e-11e6-820a-f7ae506b5249","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:542","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V set(final int index, final V value) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(index)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.setValue(index, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:404","type":"CtBinaryOperatorImpl","sourcecode":"expirationTimeObject != null"},"failures":[42,43,44],"tindex":"3fd0fcce-2e9e-11e6-820a-d54b953a1653","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:518","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expirationTimeObject":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[45,46,47,48,49,50],"tindex":"3fd123df-2e9e-11e6-820a-31632cdea0b9","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"3fd123e0-2e9e-11e6-820a-c75e9d71bfc0","method":{"position":"org.apache.commons.collections4.ComparatorUtils:152","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullLowComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:141","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[51],"tindex":"3fd14af1-2e9e-11e6-820a-91b55c58172c","method":{"position":"org.apache.commons.collections4.CollectionUtils:1086","type":"CtMethodImpl","sourcecode":"public static <T>boolean addIgnoreNull(final java.util.Collection<T> collection, final T object) {\n    if (collection == null) {\n        {\n            if (collection == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            return (object != null) && (collection.add(object));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:42","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[41],"tindex":"3fd17202-2e9e-11e6-820a-0d65727abd74","method":{"position":"org.apache.commons.collections4.CollectionUtils:1014","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Collection<O> collect(final java.util.Iterator<I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (inputIterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collect(inputIterator, transformer, new java.util.ArrayList<O>());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"inputIterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:468","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"3fd17203-2e9e-11e6-820a-91675a856d32","method":{"position":"org.apache.commons.collections4.map.Flat3Map:857","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (boolean) {\n                return false;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = getKey();\n            final java.lang.Object java.lang.Object = getValue();\n            return (key == null ? (other.getKey()) == null : key.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[52],"tindex":"3fd19914-2e9e-11e6-820a-1d162e276d2c","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                changed |= remove(o);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:381","type":"CtConditionalImpl","sourcecode":"nextElement == null ? p == null : nextElement.equals(p)"},"failures":[],"tindex":"3fd19915-2e9e-11e6-820a-0739a33d5c9d","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:357","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 == null ? key1 == null : nextElement.equals(p)) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"key1","nextElement":"key3"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[53,54,55,56],"tindex":"3fd19916-2e9e-11e6-820a-0f7f6523e344","method":{"position":"org.apache.commons.collections4.CollectionUtils:80","type":"CtMethodImpl","sourcecode":"public final int max(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            return java.lang.Math.max(freqA(obj), freqB(obj));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[],"tindex":"3fd1c027-2e9e-11e6-820a-cf1e64781c6e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1544","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.Bag) == false) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            if ((node != null) && (node.getValue().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1039","type":"CtBinaryOperatorImpl","sourcecode":"inputCollection != null"},"failures":[],"tindex":"3fd1c028-2e9e-11e6-820a-a1f58aeab1ab","method":{"position":"org.apache.commons.collections4.CollectionUtils:1037","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.lang.Iterable<? extends I> inputCollection, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if (inputCollection != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (inputCollection != null) {\n                {\n                    if (inputCollection != null) {\n                        return org.apache.commons.collections4.CollectionUtils.collect(inputCollection.iterator(), transformer, outputCollection);\n                    } \n                    return outputCollection;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputCollection":"inputCollection"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtBinaryOperatorImpl","sourcecode":"size <= 0"},"failures":[57,58,59],"tindex":"3fd1e739-2e9e-11e6-820a-93324691719e","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:147","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index <= 0) {\n        {\n            return decorated().set(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.ReplacementsFinder:90","type":"CtBinaryOperatorImpl","sourcecode":"(pendingDeletions.isEmpty()) && (pendingInsertions.isEmpty())"},"failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115],"tindex":"3fd2837a-2e9e-11e6-820a-3d79d765a319","method":{"position":"org.apache.commons.collections4.list.PredicatedList:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.list.PredicatedList<T> predicatedList(final java.util.List<T> list, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((list.isEmpty()) && (list.isEmpty())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.PredicatedList<T>(list , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingDeletions":"list","pendingInsertions":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"items == null"},"failures":[116],"tindex":"3fd2aa8b-2e9e-11e6-820a-5b5984492aa9","method":{"position":"org.apache.commons.collections4.CollectionUtils:208","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>java.util.Collection<T> emptyIfNull(final java.util.Collection<T> collection) {\n    if (collection == null) {\n        {\n            return collection == null ? org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.java.util.Collection : collection;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"items":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:331","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[117,118,119],"tindex":"3fd2d19c-2e9e-11e6-820a-f1ae07a93b9f","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:427","type":"CtMethodImpl","sourcecode":"protected void updateNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            node.setValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"3fd2d19d-2e9e-11e6-820a-f39c1e3e84f5","method":{"position":"org.apache.commons.collections4.CollectionUtils:1689","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if (remove instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.removeAll(collection, remove);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"remove"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174],"tindex":"3fd2d19e-2e9e-11e6-820a-fd503a3b333b","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:453","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1037","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"3fd2f8af-2e9e-11e6-820a-b1bc642ce2c9","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:245","type":"CtMethodImpl","sourcecode":"public void putAll(int index, final java.util.Map<? extends K, ? extends V> map) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(index)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                final K K = entry.getKey();\n                final boolean boolean = containsKey(key);\n                put(index, entry.getKey(), entry.getValue());\n                if (!contains) {\n                    index++;\n                } else {\n                    index = (indexOf(entry.getKey())) + 1;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[175,176,177,178],"tindex":"3fd2f8b0-2e9e-11e6-820a-4dcb6f460c70","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:76","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((preds.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(preds[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(preds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtBinaryOperatorImpl","sourcecode":"pos < index"},"failures":[],"tindex":"3fd31fc1-2e9e-11e6-820a-79dc892c9d6e","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:423","type":"CtMethodImpl","sourcecode":"public V setValue(final int index, final V value) {\n    if (index < index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final K K = java.util.List<K>.get(index);\n            return put(key, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"index","index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[179,180],"tindex":"3fd31fc2-2e9e-11e6-820a-b1aaabf22ea0","method":{"position":"org.apache.commons.collections4.CollectionUtils:722","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    final T T = iterator.next();\n                    if (iterator.hasNext()) {\n                        closure.execute(element);\n                    } else {\n                        return element;\n                    }\n                }\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":41,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}