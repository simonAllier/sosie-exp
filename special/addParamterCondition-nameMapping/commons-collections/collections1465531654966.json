{"failureDictionary":{"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":593,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":594,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":49,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":371,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":6,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":470,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":487,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastValues":400,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":692,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastEntrySet":398,"org.apache.commons.collections4.ListUtilsTest.testIntersectListWithNoOverlapAndDifferentTypes":813,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":229,"org.apache.commons.collections4.CollectionUtilsTest.getNegative":346,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":316,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":796,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx4":11,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":524,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":598,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":519,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":727,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":603,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIsEmpty":436,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testEqualsNull":446,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":562,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":179,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":625,"org.apache.commons.collections4.CollectionUtilsTest.get":347,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":595,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":776,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":639,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":299,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":753,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":458,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":392,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":267,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":548,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":60,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":401,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":511,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":694,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRetainAll":83,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":156,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":488,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":172,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":779,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":62,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":124,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":497,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":443,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":505,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":103,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":526,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":679,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":221,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":176,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":618,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsSelfHashCode":72,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":235,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":621,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":527,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testGetSet":426,"org.apache.commons.collections4.map.LazySortedMapTest.testMapHashCode":84,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":613,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testObjectHashCodeEqualsContract":422,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testSerializeDeserializeThenCompare":331,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":307,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsContract":71,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":474,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":707,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":425,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":656,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":288,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":324,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveChangesMap":214,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":258,"org.apache.commons.collections4.map.LazyMapTest.testFullMapCompatibility":150,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":253,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":277,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":1,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":404,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":720,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":457,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":723,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":745,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking2":544,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":0,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":768,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":683,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":211,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":344,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":629,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":463,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":553,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":153,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":653,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":303,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToString":322,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":726,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":334,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":184,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveAll":58,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":666,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":668,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":377,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":808,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":806,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":5,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":286,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":460,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":437,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":292,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":611,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":711,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCanonicalEmptyCollectionExists":451,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":468,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":335,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":207,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":317,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":794,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":790,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":10,"org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie":514,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":480,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":601,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":189,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":375,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":665,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":774,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectEqualsSelf":115,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":555,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":530,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":633,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":297,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":390,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":667,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":600,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":54,"org.apache.commons.collections4.map.DefaultedMapTest.testMapHashCode":35,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":496,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":273,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":385,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":311,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":251,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":272,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":549,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":557,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":719,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveAll":47,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap":201,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":455,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":485,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testObjectEqualsSelf":420,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains3":128,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains2":127,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":539,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains1":126,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":284,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":792,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":271,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":81,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastValues":381,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":525,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectEqualsSelf":185,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":264,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":343,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":671,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":373,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":606,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":721,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":483,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":652,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":241,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":157,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":558,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":57,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":238,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":173,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":268,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":359,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":21,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":596,"org.apache.commons.collections4.map.LazySortedMapTest.testFullMapCompatibility":102,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":536,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":183,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":640,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSimpleSerialization":450,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":146,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":456,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":441,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":28,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":378,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":728,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":807,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":175,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":730,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":194,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":729,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":766,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":762,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":363,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":159,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":59,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":650,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":362,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":294,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRetainAll":113,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":599,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":669,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":476,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":644,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":341,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":233,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":138,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":19,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":301,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":473,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":368,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":351,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":803,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":18,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":431,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":218,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":627,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":139,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":722,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":408,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":678,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":206,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSerializeDeserializeThenCompare":188,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":462,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":535,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastEntrySet":379,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":489,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":532,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":508,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":423,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":783,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":810,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetClearChangesMap":39,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":89,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":243,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":15,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":744,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":111,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":781,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":106,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":809,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":740,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":617,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":767,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":439,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":376,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":478,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":636,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":309,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsContract":168,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":383,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":563,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":724,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":171,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":418,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":733,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":734,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":698,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":732,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":638,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveAll":107,"org.apache.commons.collections4.list.TreeListTest.testBug35258":356,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":570,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":773,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveAll":155,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionClear":433,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":778,"org.apache.commons.collections4.map.LazyMapTest.testValuesClearChangesMap":162,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":193,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":568,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":569,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":610,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":414,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalFullCollectionExists":67,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":220,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":308,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":247,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":27,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":780,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking":512,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":195,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":280,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRetainAll":34,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":281,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":547,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsSelfHashCode":448,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIsEmpty":326,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":689,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":310,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":760,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":269,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":178,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":752,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":751,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":237,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":750,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":296,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":800,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":225,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetClearChangesMap":92,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":630,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalEmptyCollectionExists":118,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":434,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":490,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":406,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":648,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":697,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":787,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":262,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":435,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveChangesMap":82,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains1":583,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":389,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains3":585,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains2":584,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicate":24,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":405,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":339,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":255,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":52,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesClearChangesMap":114,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":540,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":507,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsContract":187,"org.apache.commons.collections4.ListUtilsTest.testIntersectNonEmptySubset":812,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":122,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":261,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":690,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":428,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":192,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":801,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":413,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testComparator":424,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":754,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":349,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":755,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRetainAll":329,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":756,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":533,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":623,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":674,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":684,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray2":320,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":676,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":98,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":246,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":658,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":293,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":550,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":704,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":784,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":197,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":149,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":804,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":500,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":546,"org.apache.commons.collections4.ListUtilsTest.testIntersectionOrderInsensitivity":814,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullKey":99,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":647,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":411,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":180,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":209,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":216,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":492,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":556,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":714,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":559,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":397,"org.apache.commons.collections4.map.LazyMapTest.testKeySetClearChangesMap":136,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":708,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIteratorRemove":438,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":641,"org.apache.commons.collections4.map.LazySortedMapTest.testLastKey":76,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":129,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastKeySet":380,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":26,"org.apache.commons.collections4.map.LazySortedMapTest.testMakeMap":97,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":245,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":663,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":275,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":486,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":42,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":204,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":328,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":791,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":440,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetIteratorRemoveChangesMap":109,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":210,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":410,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":314,"org.apache.commons.collections4.map.LazyMapTest.testValuesRetainAll":131,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":614,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":655,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":212,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":777,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":361,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":673,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":624,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":74,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains3":743,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains2":742,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains1":741,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":358,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":217,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":407,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":705,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":228,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":137,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":289,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetClearChangesMap":140,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":40,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":604,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":739,"org.apache.commons.collections4.map.DefaultedMapTest.testFullMapCompatibility":53,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":190,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":256,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":370,"org.apache.commons.collections4.map.DefaultedMapTest.testSimpleSerialization":70,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":432,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":797,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":475,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":516,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":691,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":263,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullValue":141,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":25,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":654,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":55,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":372,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":534,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":481,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":239,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":575,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":632,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":597,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":291,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":471,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":579,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":682,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":659,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":551,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":177,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":348,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":609,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testSerializeDeserializeThenCompare":419,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":130,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":491,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":274,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":104,"org.apache.commons.collections4.map.LazyMapTest.testSimpleSerialization":167,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":8,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":226,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":279,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":703,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":509,"org.apache.commons.collections4.map.LazySortedMapTest.testFirstKey":77,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":257,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectEqualsSelf":66,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":46,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":196,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":234,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":152,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":757,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":662,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":561,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":608,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullKey":147,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":459,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":759,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":73,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":285,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":628,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":686,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":701,"org.apache.commons.collections4.map.LazySortedMapTest.testEmptyMapCompatibility":100,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":345,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":242,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains1":29,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":248,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains1":590,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains2":30,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains2":591,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains3":31,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains3":592,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRemoveChangesMap":230,"org.apache.commons.collections4.list.TreeListTest.testRemove":354,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":105,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":622,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":369,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveChangesMap":94,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":68,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":75,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":295,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":282,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":685,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":811,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testEqualsNull":421,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":764,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":710,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":360,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":477,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":412,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":13,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":305,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":517,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":117,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":520,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains1":747,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":395,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains3":749,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains2":748,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":782,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":789,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":56,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":502,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":554,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":125,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove3":38,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":510,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove2":37,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove1":36,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":574,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":572,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":573,"org.apache.commons.collections4.ListUtilsTest.testSubtract":298,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":213,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":276,"org.apache.commons.collections4.map.DefaultedMapTest.testMakeMap":48,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":657,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":170,"org.apache.commons.collections4.map.DefaultedMapTest.testEmptyMapCompatibility":51,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":631,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionSize":321,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":718,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":382,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":142,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":336,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":735,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":736,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":306,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":737,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":236,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":160,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":388,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":661,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":265,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":619,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":672,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":312,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":587,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsContract":449,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":588,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":664,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":731,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":325,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":586,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsSelfHashCode":169,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":642,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":181,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":32,"org.apache.commons.collections4.map.LazyMapTest.testEmptyMapCompatibility":148,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":45,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":775,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":240,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsContract":120,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRetainAll":161,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":501,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":367,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":7,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testDecorateFactory":22,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains2":565,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains3":566,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains1":564,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":393,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray2":444,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Array":23,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithEmptyMap":200,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":151,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":154,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":772,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":319,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalFullCollectionExists":164,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":802,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":771,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":353,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":537,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":560,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":716,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":582,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":581,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":580,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":250,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":709,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":357,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":495,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":302,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":635,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":529,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":688,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":403,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":467,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionClear":327,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":523,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":110,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking2":513,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":616,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":765,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":531,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":394,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":266,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove1":85,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSerializeDeserializeThenCompare":430,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove2":86,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":680,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove3":87,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":612,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":366,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":798,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":330,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":415,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":350,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsSelfHashCode":121,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":515,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":552,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":278,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":675,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":409,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":232,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":300,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":427,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":494,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":332,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":364,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":469,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":461,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIteratorRemove":323,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetIteratorRemoveChangesMap":91,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionSize":442,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":182,"org.apache.commons.collections4.map.LazyMapTest.testMapHashCode":132,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":417,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":9,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":143,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":522,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":95,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":270,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":503,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":466,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":203,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":602,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":374,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":643,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":576,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetHashCode":429,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":687,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":578,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":577,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetClearChangesMap":43,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRetainAll":64,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":738,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":482,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":259,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":504,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":651,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":634,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":222,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":799,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectEqualsSelf":447,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":518,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":746,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":244,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":761,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":391,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":795,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":677,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":758,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":313,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove3":135,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove1":133,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":290,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove2":134,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":249,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":645,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetClearChangesMap":88,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalEmptyCollectionExists":166,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":283,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":670,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":61,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":416,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":681,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":337,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":479,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":3,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":715,"org.apache.commons.collections4.map.LazyMapTest.testObjectEqualsSelf":163,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":186,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":365,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":254,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullValue":44,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":620,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":786,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":355,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":472,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":340,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":318,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":304,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":725,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":785,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains1":78,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains2":79,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains3":80,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalFullCollectionExists":116,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesClearChangesMap":65,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":198,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":205,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":123,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":174,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":199,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":112,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullValue":93,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":699,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":649,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":528,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":493,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalEmptyCollectionExists":69,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":589,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":605,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":696,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":231,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":538,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":571,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":191,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":793,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":315,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":208,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":702,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullKey":50,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":101,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":215,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":386,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":712,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":90,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":2,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":33,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":543,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastKeySet":399,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":333,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":717,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":14,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":396,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":769,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":693,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":158,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":223,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":352,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":700,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":224,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":788,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":202,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":63,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":770,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":464,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":541,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":4,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveAll":144,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":108,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":706,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":646,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":499,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking":542,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":12,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":338,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":465,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":521,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":637,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCanonicalFullCollectionExists":452,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":506,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":384,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":567,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToString":445,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":165,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesRemoveChangesMap":219,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":454,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory":252,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":453,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":16,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiRemove":20,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":387,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":763,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":41,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":287,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":402,"org.apache.commons.collections4.map.LazyMapTest.testMakeMap":145,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":545,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":626,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":17,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":260,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":484,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":713,"org.apache.commons.collections4.map.LazySortedMapTest.testSimpleSerialization":119,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":607,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":615,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":805,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":695,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":227,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":342,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":660,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveAll":96,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":498},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[0],"tindex":"dc8a2c8d-2ec0-11e6-80e4-073d40b9bb8b","method":{"position":"org.apache.commons.collections4.MapUtils:1756","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> iterableMap(final java.util.Map<K, V> map) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return map instanceof org.apache.commons.collections4.IterableMap ? ((org.apache.commons.collections4.IterableMap<K, V>)(map)) : new org.apache.commons.collections4.map.AbstractMapDecorator<K, V>(map) {            };\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1171","type":"CtBinaryOperatorImpl","sourcecode":"(y.getLeft(dataElement)) != null"},"failures":[1,2,3,4,5,6,7,8,9,10],"tindex":"dc8b16ee-2ec0-11e6-80e4-b32d1067f157","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1098","type":"CtMethodImpl","sourcecode":"private void swapPosition(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> x, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> y, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((y.getLeft(dataElement)) != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getParent(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getLeft(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getRight(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getParent(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getLeft(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getRight(dataElement);\n            final boolean boolean = ((x.getParent(dataElement)) != null) && (x == (x.getParent(dataElement).getLeft(dataElement)));\n            final boolean boolean = ((y.getParent(dataElement)) != null) && (y == (y.getParent(dataElement).getLeft(dataElement)));\n            if (x == yFormerParent) {\n                x.setParent(y, dataElement);\n                if (yWasLeftChild) {\n                    y.setLeft(x, dataElement);\n                    y.setRight(xFormerRightChild, dataElement);\n                } else {\n                    y.setRight(x, dataElement);\n                    y.setLeft(xFormerLeftChild, dataElement);\n                }\n            } else {\n                x.setParent(yFormerParent, dataElement);\n                if (yFormerParent != null) {\n                    if (yWasLeftChild) {\n                        yFormerParent.setLeft(x, dataElement);\n                    } else {\n                        yFormerParent.setRight(x, dataElement);\n                    }\n                } \n                y.setLeft(xFormerLeftChild, dataElement);\n                y.setRight(xFormerRightChild, dataElement);\n            }\n            if (y == xFormerParent) {\n                y.setParent(x, dataElement);\n                if (xWasLeftChild) {\n                    x.setLeft(y, dataElement);\n                    x.setRight(yFormerRightChild, dataElement);\n                } else {\n                    x.setRight(y, dataElement);\n                    x.setLeft(yFormerLeftChild, dataElement);\n                }\n            } else {\n                y.setParent(xFormerParent, dataElement);\n                if (xFormerParent != null) {\n                    if (xWasLeftChild) {\n                        xFormerParent.setLeft(y, dataElement);\n                    } else {\n                        xFormerParent.setRight(y, dataElement);\n                    }\n                } \n                x.setLeft(yFormerLeftChild, dataElement);\n                x.setRight(yFormerRightChild, dataElement);\n            }\n            if ((x.getLeft(dataElement)) != null) {\n                x.getLeft(dataElement).setParent(x, dataElement);\n            } \n            if ((x.getRight(dataElement)) != null) {\n                x.getRight(dataElement).setParent(x, dataElement);\n            } \n            if ((y.getLeft(dataElement)) != null) {\n                y.getLeft(dataElement).setParent(y, dataElement);\n            } \n            if ((y.getRight(dataElement)) != null) {\n                y.getRight(dataElement).setParent(y, dataElement);\n            } \n            x.swapColors(y, dataElement);\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]) == x) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = y;\n            } else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]) == y) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = x;\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"y":"y","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"dc8b8c1f-2ec0-11e6-80e4-837d6a8990c3","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == (org.apache.commons.collections4.map.AbstractMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:276","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[],"tindex":"dc8bb330-2ec0-11e6-80e4-a9890cd9eebf","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:340","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> mutator) {\n    if (mutator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.collection.CompositeCollection.this.org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> = mutator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[11],"tindex":"dc8bda41-2ec0-11e6-80e4-f1af52ef8dfd","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:72","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            return new org.apache.commons.collections4.functors.OnePredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[12,13,14,15],"tindex":"dc8bda42-2ec0-11e6-80e4-535653e69259","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1054","type":"CtMethodImpl","sourcecode":"protected void rangeCheck(final int index, final int beyond) {\n    if (index < 0) {\n        {\n            if ((index < 0) || (index >= beyond)) {\n                throw new java.lang.IndexOutOfBoundsException(((((\"Index '\" + index) + \"' out of bounds for size '\") + (int)) + \"'\"));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[16,17,18],"tindex":"dc8c0153-2ec0-11e6-80e4-b132aa6211ab","method":{"position":"org.apache.commons.collections4.map.CompositeMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsValue(value)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[19],"tindex":"dc8c2864-2ec0-11e6-80e4-d1c05a95addc","method":{"position":"org.apache.commons.collections4.QueueUtils:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    return org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(queue);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false"},"failures":[],"tindex":"dc8c2865-2ec0-11e6-80e4-653f921da9e0","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1322","type":"CtMethodImpl","sourcecode":"private boolean doEquals(final java.lang.Object obj, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                try {\n                    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = getMapIterator(dataElement) ; it.hasNext() ; ) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        final java.lang.Object java.lang.Object = it.getValue();\n                        if ((value.equals(other.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                } catch (final java.lang.ClassCastException ex) {\n                    return false;\n                } catch (final java.lang.NullPointerException ex) {\n                    return false;\n                }\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[],"tindex":"dc8c7686-2ec0-11e6-80e4-f5b0c35e89d9","method":{"position":"org.apache.commons.collections4.IteratorUtils:744","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> loopingIterator(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingIterator<E>(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"dc8c7687-2ec0-11e6-80e4-f577c90da0f3","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:542","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V set(final int index, final V value) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.setValue(index, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[20],"tindex":"dc8c9d98-2ec0-11e6-80e4-bf77e80e7c54","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"dc8c9d99-2ec0-11e6-80e4-9da4c7dcb1d4","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:69","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Predicate<T> coerce(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.Predicate<T>)(predicate));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[21],"tindex":"dc8cc4aa-2ec0-11e6-80e4-6503554754ec","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:145","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"dc8cebbb-2ec0-11e6-80e4-c5a05feb318b","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:120","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"dc8cebbc-2ec0-11e6-80e4-61ecf58525a5","method":{"position":"org.apache.commons.collections4.map.LinkedMap:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[22],"tindex":"dc8cebbd-2ec0-11e6-80e4-7b29db94cc47","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:57","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.SortedBidiMap<K, V> unmodifiableSortedBidiMap(final org.apache.commons.collections4.SortedBidiMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final org.apache.commons.collections4.SortedBidiMap<K, V> org.apache.commons.collections4.SortedBidiMap<K, V> = ((org.apache.commons.collections4.SortedBidiMap<K, V>)(map));\n                        return tmpMap;\n                    } \n                    return new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V>(map);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[23],"tindex":"dc8d12ce-2ec0-11e6-80e4-ab206c8bab42","method":{"position":"org.apache.commons.collections4.CollectionUtils:1382","type":"CtMethodImpl","sourcecode":"public static boolean sizeIsEmpty(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return true;\n            } else if (object instanceof java.util.Collection<?>) {\n                return ((java.util.Collection<?>)(object)).isEmpty();\n            } else if (object instanceof java.util.Map<?, ?>) {\n                return ((java.util.Map<?, ?>)(object)).isEmpty();\n            } else if (object instanceof java.lang.Object[]) {\n                return (((java.lang.Object[])(object)).int) == 0;\n            } else if (object instanceof java.util.Iterator<?>) {\n                return (((java.util.Iterator<?>)(object)).hasNext()) == false;\n            } else if (object instanceof java.util.Enumeration<?>) {\n                return (((java.util.Enumeration<?>)(object)).hasMoreElements()) == false;\n            } else {\n                try {\n                    return (java.lang.reflect.Array.getLength(object)) == 0;\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[24],"tindex":"dc8d39df-2ec0-11e6-80e4-c5bbdf3e9e18","method":{"position":"org.apache.commons.collections4.PredicateUtils:502","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsFalsePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NullIsFalsePredicate.nullIsFalsePredicate(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172],"tindex":"dc8d5ff0-2ec0-11e6-80e4-5b429af85593","method":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:47","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> factoryTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.FactoryTransformer<I, O>(factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[173],"tindex":"dc8d8701-2ec0-11e6-80e4-4564a28eb95e","method":{"position":"org.apache.commons.collections4.ClosureUtils:113","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (count > 3) {\n        {\n            return org.apache.commons.collections4.functors.ForClosure.forClosure(count, closure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:956","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"dc8dae12-2ec0-11e6-80e4-7be88dd29590","method":{"position":"org.apache.commons.collections4.IteratorUtils:955","type":"CtMethodImpl","sourcecode":"public static java.lang.Object[] toArray(final java.util.Iterator<?> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            final java.util.List<?> java.util.List<?> = org.apache.commons.collections4.IteratorUtils.toList(iterator, 100);\n            return list.toArray();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtBinaryOperatorImpl","sourcecode":"nCopies > 0"},"failures":[174,175,176,177],"tindex":"dc8dae13-2ec0-11e6-80e4-e58ba921124c","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (nCopies > 0) {\n        {\n            return getBag().remove(object, nCopies);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"nCopies"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[178,179],"tindex":"dc8dae14-2ec0-11e6-80e4-a531a9c7233f","method":{"position":"org.apache.commons.collections4.list.TreeList:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            checkInterval(index, 0, ((size()) - 1));\n            final E E = get(index);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(index);\n            (int)--;\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"dc8dd525-2ec0-11e6-80e4-2bfe9ba3bd6b","method":{"position":"org.apache.commons.collections4.MapUtils:318","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Double) {\n                return ((java.lang.Double)(answer));\n            } \n            return java.lang.Double.valueOf(answer.doubleValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtBinaryOperatorImpl","sourcecode":"cursor == null"},"failures":[],"tindex":"dc8dd526-2ec0-11e6-80e4-3907bd5323e9","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:288","type":"CtMethodImpl","sourcecode":"protected void unregisterCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = ref.get();\n                if (cur == null) {\n                    it.remove();\n                } else if (cur == cursor) {\n                    ref.clear();\n                    it.remove();\n                    break;\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[180,181,182,183],"tindex":"dc8dfc37-2ec0-11e6-80e4-5f90d5e5318c","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:657","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key3 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            if (key5 != null) {\n                h ^= key5.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key3"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[],"tindex":"dc8e2348-2ec0-11e6-80e4-65485c4c3a00","method":{"position":"org.apache.commons.collections4.set.CompositeSet:425","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Set) {\n                final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(obj));\n                return ((set.size()) == (org.apache.commons.collections4.set.CompositeSet.this.size())) && (set.containsAll(org.apache.commons.collections4.set.CompositeSet.this));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[184],"tindex":"dc8e4a59-2ec0-11e6-80e4-8f49eed05990","method":{"position":"org.apache.commons.collections4.IteratorUtils:1017","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator, final int estimatedSize) {\n    if (iterator.hasNext()) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (estimatedSize < 1) {\n                throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(estimatedSize);\n            while (iterator.hasNext()) {\n                list.add(iterator.next());\n            }\n            return list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[185,186,187,188],"tindex":"dc8e4a5a-2ec0-11e6-80e4-51c5b1ce2b45","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:332","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            if ((org.apache.commons.collections4.comparators.ComparatorChain.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.ComparatorChain.this.getClass())) {\n                final org.apache.commons.collections4.comparators.ComparatorChain<?> org.apache.commons.collections4.comparators.ComparatorChain<?> = ((org.apache.commons.collections4.comparators.ComparatorChain<?>)(object));\n                return (null == (java.util.BitSet) ? null == (chain.java.util.BitSet) : java.util.BitSet.equals(chain.java.util.BitSet)) && (null == (java.util.List<java.util.Comparator<E>>) ? null == (chain.java.util.List<java.util.Comparator<?>>) : java.util.List<java.util.Comparator<E>>.equals(chain.java.util.List<java.util.Comparator<?>>));\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1027","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"dc8e716b-2ec0-11e6-80e4-c7d1dce85202","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:350","type":"CtMethodImpl","sourcecode":"private boolean selectR(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h, final int bitIndex, final K key, final int lengthInBits, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.Reference<java.util.Map.Entry<K, V>> reference) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(lengthInBits)) {\n        {\n            if ((h.int) <= bitIndex) {\n                if (!(h.isEmpty())) {\n                    reference.set(h);\n                    return false;\n                } \n                return true;\n            } \n            if (!(isBitSet(key, h.int, lengthInBits))) {\n                if (selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference)) {\n                    return selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference);\n                } \n            } else {\n                if (selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference)) {\n                    return selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference);\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"lengthInBits"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[189,190],"tindex":"dc8e716c-2ec0-11e6-80e4-4d9dc4423043","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:502","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[191,192,193,194,195,196,197,198],"tindex":"dc8e716d-2ec0-11e6-80e4-7f4351be16cd","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            removeIfExpired(key, now());\n            return super.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[199],"tindex":"dc8e987e-2ec0-11e6-80e4-c965e10612e3","method":{"position":"org.apache.commons.collections4.map.SingletonMap:534","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        {\n            if (obj == (org.apache.commons.collections4.map.SingletonMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != 1) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = other.entrySet().iterator().next();\n            return (isEqualKey(entry.getKey())) && (isEqualValue(entry.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[],"tindex":"dc8e987f-2ec0-11e6-80e4-29820504d170","method":{"position":"org.apache.commons.collections4.CollectionUtils:1086","type":"CtMethodImpl","sourcecode":"public static <T>boolean addIgnoreNull(final java.util.Collection<T> collection, final T object) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (collection == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            return (object != null) && (collection.add(object));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[200,201],"tindex":"dc8ebf90-2ec0-11e6-80e4-334bef99b1e6","method":{"position":"org.apache.commons.collections4.MapUtils:1217","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        {\n            return !(org.apache.commons.collections4.MapUtils.isEmpty(map));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[171],"tindex":"dc8ebf91-2ec0-11e6-80e4-83cbf096d141","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[202,203,204,205,206,32,40,61,63,207,208,209,210,211,212,213,214,215,216,217,218,219,220,81,89,110,112,221,192,222,223,224,225,226,227,228,129,137,158,160,229,230,231,232,233,234,235,236,237],"tindex":"dc8ebf92-2ec0-11e6-80e4-9dddbee1e1fc","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:85","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"dc8ebf93-2ec0-11e6-80e4-7bc762e4c08e","method":{"position":"org.apache.commons.collections4.list.PredicatedList:98","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.TransformedQueue:77","type":"CtBinaryOperatorImpl","sourcecode":"(queue.size()) > 0"},"failures":[238],"tindex":"dc8ee6a4-2ec0-11e6-80e4-47bf6a4bf1f2","method":{"position":"org.apache.commons.collections4.QueueUtils:73","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> predicatedQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            if ((queue.size()) > 0) {\n                {\n                    return org.apache.commons.collections4.queue.PredicatedQueue.predicatedQueue(queue, predicate);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[239,240,241,242,243,244],"tindex":"dc8ee6a5-2ec0-11e6-80e4-fb1703e833fb","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:272","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            return java.util.List<E>.get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"dc8ee6a6-2ec0-11e6-80e4-25e4ae7163d2","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:538","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == (org.apache.commons.collections4.bag.AbstractMapBag.this)) {\n                return true;\n            } \n            if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.Bag<?> org.apache.commons.collections4.Bag<?> = ((org.apache.commons.collections4.Bag<?>)(object));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n                if ((other.getCount(element)) != (getCount(element))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"dc8f0db7-2ec0-11e6-80e4-33c337c2e3bf","method":{"position":"org.apache.commons.collections4.MapUtils:234","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Short) {\n                return ((java.lang.Short)(answer));\n            } \n            return java.lang.Short.valueOf(answer.shortValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:266","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[],"tindex":"dc8f0db8-2ec0-11e6-80e4-2d2c3aff7630","method":{"position":"org.apache.commons.collections4.set.CompositeSet:330","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.set.CompositeSet.SetMutator<E> mutator) {\n    if (mutator == null) {\n        {\n            if (mutator == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E> = mutator;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"dc8f34c9-2ec0-11e6-80e4-f99ffa2737a3","method":{"position":"org.apache.commons.collections4.QueueUtils:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    return org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(queue);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[245,246,247,248,249,250],"tindex":"dc8f34ca-2ec0-11e6-80e4-f781a103a691","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:74","type":"CtBinaryOperatorImpl","sourcecode":"(transformers.size()) == 0"},"failures":[251],"tindex":"dc8f34cb-2ec0-11e6-80e4-d5461e3c34cb","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:70","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if ((transformers.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n            } \n            if ((transformers.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<T, T>[] org.apache.commons.collections4.Transformer<T, T>[] = transformers.toArray(new org.apache.commons.collections4.Transformer[transformers.size()]);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , cmds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[],"tindex":"dc8f5bdc-2ec0-11e6-80e4-afab05457e23","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:157","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Closure<T> coerce(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            return ((org.apache.commons.collections4.Closure<T>)(closure));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"dc8f5bdd-2ec0-11e6-80e4-1d99dd0b59b1","method":{"position":"org.apache.commons.collections4.IteratorUtils:669","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Iterator<O> transformedIterator(final java.util.Iterator<? extends I> iterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transform) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (transform == null) {\n                throw new java.lang.NullPointerException(\"Transformer must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.TransformIterator<I, O>(iterator , transform);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[252],"tindex":"dc8f82ee-2ec0-11e6-80e4-d73fb4547297","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(final org.apache.commons.collections4.BoundedCollection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BoundedCollection<E> org.apache.commons.collections4.BoundedCollection<E> = ((org.apache.commons.collections4.BoundedCollection<E>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"dc8fa9ff-2ec0-11e6-80e4-e51d4098b856","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:77","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtBinaryOperatorImpl","sourcecode":"nCopies <= 0"},"failures":[253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,174,274,275,276,277,175,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,176,293,294,295,296,177,297,298,299,300,301,302,303,304],"tindex":"dc8fd110-2ec0-11e6-80e4-c9e04a0f500d","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:316","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (nCopies <= 0) {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            if (nCopies <= 0) {\n                return false;\n            } \n            (int)++;\n            if (nCopies < (mut.int)) {\n                mut.int -= nCopies;\n                int -= nCopies;\n            } else {\n                java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n                int -= mut.int;\n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"nCopies"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"dc8ff821-2ec0-11e6-80e4-7d47c353f21c","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:57","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.SortedBidiMap<K, V> unmodifiableSortedBidiMap(final org.apache.commons.collections4.SortedBidiMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final org.apache.commons.collections4.SortedBidiMap<K, V> org.apache.commons.collections4.SortedBidiMap<K, V> = ((org.apache.commons.collections4.SortedBidiMap<K, V>)(map));\n                        return tmpMap;\n                    } \n                    return new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V>(map);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[305,306,307,308,309,310,311,312,313,272,273,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333],"tindex":"dc904642-2ec0-11e6-80e4-e17d9d02ce4c","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:111","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().addAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[334],"tindex":"dc906d53-2ec0-11e6-80e4-8bcf204fd19f","method":{"position":"org.apache.commons.collections4.map.LinkedMap:164","type":"CtMethodImpl","sourcecode":"public int indexOf(java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            int int = 0;\n            for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , i++) {\n                if (isEqualKey(key, entry.java.lang.Object)) {\n                    return i;\n                } \n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"dc909464-2ec0-11e6-80e4-cb575d117118","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[335,336,337,338,339,340,341,342,343,21],"tindex":"dc90bb75-2ec0-11e6-80e4-c9191b31c3dc","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> collectionSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.CollectionSortedBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[344],"tindex":"dc90bb76-2ec0-11e6-80e4-47333593caa7","method":{"position":"org.apache.commons.collections4.list.PredicatedList:102","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"dc90bb77-2ec0-11e6-80e4-2bda0d467fa4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:283","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            return node == null ? null : node.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[345],"tindex":"dc90e288-2ec0-11e6-80e4-5d929045bf78","method":{"position":"org.apache.commons.collections4.SplitMapUtils:184","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[182],"tindex":"dc910999-2ec0-11e6-80e4-b9816783f681","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:134","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[346,347],"tindex":"dc9130aa-2ec0-11e6-80e4-93648149d4b0","method":{"position":"org.apache.commons.collections4.CollectionUtils:1250","type":"CtMethodImpl","sourcecode":"public static java.lang.Object get(final java.lang.Object object, final int index) {\n    if (object instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = index;\n            if (i < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + i));\n            } \n            if (object instanceof java.util.Map<?, ?>) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(object));\n                final java.util.Iterator<?> java.util.Iterator<?> = map.entrySet().iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.lang.Object[]) {\n                return ((java.lang.Object[])(object))[i];\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.next();\n                    } \n                    it.next();\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object instanceof java.util.Collection<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(object)).iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.nextElement();\n                    } else {\n                        it.nextElement();\n                    }\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object == null) {\n                throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n            } else {\n                try {\n                    return java.lang.reflect.Array.get(object, i);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[348],"tindex":"dc9157bb-2ec0-11e6-80e4-91840e005613","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[349,350,351,352],"tindex":"dc917ecc-2ec0-11e6-80e4-e569144e0059","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        {\n            if (object == (org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.this)) {\n                return true;\n            } \n            return java.util.Map.Entry<K, V>.equals(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[353,354,355,356,357,358,359,360,361,362,363],"tindex":"dc917ecd-2ec0-11e6-80e4-1b17384b4118","method":{"position":"org.apache.commons.collections4.list.TreeList:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            checkInterval(index, 0, size());\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(index , obj , null , null);\n            } else {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(index, obj);\n            }\n            (int)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[364],"tindex":"dc91a5de-2ec0-11e6-80e4-51f74e292d5e","method":{"position":"org.apache.commons.collections4.TransformerUtils:250","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[180,181,182,183],"tindex":"dc91ccef-2ec0-11e6-80e4-87809eea3e40","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:532","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((((multi.size()) == 4) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[365,366,367,368,369,370,371,372,373,26,27,28,62,374,375,376,377,378,379,380,381,382,383,384,111,385,386,387,388,389,390,391,392,393,394,395,396,123,124,125,159,397,398,399,400,401,402,403,404,405,406,407,408,409],"tindex":"dc91f400-2ec0-11e6-80e4-6fc11a7dcc1e","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:113","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                {\n                    return decorated().remove(key);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:71","type":"CtBinaryOperatorImpl","sourcecode":"(closures.size()) == 0"},"failures":[410],"tindex":"dc91f401-2ec0-11e6-80e4-bb91c5f74f86","method":{"position":"org.apache.commons.collections4.ClosureUtils:218","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if ((closures.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[411,412,413,414,415,416,417],"tindex":"dc921b12-2ec0-11e6-80e4-0bc4f4006e8a","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:302","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            _putAll(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[],"tindex":"dc924223-2ec0-11e6-80e4-abf4bafdf7e4","method":{"position":"org.apache.commons.collections4.map.Flat3Map:758","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, V>.containsKey(key);\n            org.apache.commons.collections4.map.Flat3Map<K, V>.remove(key);\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[410],"tindex":"dc924224-2ec0-11e6-80e4-51ab778d831a","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:134","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Closure<?>... closures) {\n    if (closures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n            } \n            for (int int = 0 ; i < (closures.int) ; i++) {\n                if ((closures[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"dc926935-2ec0-11e6-80e4-73e0d9dcc9fd","method":{"position":"org.apache.commons.collections4.SetUtils:326","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            return org.apache.commons.collections4.set.TransformedSortedSet.transformingSortedSet(set, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl","sourcecode":"sortedMap == null"},"failures":[418],"tindex":"dc929046-2ec0-11e6-80e4-618ed14c72bd","method":{"position":"org.apache.commons.collections4.MapUtils:1772","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableSortedMap<K, V> iterableSortedMap(final java.util.SortedMap<K, V> sortedMap) {\n    if (sortedMap == null) {\n        {\n            if (sortedMap == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return sortedMap instanceof org.apache.commons.collections4.IterableSortedMap ? ((org.apache.commons.collections4.IterableSortedMap<K, V>)(sortedMap)) : new org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>(sortedMap) {            };\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"sortedMap"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.util.EmptyStackException","condition":{"position":"org.apache.commons.collections4.ArrayStack:89","type":"CtBinaryOperatorImpl","sourcecode":"n <= 0"},"failures":[],"tindex":"dc929047-2ec0-11e6-80e4-8d2c20f4ac3b","method":{"position":"org.apache.commons.collections4.ArrayStack:105","type":"CtMethodImpl","sourcecode":"public E peek(final int n) throws java.util.EmptyStackException {\n    if (n <= 0) {\n        throw new java.util.EmptyStackException();\n    } else {\n        {\n            final int int = ((size()) - n) - 1;\n            if (m < 0) {\n                throw new java.util.EmptyStackException();\n            } else {\n                return get(m);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[419,420,421,422,423],"tindex":"dc92b758-2ec0-11e6-80e4-1b3b3d85a419","method":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:109","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            if ((org.apache.commons.collections4.comparators.ReverseComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.ReverseComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.ReverseComparator<?> org.apache.commons.collections4.comparators.ReverseComparator<?> = ((org.apache.commons.collections4.comparators.ReverseComparator<?>)(object));\n                return java.util.Comparator<E>.equals(thatrc.java.util.Comparator<?>);\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"dc92b759-2ec0-11e6-80e4-2fb709496c97","method":{"position":"org.apache.commons.collections4.QueueUtils:73","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> predicatedQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            if ((queue.size()) > 0) {\n                {\n                    return org.apache.commons.collections4.queue.PredicatedQueue.predicatedQueue(queue, predicate);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452],"tindex":"dc92b75a-2ec0-11e6-80e4-1b68969e4661","method":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(set , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"dc92de6b-2ec0-11e6-80e4-cd18c891fc98","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:616","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntrySet().contains(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[453,454,455,456],"tindex":"dc92de6c-2ec0-11e6-80e4-b7018fb8e370","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:76","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((preds.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(preds[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(preds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"dc92de6d-2ec0-11e6-80e4-af96051b9538","method":{"position":"org.apache.commons.collections4.MapUtils:1521","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"dc93057e-2ec0-11e6-80e4-97fbbc1dfa9e","method":{"position":"org.apache.commons.collections4.MapUtils:1588","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[],"tindex":"dc93057f-2ec0-11e6-80e4-4d0544a92deb","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:262","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if (entry != null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = link;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[457,458,459,460],"tindex":"dc932c90-2ec0-11e6-80e4-0d2268cc2e46","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:228","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" is less than zero\"));\n            } \n            if (index >= (int)) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" is invalid for size \") + (int)));\n            } \n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            if (index < ((int) / 2)) {\n                entry = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                }\n            } else {\n                entry = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                }\n            }\n            return entry;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[461,462,463,464,465,466,467,412,468,469,470,471,472,473,474,475,476,413,477,478,479,480,481,482,483,484,485,486,487,415,488,489,490,491,492,493,494,495,496,497,498,499,416,500,501,502,503,504,505,506,507,508,509,510,511],"tindex":"dc932c91-2ec0-11e6-80e4-03486eeb9001","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:453","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(java.lang.Object key) {\n    if (key != null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.DefaultedMap:105","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[],"tindex":"dc9353a2-2ec0-11e6-80e4-699b2ef0fe9b","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:75","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (factory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[512,513],"tindex":"dc9353a3-2ec0-11e6-80e4-5d239b555c0e","method":{"position":"org.apache.commons.collections4.list.GrowthList:121","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E element) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = decorated().size();\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n            } \n            decorated().add(index, element);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"dc937ab4-2ec0-11e6-80e4-af308cb71b4a","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return java.util.Set<E>.containsAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:55","type":"CtBinaryOperatorImpl","sourcecode":"trie instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[514],"tindex":"dc937ab5-2ec0-11e6-80e4-d33bf3d878bd","method":{"position":"org.apache.commons.collections4.TrieUtils:44","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(trie);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544],"tindex":"dc937ab6-2ec0-11e6-80e4-9b8dd0b97f1a","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        {\n            return decorated().remove(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[],"tindex":"dc937ab7-2ec0-11e6-80e4-7d2fc14e310a","method":{"position":"org.apache.commons.collections4.ClosureUtils:182","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName, paramTypes, args));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:266","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[],"tindex":"dc937ab8-2ec0-11e6-80e4-8bf06ad661f8","method":{"position":"org.apache.commons.collections4.set.CompositeSet:330","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.set.CompositeSet.SetMutator<E> mutator) {\n    if (mutator == null) {\n        {\n            if (mutator == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E> = mutator;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:97","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"dc93a1c9-2ec0-11e6-80e4-df4ee832edd3","method":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PushbackIterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PushbackIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(iterator.hasPrevious()) == false"},"failures":[],"tindex":"dc93a1ca-2ec0-11e6-80e4-79d8ad81425c","method":{"position":"org.apache.commons.collections4.IteratorUtils:446","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<E> iterator) {\n    if ((iterator.hasPrevious()) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[388,390,394,395,545,196,197],"tindex":"dc93a1cb-2ec0-11e6-80e4-333dfbb3795a","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:377","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            removeIfExpired(key, now());\n            return super.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[546,547,548,549,550,551,552,349,553,554,555,556,557,558,559,350,560,561,562,563],"tindex":"dc93c8dc-2ec0-11e6-80e4-df34c4f9e203","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:146","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return java.util.Map<K, V>.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"dc93c8dd-2ec0-11e6-80e4-67ad39cccdad","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:113","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                {\n                    return decorated().remove(key);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,258,620,621,259,622,623,624,625,626,627,628,629,630,631,632,633,634,266,635,636,307,309,310,312,273,316,637,638,639,640,641,642,643,644,645,646,175,647,336,337,339,341,648,278,649,650,651,652,653,654,655,656,657,658,285,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,292,674,675,676,677,678,679,680,681,682,683,684,177,685,686,687,688,689,690,691,692,693,427,425,431,432,434,437,440,443,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,240,710,711,712,713,714,715,243,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810],"tindex":"dc93c8de-2ec0-11e6-80e4-f32235a9b452","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return decorated().contains(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[811],"tindex":"dc93efef-2ec0-11e6-80e4-873ef1d10d96","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:146","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[812,813,814],"tindex":"dc93eff0-2ec0-11e6-80e4-1578c0ac2a70","method":{"position":"org.apache.commons.collections4.ListUtils:89","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> intersection(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list1.size()) > (list2.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            java.util.List<? extends E> java.util.List<? extends E> = list1;\n            java.util.List<? extends E> java.util.List<? extends E> = list2;\n            if ((list1.size()) > (list2.size())) {\n                smaller = list2;\n                larger = list1;\n            } \n            final java.util.HashSet<E> java.util.HashSet<E> = new java.util.HashSet<E>(smaller);\n            for (final E E : larger) {\n                if (hashSet.contains(e)) {\n                    result.add(e);\n                    hashSet.remove(e);\n                } \n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list2"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}