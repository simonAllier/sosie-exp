{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":8,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx5":161,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":400,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":162,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":179,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":429,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":332,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":178,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":253,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":667,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":78,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":165,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":402,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":508,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":358,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":588,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":629,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":507,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":237,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":186,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":187,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":16,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":249,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":247,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":394,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":291,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":40,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":84,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":611,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":461,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":302,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":524,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":454,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":481,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":283,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":233,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":384,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking":274,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":399,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":250,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":616,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":246,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":538,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":527,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":14,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":353,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":391,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":493,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":654,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":104,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionClear":542,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":664,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":327,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":49,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":212,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":650,"org.apache.commons.collections4.iterators.IteratorIterableTest.testIterator":10,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":595,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":476,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":101,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":172,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":114,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":216,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":439,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":277,"org.apache.commons.collections4.CollectionUtilsTest.select":289,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":272,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":330,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":380,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":173,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":447,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIteratorRemove":547,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":622,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":0,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":215,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":199,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":502,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":362,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":479,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":455,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":17,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetEquals":539,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":644,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":82,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":99,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking":175,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":354,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":144,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":482,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":269,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":18,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":185,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":85,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":467,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":236,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":560,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":254,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":315,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":505,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":251,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":475,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":506,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":204,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":333,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":252,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":23,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":339,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":2,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":94,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":426,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":638,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":239,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIsEmpty":545,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":39,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":196,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":97,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":578,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":294,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":103,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":218,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectEqualsSelf":307,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":112,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":345,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":346,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":364,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":75,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":280,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":321,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":334,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":571,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":600,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":3,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsContract":135,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":647,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":323,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":500,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":11,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":257,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":77,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyReadableMap":569,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":76,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":120,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":619,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRetainAll":550,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":170,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":410,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":72,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":79,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":513,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":73,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":74,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":123,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":36,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":299,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":164,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":635,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":377,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":494,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":583,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":668,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":584,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":585,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":360,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveChangesMap":659,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":352,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":574,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":492,"org.apache.commons.collections4.bag.HashBagTest.testObjectHashCodeEqualsContract":149,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":491,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":55,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":440,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":488,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":603,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":166,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":106,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":198,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":415,"org.apache.commons.collections4.CollectionUtilsTest.union":91,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":281,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":207,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":266,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":466,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":92,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":610,"org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testEqualsAndHashCode":9,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":592,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":530,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":646,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":443,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":139,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":53,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":441,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":193,"org.apache.commons.collections4.bag.PredicatedBagTest.testCanonicalEmptyCollectionExists":228,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":552,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":325,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":201,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":521,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":300,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":503,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":219,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":563,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":151,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":295,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":385,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToString":554,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":68,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":152,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":523,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":522,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":47,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":284,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":504,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":67,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":100,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":381,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":136,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":37,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":50,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":566,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":328,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":255,"org.apache.commons.collections4.bag.TreeBagTest.testObjectHashCodeEqualsContract":119,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":670,"org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie":557,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":607,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":171,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":261,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":469,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":180,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":581,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":432,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":624,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":130,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":378,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":564,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":519,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":561,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":562,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":244,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":460,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":190,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":582,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":596,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":526,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":597,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":256,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":598,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":497,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsSelfHashCode":226,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsContract":105,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":241,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":412,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":197,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":450,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":422,"org.apache.commons.collections4.iterators.IteratorChainTest.testCanonicalEmptyCollectionExists":310,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":398,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":374,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":337,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":38,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":181,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":366,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":510,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":660,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":41,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":393,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":430,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":51,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":183,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":279,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":192,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":335,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":336,"org.apache.commons.collections4.bag.PredicatedBagTest.testCanonicalFullCollectionExists":229,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":573,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":214,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":238,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":138,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":191,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":484,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":167,"org.apache.commons.collections4.iterators.IteratorChainTest.testEqualsNull":309,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":576,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":586,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsContract":155,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":369,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":156,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":6,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":641,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":626,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":649,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":124,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":142,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":416,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":270,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":468,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":177,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectHashCodeEqualsContract":312,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":348,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEqualsNull":110,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":608,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetIteratorRemoveChangesMap":662,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":628,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":411,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":459,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":355,"org.apache.commons.collections4.iterators.IteratorChainTest.testSimpleSerialization":311,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":224,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":350,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":372,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":205,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":544,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":465,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":464,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":495,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":209,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":108,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":107,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":129,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":232,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":137,"org.apache.commons.collections4.CollectionUtilsTest.exists":45,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":534,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsContract":111,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":213,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":88,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":652,"org.apache.commons.collections4.bag.HashBagTest.testEqualsNull":148,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":329,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":115,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":413,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":401,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":445,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":590,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":587,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":46,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":296,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":489,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":480,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":125,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":160,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":471,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":31,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":271,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":535,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":231,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":81,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":387,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":556,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":453,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":490,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":184,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":20,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":83,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":259,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":343,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":240,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":64,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":282,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":326,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":408,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":643,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":25,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove1":630,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove2":631,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":472,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove3":632,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":368,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":203,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":376,"org.apache.commons.collections4.CollectionUtilsTest.addIgnoreNull":575,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove3":657,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove2":656,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove1":655,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":501,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":365,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":396,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":373,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":223,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":405,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":359,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":428,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":449,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":448,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":407,"org.apache.commons.collections4.functors.AllPredicateTest.nullArrayToGetInstance":418,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":525,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":483,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":153,"org.apache.commons.collections4.set.UnmodifiableSetTest.testDecorateFactory":288,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":589,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":474,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":606,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":80,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":63,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":420,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":591,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":438,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":132,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":210,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":60,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":601,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":158,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":347,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":512,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":605,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":306,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":433,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":189,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":434,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":344,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":43,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":86,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":375,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":59,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":230,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":406,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":417,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":121,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":262,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":477,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":7,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":661,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":150,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":287,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":478,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking2":176,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":245,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":669,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":498,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":61,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":54,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":470,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":24,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":260,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":452,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":21,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":62,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":651,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":409,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":217,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":403,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":126,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":318,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":537,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":457,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":518,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":320,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":371,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":304,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":627,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":640,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":202,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":548,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectEqualsSelf":225,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":615,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":122,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":157,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAllCollections426":1,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":390,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":235,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":388,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":620,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":623,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":322,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":361,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":648,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":102,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":579,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":444,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":456,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":511,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":520,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":351,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":531,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":642,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":349,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":200,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":612,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":625,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":154,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":653,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":208,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":169,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":577,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":211,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":543,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":451,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectHashCodeEqualsSelfHashCode":313,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":633,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":663,"org.apache.commons.collections4.CollectionUtilsTest.isFull":32,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":425,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":442,"org.apache.commons.collections4.ListUtilsTest.testEmptyIfNull":559,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":379,"org.apache.commons.collections4.bag.HashBagTest.testObjectEqualsSelf":147,"org.apache.commons.collections4.iterators.IteratorChainTest.testSerializeDeserializeThenCompare":314,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":389,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":319,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":56,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":206,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":515,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":514,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":174,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":297,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":109,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":127,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":567,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":367,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":93,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":383,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":66,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":637,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":517,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":462,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":516,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":89,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":145,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":168,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":570,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray2":553,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":65,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":392,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":263,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":528,"org.apache.commons.collections4.IteratorUtilsTest.testAsIterable":15,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":594,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":386,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":267,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionSize":551,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":268,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":276,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx1":419,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testDecorateFactory":558,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":12,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":496,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":95,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":340,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":546,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":342,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":341,"org.apache.commons.collections4.bag.TreeBagTest.testEqualsNull":118,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":19,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":273,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":435,"org.apache.commons.collections4.bag.TreeBagTest.testEmptyBagCompatibility":116,"org.apache.commons.collections4.iterators.IteratorChainTest.testCanonicalFullCollectionExists":308,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":437,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":331,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":27,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":290,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":305,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":487,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":131,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":133,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEqualsNull":134,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":128,"org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.testEqualsAndHashCode":533,"org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.testEqualsAndHashCode":532,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":404,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":221,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":604,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":436,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":194,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveChangesMap":634,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":220,"org.apache.commons.collections4.bag.PredicatedBagTest.testSimpleSerialization":227,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":473,"org.apache.commons.collections4.bag.HashBagTest.testEmptyBagCompatibility":146,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsContract":141,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":163,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":395,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":140,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":618,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":42,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":423,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":541,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":549,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":636,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":48,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":98,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":293,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":248,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":301,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":565,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":292,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":286,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":35,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":614,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":29,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":666,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":509,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":446,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":28,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":536,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":397,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":275,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":613,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":382,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetHashCode":540,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":617,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":182,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":658,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":159,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":568,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":58,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":242,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":285,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":621,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":499,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":602,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":303,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":427,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":431,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":22,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":222,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":4,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":324,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":5,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":33,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":338,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":316,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":317,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiRemove":30,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":188,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":414,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":485,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":363,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":609,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":195,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":580,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":298,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":639,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":645,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":143,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":370,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":264,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":665,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":243,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":265,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":458,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":90,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":572,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":599,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":421,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":258,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":356,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":357,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":463,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":593,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":44,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":52,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":71,"org.apache.commons.collections4.bag.TreeBagTest.testObjectEqualsSelf":117,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":234,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":96,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":486,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":278,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSerializeDeserializeThenCompare":555,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":529,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":13,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":424},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[0,1,2,3],"tindex":"dcf552a7-2e8d-11e6-86f3-61da583e7fae","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:229","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (decorated().contains(next)) {\n                    collectionRetainAll.add(next);\n                } \n            }\n            if ((collectionRetainAll.size()) == (decorated().size())) {\n                return false;\n            } \n            if ((collectionRetainAll.size()) == 0) {\n                clear();\n            } else {\n                for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                    if (!(collectionRetainAll.contains(it.next()))) {\n                        it.remove();\n                    } \n                }\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[4,5,6],"tindex":"dcf63d08-2e8d-11e6-86f3-5f90d1f77135","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[7,8],"tindex":"dcf66419-2e8d-11e6-86f3-25c35e36cdc8","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:532","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key3 != null) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((((multi.size()) == 4) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key3"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[9],"tindex":"dcf68b2a-2e8d-11e6-86f3-a16a48962bbb","method":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.DefaultKeyValue.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> = ((org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[],"tindex":"dcf6b23b-2e8d-11e6-86f3-d5e0f162f910","method":{"position":"org.apache.commons.collections4.map.LinkedMap:238","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:161","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[10,11,12,13,14,15],"tindex":"dcf6b23c-2e8d-11e6-86f3-c5858bedb3a7","method":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:69","type":"CtMethodImpl","sourcecode":"private static <E>java.util.Iterator<E> createTypesafeIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                {\n                    return new java.util.Iterator<E>() {\n                        public boolean hasNext() {\n                            return iterator.hasNext();\n                        }\n\n                        public E next() {\n                            return iterator.next();\n                        }\n\n                        public void remove() {\n                            iterator.remove();\n                        }\n                    };\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"dcf6d94d-2e8d-11e6-86f3-c577dc1a6534","method":{"position":"org.apache.commons.collections4.MapUtils:386","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key, final java.lang.String defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.String java.lang.String = org.apache.commons.collections4.MapUtils.getString(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[],"tindex":"dcf7005e-2e8d-11e6-86f3-91bfbf128278","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"dcf7005f-2e8d-11e6-86f3-d12dac781e8f","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:239","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index > 0) {\n        {\n            final E E = super.remove(index);\n            java.util.Set<E>.remove(result);\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1069","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"dcf72670-2e8d-11e6-86f3-dd7c435c36e2","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isBitSet(final java.lang.String key, final int bitIndex, final int lengthInBits) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(lengthInBits)) {\n        {\n            if ((key == null) || (bitIndex >= lengthInBits)) {\n                return false;\n            } \n            final int int = bitIndex / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = bitIndex % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            return ((key.charAt(index)) & (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(bit))) != 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"lengthInBits"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[],"tindex":"dcf74d81-2e8d-11e6-86f3-ff21a0ba1215","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:140","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 1) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[30,31],"tindex":"dcf74d82-2e8d-11e6-86f3-218561cb5e8e","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1467","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[32],"tindex":"dcf77493-2e8d-11e6-86f3-9f1b6921fccc","method":{"position":"org.apache.commons.collections4.CollectionUtils:1466","type":"CtMethodImpl","sourcecode":"public static boolean isFull(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll == null) {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).isFull();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.isFull();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return false;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[33,34,35],"tindex":"dcf79ba4-2e8d-11e6-86f3-7d2045e2c37a","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:255","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if (coll.contains(it.next())) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:871","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"dcf79ba5-2e8d-11e6-86f3-bb91f92eedd6","method":{"position":"org.apache.commons.collections4.EnumerationUtils:50","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[36,37,38,39],"tindex":"dcf7c2b6-2e8d-11e6-86f3-818a040d9737","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:200","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return n.V;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:66","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[40],"tindex":"dcf7e9c7-2e8d-11e6-86f3-93fb6323e081","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:379","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Collection<E> coll) {\n    if (coll == null) {\n        {\n            java.util.List<java.util.Collection<E>>.remove(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"dcf7e9c8-2e8d-11e6-86f3-c98c9c67dbe7","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:245","type":"CtMethodImpl","sourcecode":"public void putAll(int index, final java.util.Map<? extends K, ? extends V> map) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                final K K = entry.getKey();\n                final boolean boolean = containsKey(key);\n                put(index, entry.getKey(), entry.getValue());\n                if (!contains) {\n                    index++;\n                } else {\n                    index = (indexOf(entry.getKey())) + 1;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[41,42,43],"tindex":"dcf810d9-2e8d-11e6-86f3-43fa48b65e81","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:168","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <I, O>org.apache.commons.collections4.Transformer<I, O>[] copy(final org.apache.commons.collections4.Transformer<? super I, ? extends O>... transformers) {\n    if (transformers == null) {\n        {\n            if (transformers == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Transformer<I, O>[])(transformers.clone()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[44],"tindex":"dcf837ea-2e8d-11e6-86f3-19b79db27d40","method":{"position":"org.apache.commons.collections4.MapUtils:1217","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.collections4.MapUtils.isEmpty(map));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[45],"tindex":"dcf85efb-2e8d-11e6-86f3-bbc4412d67dc","method":{"position":"org.apache.commons.collections4.CollectionUtils:846","type":"CtMethodImpl","sourcecode":"public static <C>boolean exists(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (input != null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((input != null) && (predicate != null)) {\n                        for (final C C : input) {\n                            if (predicate.evaluate(o)) {\n                                return true;\n                            } \n                        }\n                    } \n                    return false;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[46,47],"tindex":"dcf85efc-2e8d-11e6-86f3-43ff55366c0b","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                result |= remove(name);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89],"tindex":"dcf8860d-2e8d-11e6-86f3-0d00af94090f","method":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key != null) {\n                final char[] char[] = key.toString().toCharArray();\n                for (int int = (chars.int) - 1 ; i >= 0 ; i--) {\n                    chars[i] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(chars[i]));\n                }\n                return new java.lang.String(chars);\n            } \n            return org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[90,91,92,93],"tindex":"dcf8860e-2e8d-11e6-86f3-4b14800f1c75","method":{"position":"org.apache.commons.collections4.CollectionUtils:80","type":"CtMethodImpl","sourcecode":"public final int max(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        {\n            return java.lang.Math.max(freqA(obj), freqB(obj));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[94],"tindex":"dcf8ad1f-2e8d-11e6-86f3-7b90d009f1c2","method":{"position":"org.apache.commons.collections4.ClosureUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[95,96,97,27],"tindex":"dcf8ad20-2e8d-11e6-86f3-09630e503ac9","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:255","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (java.util.Set<E>.contains(next)) {\n                    setRetainAll.add(next);\n                } \n            }\n            if ((setRetainAll.size()) == (java.util.Set<E>.size())) {\n                return false;\n            } \n            if ((setRetainAll.size()) == 0) {\n                clear();\n            } else {\n                for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                    if (!(setRetainAll.contains(it.next()))) {\n                        it.remove();\n                    } \n                }\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"dcf8d431-2e8d-11e6-86f3-e789ec8a6640","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:616","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntrySet().contains(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159],"tindex":"dcf8d432-2e8d-11e6-86f3-41fa4c49dcef","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:538","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            if (object == (org.apache.commons.collections4.bag.AbstractMapBag.this)) {\n                return true;\n            } \n            if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.Bag<?> org.apache.commons.collections4.Bag<?> = ((org.apache.commons.collections4.Bag<?>)(object));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n                if ((other.getCount(element)) != (getCount(element))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[160],"tindex":"dcf8fb43-2e8d-11e6-86f3-b70b23a73a2d","method":{"position":"org.apache.commons.collections4.ClosureUtils:129","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> whileClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[161,162,163],"tindex":"dcf8fb44-2e8d-11e6-86f3-8ddfd89beca2","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:72","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            return new org.apache.commons.collections4.functors.OnePredicate<T>(preds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[164,165,166,167,168,169,170,171],"tindex":"dcf8fb45-2e8d-11e6-86f3-a5c6b2a49d65","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key)) {\n                        final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.remove(key);\n                        org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<java.lang.Object, K>.remove(value);\n                        return true;\n                    } \n                    return false;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"dcf92256-2e8d-11e6-86f3-a5b27f32f467","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key)) {\n                        final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.remove(key);\n                        org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<java.lang.Object, K>.remove(value);\n                        return true;\n                    } \n                    return false;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"dcf92257-2e8d-11e6-86f3-5569ddf06b5a","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:105","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[172],"tindex":"dcf94968-2e8d-11e6-86f3-d3d0da4029a2","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[173,174],"tindex":"dcf94969-2e8d-11e6-86f3-a5cc455cb5b7","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[175,176],"tindex":"dcf9496a-2e8d-11e6-86f3-9d26d033c42a","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[177,178,179,180,181,182,183,184],"tindex":"dcf9707b-2e8d-11e6-86f3-9fbb2972c878","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                    if ((entry.getValue()) == null) {\n                        return true;\n                    } \n                }\n            } else {\n                for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                    if (isEqualValue(value, entry.getValue())) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:82","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"dcf9707c-2e8d-11e6-86f3-ff564515ae78","method":{"position":"org.apache.commons.collections4.ComparatorUtils:235","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>E max(final E o1, final E o2, java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            final int int = comparator.compare(o1, o2);\n            return c > 0 ? o1 : o2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[185,186,187,188,163],"tindex":"dcf9978d-2e8d-11e6-86f3-35c4fe643c4b","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.OnePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"dcf9978e-2e8d-11e6-86f3-33ed252c3c34","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1097","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> subtree(final K prefix, final int offsetInBits, final int lengthInBits) {\n    if (offsetInBits == 0) {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) <= (path.int)) || (lengthInBits < (current.int))) {\n                    break;\n                } \n                path = current;\n                if (!(isBitSet(prefix, (offsetInBits + (current.int)), (offsetInBits + lengthInBits)))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current.isEmpty() ? path : current;\n            if (entry.isEmpty()) {\n                return null;\n            } \n            final int int = offsetInBits + lengthInBits;\n            if ((entry == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && ((lengthInBits(entry.getKey())) < endIndexInBits)) {\n                return null;\n            } \n            if ((isBitSet(prefix, endIndexInBits, endIndexInBits)) != (isBitSet(entry.K, lengthInBits, lengthInBits(entry.K)))) {\n                return null;\n            } \n            final int int = getKeyAnalyzer().bitIndex(prefix, offsetInBits, lengthInBits, entry.K, 0, lengthInBits(entry.getKey()));\n            if ((bitIndex >= 0) && (bitIndex < lengthInBits)) {\n                return null;\n            } \n            return entry;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"offsetInBits"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[43],"tindex":"dcf9be9f-2e8d-11e6-86f3-af9f2ac2aa59","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:57","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (transformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((predicates.int) != (transformers.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(predicates , transformers , defaultTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"dcfa33d0-2e8d-11e6-86f3-0b3afe39bf1b","method":{"position":"org.apache.commons.collections4.map.LinkedMap:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:153","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"dcfa33d1-2e8d-11e6-86f3-bb6ec81f3910","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:149","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.add(comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,151,152,208,153,150,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,154,226,155,227,228,229],"tindex":"dcfa5ae2-2e8d-11e6-86f3-a710d06c7bba","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:60","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedBag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedBag<E>(bag , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:876","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[],"tindex":"dcfa5ae3-2e8d-11e6-86f3-09965a0cb01b","method":{"position":"org.apache.commons.collections4.CollectionUtils:846","type":"CtMethodImpl","sourcecode":"public static <C>boolean exists(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (input != null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((input != null) && (predicate != null)) {\n                        for (final C C : input) {\n                            if (predicate.evaluate(o)) {\n                                return true;\n                            } \n                        }\n                    } \n                    return false;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248],"tindex":"dcfa81f4-2e8d-11e6-86f3-4791d510eb3c","method":{"position":"org.apache.commons.collections4.set.CompositeSet:245","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"dcfa81f5-2e8d-11e6-86f3-03bbc2ea39e8","method":{"position":"org.apache.commons.collections4.MapUtils:466","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key, final java.lang.Short defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[249,250,251,252],"tindex":"dcfa81f6-2e8d-11e6-86f3-998107c7203c","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:362","type":"CtMethodImpl","sourcecode":"public int size(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return 0;\n            } \n            return coll.size();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"dcfaa907-2e8d-11e6-86f3-b9f598f2e491","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:205","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.FilterListIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[253,254,255],"tindex":"dcfaa908-2e8d-11e6-86f3-53d9009fbaec","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:231","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false"},"failures":[],"tindex":"dcfaa909-2e8d-11e6-86f3-1b9047ee4f1c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2012","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node.this)) {\n                return true;\n            } \n            if (!(obj instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return (getKey().equals(e.getKey())) && (getValue().equals(e.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[256,257,258,258,259,260,260,261,262,263,42,43,4,5,264,265,185,266,267,268,6,269,186,187,188,163,270,271],"tindex":"dcfc089a-2e8d-11e6-86f3-914e64bb159e","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:78","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Predicate<?>... predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n            } \n            for (int int = 0 ; i < (predicates.int) ; i++) {\n                if ((predicates[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[272,273],"tindex":"dcfc089b-2e8d-11e6-86f3-f781d0d2c6de","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[],"tindex":"dcfc2fac-2e8d-11e6-86f3-417ab29583f8","method":{"position":"org.apache.commons.collections4.list.GrowthList:150","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        {\n            final int int = decorated().size();\n            boolean boolean = false;\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n                result = true;\n            } \n            return (decorated().addAll(index, coll)) | result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[274,275,276],"tindex":"dcfc2fad-2e8d-11e6-86f3-09563a9c71b8","method":{"position":"org.apache.commons.collections4.list.PredicatedList:106","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        {\n            return decorated().remove(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"dcfc2fae-2e8d-11e6-86f3-d3ff233fc735","method":{"position":"org.apache.commons.collections4.CollectionUtils:1212","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.lang.Iterable<T> iterable, final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            if (iterable instanceof java.util.List<?>) {\n                return ((java.util.List<T>)(iterable)).get(index);\n            } \n            return org.apache.commons.collections4.CollectionUtils.get(iterable.iterator(), index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[277,278,279,280,281,282,283,284,285,286],"tindex":"dcfc56bf-2e8d-11e6-86f3-c74909bbc67f","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.CollectionBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"dcfc56c0-2e8d-11e6-86f3-677e0f4eac03","method":{"position":"org.apache.commons.collections4.CollectionUtils:279","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> disjunction(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (b == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, ((helper.max(obj)) - (helper.min(obj))));\n            }\n            return helper.list();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(keyTransformer) == null"},"failures":[287],"tindex":"dcfc56c1-2e8d-11e6-86f3-c1b786228977","method":{"position":"org.apache.commons.collections4.map.TransformedMap:99","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (keyTransformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.TransformedMap<K, V> org.apache.commons.collections4.map.TransformedMap<K, V> = new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keyTransformer":"keyTransformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[],"tindex":"dcfc7dd2-2e8d-11e6-86f3-6d71c33c851b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1468","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = size();\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(o);\n            return size != (size());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[288],"tindex":"dcfc7dd3-2e8d-11e6-86f3-3f31c39914db","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:52","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Set<E> java.util.Set<E> = ((java.util.Set<E>)(set));\n                return tmpSet;\n            } \n            return new org.apache.commons.collections4.set.UnmodifiableSet<E>(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[289],"tindex":"dcfc7dd4-2e8d-11e6-86f3-d5454dab3ed6","method":{"position":"org.apache.commons.collections4.CollectionUtils:898","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> select(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection != null) && (predicate != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:80","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,230,316,317,231,318,319,320,321,322,323,324,325,326,327,328,232,329,330,233,234,331,332,333,334,335,336,337,338,339,340,341,342,343,344,235,236,237,238,239,345,240,241,346,242,243,244,245,246,247,347,248,348,349,350],"tindex":"dcfca4e5-2e8d-11e6-86f3-61eeb835e681","method":{"position":"org.apache.commons.collections4.iterators.IteratorChain:159","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator.hasNext()) {\n        {\n            if (iterator == null) {\n                {\n                    checkLocked();\n                    if (iterator == null) {\n                        throw new java.lang.NullPointerException(\"Iterator must not be null\");\n                    } \n                    java.util.Queue<java.util.Iterator<? extends E>>.add(iterator);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[351,352,353,354,355,33,356,357,358,359,360,361,362,363,35,364],"tindex":"dcfca4e6-2e8d-11e6-86f3-83bc10a81ac5","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:154","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return (indexOf(value)) != (-1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[],"tindex":"dcfd1a17-2e8d-11e6-86f3-3ff7c150fc07","method":{"position":"org.apache.commons.collections4.list.TransformedList:142","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        {\n            coll = transform(coll);\n            return getList().addAll(index, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"dcfd4128-2e8d-11e6-86f3-8d0b0ab18423","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[120,365],"tindex":"dcfd4129-2e8d-11e6-86f3-a575d97898e6","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:115","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getBag().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[41],"tindex":"dcfd412a-2e8d-11e6-86f3-27b2a8224390","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((transformers.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(transformers);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"dcfd683b-2e8d-11e6-86f3-cb3eac9e157b","method":{"position":"org.apache.commons.collections4.MapUtils:213","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Byte getByte(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Byte) {\n                return ((java.lang.Byte)(answer));\n            } \n            return java.lang.Byte.valueOf(answer.byteValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[366,367],"tindex":"dcfd683c-2e8d-11e6-86f3-db24ab394eb8","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:631","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextSmaller(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getLeft(dataElement)) != null) {\n                rval = greatestNode(node.getLeft(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getLeft(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"dcfd8f4d-2e8d-11e6-86f3-fde45e9e69ea","method":{"position":"org.apache.commons.collections4.MapUtils:1623","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"dcfd8f4e-2e8d-11e6-86f3-8d40aaf06696","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().java.util.Map<K, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[],"tindex":"dcfd8f4f-2e8d-11e6-86f3-bf60d51cf8fb","method":{"position":"org.apache.commons.collections4.map.LinkedMap:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[7,8,368,369,370],"tindex":"dcfd8f50-2e8d-11e6-86f3-bd3499c3906f","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:246","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((multi.size()) == 2) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key1 != null) && (key2.equals(multi.getKey(1)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"dcfdb661-2e8d-11e6-86f3-db9094457282","method":{"position":"org.apache.commons.collections4.MapUtils:426","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key, final java.lang.Number defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,351,352,353,354,390,355,391,392,33,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,359,360,361,362,413,363,414,415,35,416,417],"tindex":"dcfdb662-2e8d-11e6-86f3-178d05bd410d","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:111","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            return node.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[418,419],"tindex":"dcfdb663-2e8d-11e6-86f3-53e474eb683f","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return org.apache.commons.collections4.functors.FunctorUtils.coerce(predicates[0]);\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"dcfddd74-2e8d-11e6-86f3-b3884eb9bbf2","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:82","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[],"tindex":"dcfddd75-2e8d-11e6-86f3-d7c4b9d46391","method":{"position":"org.apache.commons.collections4.CollectionUtils:98","type":"CtMethodImpl","sourcecode":"public int freqA(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,179,180,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,183,184,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,369,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,50,51,52,68,75,76,78,81,82,85,86,87,88,89],"tindex":"dcfddd76-2e8d-11e6-86f3-a3868136ad35","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:564","type":"CtMethodImpl","sourcecode":"protected void removeMapping(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (previous != null) {\n        {\n            (int)++;\n            removeEntry(entry, hashIndex, previous);\n            (int)--;\n            destroyEntry(entry);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"previous"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry"},"failures":[],"tindex":"dcfe0487-2e8d-11e6-86f3-efedd48d2baa","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map.Entry) {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[532,533,534,535,536,537,538],"tindex":"dcfe2b98-2e8d-11e6-86f3-bd5227ef0d75","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:65","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.AbstractMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (set != null)) && ((set.size()) > 0)"},"failures":[539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555],"tindex":"dcfe2b99-2e8d-11e6-86f3-770248ed1e39","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformingSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:52","type":"CtBinaryOperatorImpl","sourcecode":"(count <= 0) || (closure == null)"},"failures":[556],"tindex":"dcfe2b9a-2e8d-11e6-86f3-87d908abd8ba","method":{"position":"org.apache.commons.collections4.functors.ForClosure:51","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if ((count <= 0) || (closure == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((count <= 0) || (closure == null)) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            if (count == 1) {\n                return ((org.apache.commons.collections4.Closure<E>)(closure));\n            } \n            return new org.apache.commons.collections4.functors.ForClosure<E>(count , closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count","closure":"closure"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:55","type":"CtBinaryOperatorImpl","sourcecode":"trie instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[557,558],"tindex":"dcfe52ab-2e8d-11e6-86f3-5fd03cf8b80a","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:54","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Trie<K, V> org.apache.commons.collections4.Trie<K, V> = ((org.apache.commons.collections4.Trie<K, V>)(trie));\n                return tmpTrie;\n            } \n            return new org.apache.commons.collections4.trie.UnmodifiableTrie<K, V>(trie);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[],"tindex":"dcfe52ac-2e8d-11e6-86f3-293ef73b12ae","method":{"position":"org.apache.commons.collections4.iterators.IteratorChain:159","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator.hasNext()) {\n        {\n            if (iterator == null) {\n                {\n                    checkLocked();\n                    if (iterator == null) {\n                        throw new java.lang.NullPointerException(\"Iterator must not be null\");\n                    } \n                    java.util.Queue<java.util.Iterator<? extends E>>.add(iterator);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[559],"tindex":"dcfe52ad-2e8d-11e6-86f3-d5e4d758dca9","method":{"position":"org.apache.commons.collections4.ListUtils:61","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> emptyIfNull(final java.util.List<T> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return list == null ? java.util.Collections.<T>emptyList() : list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"dcfe79be-2e8d-11e6-86f3-cfde25a75bd5","method":{"position":"org.apache.commons.collections4.set.CompositeSet:282","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[560,561,562,563,564,565,566,567,568],"tindex":"dcfe79bf-2e8d-11e6-86f3-1f670778930a","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:53","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SplitMapUtils:211","type":"CtBinaryOperatorImpl","sourcecode":"get == null"},"failures":[569,570],"tindex":"dcfe79c0-2e8d-11e6-86f3-7d6b8de2cb6c","method":{"position":"org.apache.commons.collections4.SplitMapUtils:210","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>org.apache.commons.collections4.IterableMap<K, V> readableMap(final org.apache.commons.collections4.Get<K, V> get) {\n    if (get == null) {\n        {\n            if (get == null) {\n                throw new java.lang.IllegalArgumentException(\"Get must not be null\");\n            } \n            if (get instanceof java.util.Map) {\n                return get instanceof org.apache.commons.collections4.IterableMap ? ((org.apache.commons.collections4.IterableMap<K, V>)(get)) : org.apache.commons.collections4.MapUtils.iterableMap(((java.util.Map<K, V>)(get)));\n            } \n            return new org.apache.commons.collections4.SplitMapUtils.WrappedGet<K, V>(get);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"get":"get"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[286,571,572,573,574,218],"tindex":"dcfea0d1-2e8d-11e6-86f3-3b9a8587ad27","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            return remove(object, 1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[565],"tindex":"dcfea0d2-2e8d-11e6-86f3-c7f82d97b1ae","method":{"position":"org.apache.commons.collections4.CollectionUtils:705","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection == null) {\n        {\n            return (collection != null) && (closure != null) ? org.apache.commons.collections4.CollectionUtils.forAllButLastDo(collection.iterator(), closure) : null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[575],"tindex":"dcfea0d3-2e8d-11e6-86f3-6d33cfd37506","method":{"position":"org.apache.commons.collections4.CollectionUtils:1086","type":"CtMethodImpl","sourcecode":"public static <T>boolean addIgnoreNull(final java.util.Collection<T> collection, final T object) {\n    if (collection == null) {\n        {\n            if (collection == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            return (object != null) && (collection.add(object));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:317","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[],"tindex":"dcfec7e4-2e8d-11e6-86f3-8730d51e8178","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:477","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<V> createCollection(final int size) {\n    if (size > 0) {\n        {\n            return org.apache.commons.collections4.Factory<? extends java.util.Collection<V>>.create();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[576],"tindex":"dcfec7e5-2e8d-11e6-86f3-c364162cd36a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2115","type":"CtMethodImpl","sourcecode":"public V removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl","sourcecode":"sortedMap == null"},"failures":[577],"tindex":"dcfec7e6-2e8d-11e6-86f3-f7d6bb288d05","method":{"position":"org.apache.commons.collections4.MapUtils:1772","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableSortedMap<K, V> iterableSortedMap(final java.util.SortedMap<K, V> sortedMap) {\n    if (sortedMap == null) {\n        {\n            if (sortedMap == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return sortedMap instanceof org.apache.commons.collections4.IterableSortedMap ? ((org.apache.commons.collections4.IterableSortedMap<K, V>)(sortedMap)) : new org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>(sortedMap) {            };\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"sortedMap"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[578,164,579,580,581,582,583,584,585,165,586,587,588,589,590,591,166,592,593,594,595,596,597,598,167,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,168,626,627,628,629,630,631,632,169,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,170,651,652,653,654,655,656,657,171,658,659,660,661,662,663],"tindex":"dcfeeef7-2e8d-11e6-86f3-1fd4d4dcb391","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:146","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<K, V>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[],"tindex":"dcfeeef8-2e8d-11e6-86f3-5d723fef0489","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) == null"},"failures":[],"tindex":"dcfeeef9-2e8d-11e6-86f3-ef77f6c0604d","method":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:69","type":"CtMethodImpl","sourcecode":"private static <E>java.util.Iterator<E> createTypesafeIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                {\n                    return new java.util.Iterator<E>() {\n                        public boolean hasNext() {\n                            return iterator.hasNext();\n                        }\n\n                        public E next() {\n                            return iterator.next();\n                        }\n\n                        public void remove() {\n                            iterator.remove();\n                        }\n                    };\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getRight(dataElement)) == node"},"failures":[664,665,666,667,668,669,670],"tindex":"dcff160a-2e8d-11e6-86f3-79e8199de641","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:698","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> greatestNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getRight(dataElement)) != null) {\n                    rval = rval.getRight(dataElement);\n                }\n            } \n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}