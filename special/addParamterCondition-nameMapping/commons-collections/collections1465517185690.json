{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":120,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":407,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":450,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":290,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":472,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testSerializeDeserializeThenCompare":300,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":620,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":132,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":156,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":232,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":320,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":504,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":518,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRetainAll":746,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":520,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":30,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":619,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":615,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":463,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":104,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":48,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":462,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":686,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":239,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":240,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":319,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":261,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":212,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEqualsNull":324,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapHashCode":730,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":129,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":427,"org.apache.commons.collections4.CollectionUtilsTest.collect":236,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":428,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":557,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":429,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":430,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":36,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":726,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testSerializeDeserializeThenCompare":313,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCanonicalFullCollectionExists":392,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":723,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":141,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":425,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":400,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":478,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":658,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":176,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":161,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":570,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":204,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":92,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":405,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":171,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":517,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":192,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":547,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":124,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":415,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":553,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":165,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":330,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":216,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":698,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":1,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":381,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":355,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":163,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":340,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":348,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":672,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":684,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSimpleSerialization":390,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":59,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":470,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":728,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectHashCodeEqualsContract":325,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testConstructors":206,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":362,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":363,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":65,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":316,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":644,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":492,"org.apache.commons.collections4.CollectionUtilsTest.select":573,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":172,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":288,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":640,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Other":753,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":155,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":98,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":471,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":226,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":39,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":529,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":479,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":440,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":76,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIteratorSet":248,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":364,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":597,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveAll":742,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":34,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":67,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":144,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":581,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":145,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":729,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":143,"org.apache.commons.collections4.CollectionUtilsTest.intersection":577,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":509,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":238,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":543,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":346,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":137,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":484,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":432,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":208,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":356,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":230,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":130,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testSerializeDeserializeThenCompare":701,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":180,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":675,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":378,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":233,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":268,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":508,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":512,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":709,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":70,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":501,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":708,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":707,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":284,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":403,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":121,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":273,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":590,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":694,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":374,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":118,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectEqualsSelf":323,"org.apache.commons.collections4.map.CompositeMapTest.testPut":556,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":183,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":262,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":505,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":395,"org.apache.commons.collections4.map.CompositeMapTest.testGet":555,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":116,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":317,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectEqualsSelf":336,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":444,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":27,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":385,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":203,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":308,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testFullMapCompatibility":724,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":135,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":79,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":422,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":594,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":29,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":28,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":650,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":551,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":95,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":542,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":81,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":105,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":24,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":31,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":468,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":545,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":25,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":26,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains1":738,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":567,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains2":739,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains3":740,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":62,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testRemove":249,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":584,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":277,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":416,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":115,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":158,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":332,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":243,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":533,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":46,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testCanonicalFullCollectionExists":253,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":367,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":358,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":413,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":414,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":370,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":412,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":9,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":384,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":397,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":493,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":55,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":369,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":202,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":459,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":345,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":108,"org.apache.commons.collections4.CollectionUtilsTest.union":576,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":665,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testCanonicalEmptyCollectionExists":255,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":220,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":150,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":483,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":224,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":343,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToString":692,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":56,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":78,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":315,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":142,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":569,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":354,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":588,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":7,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":494,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":133,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":451,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":561,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":333,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":636,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Enumeration":747,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":138,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":654,"org.apache.commons.collections4.list.TreeListTest.testRemove":634,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutNullKey":732,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":647,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":61,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":306,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":153,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":589,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":329,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":410,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Null":750,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":409,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":666,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":126,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":593,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":659,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":286,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":411,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":596,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEqualsNull":311,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":20,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":45,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":630,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":618,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":461,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":19,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":198,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":673,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":136,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEqualsNull":254,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":663,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":687,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":2,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":209,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":213,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":231,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":109,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":148,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":457,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":147,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":433,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":146,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":86,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":160,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":283,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":360,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":639,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":535,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":227,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":624,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":473,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":305,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeThenCompare":326,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":322,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":60,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":88,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":487,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":704,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":445,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":610,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":734,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":66,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":275,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":218,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":375,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":419,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":662,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":585,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectHashCodeEqualsContract":257,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":595,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":372,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":455,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_PrimitiveArray":748,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionSize":691,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":474,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":498,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":179,"org.apache.commons.collections4.list.TreeListTest.testListEquals":643,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":272,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":524,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":167,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":125,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":683,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":718,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":465,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":674,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":103,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":679,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":229,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":289,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":3,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":481,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":454,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":379,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":301,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":617,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":682,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":435,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":680,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":54,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":695,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":285,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":117,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":656,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":449,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":195,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":73,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":296,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testSerializeDeserializeThenCompare":259,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":69,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":101,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":193,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":127,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":303,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":485,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectEqualsSelf":297,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":516,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEqualsNull":386,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":331,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":157,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":119,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":722,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":608,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":417,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":274,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":366,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":583,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":365,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":169,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":446,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Array":752,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":357,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":154,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsContract":389,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":40,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":689,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":237,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":423,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":438,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":83,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":558,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":514,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetClearChangesMap":736,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":114,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullIterator":251,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":633,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":437,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":398,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":628,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":234,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":486,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":394,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":523,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":638,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":33,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":223,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":281,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":477,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":383,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":131,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectHashCodeEqualsContract":299,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":361,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":408,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":47,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":482,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":664,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":655,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":35,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":565,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":16,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":75,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":219,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionClear":697,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":271,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":448,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":456,"org.apache.commons.collections4.ListUtilsTest.testPartition":263,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":380,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":541,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":627,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":205,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":282,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":113,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":711,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEqualsNull":337,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":546,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":503,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":700,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":215,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":657,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":519,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesClearChangesMap":735,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":50,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":185,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":642,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":32,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectEqualsSelf":310,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":5,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":564,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":496,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":302,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":491,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":13,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":344,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":207,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":641,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":544,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":623,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":671,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":467,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":510,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":571,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":221,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":52,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":522,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveAll":745,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":270,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":327,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":304,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":559,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":702,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":38,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":453,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":6,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIteratorRemove":693,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":568,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":222,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":507,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":538,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":84,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":717,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIterator":246,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":279,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":607,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":111,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":350,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":159,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":184,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":214,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":420,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":14,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":536,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":175,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":42,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":8,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":258,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":228,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":436,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":476,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":342,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":15,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":82,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":21,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetClearChangesMap":737,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":532,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":578,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":376,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":321,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":572,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":53,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":72,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":102,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":513,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":162,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":528,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":91,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":377,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":653,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":741,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":96,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":99,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":211,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":335,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":645,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":173,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":534,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":80,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":661,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsContract":347,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":646,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":401,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":560,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":63,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":648,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":123,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":721,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":295,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":424,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":466,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":265,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":677,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":681,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":210,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":550,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":74,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":591,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":613,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":200,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":715,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":174,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":318,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":548,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":166,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":563,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":606,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":605,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_List":749,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":667,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectHashCodeEqualsContract":338,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":602,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":587,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":601,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":604,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":603,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":598,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":393,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":614,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":649,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":475,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":600,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":599,"org.apache.commons.collections4.set.CompositeSetTest.testContains":566,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":87,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":49,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":500,"org.apache.commons.collections4.CollectionUtilsTest.isFull":629,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":527,"org.apache.commons.collections4.list.TreeListTest.testBug35258":637,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":495,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals":631,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":149,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRetainAll":743,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":182,"org.apache.commons.collections4.ListUtilsTest.testSelect":562,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCanonicalEmptyCollectionExists":391,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":621,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":660,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectHashCodeEqualsContract":287,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":402,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":58,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":579,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testSimpleSerialization":256,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":580,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":668,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":710,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Map":751,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":727,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":10,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":469,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":635,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":506,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":368,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":611,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":112,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":328,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":688,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":225,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":18,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":676,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":244,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":264,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":41,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":439,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":100,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":68,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":260,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":197,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":269,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":217,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":426,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":625,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicateEx1":714,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":177,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":17,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":712,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":194,"org.apache.commons.collections4.SetUtilsTest.testEquals":447,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":586,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":434,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":187,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":292,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":713,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutNullValue":733,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIsEmpty":696,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":201,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory":245,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":678,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMakeMap":725,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":106,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":168,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":418,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsSelfHashCode":387,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":731,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":582,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":188,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":442,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":488,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":521,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":490,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyMapIterator":247,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":396,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":705,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":685,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":191,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":190,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":107,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":189,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":196,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testDecorate":349,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":609,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":51,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":719,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":151,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":139,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":404,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":489,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":294,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":399,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":235,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":443,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":371,"org.apache.commons.collections4.CollectionUtilsTest.find":716,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":703,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectEqualsSelf":252,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectHashCodeEqualsContract":312,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":199,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":242,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":351,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":554,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyIterator":250,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":94,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":452,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":499,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":744,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":341,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":353,"org.apache.commons.collections4.functors.ComparatorPredicateTest.predicateSanityTests":632,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":0,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":575,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":293,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":626,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectEqualsSelf":388,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":140,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":669,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":552,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":11,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":90,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEqualsNull":298,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":406,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":152,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":334,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":464,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":307,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":537,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":441,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":267,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":128,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":291,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":531,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":89,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":93,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":526,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":170,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":652,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":352,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":164,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":706,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":12,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":670,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":97,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":431,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":530,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":511,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":421,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRetainAll":699,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testSerializeDeserializeThenCompare":339,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":502,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":612,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray2":690,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":44,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":539,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":276,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":280,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":359,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":181,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":43,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":241,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":720,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":122,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":309,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":64,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":592,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":71,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":77,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":110,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":458,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":616,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":266,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":278,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":574,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":314,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":382,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":186,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":178,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":515,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":497,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":651,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":540,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":460,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":480,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":57,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":373,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":4,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":23,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":549,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":622,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":525},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"tindex":"2c3027ec-2e9f-11e6-94d5-1d49c4543907","method":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if (key != null) {\n                final char[] char[] = key.toString().toCharArray();\n                for (int int = (chars.int) - 1 ; i >= 0 ; i--) {\n                    chars[i] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(chars[i]));\n                }\n                return new java.lang.String(chars);\n            } \n            return org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[42],"tindex":"2c31124d-2e9f-11e6-94d5-477931eac0f4","method":{"position":"org.apache.commons.collections4.IteratorUtils:396","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start) {\n    if (start < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[43,44,45,46,47,48],"tindex":"2c31877e-2e9f-11e6-94d5-eff154186b67","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:143","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake buildSnake(final int start, final int diag, final int end1, final int end2) {\n    if (start < 0) {\n        {\n            int int = start;\n            while ((((end - diag) < end2) && (end < end1)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(end), java.util.List<T>.get((end - diag))))) {\n                ++end;\n            }\n            return new org.apache.commons.collections4.sequence.SequencesComparator.Snake(start , end , diag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108],"tindex":"2c31ae8f-2e9f-11e6-94d5-e905459297b7","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:200","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return java.util.Map<V, K>.containsKey(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"2c31fcb0-2e9f-11e6-94d5-4f80326ee44a","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:180","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204],"tindex":"2c3223c1-2e9f-11e6-94d5-25cc2b6cf40e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:734","type":"CtMethodImpl","sourcecode":"private static boolean isRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            return (node != null) && (node.isRed(dataElement));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[],"tindex":"2c3223c2-2e9f-11e6-94d5-0b7e5131b30a","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            return entrySet().equals(other.entrySet());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[205],"tindex":"2c324ad3-2e9f-11e6-94d5-63b7e0422282","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(decorated().listIterator(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"2c3271e4-2e9f-11e6-94d5-05bc84acaef0","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:300","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return doRemoveValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[],"tindex":"2c3271e5-2e9f-11e6-94d5-adf2fb702a36","method":{"position":"org.apache.commons.collections4.map.SingletonMap:534","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.map.SingletonMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != 1) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = other.entrySet().iterator().next();\n            return (isEqualKey(entry.getKey())) && (isEqualValue(entry.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl","sourcecode":"timeUnit == null"},"failures":[206],"tindex":"2c3298f6-2e9f-11e6-94d5-4971f648ce10","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:194","type":"CtMethodImpl","sourcecode":"private static long validateAndConvertToMillis(final long timeToLive, final java.util.concurrent.TimeUnit timeUnit) {\n    if (timeUnit == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (timeUnit == null) {\n                throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n            } \n            return java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.convert(timeToLive, timeUnit);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"timeUnit"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[207,208,209,210,211,212,213,214,215,216,217,218,219,220],"tindex":"2c3298f7-2e9f-11e6-94d5-4f5925125dd1","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:82","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return decorated().indexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[221,222,223,224,225],"tindex":"2c335c48-2e9f-11e6-94d5-3da5eba26977","method":{"position":"org.apache.commons.collections4.CollectionUtils:326","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final org.apache.commons.collections4.Predicate<O> p) {\n    if ((a == null) || (a == null)) {\n        {\n            final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>();\n            final org.apache.commons.collections4.bag.HashBag<O> org.apache.commons.collections4.bag.HashBag<O> = new org.apache.commons.collections4.bag.HashBag<O>();\n            for (final O O : b) {\n                if (p.evaluate(element)) {\n                    bag.add(element);\n                } \n            }\n            for (final O O : a) {\n                if (!(bag.remove(element, 1))) {\n                    list.add(element);\n                } \n            }\n            return list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"2c338359-2e9f-11e6-94d5-8578b793fe11","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:542","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V set(final int index, final V value) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.setValue(index, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[],"tindex":"2c33aa6a-2e9f-11e6-94d5-df4bf3add050","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:99","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().addAll(coll);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[226,227,228],"tindex":"2c33aa6b-2e9f-11e6-94d5-4b0d8b51e300","method":{"position":"org.apache.commons.collections4.map.LRUMap:175","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            moveToMRU(entry);\n            return entry.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[229],"tindex":"2c33aa6c-2e9f-11e6-94d5-a7c5fab912d3","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        {\n            if (transformers == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n                    if ((transformers.int) == 0) {\n                        return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n                    } \n                    return new org.apache.commons.collections4.functors.ChainedTransformer<T>(transformers);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[230,231,232],"tindex":"2c33d17d-2e9f-11e6-94d5-51e78e54dd10","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:231","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[233,234],"tindex":"2c33f88e-2e9f-11e6-94d5-91e76296e04b","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:242","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            return entry.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[],"tindex":"2c33f88f-2e9f-11e6-94d5-2f501d058076","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:664","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            final java.lang.Object java.lang.Object = entry.getValue();\n            if ((entryKey == null) || (entryValue == null)) {\n                return false;\n            } \n            return (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualKey(entryKey, java.lang.Object)) && (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualValue(entryValue, getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[235],"tindex":"2c341fa0-2e9f-11e6-94d5-9dfe50a14ae1","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"2c341fa1-2e9f-11e6-94d5-e5dbcf88749d","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:254","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = size();\n            if ((index < 0) || (index >= sz)) {\n                throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(index), java.lang.Integer.valueOf(sz)));\n            } \n            final int int = ((int) + index) % (int);\n            return E[][idx];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1039","type":"CtBinaryOperatorImpl","sourcecode":"inputCollection != null"},"failures":[236],"tindex":"2c3446b2-2e9f-11e6-94d5-29b0933e1847","method":{"position":"org.apache.commons.collections4.CollectionUtils:1037","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.lang.Iterable<? extends I> inputCollection, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if (inputCollection != null) {\n        {\n            if (inputCollection != null) {\n                return org.apache.commons.collections4.CollectionUtils.collect(inputCollection.iterator(), transformer, outputCollection);\n            } \n            return outputCollection;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputCollection":"inputCollection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[237],"tindex":"2c3446b3-2e9f-11e6-94d5-b36ee5f56cee","method":{"position":"org.apache.commons.collections4.map.CompositeMap:156","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized java.util.Map<K, V> removeComposited(final java.util.Map<K, V> map) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int;\n            for (int int = 0 ; i < size ; ++i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].equals(map)) {\n                    final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[size - 1];\n                    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, i);\n                    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], (i + 1), temp, i, ((size - i) - 1));\n                    org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n                    return map;\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"2c346dc4-2e9f-11e6-94d5-198b3d23fffc","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == (org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[238,239,240,241,242],"tindex":"2c346dc5-2e9f-11e6-94d5-d5cba45ffdb3","method":{"position":"org.apache.commons.collections4.PredicateUtils:371","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.OnePredicate.onePredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[243],"tindex":"2c346dc6-2e9f-11e6-94d5-ed12b2cc840e","method":{"position":"org.apache.commons.collections4.BagUtils:194","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"2c346dc7-2e9f-11e6-94d5-6d0784440fa2","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:99","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().addAll(coll);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[244],"tindex":"2c3494d8-2e9f-11e6-94d5-573f680e7000","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:792","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key3 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((((multi.size()) >= 4) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) && (key4 == null ? (multi.getKey(3)) == null : key4.equals(multi.getKey(3)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key3"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getRight(dataElement)) == node"},"failures":[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,161,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,204,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203],"tindex":"2c3494d9-2e9f-11e6-94d5-b78789386199","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:823","type":"CtMethodImpl","sourcecode":"private void rotateLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getRight(dataElement);\n            node.setRight(rightChild.getLeft(dataElement), dataElement);\n            if ((rightChild.getLeft(dataElement)) != null) {\n                rightChild.getLeft(dataElement).setParent(node, dataElement);\n            } \n            rightChild.setParent(node.getParent(dataElement), dataElement);\n            if ((node.getParent(dataElement)) == null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = rightChild;\n            } else if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n                node.getParent(dataElement).setLeft(rightChild, dataElement);\n            } else {\n                node.getParent(dataElement).setRight(rightChild, dataElement);\n            }\n            rightChild.setLeft(node, dataElement);\n            node.setParent(rightChild, dataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtBinaryOperatorImpl","sourcecode":"(end) < (start)"},"failures":[42],"tindex":"2c350a0a-2e9f-11e6-94d5-7fb25d20b96c","method":{"position":"org.apache.commons.collections4.IteratorUtils:431","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start, final int end) {\n    if (start < start) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start , end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start","end":"start"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:50","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[245,246,247,49,248,249,250,251,252,253,254,255,256,257,258,259,260,261],"tindex":"2c350a0b-2e9f-11e6-94d5-8103dfbba0ee","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:45","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<? extends K, ? extends V> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[262],"tindex":"2c36428c-2e9f-11e6-94d5-ed1fcd5d25d3","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[263],"tindex":"2c3753fd-2e9f-11e6-94d5-6f9128b5a16b","method":{"position":"org.apache.commons.collections4.ListUtils:678","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<T> get(final int index) {\n    if (index < 0) {\n        {\n            final int int = size();\n            if (listSize < 0) {\n                throw new java.lang.IllegalArgumentException((\"negative size: \" + listSize));\n            } \n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" must not be negative\"));\n            } \n            if (index >= listSize) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" must be less than size \") + listSize));\n            } \n            final int int = index * (int);\n            final int int = java.lang.Math.min((start + (int)), java.util.List<T>.size());\n            return java.util.List<T>.subList(start, end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[264,265],"tindex":"2c377b0e-2e9f-11e6-94d5-0d2fdb113002","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:45","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceOfPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        {\n            if (type == null) {\n                throw new java.lang.IllegalArgumentException(\"The type to check instanceof must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InstanceofPredicate(type);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[266,267,268,269,270,271,272,273,274],"tindex":"2c377b0f-2e9f-11e6-94d5-41f5c14d4913","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:316","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                {\n                    final int int = getHash(key);\n                    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n                        while (n != null) {\n                            if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                                if (null == prev) {\n                                    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                                } else {\n                                    prev.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                                }\n                                (org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash].int)--;\n                                return n.V;\n                            } \n                            prev = n;\n                            n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        }\n                    }\n                    return null;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"2c37a220-2e9f-11e6-94d5-890dfa159b09","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:316","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                {\n                    final int int = getHash(key);\n                    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n                        while (n != null) {\n                            if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                                if (null == prev) {\n                                    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                                } else {\n                                    prev.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                                }\n                                (org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash].int)--;\n                                return n.V;\n                            } \n                            prev = n;\n                            n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        }\n                    }\n                    return null;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[275],"tindex":"2c37c931-2e9f-11e6-94d5-a7ebebadf768","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:138","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            addComparator(comparator, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"2c37c932-2e9f-11e6-94d5-f99c8e59f655","method":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.TransformingComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.TransformingComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.TransformingComparator<?, ?> org.apache.commons.collections4.comparators.TransformingComparator<?, ?> = ((org.apache.commons.collections4.comparators.TransformingComparator<?, ?>)(object));\n                return null == (java.util.Comparator<O>) ? null == (comp.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(comp.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[276,277,278,279],"tindex":"2c37f043-2e9f-11e6-94d5-c5b7994d99b6","method":{"position":"org.apache.commons.collections4.map.CompositeMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsValue(value)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[280,281,282,283,53,284,285,286,287,57,288,289,290,291,292,58,293,294,59,295,296,297,298,299,300,64,301,302,303,304,305,65,306,307,66,308,309,310,311,312,313,83,314,315,316,317,318,84,319,320,85,321,322,323,324,325,326,102,327,328,329,330,331,103,332,333,104,334,335,336,337,338,339,340,341,342,343,107,344,345,346,347],"tindex":"2c37f044-2e9f-11e6-94d5-83b2f7becad0","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        {\n            return java.util.Map<K, V>.equals(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393],"tindex":"2c37f045-2e9f-11e6-94d5-375bdf7a68c5","method":{"position":"org.apache.commons.collections4.bag.PredicatedSortedBag:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedSortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedSortedBag<E>(bag , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[394],"tindex":"2c381756-2e9f-11e6-94d5-0558da3e43d5","method":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.PredicatedQueue<E> predicatedQueue(final java.util.Queue<E> Queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.queue.PredicatedQueue<E>(Queue , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:75","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"2c381757-2e9f-11e6-94d5-31de22c93a1c","method":{"position":"org.apache.commons.collections4.ListUtils:442","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list.isEmpty()) {\n        {\n            return org.apache.commons.collections4.list.TransformedList.transformingList(list, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422],"tindex":"2c38b398-2e9f-11e6-94d5-9912b5c1cb6a","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:455","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            if (key1 != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    key2 = (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<K>)(key2)).get();\n                    return (key1 == key2) || (key1.equals(key2));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[],"tindex":"2c38daa9-2e9f-11e6-94d5-952e9bab31a1","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"2c38daaa-2e9f-11e6-94d5-b974c2abf742","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:455","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            if (key1 != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    key2 = (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<K>)(key2)).get();\n                    return (key1 == key2) || (key1.equals(key2));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[423,424,425],"tindex":"2c3901bb-2e9f-11e6-94d5-cd052b2771d4","method":{"position":"org.apache.commons.collections4.CollectionUtils:463","type":"CtMethodImpl","sourcecode":"public static boolean isSubCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((a.size()) != (b.size())) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n            for (final java.lang.Object java.lang.Object : a) {\n                if ((helper.freqA(obj)) > (helper.freqB(obj))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:358","type":"CtUnaryOperatorImpl","sourcecode":"!(h.isEmpty())"},"failures":[426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446],"tindex":"2c3901bc-2e9f-11e6-94d5-d5b67cbe377f","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:499","type":"CtMethodImpl","sourcecode":"private void removeExternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isEmpty())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isExternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an external Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            } else {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            }\n            if ((child.int) > (parent.int)) {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            } else {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:117","type":"CtBinaryOperatorImpl","sourcecode":"set1 == set2"},"failures":[447],"tindex":"2c3928cd-2e9f-11e6-94d5-b330e84f90b0","method":{"position":"org.apache.commons.collections4.SetUtils:116","type":"CtMethodImpl","sourcecode":"public static boolean isEqualSet(final java.util.Collection<?> set1, final java.util.Collection<?> set2) {\n    if (set2 == set1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set1 == set2) {\n                return true;\n            } \n            if (((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))) {\n                return false;\n            } \n            return set1.containsAll(set2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"set1","set1":"set2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[448,449,450],"tindex":"2c394fde-2e9f-11e6-94d5-3774860c6763","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:577","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key4 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key4"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:383","type":"CtBinaryOperatorImpl","sourcecode":"size < 4"},"failures":[],"tindex":"2c394fdf-2e9f-11e6-94d5-fb49d1f68f57","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:477","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<V> createCollection(final int size) {\n    if (size < 4) {\n        {\n            return org.apache.commons.collections4.Factory<? extends java.util.Collection<V>>.create();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[451],"tindex":"2c3976f0-2e9f-11e6-94d5-6317c9749c9a","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:183","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends J, ? extends U> map) {\n    if (map.isEmpty()) {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[452,453],"tindex":"2c3976f1-2e9f-11e6-94d5-d1fffeddb556","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:57","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                {\n                    org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n                    org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n                    if ((predicates.int) != (transformers.int)) {\n                        throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\");\n                    } \n                    if ((predicates.int) == 0) {\n                        return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n                    } \n                    return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(predicates , transformers , defaultTransformer);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[454,455,456,457,458,459,460],"tindex":"2c399e02-2e9f-11e6-94d5-458927577252","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:377","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            removeIfExpired(key, now());\n            return super.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"2c3a8863-2e9f-11e6-94d5-831004b21466","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:57","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                {\n                    org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n                    org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n                    if ((predicates.int) != (transformers.int)) {\n                        throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\");\n                    } \n                    if ((predicates.int) == 0) {\n                        return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n                    } \n                    return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(predicates , transformers , defaultTransformer);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[20,30,33,34,37,38,39,40,41,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,227,228,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503],"tindex":"2c3aaf74-2e9f-11e6-94d5-05839a2f1bfc","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:337","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            final int int = hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    final V V = entry.getValue();\n                    removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[0,1,6,8,9,11,12,15,16,19,20,34,37,38,39,40,41,504,505,506,507,508,509,510,511,461,464,465,466,467,468,469,470,512,513,514,515,516,517,518,519,471,474,475,476,477,478,479,520,521,522,523,524,525,526,527,480,483,484,485,227,228,486,528,529,530,531,532,533,534,535,487,490,491,492,493,494,495,536,537,497,538,539,540,541,542,543,544,545,501,546,547,548,549,550,551],"tindex":"2c3aaf75-2e9f-11e6-94d5-55483764dc32","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[34,464,474,483,490,497,501],"tindex":"2c3ad686-2e9f-11e6-94d5-cf20a198ed8b","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:951","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.remove(key);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[454,552,455,553,456,457,554],"tindex":"2c3ad687-2e9f-11e6-94d5-f98dc14848c9","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:458","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            java.util.Map<java.lang.Object, java.lang.Long>.remove(key);\n            return super.remove(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[555,556,557,558,237,559,560,561,562,563,564,565,566,567,568,569,570,571,423,221,572,573,574,424,575,576,577,578,425,224,225,579],"tindex":"2c3afd98-2e9f-11e6-94d5-2d4ab31cbc70","method":{"position":"org.apache.commons.collections4.CollectionUtils:98","type":"CtMethodImpl","sourcecode":"public int freqA(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[580,581,353,357,380,381,582,583,584,585,586,587,588,589,590,591,592,593,594,595],"tindex":"2c3b72c9-2e9f-11e6-94d5-979789195765","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:342","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            if (coll != null) {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final boolean boolean = remove(i.next(), 1);\n                    result = result || changed;\n                }\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[596],"tindex":"2c3b72ca-2e9f-11e6-94d5-5bfb4d862c06","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:136","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630],"tindex":"2c3b72cb-2e9f-11e6-94d5-cb7197049eac","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:325","type":"CtMethodImpl","sourcecode":"private int increment(int index) {\n    if (index < 0) {\n        {\n            index++;\n            if (index >= (int)) {\n                index = 0;\n            } \n            return index;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:123","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[631,632],"tindex":"2c3b99dc-2e9f-11e6-94d5-57c70f9db4f5","method":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:107","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> comparatorPredicate(final T object, final java.util.Comparator<T> comparator) {\n    if (comparator == null) {\n        {\n            return org.apache.commons.collections4.functors.ComparatorPredicate.comparatorPredicate(object, comparator, org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668],"tindex":"2c3b99dd-2e9f-11e6-94d5-bb7b8a985e09","method":{"position":"org.apache.commons.collections4.list.TreeList:413","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> get(final int index) {\n    if (index < 0) {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode.this;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = indexRelativeToMe < 0 ? getLeftSubTree() : getRightSubTree();\n            if (nextNode == null) {\n                return null;\n            } \n            return nextNode.get(indexRelativeToMe);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"2c3bc0ee-2e9f-11e6-94d5-0bfe349ee89c","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:438","type":"CtMethodImpl","sourcecode":"protected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (key == null ? 0 : key.hashCode()) ^ (value == null ? 0 : value.hashCode());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"2c3bc0ef-2e9f-11e6-94d5-0fa5ea87e406","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2031","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            if ((node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()))) {\n                removeEntry(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"2c3c0f10-2e9f-11e6-94d5-97a777f4c98c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2061","type":"CtMethodImpl","sourcecode":"public V getKey(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[669],"tindex":"2c3c0f11-2e9f-11e6-94d5-a5ee0dd4aa45","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"2c3c3622-2e9f-11e6-94d5-951f4f3c2504","method":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(set , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[670,671],"tindex":"2c3c3623-2e9f-11e6-94d5-87555b6cd653","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.TransformedBag<E> org.apache.commons.collections4.bag.TransformedBag<E> = new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"2c3c3624-2e9f-11e6-94d5-0535909460e1","method":{"position":"org.apache.commons.collections4.MapUtils:861","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Properties toProperties(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            final java.util.Properties java.util.Properties = new java.util.Properties();\n            if (map != null) {\n                for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = entry2;\n                    final java.lang.Object java.lang.Object = entry.getKey();\n                    final java.lang.Object java.lang.Object = entry.getValue();\n                    answer.put(key, value);\n                }\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtBinaryOperatorImpl","sourcecode":"bound < 0"},"failures":[],"tindex":"2c3c5d35-2e9f-11e6-94d5-3f3bae184f85","method":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:112","type":"CtMethodImpl","sourcecode":"protected void checkBound(final int bound, final int len, final java.lang.String type) {\n    if (len < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bound > len) {\n                throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s beyond the end of the array. \"));\n            } \n            if (bound < 0) {\n                throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s before the start of the array. \"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bound":"len"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[672],"tindex":"2c3c5d36-2e9f-11e6-94d5-8d5fb29348db","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[44],"tindex":"2c3c5d37-2e9f-11e6-94d5-493c5d65cd1a","method":{"position":"org.apache.commons.collections4.ListUtils:574","type":"CtMethodImpl","sourcecode":"public static java.lang.String longestCommonSubsequence(final java.lang.CharSequence a, final java.lang.CharSequence b) {\n    if ((a == null) || (b == null)) {\n        {\n            if ((b == null) || (a == null)) {\n                {\n                    if ((a == null) || (b == null)) {\n                        throw new java.lang.IllegalArgumentException(\"CharSequence must not be null\");\n                    } \n                    final java.util.List<java.lang.Character> java.util.List<java.lang.Character> = org.apache.commons.collections4.ListUtils.longestCommonSubsequence(new org.apache.commons.collections4.ListUtils.CharSequenceAsList(a), new org.apache.commons.collections4.ListUtils.CharSequenceAsList(b));\n                    final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n                    for (java.lang.Character java.lang.Character : lcs) {\n                        sb.append(ch);\n                    }\n                    return sb.toString();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703],"tindex":"2c3c8448-2e9f-11e6-94d5-7d65a91ae5af","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:111","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().addAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:216","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"2c3cab59-2e9f-11e6-94d5-d774a245c9dc","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:179","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (comparator == null) {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.set(index, comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(index);\n            } else {\n                java.util.BitSet.clear(index);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[704],"tindex":"2c3cab5a-2e9f-11e6-94d5-731a55a67478","method":{"position":"org.apache.commons.collections4.CollectionUtils:684","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    closure.execute(iterator.next());\n                }\n            } \n            return closure;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[454,552,455,456,457,705,458,706,707,708,709,710,711,712,459,460,713],"tindex":"2c3cab5b-2e9f-11e6-94d5-c9212c0951dd","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:488","type":"CtMethodImpl","sourcecode":"private void removeIfExpired(final java.lang.Object key, final long now) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Long java.lang.Long = java.util.Map<java.lang.Object, java.lang.Long>.get(key);\n            if (isExpired(now, expirationTimeObject)) {\n                remove(key);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"2c3cab5c-2e9f-11e6-94d5-eb79004eb363","method":{"position":"org.apache.commons.collections4.SetUtils:230","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set == null) {\n        {\n            return org.apache.commons.collections4.set.TransformedSet.transformingSet(set, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:55","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"2c3cd26d-2e9f-11e6-94d5-03acd5e89a1d","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:54","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Set<java.util.Map.Entry<K, V>> unmodifiableEntrySet(final java.util.Set<java.util.Map.Entry<K, V>> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                return set;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableEntrySet<K, V>(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[451],"tindex":"2c3cd26e-2e9f-11e6-94d5-c1f386ec6914","method":{"position":"org.apache.commons.collections4.SplitMapUtils:158","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"2c3cd26f-2e9f-11e6-94d5-77f69f7fe448","method":{"position":"org.apache.commons.collections4.MapUtils:318","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Double) {\n                return ((java.lang.Double)(answer));\n            } \n            return java.lang.Double.valueOf(answer.doubleValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[],"tindex":"2c3cd270-2e9f-11e6-94d5-bbfc7f8580e8","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1544","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            if ((node != null) && (node.getValue().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[714],"tindex":"2c3f9191-2e9f-11e6-94d5-7d5c0bc53586","method":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsFalsePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsFalsePredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[715],"tindex":"2c3fb8a2-2e9f-11e6-94d5-716cfa756cf5","method":{"position":"org.apache.commons.collections4.map.LazyMap:96","type":"CtMethodImpl","sourcecode":"public static <V, K>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if (map != null) {\n        {\n            return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"2c3fb8a3-2e9f-11e6-94d5-3fdc1d77e69f","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:971","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index > 0) {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.get((index + (int)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[716],"tindex":"2c3fb8a4-2e9f-11e6-94d5-619545338191","method":{"position":"org.apache.commons.collections4.CollectionUtils:641","type":"CtMethodImpl","sourcecode":"public static <T>T find(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if ((collection != null) && (predicate != null)) {\n                for (final T T : collection) {\n                    if (predicate.evaluate(item)) {\n                        return item;\n                    } \n                }\n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"2c3fb8a5-2e9f-11e6-94d5-d736ae9ab566","method":{"position":"org.apache.commons.collections4.ListUtils:574","type":"CtMethodImpl","sourcecode":"public static java.lang.String longestCommonSubsequence(final java.lang.CharSequence a, final java.lang.CharSequence b) {\n    if ((a == null) || (b == null)) {\n        {\n            if ((b == null) || (a == null)) {\n                {\n                    if ((a == null) || (b == null)) {\n                        throw new java.lang.IllegalArgumentException(\"CharSequence must not be null\");\n                    } \n                    final java.util.List<java.lang.Character> java.util.List<java.lang.Character> = org.apache.commons.collections4.ListUtils.longestCommonSubsequence(new org.apache.commons.collections4.ListUtils.CharSequenceAsList(a), new org.apache.commons.collections4.ListUtils.CharSequenceAsList(b));\n                    final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n                    for (java.lang.Character java.lang.Character : lcs) {\n                        sb.append(ch);\n                    }\n                    return sb.toString();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"2c4006c6-2e9f-11e6-94d5-e177feb44109","method":{"position":"org.apache.commons.collections4.MapUtils:1542","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.PredicatedSortedMap.predicatedSortedMap(map, keyPred, valuePred);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[],"tindex":"2c4006c7-2e9f-11e6-94d5-7178ae113d9a","method":{"position":"org.apache.commons.collections4.map.LinkedMap:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"2c4006c8-2e9f-11e6-94d5-9d71fe5fd37d","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[],"tindex":"2c402dd9-2e9f-11e6-94d5-7fe9495da294","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1574","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            return (node != null) && (node.getKey().equals(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[717],"tindex":"2c402dda-2e9f-11e6-94d5-69a4678dd90c","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:264","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"2c407bfb-2e9f-11e6-94d5-01398385d873","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:134","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[],"tindex":"2c40a30c-2e9f-11e6-94d5-79db306433b4","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        {\n            if (transformers == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n                    if ((transformers.int) == 0) {\n                        return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n                    } \n                    return new org.apache.commons.collections4.functors.ChainedTransformer<T>(transformers);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:404","type":"CtBinaryOperatorImpl","sourcecode":"expirationTimeObject != null"},"failures":[718,719,720,454,552,455,721,553,722,456,457,723,724,725,726,727,728,705,729,458,730,731,706,732,733,734,554,735,736,737,738,739,740,707,708,709,741,742,743,744,710,745,746,711,712,459,460,713],"tindex":"2c40a30d-2e9f-11e6-94d5-81af1abf6798","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:403","type":"CtMethodImpl","sourcecode":"private boolean isExpired(final long now, final java.lang.Long expirationTimeObject) {\n    if (expirationTimeObject != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (expirationTimeObject != null) {\n                final long long = expirationTimeObject.longValue();\n                return (expirationTime >= 0) && (now >= expirationTime);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expirationTimeObject":"expirationTimeObject"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl","sourcecode":"(coll1.size()) < (coll2.size())"},"failures":[],"tindex":"2c40a30e-2e9f-11e6-94d5-676075fb300e","method":{"position":"org.apache.commons.collections4.CollectionUtils:366","type":"CtMethodImpl","sourcecode":"public static boolean containsAll(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if ((coll2.size()) < (coll2.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll2.isEmpty()) {\n                return true;\n            } else {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll1.iterator();\n                final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (elementsAlreadySeen.contains(nextElement)) {\n                        continue;\n                    } \n                    boolean boolean = false;\n                    while (it.hasNext()) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        elementsAlreadySeen.add(p);\n                        if (nextElement == null ? p == null : nextElement.equals(p)) {\n                            foundCurrentElement = true;\n                            break;\n                        } \n                    }\n                    if (foundCurrentElement) {\n                        continue;\n                    } else {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll2","coll1":"coll2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[747,748,749,750,751,752,753],"tindex":"2c40ca1f-2e9f-11e6-94d5-a3b799224378","method":{"position":"org.apache.commons.collections4.CollectionUtils:1382","type":"CtMethodImpl","sourcecode":"public static boolean sizeIsEmpty(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            if (object == null) {\n                return true;\n            } else if (object instanceof java.util.Collection<?>) {\n                return ((java.util.Collection<?>)(object)).isEmpty();\n            } else if (object instanceof java.util.Map<?, ?>) {\n                return ((java.util.Map<?, ?>)(object)).isEmpty();\n            } else if (object instanceof java.lang.Object[]) {\n                return (((java.lang.Object[])(object)).int) == 0;\n            } else if (object instanceof java.util.Iterator<?>) {\n                return (((java.util.Iterator<?>)(object)).hasNext()) == false;\n            } else if (object instanceof java.util.Enumeration<?>) {\n                return (((java.util.Enumeration<?>)(object)).hasMoreElements()) == false;\n            } else {\n                try {\n                    return (java.lang.reflect.Array.getLength(object)) == 0;\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}