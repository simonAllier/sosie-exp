{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":12,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":849,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":503,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":1076,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":516,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":49,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":165,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":191,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":278,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":669,"org.apache.commons.collections4.CollectionUtilsTest.getNegative":725,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicateEx":297,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":882,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":834,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":663,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":695,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":835,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":1065,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":577,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":1064,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":22,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":335,"org.apache.commons.collections4.CollectionUtilsTest.collect":778,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectEqualsSelf":357,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":562,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":644,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":339,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":338,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":459,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":761,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":1066,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":744,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":880,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":288,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":201,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":69,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":564,"org.apache.commons.collections4.CollectionUtilsTest.get":753,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":1051,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":533,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":469,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":68,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":496,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":345,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":384,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":504,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":938,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":63,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":179,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testEqualsNull":703,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":16,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":422,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":57,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":129,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":55,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains2":975,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains1":974,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":939,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":603,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":616,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":760,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":300,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":241,"org.apache.commons.collections4.CollectionUtilsTest.select":735,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":776,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Other":792,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":48,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":737,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":193,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":1080,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":144,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":527,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":1025,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":228,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":560,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":202,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":856,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":613,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":681,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":967,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":567,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":810,"org.apache.commons.collections4.CollectionUtilsTest.intersection":759,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":592,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":811,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":829,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":142,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":30,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":610,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":169,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":322,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":23,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":157,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":254,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":158,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":636,"org.apache.commons.collections4.CollectionUtilsTest.testPermutationsWithNullCollection":767,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":73,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":653,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":151,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":905,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":604,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":1001,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":13,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":893,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Other":800,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastValues":964,"org.apache.commons.collections4.map.CompositeMapTest.testPut":643,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":76,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":907,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":207,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":926,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":520,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":349,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":682,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":1089,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":787,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":246,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":841,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyReadableMap":366,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":415,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":932,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":1085,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":519,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":764,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":402,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":933,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":451,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":455,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":452,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":453,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":124,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":597,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":425,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testFullMap":369,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":107,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":1023,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":276,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":633,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":887,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":420,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":421,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":419,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":131,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":242,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":397,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":889,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":95,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":602,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":43,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":219,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":779,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":182,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":227,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":526,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull":732,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":769,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":548,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":606,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":891,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":649,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":895,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":174,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":170,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":438,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Enumeration":720,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":113,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":303,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":509,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":599,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":464,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":683,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":46,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesIteratorRemoveChangesMap":589,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Null":750,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":117,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":898,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":629,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":137,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":275,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":319,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":101,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":661,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":91,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":605,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":29,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":505,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":506,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":924,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":507,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":318,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":53,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":234,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":845,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":665,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":206,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":709,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":1013,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":494,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectEqualsSelf":701,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":855,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":312,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":430,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":498,"org.apache.commons.collections4.CollectionUtilsTest.get1":755,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_PrimitiveArray":739,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":957,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCanonicalFullCollectionExists":702,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":1074,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":72,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorSet":993,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":865,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":211,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":1070,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":59,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":802,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":392,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":160,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":795,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":874,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":317,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":517,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":290,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":601,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":391,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":362,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":569,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":989,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":9,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":902,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":88,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":690,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap":382,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":807,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":86,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":414,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":20,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNull":712,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":1067,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":189,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":915,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":1007,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":449,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":11,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":286,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":218,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":217,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":216,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":426,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":757,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":654,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":911,"org.apache.commons.collections4.CollectionUtilsTest.exists":727,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":981,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":552,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":585,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":145,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectHashCodeEqualsSelfHashCode":707,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":628,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":350,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":721,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":187,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":550,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":512,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":6,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":524,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":638,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":398,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":538,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":563,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":532,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":839,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":982,"org.apache.commons.collections4.keyvalue.TiedMapEntryTest.testEqualsAndHashCode":1012,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":457,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":200,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":412,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":389,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":291,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":115,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":497,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":304,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":942,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":458,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":365,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":820,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":864,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":166,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":247,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":808,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":261,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":945,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":267,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":992,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":574,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":1022,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":541,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":307,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":547,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":568,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":298,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":994,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionSize":692,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":481,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":444,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":879,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":549,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":153,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":329,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":996,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":119,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":863,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":670,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":377,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":413,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":1043,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":378,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":1004,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":1081,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":724,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":150,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":383,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":557,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":579,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":258,"org.apache.commons.collections4.map.HashedMapTest.testClone":461,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":558,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":687,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":897,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":559,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":3,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":918,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":910,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":883,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":502,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":77,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":393,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":1057,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":255,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":445,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":67,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":620,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":130,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":199,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":448,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":1084,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":1021,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":231,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":743,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":284,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":733,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":123,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":936,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":640,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":1059,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":716,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":301,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":1037,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":233,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":311,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":648,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":465,"org.apache.commons.collections4.CollectionUtilsTest.emptyCollection":740,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":109,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":424,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":15,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":751,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":161,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":495,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":183,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":1014,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":950,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":881,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":66,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testEmptyMap":372,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":672,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":314,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":1010,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":1031,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNonEmptyMap":380,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":906,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":594,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":198,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectHashCodeEqualsContract":706,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":912,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":955,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":685,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":244,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":75,"org.apache.commons.collections4.ListUtilsTest.testSelect":671,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":310,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveAll":587,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":624,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":623,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":797,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":980,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":488,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":164,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":173,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":788,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":652,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":4,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":853,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":554,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":510,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":555,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":1050,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":447,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":556,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":988,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":363,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":491,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":490,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":289,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":489,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":146,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":355,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":684,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":925,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":367,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":90,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":472,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":869,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":1063,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testSimpleSerialization":705,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":1061,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":180,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":847,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":985,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":470,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":1053,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":977,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":343,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":94,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":664,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":812,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":499,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":976,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":81,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":531,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":396,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":627,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":84,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":83,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":435,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":82,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":551,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":790,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":987,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":534,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":971,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":525,"org.apache.commons.collections4.CollectionUtilsTest.find":754,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":346,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":92,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":837,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyWritableMap":368,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":618,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":848,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":609,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":354,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":353,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":885,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":756,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":736,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":871,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":572,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":949,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":408,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":159,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":256,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":1091,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":729,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":230,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":536,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":1049,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":615,"org.apache.commons.collections4.map.LRUMapTest.testLRU":282,"org.apache.commons.collections4.map.ListOrderedMapTest.testPreviousKey":373,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":111,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":884,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":1058,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":801,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":1055,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithEmptyMap":379,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":680,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":823,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":154,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":432,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":873,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":294,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":1033,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":878,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":666,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":922,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":570,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":1003,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":1026,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":360,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":14,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":331,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":466,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":2,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":285,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":858,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":399,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":741,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":79,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":71,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":842,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":662,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":658,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":962,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":215,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":870,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":441,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":450,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":997,"org.apache.commons.collections4.map.ListOrderedMap2Test.testNextKey":388,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":708,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":920,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":181,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":292,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":411,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":482,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":486,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":280,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":25,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":972,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":660,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":225,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":934,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":454,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":480,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":1077,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":785,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":876,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":477,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":919,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":428,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":923,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":748,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":323,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithEmptyCollection":714,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":340,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testSerializeDeserializeThenCompare":698,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":635,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":668,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":34,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":508,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":772,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":308,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":400,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testDecorateFactory":688,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":565,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":821,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":1075,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":18,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":715,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":773,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":631,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectHashCodeEqualsContract":359,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":407,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":190,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":1016,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":943,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":1060,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":249,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":268,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":608,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray2":691,"org.apache.commons.collections4.CollectionUtilsTest.addAllForElements":723,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":99,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":991,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":171,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":337,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":622,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":336,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":253,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":484,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":913,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":546,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":1030,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":694,"org.apache.commons.collections4.CollectionUtilsTest.transform2":718,"org.apache.commons.collections4.CollectionUtilsTest.transform1":717,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":816,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":296,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":64,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":1038,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":361,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionNullEquator":784,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":553,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":667,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":894,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":463,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRetainAll":909,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":37,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":141,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":1017,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":38,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":903,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":36,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":699,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":409,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":152,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":607,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":833,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":263,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToString":693,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":220,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":999,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream":125,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":522,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRetainAll":588,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":886,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":916,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":126,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":726,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":580,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":423,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":394,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNonEmptyCollection":713,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":535,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":1096,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":203,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":266,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":404,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":866,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":611,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":10,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":935,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":1072,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":148,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":625,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":697,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":332,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":395,"org.apache.commons.collections4.map.CompositeMapTest.testGet":642,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":948,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":1028,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":138,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":818,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":96,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":901,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":433,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":140,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":139,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":272,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":765,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":262,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":374,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":514,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":163,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":265,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":330,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":676,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":1044,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":51,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":978,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":731,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":348,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":232,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":500,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":1015,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":578,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":1068,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":103,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":961,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":1094,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":167,"org.apache.commons.collections4.CollectionUtilsTest.union":758,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":116,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":819,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":100,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":830,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":185,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":35,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":168,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":678,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":442,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":243,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":26,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":121,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":31,"org.apache.commons.collections4.list.TreeListTest.testRemove":108,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":929,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":875,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":417,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":416,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":387,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":19,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":309,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":896,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":1052,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":418,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":575,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":637,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":177,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":344,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":176,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":774,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":1046,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":175,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":796,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":576,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":822,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":1029,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":155,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":136,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":965,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":1048,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":114,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":439,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":1098,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":928,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":41,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":591,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":959,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":40,"org.apache.commons.collections4.map.ListOrderedMap2Test.testPreviousKey":376,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":39,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":614,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":222,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":904,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":281,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":1000,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":483,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":235,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":595,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":0,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":287,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":248,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":327,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":651,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":954,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":178,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":840,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_Decorate":946,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":478,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":598,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":1087,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":321,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":630,"org.apache.commons.collections4.CollectionUtilsTest.collateException2":747,"org.apache.commons.collections4.CollectionUtilsTest.collateException1":746,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":197,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":1042,"org.apache.commons.collections4.list.TreeListTest.testListEquals":299,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":768,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":17,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":1062,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":440,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":956,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":814,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":815,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Array":799,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":305,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Map":791,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":487,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":621,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":1101,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":122,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":798,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":1005,"org.apache.commons.collections4.CollectionUtilsTest.testUnmodifiableCollection":780,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":1039,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":1095,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":127,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":838,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":850,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":221,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":172,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":468,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":900,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":1002,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":50,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":854,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":1086,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":1018,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":584,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":775,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":1040,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":867,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":888,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":61,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Array":789,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithEmptyMap":381,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":47,"org.apache.commons.collections4.CollectionUtilsTest.filter":728,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":646,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":645,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":406,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":1032,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":1056,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":1092,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":710,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":224,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":539,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":210,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":250,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":742,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":1054,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":24,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":277,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":467,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":251,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":102,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":843,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":674,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains2":931,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":135,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains1":930,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":1083,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking":1100,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":612,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":542,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking2":106,"org.apache.commons.collections4.CollectionUtilsTest.addIgnoreNull":777,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":386,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":958,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":890,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":462,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":5,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":899,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":1041,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":700,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":1071,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":196,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":334,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":195,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":295,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":1079,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":328,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":1082,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":511,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":192,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":877,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":970,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":544,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":427,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":78,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":456,"org.apache.commons.collections4.CollectionUtilsTest.testSize_List":783,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":460,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":566,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":673,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":639,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":240,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":306,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":872,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":264,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":1102,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":162,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":719,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":561,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":722,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":209,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":766,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":236,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":237,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":647,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":238,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":947,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":143,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":573,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":147,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":677,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":1097,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":846,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":485,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":1090,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":944,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnmodifiable":689,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":252,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":973,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":52,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":921,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":431,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":966,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":986,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":364,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":390,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":223,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":917,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":844,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":98,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":134,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":596,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":763,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":937,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":493,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":940,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":471,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":941,"org.apache.commons.collections4.CollectionUtilsTest.addAllForEnumeration":734,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":186,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":1047,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":54,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":245,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":315,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Iterator":786,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":325,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":326,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":112,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":1024,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":302,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":385,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":370,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":401,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":770,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":1069,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":745,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":908,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":953,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":283,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":771,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":271,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":583,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":93,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":1008,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":813,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":269,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":501,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":58,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_List":749,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":521,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":626,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":437,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":738,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":347,"org.apache.commons.collections4.set.CompositeSetTest.testContains":675,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithEmptyCollection":804,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":293,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":617,"org.apache.commons.collections4.CollectionUtilsTest.isFull":730,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":214,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":479,"org.apache.commons.collections4.CollectionUtilsTest.getFromObjectArray":762,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":1045,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":42,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":782,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":1036,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":857,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":403,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":104,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Map":752,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":443,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":149,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIsEmpty":696,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":861,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":679,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":794,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":634,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":1034,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":313,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":969,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":998,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":1088,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":979,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":316,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":862,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicateEx1":118,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":859,"org.apache.commons.collections4.CollectionUtilsTest.reverse":781,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":860,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":70,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":952,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":446,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":87,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCanonicalEmptyCollectionExists":704,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":341,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":342,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":80,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":619,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":831,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":832,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":1006,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":641,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":851,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":60,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":429,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":686,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":868,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":984,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":208,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":320,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":324,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":659,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":226,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":657,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":239,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":515,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":410,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":600,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":852,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":927,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_Decorate":951,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":1078,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":995,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains1":1011,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":32,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":405,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":434,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":120,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":356,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":803,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEqualsNull":358,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":963,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":543,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNonEmptyCollection":793,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":914,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":513,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":655,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":529,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":530,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalSet":1099,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":528,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":540,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":473,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":128,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":968,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":351,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":352,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":593,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":582,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":33,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":523,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":581,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":824,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":132,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":1027,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":45,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":474,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":475,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":1073,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":492,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":371,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":213,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":62,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":983,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":56,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":133,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":229,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":586,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":375,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":518,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":537,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":825,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":274,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":809,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":826,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":259,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":806,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":805,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":1019,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":204,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":650,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":990,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":74,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":273,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":836,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":1093,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":711,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":590,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":892,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":436,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":1035,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":279,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":333,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":827,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":960,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":828,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":476,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":188,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":184,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":257,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":110,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":260,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":1020,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":205,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking":105,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":545,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":656,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":1009,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":571,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":817,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":270,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":212,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":632},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:190","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"29fb9cb6-2ec1-11e6-be80-03fd73bbbcaa","method":{"position":"org.apache.commons.collections4.IteratorUtils:938","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> toListIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[0],"tindex":"29fc8717-2ec1-11e6-be80-c329fbd5c217","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"29fc8718-2ec1-11e6-be80-c79bf80980f3","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1866","type":"CtMethodImpl","sourcecode":"private void setLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[97],"tindex":"29fcd539-2ec1-11e6-be80-4fe4e1f24fc9","method":{"position":"org.apache.commons.collections4.QueueUtils:93","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            if (transformer != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.queue.TransformedQueue.transformingQueue(queue, transformer);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[98,99,100,101,102,103,104],"tindex":"29fcd53a-2ec1-11e6-be80-1b63ecf694f5","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                return containsAll(((org.apache.commons.collections4.Bag<?>)(coll)));\n            } \n            return containsAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"29fd235b-2ec1-11e6-be80-55f32972f4df","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:133","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[105,106],"tindex":"29fd235c-2ec1-11e6-be80-df0da071060e","method":{"position":"org.apache.commons.collections4.list.TransformedList:137","type":"CtMethodImpl","sourcecode":"public void add(final int index, E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            object = transform(object);\n            getList().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[107],"tindex":"29fd4a6d-2ec1-11e6-be80-7937f21c2409","method":{"position":"org.apache.commons.collections4.MapUtils:1756","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> iterableMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return map instanceof org.apache.commons.collections4.IterableMap ? ((org.apache.commons.collections4.IterableMap<K, V>)(map)) : new org.apache.commons.collections4.map.AbstractMapDecorator<K, V>(map) {            };\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[108,109,110,111,112,113,114,115,116,117],"tindex":"29fd4a6e-2ec1-11e6-be80-8b0046f3c76e","method":{"position":"org.apache.commons.collections4.list.TreeList:570","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return removeSelf();\n            } \n            if (indexRelativeToMe > 0) {\n                setRight(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) < 0) {\n                    (int)++;\n                } \n            } else {\n                setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) > 0) {\n                    (int)--;\n                } \n            }\n            recalcHeight();\n            return balance();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.NullPointerException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"29fd988f-2ec1-11e6-be80-978491ea2e5e","method":{"position":"org.apache.commons.collections4.MapUtils:1089","type":"CtMethodImpl","sourcecode":"public static <K>void safeAddToMap(final java.util.Map<? super K, java.lang.Object> map, final K key, final java.lang.Object value) throws java.lang.NullPointerException {\n    if (value != null) {\n        throw new java.lang.NullPointerException();\n    } else {\n        {\n            map.put(key, (value == null ? \"\" : value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[118],"tindex":"29fd9890-2ec1-11e6-be80-87c6125dba04","method":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (predicate == null) {\n                        throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n                    } \n                    return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(predicate);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[119],"tindex":"29fdbfa1-2ec1-11e6-be80-8bb36aec1f3a","method":{"position":"org.apache.commons.collections4.list.TransformedList:123","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            return getList().indexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[120,5,6,7,9,60,61,62],"tindex":"29fdbfa2-2ec1-11e6-be80-9f35fd4094c9","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:283","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            return node == null ? null : node.getKey();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"29fde6b3-2ec1-11e6-be80-1de6b4ebb368","method":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (predicate == null) {\n                        throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n                    } \n                    return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(predicate);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[121],"tindex":"29fde6b4-2ec1-11e6-be80-d3c024645d50","method":{"position":"org.apache.commons.collections4.SplitMapUtils:184","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[122,123],"tindex":"29fe0dc5-2ec1-11e6-be80-2d216aa09911","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:298","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(contains(object))) {\n                decorated().add(object);\n                java.util.List<E>.add(index, object);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[124,125,126,127],"tindex":"29fe0dc6-2ec1-11e6-be80-31c8ba0d89d0","method":{"position":"org.apache.commons.collections4.MapUtils:915","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void verbosePrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (label != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"label"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272],"tindex":"29fe0dc7-2ec1-11e6-be80-41f63027b3b0","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key == null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[273,274,275,276,277,278],"tindex":"29fe34d8-2ec1-11e6-be80-252b52f6b688","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:143","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake buildSnake(final int start, final int diag, final int end1, final int end2) {\n    if (end2 < 0) {\n        {\n            int int = start;\n            while ((((end - diag) < end2) && (end < end1)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(end), java.util.List<T>.get((end - diag))))) {\n                ++end;\n            }\n            return new org.apache.commons.collections4.sequence.SequencesComparator.Snake(start , end , diag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtBinaryOperatorImpl","sourcecode":"previous == null"},"failures":[279,185,193,280,281,197,198,199,200,201,202,282,204,207,283,284,285,286,287,288,289,215,216,217,290,291,219,220,221,222,223,224,292,293,266,294,295],"tindex":"29fe5be9-2ec1-11e6-be80-e521f049d9e6","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:298","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (previous == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null;\n            super.removeEntry(entry, hashIndex, previous);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"previous":"previous"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[296],"tindex":"29fe82fa-2ec1-11e6-be80-bb96a9001e57","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:91","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[297],"tindex":"29fe82fb-2ec1-11e6-be80-e904cb798731","method":{"position":"org.apache.commons.collections4.functors.AndPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate1 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.AndPredicate<T>(predicate1 , predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"29fe82fc-2ec1-11e6-be80-0f643995336f","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:255","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if (coll.contains(it.next())) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[298,299,300,301,302,303,109,304,305,306,307,308,309,310,311,312,114,115,116,117,313,314],"tindex":"29feaa0d-2ec1-11e6-be80-055d50ddaaf3","method":{"position":"org.apache.commons.collections4.list.TreeList:452","type":"CtMethodImpl","sourcecode":"void toArray(final java.lang.Object[] array, final int index) {\n    if (index < 0) {\n        {\n            array[index] = E;\n            if ((getLeftSubTree()) != null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n            if ((getRightSubTree()) != null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"29feaa0e-2ec1-11e6-be80-494e26d6b794","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:542","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V set(final int index, final V value) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.setValue(index, value);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[],"tindex":"29fed11f-2ec1-11e6-be80-8b36f1a77406","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next(), 1);\n                changed = changed || added;\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"29fed120-2ec1-11e6-be80-1bbef4210369","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:180","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().retainAll(coll);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[315,316],"tindex":"29fed121-2ec1-11e6-be80-0ffad4a64865","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:400","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return get(java.util.List<K>.get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"29fef832-2ec1-11e6-be80-6decf6c74915","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:336","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return false;\n            } \n            return coll.contains(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[],"tindex":"29fef833-2ec1-11e6-be80-1f33f9f70a15","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1004","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            rangeCheck(index, ((int) + 1));\n            final int int = coll.size();\n            if (cSize == 0) {\n                return false;\n            } \n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.addAll(((int) + index), coll);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            int += cSize;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[42,85],"tindex":"29fef834-2ec1-11e6-be80-25186052a073","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1511","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Set) {\n                {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                    return (lookupValue(obj)) != null;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"29ff1f45-2ec1-11e6-be80-8fb538788c57","method":{"position":"org.apache.commons.collections4.MapUtils:782","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key, final int defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return defaultValue;\n            } \n            return integerObject.intValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"29ff1f46-2ec1-11e6-be80-779e402a4f08","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[317],"tindex":"29ff4657-2ec1-11e6-be80-9ffffb3fa700","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((transformers.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(transformers);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[318],"tindex":"29ff4658-2ec1-11e6-be80-df4cbc95ca24","method":{"position":"org.apache.commons.collections4.CollectionUtils:663","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection != null) && (closure != null)) {\n                for (final T T : collection) {\n                    closure.execute(element);\n                }\n            } \n            return closure;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[1,2,3,4,120,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"29ff4659-2ec1-11e6-be80-cf032bea104b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1243","type":"CtMethodImpl","sourcecode":"private static void checkKeyAndValue(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356],"tindex":"29ff6d6a-2ec1-11e6-be80-c11df89ebe47","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:140","type":"CtMethodImpl","sourcecode":"static boolean compare(final java.lang.Object a, final java.lang.Object b) {\n    if ((a == null) || (b == null)) {\n        {\n            return a == null ? b == null : a.equals(b);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[20,21,22,23,24,25,27,28,31,32,17,357,358,359,360,70,71,73,74,75,77,67,361,362],"tindex":"29ff6d6b-2ec1-11e6-be80-ef62ea49f522","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1322","type":"CtMethodImpl","sourcecode":"private boolean doEquals(final java.lang.Object obj, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                try {\n                    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = getMapIterator(dataElement) ; it.hasNext() ; ) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        final java.lang.Object java.lang.Object = it.getValue();\n                        if ((value.equals(other.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                } catch (final java.lang.ClassCastException ex) {\n                    return false;\n                } catch (final java.lang.NullPointerException ex) {\n                    return false;\n                }\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:939","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"29ff947c-2ec1-11e6-be80-919c36b607e8","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:171","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[363],"tindex":"29ff947d-2ec1-11e6-be80-9f959e51627a","method":{"position":"org.apache.commons.collections4.CollectionUtils:1717","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> synchronizedCollection(final java.util.Collection<C> collection) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            return org.apache.commons.collections4.collection.SynchronizedCollection.synchronizedCollection(collection);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[364],"tindex":"29ff947e-2ec1-11e6-be80-2bfe0b5924be","method":{"position":"org.apache.commons.collections4.IteratorUtils:412","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end) {\n    if (start == end) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start , end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end","end":"start"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[365],"tindex":"29ffbb8f-2ec1-11e6-be80-fbbf83d25297","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:134","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[366,367,368,121,369,370,371,372],"tindex":"29ffbb90-2ec1-11e6-be80-d36370aa23a7","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:90","type":"CtMethodImpl","sourcecode":"public static <J, K, U, V>org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super J, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super U, ? extends V> valueTransformer) {\n    if (map == null) {\n        {\n            return new org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>(map , keyTransformer , valueTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"29ffbb91-2ec1-11e6-be80-b3a636868621","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[373,374,375,376],"tindex":"29ffe2a2-2ec1-11e6-be80-93e367a64d27","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:208","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = java.util.List<K>.indexOf(key);\n            if (index > 0) {\n                return java.util.List<K>.get((index - 1));\n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"29ffe2a3-2ec1-11e6-be80-11df1943d697","method":{"position":"org.apache.commons.collections4.MapUtils:446","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Byte getByte(final java.util.Map<? super K, ?> map, final K key, final java.lang.Byte defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[377],"tindex":"29ffe2a4-2ec1-11e6-be80-e933c5789e8f","method":{"position":"org.apache.commons.collections4.BagUtils:116","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.PredicatedBag.predicatedBag(bag, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[378],"tindex":"29ffe2a5-2ec1-11e6-be80-ed60f0887dd8","method":{"position":"org.apache.commons.collections4.QueueUtils:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(queue);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[317],"tindex":"2a0009b6-2ec1-11e6-be80-cfa156b7aa6d","method":{"position":"org.apache.commons.collections4.TransformerUtils:208","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if (transformers == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[317],"tindex":"2a0009b7-2ec1-11e6-be80-85ffca5c2a80","method":{"position":"org.apache.commons.collections4.TransformerUtils:192","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[379,380,381,382],"tindex":"2a0009b8-2ec1-11e6-be80-5396952f824e","method":{"position":"org.apache.commons.collections4.MapUtils:1204","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        {\n            return (map == null) || (map.isEmpty());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"2a0009b9-2ec1-11e6-be80-ede3e640f3cd","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:178","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            return (lookupValue(value)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"2a0030ca-2ec1-11e6-be80-5d219f63f0c9","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:272","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<E>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[],"tindex":"2a0030cb-2ec1-11e6-be80-15dee95cbb52","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1511","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Set) {\n                {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                    return (lookupValue(obj)) != null;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[383,384],"tindex":"2a0057dc-2ec1-11e6-be80-291c98b481fa","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[385,386,387,388],"tindex":"2a0057dd-2ec1-11e6-be80-61169a37278a","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:193","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = java.util.List<K>.indexOf(key);\n            if ((index >= 0) && (index < ((size()) - 1))) {\n                return java.util.List<K>.get((index + 1));\n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:85","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[],"tindex":"2a0057de-2ec1-11e6-be80-87cef25b0c51","method":{"position":"org.apache.commons.collections4.IteratorUtils:824","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator.hasNext()) {\n        {\n            return org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtBinaryOperatorImpl","sourcecode":"count != null"},"failures":[389,390,391,392],"tindex":"2a007eef-2ec1-11e6-be80-0752e7f638a5","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:93","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().remove(object, count);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"2a007ef0-2ec1-11e6-be80-bfd6a918503e","method":{"position":"org.apache.commons.collections4.BagUtils:149","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.CollectionBag.collectionBag(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[393],"tindex":"2a007ef1-2ec1-11e6-be80-f316647bcd77","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                changed |= remove(o);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,128,436,129,437,438,439,440,441,442,130,131,443,132,133,444,445,134,135,446,447,136,137,448,449,450,451,452,453,138,139,140,454,455,456,457,141,458,459,142,143,144,145,146,147,460,461,462,463,464,465,148,149,466,150,151,467,468,152,153,469,470,154,155,471,472,473,474,475,476,156,157,158,477,478,479,480,159,481,482,160,161,162,163,164,165,483,484,485,486,166,487,488,489,490,491,492,493,494,495,496,167,168,497,169,170,498,499,171,172,500,501,173,174,502,503,504,505,506,507,175,176,177,508,509,510,511,178,512,513,179,180,181,182,183,184,514,515,226,227,516,517,518,519,228,229,520,230,231,521,522,232,233,523,524,234,235,525,526,527,528,529,530,236,237,238,531,532,533,534,239,535,536,240,241,242,243,244,245,537,538,539,540,541,542,543,544,545,246,247,546,248,249,547,548,250,251,549,550,252,253,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,254,572,107],"tindex":"2a00a602-2ec1-11e6-be80-dfe62d813f1c","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:548","type":"CtMethodImpl","sourcecode":"protected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if ((entry.getValue()) == null) {\n        {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"2a00a603-2ec1-11e6-be80-6108667b9725","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1874","type":"CtMethodImpl","sourcecode":"private void setRight(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:98","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) == 0"},"failures":[573],"tindex":"2a00cd14-2ec1-11e6-be80-d3f27dfbe43c","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:92","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> map) {\n    if ((map.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n            } \n            if ((map.size()) == 0) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = map.remove(null);\n            final int int = map.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<? super I>[] org.apache.commons.collections4.Predicate<? super I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> : map.entrySet()) {\n                preds[i] = entry.getKey();\n                transformers[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(false , preds , transformers , defaultTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[3,10,20,21,22,23,24,25,26,27,28,31,32,42,45,46,49,50,51,52,53,17,360,574,58,65,70,71,73,74,75,76,77,94,95,67],"tindex":"2a00cd15-2ec1-11e6-be80-b54fd6055042","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:681","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> leastNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getLeft(dataElement)) != null) {\n                    rval = rval.getLeft(dataElement);\n                }\n            } \n            return rval;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"2a00f426-2ec1-11e6-be80-15ab91ada122","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:255","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return doRemoveKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[575,576],"tindex":"2a00f427-2ec1-11e6-be80-093acc46043c","method":{"position":"org.apache.commons.collections4.list.TreeList:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index).getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:55","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,425,621,622,457,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,480,511,651,652,653,654,655,656,281,291,534,657,658,659,660,661,662,663,664,665,666,667,563,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,45,683,684,685,686,88,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,318,770,771,772,773,774,775,363,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804],"tindex":"2a011b38-2ec1-11e6-be80-ff169e6bb128","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:54","type":"CtMethodImpl","sourcecode":"public static <T>java.util.Collection<T> unmodifiableCollection(final java.util.Collection<? extends T> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Collection<T> java.util.Collection<T> = ((java.util.Collection<T>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableCollection<T>(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[805,806,807,808],"tindex":"2a011b39-2ec1-11e6-be80-0553025d6f81","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:76","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((preds.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(preds[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(preds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"2a011b3a-2ec1-11e6-be80-0f119dc44858","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"2a01424b-2ec1-11e6-be80-5746e699681e","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1043","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this, index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[809],"tindex":"2a01424c-2ec1-11e6-be80-95462f2ccd27","method":{"position":"org.apache.commons.collections4.PredicateUtils:337","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[810,811,812,813,814,815],"tindex":"2a01424d-2ec1-11e6-be80-effc6d859f32","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry"},"failures":[],"tindex":"2a01695e-2ec1-11e6-be80-df1d2d852203","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:130","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map.Entry) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            java.util.Map<E, ? super V>.remove(obj);\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[816,817,814,818,819,820,821,822,823,824],"tindex":"2a01695f-2ec1-11e6-be80-e3d5989e5ce0","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.CollectionBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[825,826,827,828,829,830,831,832,807,833,834,835,836,837,838,839,840,841,842,842,843,844,844,845,846,847,848,573],"tindex":"2a016960-2ec1-11e6-be80-1f44812b208c","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:78","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Predicate<?>... predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n            } \n            for (int int = 0 ; i < (predicates.int) ; i++) {\n                if ((predicates[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867],"tindex":"2a019071-2ec1-11e6-be80-0d343ceaf6ae","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return true;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtBinaryOperatorImpl","sourcecode":"(collection.size()) > 0"},"failures":[],"tindex":"2a019072-2ec1-11e6-be80-89f3c20bb1d0","method":{"position":"org.apache.commons.collections4.ListUtils:352","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if ((collection.size()) > 0) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : collection) {\n                if (!(remove.contains(obj))) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[868],"tindex":"2a019073-2ec1-11e6-be80-eb9475ec92ef","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"2a01b784-2ec1-11e6-be80-bd3ccba5107a","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:542","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V set(final int index, final V value) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.setValue(index, value);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[722,724,742,779,794],"tindex":"2a01b785-2ec1-11e6-be80-a3a32e263694","method":{"position":"org.apache.commons.collections4.CollectionUtils:326","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final org.apache.commons.collections4.Predicate<O> p) {\n    if ((a == null) || (b == null)) {\n        {\n            final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>();\n            final org.apache.commons.collections4.bag.HashBag<O> org.apache.commons.collections4.bag.HashBag<O> = new org.apache.commons.collections4.bag.HashBag<O>();\n            for (final O O : b) {\n                if (p.evaluate(element)) {\n                    bag.add(element);\n                } \n            }\n            for (final O O : a) {\n                if (!(bag.remove(element, 1))) {\n                    list.add(element);\n                } \n            }\n            return list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"2a01b786-2ec1-11e6-be80-0fcd9c8d170b","method":{"position":"org.apache.commons.collections4.MapUtils:591","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean.equals(org.apache.commons.collections4.MapUtils.getBoolean(map, key));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[869,870,871,872,873,874,875,876,877,878,879,880,881],"tindex":"2a01de97-2ec1-11e6-be80-05d8f67d51e9","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:134","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return java.util.Map<K, V>.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[189,191,280,281,211,213,290,291],"tindex":"2a01de98-2ec1-11e6-be80-7367a217e8da","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                    if ((entry.getValue()) == null) {\n                        return true;\n                    } \n                }\n            } else {\n                for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                    if (isEqualValue(value, entry.getValue())) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[882],"tindex":"2a0205a9-2ec1-11e6-be80-63e9528717f1","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:547","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final int index) {\n    if (index < 0) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.remove(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898],"tindex":"2a0205aa-2ec1-11e6-be80-0f10593fa294","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:105","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return decorated().getCount(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[899,900,901,902,903,904,905,585,906,907,594,908,909,910,911,607,912,913,618,315,914,915,916,917,918,919,882,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,622,937,938,939,940,941,623,624,942,626,627,628,629,943,630,631,632,633,639,492,498,181,182,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,316,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,656,981,982,983,984,985,666,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,60,61,62,65,75,94,95,1004,1005,1006,878,879,880,881,1007,1008,1009,107,1010],"tindex":"2a0205ab-2ec1-11e6-be80-1b016e363efc","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:93","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:182","type":"CtBinaryOperatorImpl","sourcecode":"(valueTransformer) == null"},"failures":[950],"tindex":"2a022cbc-2ec1-11e6-be80-bfc6c2068548","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:66","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformingSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (valueTransformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"valueTransformer":"valueTransformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"2a022cbd-2ec1-11e6-be80-37e11d33d449","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:180","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"2a022cbe-2ec1-11e6-be80-4f54350ebb96","method":{"position":"org.apache.commons.collections4.IteratorUtils:566","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E>... iterators) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[1011,1012],"tindex":"2a022cbf-2ec1-11e6-be80-a917c9e94c0b","method":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.TiedMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = getValue();\n            return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028],"tindex":"2a0253d0-2ec1-11e6-be80-b1e96ceda8f4","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:132","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i++;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[1029,1030],"tindex":"2a0253d1-2ec1-11e6-be80-7574c5086d75","method":{"position":"org.apache.commons.collections4.list.TreeList:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            checkInterval(index, 0, size());\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(index , obj , null , null);\n            } else {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(index, obj);\n            }\n            (int)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[364],"tindex":"2a027ae2-2ec1-11e6-be80-a91653a11177","method":{"position":"org.apache.commons.collections4.IteratorUtils:378","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start) {\n    if (start < 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[485,166],"tindex":"2a027ae3-2ec1-11e6-be80-f78653b342fe","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:134","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"2a027ae4-2ec1-11e6-be80-a3c7dc377133","method":{"position":"org.apache.commons.collections4.MapUtils:526","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key, final java.lang.Float defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"2a02a1f5-2ec1-11e6-be80-e9032a980e1d","method":{"position":"org.apache.commons.collections4.QueueUtils:93","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            if (transformer != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.queue.TransformedQueue.transformingQueue(queue, transformer);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"2a02a1f6-2ec1-11e6-be80-43b4a113f158","method":{"position":"org.apache.commons.collections4.map.CompositeMap:133","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized void addComposited(final java.util.Map<K, V> map) throws java.lang.IllegalArgumentException {\n    if (map != null) {\n        {\n            for (int int = (java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].keySet(), map.keySet());\n                if ((intersect.size()) != 0) {\n                    if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                        throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n                    } \n                    org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i], map, intersect);\n                } \n            }\n            final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) + 1];\n            java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int);\n            temp[((temp.int) - 1)] = map;\n            org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n        }\n    } else {\n        throw new java.lang.IllegalArgumentException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1013,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1015,1058,1016,1017,1059,1018,1060,1061,1019,1062,1063,1020,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1021,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1023,1091,1024,1025,1092,1026,1093,1094,1027,1095,1096,1028,1097,1098],"tindex":"2a02c907-2ec1-11e6-be80-83dbe1d3df6e","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:215","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            return addAll(int, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[1099,1100,1101,1102],"tindex":"2a02c908-2ec1-11e6-be80-9137d378b5a4","method":{"position":"org.apache.commons.collections4.list.PredicatedList:132","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index < 0) {\n        {\n            validate(object);\n            return decorated().set(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[723],"tindex":"2a02c909-2ec1-11e6-be80-27f922e80db4","method":{"position":"org.apache.commons.collections4.CollectionUtils:1154","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final C[] elements) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final C C : elements) {\n                changed |= collection.add(element);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}