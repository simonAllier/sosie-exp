{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":751,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":708,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":494,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":828,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":446,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":466,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":603,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":400,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":74,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":289,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":784,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullValue":281,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":528,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":149,"org.apache.commons.collections4.CollectionUtilsTest.collect":6,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":197,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCanonicalFullCollectionExists":588,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":256,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":676,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":22,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":609,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":373,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":739,"org.apache.commons.collections4.CollectionUtilsTest.get":98,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":692,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":253,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":740,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":796,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":486,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":368,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":737,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":217,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":164,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":595,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":202,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":171,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":577,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":733,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":129,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":302,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":429,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":342,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":547,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":259,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":619,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":111,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":361,"org.apache.commons.collections4.CollectionUtilsTest.select":93,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullValue":335,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":657,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":538,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":762,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":362,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapHashCode":277,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":455,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":523,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":433,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":161,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":367,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":807,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":56,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":118,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":548,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapClear":341,"org.apache.commons.collections4.CollectionUtilsTest.intersection":101,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":780,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":241,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":755,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":661,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":685,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":671,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":150,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking2":478,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":264,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":142,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":574,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":68,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":165,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":343,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":852,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":592,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Other":543,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":198,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":847,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":208,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":254,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":130,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":299,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":480,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":189,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":403,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":581,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":50,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":805,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":838,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":719,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":23,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":607,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":628,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":249,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":350,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":715,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":388,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":792,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":66,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":331,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":521,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":398,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":139,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":495,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":551,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":562,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":566,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":16,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":470,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":580,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":4,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":390,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":553,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":226,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":339,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":759,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":774,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":104,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":39,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCanonicalEmptyCollectionExists":431,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":14,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull":611,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":346,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":180,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":615,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":42,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":168,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":632,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":330,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":624,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":49,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":11,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesIteratorRemoveChangesMap":70,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":242,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":645,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":849,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":209,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":137,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":243,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetIteratorRemoveChangesMap":334,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":385,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":397,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":321,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":285,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":222,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":345,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":754,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":128,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":704,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":606,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":439,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":395,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":292,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":511,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":200,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":666,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":571,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":377,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":641,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":729,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":258,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":37,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":665,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":492,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":706,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":207,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":687,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":453,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":204,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":353,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":845,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":777,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":269,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":773,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":703,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":337,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":844,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":504,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":309,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":491,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":391,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":749,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":316,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":818,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":46,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":218,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":147,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNull":610,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":443,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":750,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":795,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":372,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":836,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":376,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":550,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":791,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":69,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":655,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":233,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":320,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":697,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":344,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":561,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":536,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":45,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":136,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":88,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectEqualsSelf":427,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":806,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":407,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":240,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":441,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":786,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":252,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testDecorateFactory":110,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":656,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":266,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":746,"org.apache.commons.collections4.map.SingletonMapTest.testValuesRemoveChangesMap":767,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":65,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":271,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":679,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":81,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":7,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":21,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":375,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":63,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":643,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":633,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":311,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":184,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":664,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":422,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":727,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":765,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":24,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":839,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":156,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":520,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":500,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":487,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":636,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":693,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":294,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":374,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":683,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":618,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":790,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":768,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":43,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":237,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":166,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":61,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":406,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":3,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":109,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":502,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":711,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":90,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":347,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":465,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":530,"org.apache.commons.collections4.map.HashedMapTest.testClone":32,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":51,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":667,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":590,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":799,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":333,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":554,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":146,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":144,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":469,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":194,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":366,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":232,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":714,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":519,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":157,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":370,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":92,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":787,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":701,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":270,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":620,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":158,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":652,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":640,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":507,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":179,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":626,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":594,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":97,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":380,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":512,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":257,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":508,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":206,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":408,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":804,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":646,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":627,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":365,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":113,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":53,"org.apache.commons.collections4.list.TreeListTest.testBug35258":616,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":772,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":328,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":145,"org.apache.commons.collections4.map.LinkedMapTest.testClone":19,"org.apache.commons.collections4.ListUtilsTest.testSelect":57,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCanonicalEmptyCollectionExists":587,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":308,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":639,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":79,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":106,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":326,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":327,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapClear":287,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":382,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":778,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":244,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":670,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":552,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":743,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetIteratorRemoveChangesMap":280,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":384,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":383,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":781,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":816,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":48,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":221,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":275,"org.apache.commons.collections4.SetUtilsTest.testEquals":108,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":290,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":793,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":225,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":291,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":323,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":608,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":159,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":213,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":822,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":820,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":135,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":216,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":215,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":214,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":235,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":801,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testDecorate":544,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":842,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":60,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":122,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":297,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":567,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":694,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":282,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":797,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":223,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":448,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":855,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":678,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":354,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":80,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":231,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":815,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":814,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":557,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":813,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":99,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":314,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":702,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullKey":340,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectEqualsSelf":583,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking":485,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":163,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":477,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":379,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":721,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":192,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":677,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":435,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":630,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":556,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":54,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":425,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":468,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":245,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":246,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":247,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":357,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":731,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":229,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":295,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":126,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":563,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":307,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":524,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":155,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":593,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":833,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":742,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":371,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":94,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":578,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":211,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":141,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":288,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":276,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":416,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":459,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":336,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":537,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":681,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":764,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":238,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":363,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":153,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":283,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":454,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":174,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":389,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":73,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":540,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":167,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":785,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":127,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":230,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":263,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":76,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":107,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":757,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":103,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":170,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testBagEqualsSelf":413,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":329,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":637,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":423,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":154,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":707,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":753,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":20,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":86,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":319,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":445,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":514,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":318,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":26,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":352,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsSelfHashCode":426,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":654,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":559,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":75,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":236,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":545,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSimpleSerialization":586,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":498,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":31,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":351,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":779,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":565,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":417,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":738,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSimpleSerialization":430,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":674,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":298,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":386,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":414,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":515,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":598,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":599,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":597,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":349,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":467,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":775,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":817,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":560,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":589,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":91,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":531,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":829,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":444,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":680,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":356,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":663,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":162,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":570,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":591,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":510,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":848,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":188,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":310,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":463,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":748,"org.apache.commons.collections4.list.UnmodifiableListTest.testDecorateFactory":527,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":199,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":526,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":420,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":651,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":227,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":324,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":843,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":300,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":394,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":35,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":449,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":830,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":747,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":604,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":809,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":802,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":851,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":405,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":409,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":437,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":513,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":846,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":529,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":724,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":239,"org.apache.commons.collections4.CollectionUtilsTest.union":100,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":248,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":421,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":644,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":234,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":696,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":758,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":558,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":837,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":482,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":821,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":596,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":653,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":506,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":669,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":396,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":690,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":133,"org.apache.commons.collections4.list.TreeListTest.testRemove":613,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":2,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":827,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":261,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":0,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":638,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":752,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":621,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":265,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":794,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":542,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":503,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":730,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":424,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":622,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":378,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":474,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":115,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":116,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":428,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":642,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":695,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":132,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":602,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":741,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":601,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":600,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":564,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":186,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":461,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":672,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":359,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":412,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":25,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":84,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":83,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":717,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":284,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":568,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":138,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":675,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":364,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":770,"org.apache.commons.collections4.list.TreeListTest.testListEquals":635,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":660,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":682,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":260,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":803,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":152,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":419,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":251,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":658,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":659,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":575,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":193,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":662,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":273,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":274,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":272,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":625,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":831,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Map":541,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":381,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":72,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":782,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":490,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":725,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":460,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":169,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullKey":286,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEqualsNull":584,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":673,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":716,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":516,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":325,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":535,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":788,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":549,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":735,"org.apache.commons.collections4.map.SingletonMapTest.testClone":766,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":824,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsContract":585,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":761,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":496,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":177,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":176,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":722,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":317,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":728,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":196,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":255,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":776,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":484,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":650,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":28,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":452,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":617,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":95,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":579,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":151,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":546,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":399,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":33,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":29,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":854,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":853,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":173,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":713,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":505,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking":476,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":195,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":303,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":576,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":834,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":745,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":348,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":710,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":358,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":712,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":77,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":447,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":783,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":121,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":210,"org.apache.commons.collections4.CollectionUtilsTest.testSize_List":539,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":647,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":268,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":771,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":698,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":634,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":850,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":34,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":87,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":89,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":451,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":250,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":178,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":185,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":688,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":387,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":472,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":649,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":726,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":763,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":720,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":30,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":124,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":605,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":125,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":117,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":825,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":462,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":473,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":102,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":572,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":832,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":304,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":306,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":305,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":440,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":840,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":732,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":436,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":573,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":489,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":187,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":631,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":205,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":522,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":623,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":668,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":96,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":112,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":369,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":534,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":224,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":203,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":684,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":393,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":15,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":134,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":479,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":228,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":40,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":410,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":800,"org.apache.commons.collections4.set.CompositeSetTest.testContains":648,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":355,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":488,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":458,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":835,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":481,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":438,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":689,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":826,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":614,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":464,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":55,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":105,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":699,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":67,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":392,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":411,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":191,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":686,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":404,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":219,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":798,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":212,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":267,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":52,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":734,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsSelfHashCode":582,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":181,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":183,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":182,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":279,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":450,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":278,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":13,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":71,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":360,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":332,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":131,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":220,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":293,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":808,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":709,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":760,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":744,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":612,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":823,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":315,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":700,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":555,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":82,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":789,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":160,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":119,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":415,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":810,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":811,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":812,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":533,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":756,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":691,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPut":296,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":175,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":532,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":471,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":525,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":819,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":148,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":705,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":36,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":493,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":457,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":736,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":120,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":114,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":201,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":313,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":172,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":434,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":301,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":497,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":338,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":262,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":509,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":402,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":517,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":78,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":143,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":401,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":718,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":723,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":501,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":85,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":41,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":499,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":475,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":190,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":841,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCanonicalFullCollectionExists":432,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":442,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":312,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":769,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":629,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":518,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":569,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":483,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":64,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":418,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":456,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":322},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[0,1,2,3,4,5],"tindex":"e29a20b1-2e7d-11e6-aab9-8d6ca2c451cd","method":{"position":"org.apache.commons.collections4.map.LazyMap:160","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final K K = ((K)(key));\n                final V V = org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(castKey);\n                java.util.Map<K, V>.put(castKey, value);\n                return value;\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[],"tindex":"e29b3222-2e7d-11e6-aab9-495ed9c66ce3","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:645","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.map.ListOrderedMap.EntrySetView.this)) {\n                return true;\n            } \n            return getEntrySet().equals(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1039","type":"CtBinaryOperatorImpl","sourcecode":"inputCollection != null"},"failures":[6],"tindex":"e29b5933-2e7d-11e6-aab9-fbcf5209f475","method":{"position":"org.apache.commons.collections4.CollectionUtils:1037","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.lang.Iterable<? extends I> inputCollection, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if (inputCollection != null) {\n        {\n            if (inputCollection != null) {\n                return org.apache.commons.collections4.CollectionUtils.collect(inputCollection.iterator(), transformer, outputCollection);\n            } \n            return outputCollection;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputCollection":"inputCollection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:167","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"e29b8044-2e7d-11e6-aab9-13d0cb8aae50","method":{"position":"org.apache.commons.collections4.list.TransformedList:79","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.TransformedList<E> org.apache.commons.collections4.list.TransformedList<E> = new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n            if (((transformer != null) && (list != null)) && ((list.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(list.toArray()));\n                list.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[7],"tindex":"e29b8045-2e7d-11e6-aab9-ed419803c42e","method":{"position":"org.apache.commons.collections4.functors.ForClosure:51","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (count > 3) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((count <= 0) || (closure == null)) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            if (count == 1) {\n                return ((org.apache.commons.collections4.Closure<E>)(closure));\n            } \n            return new org.apache.commons.collections4.functors.ForClosure<E>(count , closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtBinaryOperatorImpl","sourcecode":"(node.getRight(dataElement)) != null"},"failures":[8,9,10,11,12],"tindex":"e29ba756-2e7d-11e6-aab9-a3537be8ead6","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1908","type":"CtMethodImpl","sourcecode":"private void swapColors(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            if ((node.getRight(dataElement)) != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n                    node.boolean[][dataElement.ordinal()] ^= boolean[][dataElement.ordinal()];\n                    boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"e29bf577-2e7d-11e6-aab9-b343e305d8bd","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[],"tindex":"e29c1c88-2e7d-11e6-aab9-0b7cd0898ade","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:475","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 != null) {\n        {\n            if (key1 != null) {\n                {\n                    final int int = hash(key1, key2, key3, key4);\n                    final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n                    while (entry != null) {\n                        if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                            final V V = entry.getValue();\n                            decorated().removeMapping(entry, index, previous);\n                            return oldValue;\n                        } \n                        previous = entry;\n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n                    }\n                    return null;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"e29c6aa9-2e7d-11e6-aab9-1f5132492fed","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:179","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106],"tindex":"e29cb8ca-2e7d-11e6-aab9-c911ffaa027a","method":{"position":"org.apache.commons.collections4.CollectionUtils:438","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Map<O, java.lang.Integer> getCardinalityMap(final java.lang.Iterable<? extends O> coll) {\n    if (coll instanceof java.util.Set<?>) {\n        {\n            final java.util.Map<O, java.lang.Integer> java.util.Map<O, java.lang.Integer> = new java.util.HashMap<O, java.lang.Integer>();\n            for (final O O : coll) {\n                final java.lang.Integer java.lang.Integer = count.get(obj);\n                if (c == null) {\n                    count.put(obj, java.lang.Integer.valueOf(1));\n                } else {\n                    count.put(obj, java.lang.Integer.valueOf(((c.intValue()) + 1)));\n                }\n            }\n            return count;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[],"tindex":"e29d06eb-2e7d-11e6-aab9-970be89c4618","method":{"position":"org.apache.commons.collections4.CollectionUtils:968","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if ((inputCollection != null) && (predicate != null)) {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (!(predicate.evaluate(item))) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[107],"tindex":"e29d2dfc-2e7d-11e6-aab9-bb48b1ce8942","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:117","type":"CtBinaryOperatorImpl","sourcecode":"set1 == set2"},"failures":[108],"tindex":"e29d2dfd-2e7d-11e6-aab9-5fa134a1b429","method":{"position":"org.apache.commons.collections4.SetUtils:116","type":"CtMethodImpl","sourcecode":"public static boolean isEqualSet(final java.util.Collection<?> set1, final java.util.Collection<?> set2) {\n    if (set2 == set1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set1 == set2) {\n                return true;\n            } \n            if (((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))) {\n                return false;\n            } \n            return set1.containsAll(set2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"set1","set1":"set2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"e29d550e-2e7d-11e6-aab9-afb2a0c641e4","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:215","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(int, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"e29d550f-2e7d-11e6-aab9-cfcb43292b8e","method":{"position":"org.apache.commons.collections4.set.TransformedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set == null) {\n        {\n            if (transformer == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final org.apache.commons.collections4.set.TransformedSet<E> org.apache.commons.collections4.set.TransformedSet<E> = new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n                    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final E[] E[] = ((E[])(set.toArray()));\n                        set.clear();\n                        for (final E E : values) {\n                            decorated.decorated().add(transformer.transform(value));\n                        }\n                    } \n                    return decorated;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[],"tindex":"e29d7b20-2e7d-11e6-aab9-2fa49c1adfc6","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[109,110],"tindex":"e29d7b21-2e7d-11e6-aab9-916e2d8b44dd","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Queue<E> java.util.Queue<E> = ((java.util.Queue<E>)(queue));\n                return tmpQueue;\n            } \n            return new org.apache.commons.collections4.queue.UnmodifiableQueue<E>(queue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[111,112,113],"tindex":"e29da232-2e7d-11e6-aab9-a79d1c961e09","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"e29da233-2e7d-11e6-aab9-c75d21d4689c","method":{"position":"org.apache.commons.collections4.MapUtils:1542","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.PredicatedSortedMap.predicatedSortedMap(map, keyPred, valuePred);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"e29da234-2e7d-11e6-aab9-53117ebef2e3","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        {\n            if (coll == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"e29da235-2e7d-11e6-aab9-ab49e28c74d8","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:316","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            if (nCopies <= 0) {\n                return false;\n            } \n            (int)++;\n            if (nCopies < (mut.int)) {\n                mut.int -= nCopies;\n                int -= nCopies;\n            } else {\n                java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n                int -= mut.int;\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[114,115],"tindex":"e29dc946-2e7d-11e6-aab9-0b756f0aaaa0","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1054","type":"CtMethodImpl","sourcecode":"protected void rangeCheck(final int index, final int beyond) {\n    if (index > 0) {\n        {\n            if ((index < 0) || (index >= beyond)) {\n                throw new java.lang.IndexOutOfBoundsException(((((\"Index '\" + index) + \"' out of bounds for size '\") + (int)) + \"'\"));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139],"tindex":"e29dc947-2e7d-11e6-aab9-6f94d50406a3","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:568","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.KeySetView.this.org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object>.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,9,155,156],"tindex":"e29df058-2e7d-11e6-aab9-3142f220133d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:681","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> leastNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getLeft(dataElement)) != null) {\n                    rval = rval.getLeft(dataElement);\n                }\n            } \n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"e29df059-2e7d-11e6-aab9-9d2afff31831","method":{"position":"org.apache.commons.collections4.ListUtils:75","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> defaultIfNull(final java.util.List<T> list, final java.util.List<T> defaultList) {\n    if (defaultList == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return list == null ? defaultList : list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"defaultList"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"e29df05a-2e7d-11e6-aab9-894fbcb85d11","method":{"position":"org.apache.commons.collections4.MapUtils:1329","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.FixedSizeMap.fixedSizeMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"e29e176b-2e7d-11e6-aab9-6de2cf77a4b9","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:158","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[7],"tindex":"e29e176c-2e7d-11e6-aab9-657ab90ebcde","method":{"position":"org.apache.commons.collections4.ClosureUtils:113","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (closure == null) {\n        {\n            return org.apache.commons.collections4.functors.ForClosure.forClosure(count, closure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"e29e176d-2e7d-11e6-aab9-278a3cafb5c5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:780","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getGrandParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getParent(getParent(node, dataElement), dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[157,158,159,60,160,26,29,161,65,162,163,164,66,165,166,167,73,168,169,170,77,171,172,173,174,81],"tindex":"e29edabe-2e7d-11e6-aab9-39e2b83c30d9","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                    while (entry != null) {\n                        if ((entry.getValue()) == null) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            } else {\n                for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                    while (entry != null) {\n                        if (isEqualValue(value, entry.getValue())) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"e29f01cf-2e7d-11e6-aab9-ffe724ff3d43","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:69","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Predicate<T> coerce(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.Predicate<T>)(predicate));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[175],"tindex":"e29f28e0-2e7d-11e6-aab9-37170c0eed5e","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[176,177,178,179,180,181,182,183,184,185,186,187,188,189,190],"tindex":"e29f28e1-2e7d-11e6-aab9-8fa33cf8b1b1","method":{"position":"org.apache.commons.collections4.map.CompositeMap:198","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[191,192,193,194,195,196,197,198,199,200],"tindex":"e29f28e2-2e7d-11e6-aab9-177e8eaeaf84","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object k) {\n    if (k == null) {\n        {\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(k);\n            return entry != null ? entry.getValue() : null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"e29f4ff3-2e7d-11e6-aab9-3bc72f78da17","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        {\n            if (coll == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:55","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[201,202,203,204,205,206,140,141,207,142,143,144,145,208,146,209,210,211,212,213,214,215,216,217,218,219,46,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,51,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,71,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,79,307,308,309,310,311,312,313,314,134,315,135,316,317,136,137,318,138,319,320,321,322,323,324,139,325,326,327,328,83,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353],"tindex":"e29f4ff4-2e7d-11e6-aab9-c521364fe84d","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:54","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Set<java.util.Map.Entry<K, V>> unmodifiableEntrySet(final java.util.Set<java.util.Map.Entry<K, V>> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                return set;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableEntrySet<K, V>(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[354,355,356,357,358,359,159,360,361,18,362,363,62,364,365,366,21,22,367,368,369,370,371,372,31,161,373,374,375,164,376,377,378,167,379,380,381,382,383,384,385,174,386,387],"tindex":"e29f7705-2e7d-11e6-aab9-15e0b2486375","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:582","type":"CtMethodImpl","sourcecode":"protected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (previous != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (previous == null) {\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } else {\n                previous.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"previous"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"e29f7706-2e7d-11e6-aab9-bd5194fb50d7","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:475","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 != null) {\n        {\n            if (key1 != null) {\n                {\n                    final int int = hash(key1, key2, key3, key4);\n                    final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n                    while (entry != null) {\n                        if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                            final V V = entry.getValue();\n                            decorated().removeMapping(entry, index, previous);\n                            return oldValue;\n                        } \n                        previous = entry;\n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n                    }\n                    return null;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[388,389,390,391,392,393,394,395],"tindex":"e29f9e17-2e7d-11e6-aab9-95a11daf110e","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.remove(key);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<java.lang.Object, K>.remove(value);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:540","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[140,141,142,143,144,146,147,148,150,151,152,154,8,396,9],"tindex":"e29f9e18-2e7d-11e6-aab9-d76f1d69c883","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1815","type":"CtMethodImpl","sourcecode":"private java.util.Map.Entry<V, K> createEntry(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node) {\n    if (node == null) {\n        {\n            return new org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry<V, K>(node.getValue() , node.getKey());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[397,398,399,400,401,402],"tindex":"e29fc529-2e7d-11e6-aab9-adeffbfea9f9","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:169","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake getMiddleSnake(final int start1, final int end1, final int start2, final int end2) {\n    if ((start2 - start1) > (start2 - end2)) {\n        {\n            final int int = end1 - start1;\n            final int int = end2 - start2;\n            if ((m == 0) || (n == 0)) {\n                return null;\n            } \n            final int int = m - n;\n            final int int = n + m;\n            final int int = ((sum % 2) == 0 ? sum : sum + 1) / 2;\n            int[][(1 + offset)] = start1;\n            int[][(1 + offset)] = end1 + 1;\n            for (int int = 0 ; d <= offset ; ++d) {\n                for (int int = -d ; k <= d ; k += 2) {\n                    final int int = k + offset;\n                    if ((k == (-d)) || ((k != d) && ((int[][(i - 1)]) < (int[][(i + 1)])))) {\n                        int[][i] = int[][(i + 1)];\n                    } else {\n                        int[][i] = (int[][(i - 1)]) + 1;\n                    }\n                    int int = int[][i];\n                    int int = ((x - start1) + start2) - k;\n                    while (((x < end1) && (y < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = ++x;\n                        ++y;\n                    }\n                    if ((((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))) {\n                        if ((int[][(i - delta)]) <= (int[][i])) {\n                            return buildSnake(int[][(i - delta)], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n                for (int int = delta - d ; k <= (delta + d) ; k += 2) {\n                    final int int = (k + offset) - delta;\n                    if ((k == (delta - d)) || ((k != (delta + d)) && ((int[][(i + 1)]) <= (int[][(i - 1)])))) {\n                        int[][i] = (int[][(i + 1)]) - 1;\n                    } else {\n                        int[][i] = int[][(i - 1)];\n                    }\n                    int int = (int[][i]) - 1;\n                    int int = ((x - start1) + start2) - k;\n                    while (((x >= start1) && (y >= start2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = x--;\n                        y--;\n                    }\n                    if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n                        if ((int[][i]) <= (int[][(i + delta)])) {\n                            return buildSnake(int[][i], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n            }\n            throw new java.lang.RuntimeException(\"Internal Error\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"start1","end2":"start2","end1":"start2","start2":"end2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"e29fec3a-2e7d-11e6-aab9-199b58f4c2f8","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1908","type":"CtMethodImpl","sourcecode":"private void swapColors(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            if ((node.getRight(dataElement)) != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n                    node.boolean[][dataElement.ordinal()] ^= boolean[][dataElement.ordinal()];\n                    boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,175,426,427,428,429,430,431,432],"tindex":"e29fec3b-2e7d-11e6-aab9-d124ef4f4ca6","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = ((org.apache.commons.collections4.Bag<E>)(bag));\n                return tmpBag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableBag<E>(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[433,434,435,157,436,437,359,361,438,439,440,441,442,443,444,445,446,447,362,366,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,165,466,467,166,468,378,380,469,470,471,172,472,473,173,474,385,387],"tindex":"e2a0134c-2e7d-11e6-aab9-55ff5542bc2a","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:453","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[475],"tindex":"e2a0134d-2e7d-11e6-aab9-296369b40ab6","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[476,477,478],"tindex":"e2a03a5e-2e7d-11e6-aab9-63eecf178f7d","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:147","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:137","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.map.CompositeMap.this.mutator) == null"},"failures":[],"tindex":"e2a03a5f-2e7d-11e6-aab9-635520f9a7b9","method":{"position":"org.apache.commons.collections4.map.CompositeMap:121","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> mutator) {\n    if (mutator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> = mutator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507],"tindex":"e2a03a60-2e7d-11e6-aab9-e95f8d139c4d","method":{"position":"org.apache.commons.collections4.list.PredicatedList:94","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:540","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"e2a06171-2e7d-11e6-aab9-f9b6a4c64f3b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1959","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean[][dataElement.ordinal()] = node.boolean[][dataElement.ordinal()];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e2a06172-2e7d-11e6-aab9-c1fc603bd9bd","method":{"position":"org.apache.commons.collections4.set.CompositeSet:388","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Set<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.List<java.util.Set<E>>.remove(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:97","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"e2a06173-2e7d-11e6-aab9-61e929e45ca9","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:141","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.java.util.Iterator<? extends E> = iterator;\n            E = null;\n            boolean = false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) == null"},"failures":[],"tindex":"e2a08884-2e7d-11e6-aab9-2b96e91a0409","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:186","type":"CtMethodImpl","sourcecode":"public void setListIterator(final java.util.ListIterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            org.apache.commons.collections4.iterators.FilterListIterator.this.java.util.ListIterator<? extends E> = iterator;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[508],"tindex":"e2a08885-2e7d-11e6-aab9-a17df76e6a77","method":{"position":"org.apache.commons.collections4.map.LazyMap:81","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                {\n                    return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"e2a08886-2e7d-11e6-aab9-2156f5f4ee12","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:111","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().addAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[509,510],"tindex":"e2a0af97-2e7d-11e6-aab9-f91804289cbc","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:254","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"e2a0af98-2e7d-11e6-aab9-279c90feed32","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:169","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"e2a0af99-2e7d-11e6-aab9-f30f6b152356","method":{"position":"org.apache.commons.collections4.IteratorUtils:763","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> loopingListIterator(final java.util.List<E> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.NullPointerException(\"List must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingListIterator<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526],"tindex":"e2a0af9a-2e7d-11e6-aab9-31a797c00b3f","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:132","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i++;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[527],"tindex":"e2a0d6ab-2e7d-11e6-aab9-dbe474752610","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.List<E> java.util.List<E> = ((java.util.List<E>)(list));\n                return tmpList;\n            } \n            return new org.apache.commons.collections4.list.UnmodifiableList<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"e2a0d6ac-2e7d-11e6-aab9-9dfdabccaa93","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"e2a0fdbd-2e7d-11e6-aab9-ad0882d4ceec","method":{"position":"org.apache.commons.collections4.set.TransformedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set == null) {\n        {\n            if (transformer == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final org.apache.commons.collections4.set.TransformedSet<E> org.apache.commons.collections4.set.TransformedSet<E> = new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n                    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final E[] E[] = ((E[])(set.toArray()));\n                        set.clear();\n                        for (final E E : values) {\n                            decorated.decorated().add(transformer.transform(value));\n                        }\n                    } \n                    return decorated;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e2a0fdbe-2e7d-11e6-aab9-5728c6cb0ae0","method":{"position":"org.apache.commons.collections4.map.CompositeMap:381","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"No mutator specified\");\n            } \n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.putAll(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543],"tindex":"e2a0fdbf-2e7d-11e6-aab9-d7bc611b9392","method":{"position":"org.apache.commons.collections4.CollectionUtils:1329","type":"CtMethodImpl","sourcecode":"public static int size(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            if (object == null) {\n                return 0;\n            } \n            int int = 0;\n            if (object instanceof java.util.Map<?, ?>) {\n                total = ((java.util.Map<?, ?>)(object)).size();\n            } else if (object instanceof java.util.Collection<?>) {\n                total = ((java.util.Collection<?>)(object)).size();\n            } else if (object instanceof java.lang.Object[]) {\n                total = ((java.lang.Object[])(object)).int;\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    total++;\n                    it.next();\n                }\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    total++;\n                    it.nextElement();\n                }\n            } else {\n                try {\n                    total = java.lang.reflect.Array.getLength(object);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n            return total;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[410,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588],"tindex":"e2a124d0-2e7d-11e6-aab9-6b6eaaefe892","method":{"position":"org.apache.commons.collections4.bag.PredicatedSortedBag:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedSortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedSortedBag<E>(bag , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[589],"tindex":"e2a124d1-2e7d-11e6-aab9-0ba52e2c501b","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:447","type":"CtMethodImpl","sourcecode":"public V put(int index, final K key, final V value) {\n    if (index > 0) {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = decorated();\n            if (m.containsKey(key)) {\n                final V V = m.remove(key);\n                final int int = java.util.List<K>.indexOf(key);\n                java.util.List<K>.remove(pos);\n                if (pos < index) {\n                    index--;\n                } \n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return result;\n            } else {\n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return null;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[203,205,206,140,141,142,143,144,208,146,213,214,215,216,46,223,225,226,227,590,591,592,593,594,595,147,148,150,151,152,596,154,8,396,9,597,598,599,600,601,602,10,47,11,603,12,604,605,606],"tindex":"e2a14be2-2e7d-11e6-aab9-d74845020862","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:597","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextGreater(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getRight(dataElement)) != null) {\n                rval = leastNode(node.getRight(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getRight(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[607],"tindex":"e2a14be3-2e7d-11e6-aab9-9ff03614623f","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:56","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures, final org.apache.commons.collections4.Closure<? super E> defaultClosure) {\n    if (closures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(closures);\n            if ((predicates.int) != (closures.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and closure arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n            } \n            return new org.apache.commons.collections4.functors.SwitchClosure<E>(predicates , closures , defaultClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"e2a172f4-2e7d-11e6-aab9-091d2a408d80","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(object, 1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"e2a172f5-2e7d-11e6-aab9-75720cba8f6d","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            if (transformer == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final org.apache.commons.collections4.bag.TransformedBag<E> org.apache.commons.collections4.bag.TransformedBag<E> = new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n                    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final E[] E[] = ((E[])(bag.toArray()));\n                        bag.clear();\n                        for (final E E : values) {\n                            decorated.decorated().add(transformer.transform(value));\n                        }\n                    } \n                    return decorated;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[608,609],"tindex":"e2a172f6-2e7d-11e6-aab9-373979146ce5","method":{"position":"org.apache.commons.collections4.list.TreeList:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            checkInterval(index, 0, ((size()) - 1));\n            final E E = get(index);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(index);\n            (int)--;\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"e2a19a07-2e7d-11e6-aab9-33912db0aa85","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:586","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<V>lookup(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[610,611,612],"tindex":"e2a19a08-2e7d-11e6-aab9-a368ae235bb0","method":{"position":"org.apache.commons.collections4.CollectionUtils:1414","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return (coll == null) || (coll.isEmpty());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"e2a19a09-2e7d-11e6-aab9-c501fc497e9a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2061","type":"CtMethodImpl","sourcecode":"public V getKey(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[402],"tindex":"e2a1c11a-2e7d-11e6-aab9-637b8943ec66","method":{"position":"org.apache.commons.collections4.ListUtils:574","type":"CtMethodImpl","sourcecode":"public static java.lang.String longestCommonSubsequence(final java.lang.CharSequence a, final java.lang.CharSequence b) {\n    if ((a == null) || (a == null)) {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"CharSequence must not be null\");\n            } \n            final java.util.List<java.lang.Character> java.util.List<java.lang.Character> = org.apache.commons.collections4.ListUtils.longestCommonSubsequence(new org.apache.commons.collections4.ListUtils.CharSequenceAsList(a), new org.apache.commons.collections4.ListUtils.CharSequenceAsList(b));\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            for (java.lang.Character java.lang.Character : lcs) {\n                sb.append(ch);\n            }\n            return sb.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646],"tindex":"e2a1c11b-2e7d-11e6-aab9-c9c4205ba50e","method":{"position":"org.apache.commons.collections4.list.TreeList:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index).getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[647,648,649,650,651,652,653,654,655,656,657,658,659,660,187,661,662,663,664,665,190,666,667],"tindex":"e2a1c11c-2e7d-11e6-aab9-d75c7c78791f","method":{"position":"org.apache.commons.collections4.set.CompositeSet:127","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"e2a1e82d-2e7d-11e6-aab9-3de089a2a252","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[668,669],"tindex":"e2a1e82e-2e7d-11e6-aab9-93c238cbf5cd","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:344","type":"CtMethodImpl","sourcecode":"public java.lang.Object remove(final int index) {\n    if (index < 0) {\n        {\n            final java.lang.Object java.lang.Object = java.util.List<E>.remove(index);\n            remove(obj);\n            return obj;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:317","type":"CtBinaryOperatorImpl","sourcecode":"cursor == null"},"failures":[670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,114,115,700,701,702,703,704,705,706,707,708,519,709,710,711,712,713,714,715,716,717,718,719,720,520,521,721,522,523,722,524,723,724,525,725,726,727],"tindex":"e2a1e82f-2e7d-11e6-aab9-4d1ceeba1bc1","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:271","type":"CtMethodImpl","sourcecode":"protected void registerCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                if ((ref.get()) == null) {\n                    it.remove();\n                } \n            }\n            java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.add(new java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>(cursor));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[],"tindex":"e2a20f40-2e7d-11e6-aab9-05b3bc575bed","method":{"position":"org.apache.commons.collections4.IteratorUtils:744","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> loopingIterator(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingIterator<E>(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[728,729,730,731],"tindex":"e2a20f41-2e7d-11e6-aab9-318ce493c665","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = decorated().remove(object);\n            if (result) {\n                java.util.List<E>.remove(object);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[732,733,201,202,203,204,734,735,736,737,738,205,206,739,140,141,207,142,143,144,145,208,146,740,210,211,212,213,214,215,216,217,218,219,46,220,221,222,223,224,225,226,227,741,742,590,743,744,745,746,747,748,749,591,750,751,592,593,594,595,752,147,148,149,150,151,152,153,596,154,753,8,754,755,396,9,756,757,758,597,598,599,600,601,602,10,759,760,47,11,761,762,603,12,604,605,606],"tindex":"e2a20f42-2e7d-11e6-aab9-e12e599b76da","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:547","type":"CtMethodImpl","sourcecode":"private K doRemoveValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getKey();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[763,764,765,381],"tindex":"e2a23653-2e7d-11e6-aab9-616d4ed6ef2e","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:384","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((multi.size()) == 3) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key3"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"e2a23654-2e7d-11e6-aab9-cb6951fb6c0e","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            if (transformer == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final org.apache.commons.collections4.bag.TransformedBag<E> org.apache.commons.collections4.bag.TransformedBag<E> = new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n                    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final E[] E[] = ((E[])(bag.toArray()));\n                        bag.clear();\n                        for (final E E : values) {\n                            decorated.decorated().add(transformer.transform(value));\n                        }\n                    } \n                    return decorated;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"e2a25d65-2e7d-11e6-aab9-e736a307b0cf","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:350","type":"CtMethodImpl","sourcecode":"private boolean selectR(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h, final int bitIndex, final K key, final int lengthInBits, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.Reference<java.util.Map.Entry<K, V>> reference) {\n    if (lengthInBits == 0) {\n        {\n            if ((h.int) <= bitIndex) {\n                if (!(h.isEmpty())) {\n                    reference.set(h);\n                    return false;\n                } \n                return true;\n            } \n            if (!(isBitSet(key, h.int, lengthInBits))) {\n                if (selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference)) {\n                    return selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference);\n                } \n            } else {\n                if (selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference)) {\n                    return selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference);\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[766,266,271,767],"tindex":"e2a25d66-2e7d-11e6-aab9-6fc2f810e008","method":{"position":"org.apache.commons.collections4.map.SingletonMap:231","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return isEqualValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[202,204,742,743],"tindex":"e2a28477-2e7d-11e6-aab9-07ebdc08b08e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:698","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> greatestNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getRight(dataElement)) != null) {\n                    rval = rval.getRight(dataElement);\n                }\n            } \n            return rval;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"e2a28478-2e7d-11e6-aab9-8566e3a017ed","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:59","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.MapBackedSet.mapBackedSet(map, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[768,769,770,354,355,356,357,358,359,159,60,360,771,361,16,17,772,362,363,62,364,365,366,21,22,367,459,773,63,774,775,460,461,462,776,378,167,73,379,777,380,34,35,778,779,385,174,81,386,780,387,44,45,781],"tindex":"e2a28479-2e7d-11e6-aab9-bfa976c9a71c","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:337","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(java.lang.Object key) {\n    if (key != null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            final int int = hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    final V V = entry.getValue();\n                    removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[782],"tindex":"e2a2ab8a-2e7d-11e6-aab9-bf1a6d2712a3","method":{"position":"org.apache.commons.collections4.ClosureUtils:145","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> doWhileClosure(final org.apache.commons.collections4.Closure<? super E> closure, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(iterator.hasPrevious()) == false"},"failures":[],"tindex":"e2a2ab8b-2e7d-11e6-aab9-4b3ed9fd3575","method":{"position":"org.apache.commons.collections4.IteratorUtils:446","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<E> iterator) {\n    if ((iterator.hasPrevious()) == false) {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,198,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,56,819,820,821,822,823,199,200,824],"tindex":"e2a2d29c-2e7d-11e6-aab9-03347c062a1f","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:56","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int bitIndex(final java.lang.String key, final int offsetInBits, final int lengthInBits, final java.lang.String other, final int otherOffsetInBits, final int otherLengthInBits) {\n    if (otherOffsetInBits == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = true;\n            if (((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n            } \n            final int int = offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = otherOffsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = beginIndex1 + (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = beginIndex2 + (otherLengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = java.lang.Math.max(endIndex1, endIndex2);\n            char char = 0;\n            char char = 0;\n            for (int int = 0 ; i < length ; i++) {\n                final int int = beginIndex1 + i;\n                final int int = beginIndex2 + i;\n                if (index1 >= endIndex1) {\n                    k = 0;\n                } else {\n                    k = key.charAt(index1);\n                }\n                if ((other == null) || (index2 >= endIndex2)) {\n                    f = 0;\n                } else {\n                    f = other.charAt(index2);\n                }\n                if (k != f) {\n                    final int int = k ^ f;\n                    return ((i * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(x))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                } \n                if (k != 0) {\n                    allNull = false;\n                } \n            }\n            if (allNull) {\n                return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"otherOffsetInBits"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[825],"tindex":"e2a2d29d-2e7d-11e6-aab9-6992715781fb","method":{"position":"org.apache.commons.collections4.IteratorUtils:378","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start) {\n    if (start < 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"e2a2f9ae-2e7d-11e6-aab9-b76b800f0389","method":{"position":"org.apache.commons.collections4.map.LazyMap:81","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                {\n                    return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl","sourcecode":"predicatesAndClosures == null"},"failures":[607],"tindex":"e2a2f9af-2e7d-11e6-aab9-b157e26ed6a9","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:89","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicatesAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = predicatesAndClosures.remove(null);\n            final int int = predicatesAndClosures.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n            } \n            final org.apache.commons.collections4.Closure<E>[] org.apache.commons.collections4.Closure<E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> : predicatesAndClosures.entrySet()) {\n                preds[i] = entry.getKey();\n                closures[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchClosure<E>(false , preds , closures , defaultClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[826,530,827,828,829],"tindex":"e2a320c0-2e7d-11e6-aab9-e9556f0cffed","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:210","type":"CtMethodImpl","sourcecode":"public boolean removeMapping(final java.lang.Object key, final java.lang.Object value) {\n    if (value != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (valuesForKey == null) {\n                return false;\n            } \n            final boolean boolean = valuesForKey.remove(value);\n            if (removed == false) {\n                return false;\n            } \n            if (valuesForKey.isEmpty()) {\n                remove(key);\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtBinaryOperatorImpl","sourcecode":"nCopies > 0"},"failures":[830,831,832,833,834,835],"tindex":"e2a320c1-2e7d-11e6-aab9-b1006d031802","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:125","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getBag().add(transform(object), nCopies);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"nCopies"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[575,576,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851],"tindex":"e2a320c2-2e7d-11e6-aab9-9336c065c90c","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:76","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object == null) {\n        {\n            return decorated().remove(object, count);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[852],"tindex":"e2a320c3-2e7d-11e6-aab9-5522d1ff59a7","method":{"position":"org.apache.commons.collections4.ClosureUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[853,854,855],"tindex":"e2a347d4-2e7d-11e6-aab9-b3bccd57b3e1","method":{"position":"org.apache.commons.collections4.list.GrowthList:181","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E element) {\n    if (index < 0) {\n        {\n            final int int = decorated().size();\n            if (index >= size) {\n                decorated().addAll(java.util.Collections.<E>nCopies(((index - size) + 1), null));\n            } \n            return decorated().set(index, element);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}