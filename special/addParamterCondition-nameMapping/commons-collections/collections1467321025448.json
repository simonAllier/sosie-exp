{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":53,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":139,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":1013,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":351,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":710,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":280,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":90,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":932,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":956,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":32,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":584,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":978,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx4":980,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":581,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":921,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":378,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapHashCode":402,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIllegalRemove":841,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":61,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":503,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":477,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testEqualsNull":798,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":801,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":885,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":315,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":516,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRetainAll":28,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":1033,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":252,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":463,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsContract":780,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":108,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":248,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":331,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListCompatibility":667,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":613,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":737,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":118,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":983,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":636,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":306,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":445,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":104,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testEqualsNull":816,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":126,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":57,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":384,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":442,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":97,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":760,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectHashCodeEqualsContract":854,"org.apache.commons.collections4.bag.TransformedBagTest.testCanonicalFullCollectionExists":1024,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":95,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":397,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":441,"org.apache.commons.collections4.CollectionUtilsTest.select":485,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":247,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":89,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":215,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":454,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":619,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":183,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":525,"org.apache.commons.collections4.set.ListOrderedSet2Test.testObjectEqualsSelf":793,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":367,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":563,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionSize":20,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":899,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":464,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveAll":750,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":583,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":151,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":686,"org.apache.commons.collections4.list.GrowthListTest.testObjectHashCodeEqualsContract":700,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":611,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":399,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIsEmpty":25,"org.apache.commons.collections4.CollectionUtilsTest.intersection":490,"org.apache.commons.collections4.list.UnmodifiableListTest.testEqualsNull":643,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":71,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":294,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":325,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":821,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":310,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":941,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":62,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":539,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectEqualsSelf":812,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":112,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":281,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListCompatibility":600,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":168,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":955,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":418,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":417,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":416,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":54,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":606,"org.apache.commons.collections4.map.CompositeMapTest.testPut":502,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":116,"org.apache.commons.collections4.map.LazyMapTest.testFullMapCompatibility":209,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":530,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectEqualsSelf":257,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":836,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":702,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":301,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":1011,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":362,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":239,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":976,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":535,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":859,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":734,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":1002,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":359,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":532,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":905,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":1001,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":1018,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":674,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":973,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":688,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":896,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":364,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":711,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":547,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":965,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":212,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":136,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":567,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRetainAll":753,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":84,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":1039,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":493,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":554,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":545,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":839,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":508,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":947,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":561,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":942,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":646,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutNullKey":406,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":837,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":87,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRetainAll":824,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectHashCodeEqualsContract":814,"org.apache.commons.collections4.set.TransformedSetTest.testSetHashCode":17,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListCompatibility":647,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":271,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":473,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":988,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":653,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectEqualsSelf":1019,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":132,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":70,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":244,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectEqualsSelf":762,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":997,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":346,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":94,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":791,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":432,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":835,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEqualsNull":769,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":598,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":913,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":304,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":408,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":149,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectEqualsSelf":815,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":587,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":444,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":890,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":552,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":300,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":668,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":390,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":703,"org.apache.commons.collections4.iterators.IteratorChainTest.testCanonicalEmptyCollectionExists":260,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":349,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":111,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":1010,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":327,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":915,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":99,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsContract":625,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":840,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":385,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testRemove":848,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":518,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":963,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":180,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":1037,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":345,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":721,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":678,"org.apache.commons.collections4.iterators.IteratorChainTest.testEqualsNull":259,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":50,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectHashCodeEqualsContract":764,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":802,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":994,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":129,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":863,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":127,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":59,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectHashCodeEqualsContract":262,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":929,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains3":187,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains2":186,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":595,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":52,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testEqualsNull":803,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":449,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":651,"org.apache.commons.collections4.list.GrowthListTest.testEqualsNull":699,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRemoveAll":831,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":910,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains1":185,"org.apache.commons.collections4.iterators.IteratorChainTest.testSimpleSerialization":261,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":1036,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":443,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":1035,"org.apache.commons.collections4.queue.TransformedQueueTest.testEqualsNull":763,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":245,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":948,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":582,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":337,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":148,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListCompatibility":633,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEmpty":842,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectEqualsSelf":662,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":564,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":482,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":1025,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":926,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":736,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":246,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":47,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":216,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":452,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":782,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":272,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":318,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":888,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":1020,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testEqualsNull":819,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":462,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsContract":820,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":11,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":1038,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":140,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":940,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":291,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":299,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":981,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":242,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":682,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":592,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":173,"org.apache.commons.collections4.list.UnmodifiableListTest.testObjectEqualsSelf":642,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":376,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":866,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":987,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":205,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":536,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":864,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":1012,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":426,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":719,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":363,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":716,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":706,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":579,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":332,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":894,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":218,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRetainAll":733,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":322,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":601,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":179,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":562,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":515,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":639,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":895,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":958,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRetainAll":745,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":996,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":1006,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":604,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":607,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveAll":424,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":172,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":197,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":718,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":355,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":954,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":998,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveAll":740,"org.apache.commons.collections4.list.GrowthListTest.testSerializeDeserializeThenCompare":696,"org.apache.commons.collections4.map.HashedMapTest.testClone":555,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":305,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":42,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":198,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":117,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":909,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEqualsNull":851,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":114,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":936,"org.apache.commons.collections4.list.TransformedListTest.testObjectEqualsSelf":623,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":739,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":964,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":591,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":461,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsContract":805,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":377,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":358,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetClearChangesMap":412,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":652,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":352,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":902,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":234,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":447,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":236,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":1031,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":484,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":343,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":622,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":690,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":238,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":431,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":725,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":634,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":507,"org.apache.commons.collections4.CollectionUtilsTest.emptyCollection":729,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":56,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":451,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":487,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":472,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsContract":227,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":517,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":181,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":934,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveAll":742,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":107,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":479,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":879,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":878,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":875,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":874,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":877,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":876,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":871,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":460,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":677,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":873,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectHashCodeEqualsContract":817,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":872,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":982,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectHashCodeEqualsSelfHashCode":263,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":697,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":115,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveAll":214,"org.apache.commons.collections4.ListUtilsTest.testSelect":478,"org.apache.commons.collections4.map.LinkedMapTest.testClone":549,"org.apache.commons.collections4.iterators.IteratorChainTest.testSerializeDeserializeThenCompare":264,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":935,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":825,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveAll":829,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":617,"org.apache.commons.collections4.map.LazyMapTest.testValuesClearChangesMap":221,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":495,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":423,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":728,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":396,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":466,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":336,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":946,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":273,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSerializeDeserializeThenCompare":856,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":43,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":144,"org.apache.commons.collections4.list.TransformedListTest.testEqualsNull":624,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":522,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":468,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":467,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":1034,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":621,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":993,"org.apache.commons.collections4.set.TransformedSetTest.testCanonicalFullCollectionExists":35,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":898,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":131,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":665,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray2":19,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":509,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":524,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":427,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectHashCodeEqualsContract":811,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveAll":752,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutNullValue":407,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":24,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":135,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":178,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":166,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":403,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":687,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":122,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":439,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":14,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRetainAll":832,"org.apache.commons.collections4.iterators.IteratorChainTest.testCanonicalFullCollectionExists":258,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":250,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":255,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":125,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":124,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":123,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEqualsNull":755,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":757,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":608,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":923,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":333,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":693,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":133,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":648,"org.apache.commons.collections4.set.TransformedSetTest.testSetEquals":16,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":680,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":317,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":437,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectHashCodeEqualsContract":767,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":661,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":627,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":488,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":269,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":344,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":511,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":389,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":9,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":650,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":471,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":365,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectEqualsSelf":768,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":453,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":596,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":165,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":316,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":901,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectEqualsSelf":849,"org.apache.commons.collections4.map.LRUMapTest.testLRU":528,"org.apache.commons.collections4.map.ListOrderedMapTest.testPreviousKey":1027,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":152,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":27,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":796,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":405,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":612,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":302,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":658,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":959,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":13,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":513,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":253,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":435,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":589,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":514,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSimpleSerialization":853,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":240,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveAll":822,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":992,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":1016,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":1000,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectHashCodeEqualsContract":664,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":369,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":695,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":55,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":953,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":274,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":683,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":41,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":155,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":448,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":486,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":120,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":110,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIteratorRemove":22,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRetainAll":747,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":641,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":833,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":429,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":208,"org.apache.commons.collections4.set.ListOrderedSet2Test.testEqualsNull":794,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":920,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":510,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":249,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":1015,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":553,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":320,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":10,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":865,"org.apache.commons.collections4.bag.TransformedBagTest.testSimpleSerialization":1022,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":457,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":65,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRetainAll":425,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":916,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":474,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":880,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":156,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":520,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectHashCodeEqualsSelfHashCode":855,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":470,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":295,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":649,"org.apache.commons.collections4.map.LazyMapTest.testKeySetClearChangesMap":195,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":949,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":307,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":267,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":991,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":177,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":395,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":188,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":400,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":75,"org.apache.commons.collections4.set.TransformedSetTest.testSimpleSerialization":38,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":492,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":2,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testDecorateFactory":892,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectEqualsSelf":809,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":989,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":685,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":350,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectEqualsSelf":806,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":68,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":927,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":379,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":550,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":480,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":534,"org.apache.commons.collections4.list.GrowthListTest.testFullListCompatibility":684,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":827,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":8,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":931,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":538,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":243,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":153,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":857,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":944,"org.apache.commons.collections4.map.LazyMapTest.testValuesRetainAll":190,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":714,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":543,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":614,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":893,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveAll":748,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":105,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":313,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":196,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetClearChangesMap":199,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRetainAll":743,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":632,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetEquals":786,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":630,"org.apache.commons.collections4.list.UnmodifiableListTest.testSerializeDeserializeThenCompare":640,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveAll":420,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":78,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":475,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":79,"org.apache.commons.collections4.set.TransformedSetTest.testSerializeDeserializeThenCompare":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":77,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":620,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":676,"org.apache.commons.collections4.list.SetUniqueListTest.testObjectHashCodeEqualsContract":672,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":957,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":1040,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":29,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":566,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRetainAll":830,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":599,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullValue":200,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":265,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEqualsNull":813,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":380,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":381,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":590,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":907,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":930,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":319,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":287,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":434,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":297,"org.apache.commons.collections4.list.PredicatedListTest.testEqualsNull":727,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":5,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":175,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":573,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":645,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testFullIterator":847,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":51,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":270,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":950,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":298,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":951,"org.apache.commons.collections4.map.CompositeMapTest.testGet":501,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":49,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":237,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":137,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":282,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testFullMapCompatibility":404,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":18,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":1026,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":960,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":908,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":1029,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":189,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":558,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains1":413,"org.apache.commons.collections4.map.HashedMapTest.testEqualsNull":961,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains2":414,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":499,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains3":415,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":138,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":275,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":986,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsContract":770,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":48,"org.apache.commons.collections4.map.LazyMapTest.testSimpleSerialization":226,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":92,"org.apache.commons.collections4.list.UnmodifiableListTest.testObjectHashCodeEqualsContract":644,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEmptyIterator":846,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEqualsNull":974,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":904,"org.apache.commons.collections4.set.TransformedSetTest.testObjectHashCodeEqualsSelfHashCode":40,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":666,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":171,"org.apache.commons.collections4.set.TransformedSortedSetTest.testEqualsNull":788,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIteratorExhausted":843,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":371,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":428,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":211,"org.apache.commons.collections4.CollectionUtilsTest.union":489,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":938,"org.apache.commons.collections4.collection.TransformedCollectionTest.testEqualsNull":810,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":631,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullKey":206,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":450,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":335,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":500,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":939,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":704,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":629,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":548,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":66,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":241,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":723,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":167,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":276,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":329,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":519,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":58,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":887,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":870,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":720,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":469,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":972,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":341,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":712,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":759,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectEqualsSelf":783,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":147,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":334,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":568,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":575,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":82,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":393,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":81,"org.apache.commons.collections4.map.ListOrderedMap2Test.testPreviousKey":1028,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":80,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":637,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveAll":730,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":937,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRetainAll":751,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":526,"org.apache.commons.collections4.map.LRUMapTest.testClone":523,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":458,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":311,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsSelfHashCode":1021,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":184,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":438,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":609,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testMultiplePeek":845,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":158,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":656,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":1032,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":537,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":858,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":990,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":673,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":229,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":347,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":834,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":314,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":150,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":459,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectEqualsSelf":773,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":792,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":285,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":321,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":201,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":64,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":219,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":383,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":283,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":284,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":296,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":615,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsContract":800,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsSelfHashCode":228,"org.apache.commons.collections4.list.SetUniqueListTest.testObjectEqualsSelf":670,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":605,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectEqualsSelf":779,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":1003,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":465,"org.apache.commons.collections4.map.LazyMapTest.testEmptyMapCompatibility":207,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":708,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveAll":732,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":373,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":761,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":146,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRetainAll":220,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":1041,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":277,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":945,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEqualsNull":754,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":91,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":145,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":312,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":360,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":391,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListCompatibility":628,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testEqualsNull":807,"org.apache.commons.collections4.list.GrowthListTest.testObjectEqualsSelf":698,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":279,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":828,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":891,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectHashCodeEqualsContract":785,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":176,"org.apache.commons.collections4.list.GrowthListTest.testEmptyListCompatibility":675,"org.apache.commons.collections4.set.PredicatedSetTest.testEqualsNull":784,"org.apache.commons.collections4.set.UnmodifiableSetTest.testEqualsNull":778,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectHashCodeEqualsContract":790,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionClear":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":102,"org.apache.commons.collections4.map.SingletonMapTest.testClone":886,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":210,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":213,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":88,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalFullCollectionExists":223,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":505,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":679,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":504,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":7,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":694,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetClearChangesMap":411,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":368,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testCanonicalEmptyCollectionExists":852,"org.apache.commons.collections4.set.TransformedSetTest.testObjectHashCodeEqualsContract":39,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":593,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectHashCodeEqualsContract":775,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSinglePeek":844,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":1017,"org.apache.commons.collections4.list.PredicatedListTest.testObjectEqualsSelf":726,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":884,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":984,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":1042,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":233,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":540,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":914,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":63,"org.apache.commons.collections4.set.TransformedSetTest.testEqualsNull":36,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":556,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":541,"org.apache.commons.collections4.set.ListOrderedSet2Test.testObjectHashCodeEqualsContract":795,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":23,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":497,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":357,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":971,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":580,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":603,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":722,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":588,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":392,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":883,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSerializeDeserializeThenCompare":797,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":979,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":616,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":46,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":160,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":161,"org.apache.commons.collections4.set.TransformedSetTest.testObjectEqualsSelf":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":354,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":436,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":456,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":455,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":159,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":356,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveAll":746,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesClearChangesMap":410,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":933,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":521,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectEqualsSelf":818,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":157,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":119,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":496,"org.apache.commons.collections4.bag.TransformedBagTest.testCanonicalEmptyCollectionExists":1023,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":338,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":512,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":565,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":881,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":758,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":922,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":308,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":481,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":557,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":776,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":483,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":912,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":256,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":382,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":735,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":533,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":506,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":292,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":323,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":476,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":724,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":969,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":230,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":374,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":860,"org.apache.commons.collections4.map.LazyMapTest.testMapHashCode":191,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":375,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":542,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":93,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":202,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectEqualsSelf":804,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":578,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":602,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":12,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":527,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":970,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":586,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectHashCodeEqualsContract":808,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":491,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectEqualsSelf":975,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":1004,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":15,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":772,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":254,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":925,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":96,"org.apache.commons.collections4.list.GrowthListTest.testCollectionClear":691,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":903,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEqualsNull":766,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":999,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectEqualsSelf":789,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":293,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":419,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":574,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectEqualsSelf":799,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":106,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":366,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":3,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":1008,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":387,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":446,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":572,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":571,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove3":194,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":278,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToString":21,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove1":192,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove2":193,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":134,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRetainAll":749,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":1007,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":756,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":98,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalEmptyCollectionExists":225,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":324,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":655,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":546,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":701,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":559,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":889,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":570,"org.apache.commons.collections4.set.CompositeSetTest.testContains":498,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":433,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":707,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":823,"org.apache.commons.collections4.CollectionUtilsTest.isFull":869,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":897,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":919,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":83,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":328,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRetainAll":421,"org.apache.commons.collections4.map.LazyMapTest.testObjectEqualsSelf":222,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":154,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":4,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":577,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":235,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":966,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":952,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":164,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":1005,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":494,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":339,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":781,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":169,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":657,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":626,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":882,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":162,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":163,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":109,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":326,"org.apache.commons.collections4.list.FixedSizeListTest.testEqualsNull":663,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":128,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":121,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":430,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":182,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":1014,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":143,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":985,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMakeMap":394,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":141,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":638,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":101,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":659,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":288,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":569,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":290,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":289,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":585,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":911,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":544,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":440,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testCanonicalFullCollectionExists":850,"org.apache.commons.collections4.set.TransformedSetTest.testCanonicalEmptyCollectionExists":37,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":266,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":594,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":142,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":398,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":654,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":130,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":738,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":353,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":386,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":170,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":73,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":906,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":6,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapRemove":977,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":45,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":681,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":660,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":826,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":342,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":409,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":689,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":33,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":217,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":422,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":251,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":309,"org.apache.commons.collections4.set.ListOrderedSetTest.testEqualsNull":774,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":330,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":995,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":268,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":669,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":692,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":967,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":372,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":597,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":86,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveAll":203,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":924,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":348,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":551,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":709,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":635,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":1009,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":918,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRetainAll":731,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":340,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":100,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":968,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":576,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectEqualsSelf":765,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":900,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":713,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":610,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":838,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":1030,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":224,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":867,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":868,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":862,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":861,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":286,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":529,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":231,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":113,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":232,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":361,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":370,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":388,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":717,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":777,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":560,"org.apache.commons.collections4.map.LazyMapTest.testMakeMap":204,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":531,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":715,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":401,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":303,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":928,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":943,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRetainAll":741,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveAll":744,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":618,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":705,"org.apache.commons.collections4.map.HashedMapTest.testObjectEqualsSelf":962,"org.apache.commons.collections4.list.SetUniqueListTest.testEqualsNull":671,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":771,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSerializeDeserializeThenCompare":787,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":917},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1093c812-3f07-11e6-9057-779ab62cc7f5","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[0,1],"tindex":"1094d983-3f07-11e6-9057-5fe0abb80b48","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:298","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index > 0) {\n        {\n            if (!(contains(object))) {\n                decorated().add(object);\n                java.util.List<E>.add(index, object);\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"10950094-3f07-11e6-9057-05a1ed6ac60a","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:438","type":"CtMethodImpl","sourcecode":"protected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        {\n            return (key == null ? 0 : key.hashCode()) ^ (value == null ? 0 : value.hashCode());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"10950095-3f07-11e6-9057-f78ed92350a9","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1043","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this, index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"10963916-3f07-11e6-9057-e906550fc607","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:492","type":"CtMethodImpl","sourcecode":"protected void reuseEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if ((entry.getValue()) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex];\n            entry.int = hashCode;\n            entry.java.lang.Object = key;\n            entry.java.lang.Object = value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtBinaryOperatorImpl"},"failures":[14],"tindex":"10966027-3f07-11e6-9057-b15e037a37d3","method":{"position":"org.apache.commons.collections4.functors.TransformerClosure:48","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> transformerClosure(final org.apache.commons.collections4.Transformer<? super E, ?> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            return new org.apache.commons.collections4.functors.TransformerClosure<E>(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"10966028-3f07-11e6-9057-4951154b16a6","method":{"position":"org.apache.commons.collections4.functors.IfClosure:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"10968739-3f07-11e6-9057-6baac329232d","method":{"position":"org.apache.commons.collections4.set.TransformedSet:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSet<E> transformingSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SplitMapUtils:211","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1096873a-3f07-11e6-9057-9dd1abd7bf58","method":{"position":"org.apache.commons.collections4.SplitMapUtils:210","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>org.apache.commons.collections4.IterableMap<K, V> readableMap(final org.apache.commons.collections4.Get<K, V> get) {\n    if (get == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (get == null) {\n                throw new java.lang.IllegalArgumentException(\"Get must not be null\");\n            } \n            if (get instanceof java.util.Map) {\n                return get instanceof org.apache.commons.collections4.IterableMap ? ((org.apache.commons.collections4.IterableMap<K, V>)(get)) : org.apache.commons.collections4.MapUtils.iterableMap(((java.util.Map<K, V>)(get)));\n            } \n            return new org.apache.commons.collections4.SplitMapUtils.WrappedGet<K, V>(get);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"get":"get"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1096873b-3f07-11e6-9057-bf15414c7b72","method":{"position":"org.apache.commons.collections4.SetUtils:306","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.set.PredicatedSortedSet.predicatedSortedSet(set, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl"},"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137],"tindex":"1096ae4c-3f07-11e6-9057-c7366002aa41","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:538","type":"CtMethodImpl","sourcecode":"private V doRemoveKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176],"tindex":"1096d55d-3f07-11e6-9057-0be3794046a8","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:153","type":"CtMethodImpl","sourcecode":"private int getHash(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return 0;\n            } \n            int int = key.hashCode();\n            hash += ~(hash << 15);\n            hash ^= hash >>> 10;\n            hash += hash << 3;\n            hash ^= hash >>> 6;\n            hash += ~(hash << 11);\n            hash ^= hash >>> 16;\n            hash %= org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int;\n            return hash < 0 ? hash * (-1) : hash;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl"},"failures":[177,178,179],"tindex":"1096d55e-3f07-11e6-9057-9d56c7540229","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:162","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n            E = null;\n            boolean = false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl"},"failures":[45,47,48,102,103],"tindex":"1096fc6f-3f07-11e6-9057-c3c3d60ac727","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2057","type":"CtMethodImpl","sourcecode":"public K get(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.getKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:74","type":"CtBinaryOperatorImpl"},"failures":[180],"tindex":"1096fc70-3f07-11e6-9057-5362f5bdb493","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:70","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if ((transformers.size()) == 0) {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n            } \n            if ((transformers.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<T, T>[] org.apache.commons.collections4.Transformer<T, T>[] = transformers.toArray(new org.apache.commons.collections4.Transformer[transformers.size()]);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , cmds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl"},"failures":[181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229],"tindex":"1096fc71-3f07-11e6-9057-59b91cbbe9e5","method":{"position":"org.apache.commons.collections4.map.LazyMap:81","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:977","type":"CtBinaryOperatorImpl"},"failures":[230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309],"tindex":"10972282-3f07-11e6-9057-9b581d149ada","method":{"position":"org.apache.commons.collections4.iterators.IteratorChain:159","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            checkLocked();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.Queue<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:317","type":"CtBinaryOperatorImpl"},"failures":[310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376],"tindex":"10988213-3f07-11e6-9057-c94666cc9333","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:271","type":"CtMethodImpl","sourcecode":"protected void registerCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        {\n            if (cursor == null) {\n                {\n                    for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                        final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                        if ((ref.get()) == null) {\n                            it.remove();\n                        } \n                    }\n                    java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.add(new java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>(cursor));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl"},"failures":[377],"tindex":"1098a924-3f07-11e6-9057-b7982e8aaeb3","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Set<E>.containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[378,379,380,381],"tindex":"1098a925-3f07-11e6-9057-b39173d53281","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:362","type":"CtMethodImpl","sourcecode":"public int size(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return 0;\n            } \n            return coll.size();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[382],"tindex":"1098d036-3f07-11e6-9057-655e49aa9dd6","method":{"position":"org.apache.commons.collections4.PredicateUtils:535","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(transformer, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1098d037-3f07-11e6-9057-5dd97634ceed","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final E E : coll) {\n                validate(item);\n            }\n            return decorated().addAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:404","type":"CtBinaryOperatorImpl"},"failures":[383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430],"tindex":"1098d038-3f07-11e6-9057-394229626b67","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:403","type":"CtMethodImpl","sourcecode":"private boolean isExpired(final long now, final java.lang.Long expirationTimeObject) {\n    if (expirationTimeObject != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (expirationTimeObject != null) {\n                final long long = expirationTimeObject.longValue();\n                return (expirationTime >= 0) && (now >= expirationTime);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expirationTimeObject":"expirationTimeObject"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl"},"failures":[431,432],"tindex":"1098f749-3f07-11e6-9057-a5853a5aa71f","method":{"position":"org.apache.commons.collections4.map.Flat3Map:977","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1098f74a-3f07-11e6-9057-49ffbf920840","method":{"position":"org.apache.commons.collections4.IteratorUtils:781","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.NodeList nodeList) {\n    if (nodeList == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (nodeList == null) {\n                throw new java.lang.NullPointerException(\"NodeList must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(nodeList);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"nodeList"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl"},"failures":[433,434,435,436,437,438,439,440,441,11,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476],"tindex":"1098f74b-3f07-11e6-9057-255f6c3ba2b9","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:582","type":"CtMethodImpl","sourcecode":"protected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (entry != null) {\n        {\n            if (previous == null) {\n                {\n                    if (previous == null) {\n                        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    } else {\n                        previous.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"previous"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl"},"failures":[477],"tindex":"109a56dc-3f07-11e6-9057-e520ed0a4731","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:62","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl"},"failures":[478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,230,500,501,502,503,504,505,506,507,508],"tindex":"109a56dd-3f07-11e6-9057-8106cc7285eb","method":{"position":"org.apache.commons.collections4.CollectionUtils:107","type":"CtMethodImpl","sourcecode":"public int freqB(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl"},"failures":[509,510,511,512,513,514,515,516,517,518,519,520,521],"tindex":"109a7dee-3f07-11e6-9057-63a51724e550","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:134","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"109a7def-3f07-11e6-9057-2d36166577e2","method":{"position":"org.apache.commons.collections4.MapUtils:641","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return 0;\n            } \n            return integerObject.intValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"109a7df0-3f07-11e6-9057-df17af0c1abe","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:271","type":"CtMethodImpl","sourcecode":"protected void registerCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        {\n            if (cursor == null) {\n                {\n                    for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                        final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                        if ((ref.get()) == null) {\n                            it.remove();\n                        } \n                    }\n                    java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.add(new java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>(cursor));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"109aa501-3f07-11e6-9057-a195a1b9a5d0","method":{"position":"org.apache.commons.collections4.map.Flat3Map:982","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.Flat3Map<K, ?>.remove(key);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:82","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"109aa502-3f07-11e6-9057-ed717113d823","method":{"position":"org.apache.commons.collections4.ComparatorUtils:152","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullLowComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"109aa503-3f07-11e6-9057-91aa065940c3","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:75","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.TransformedSortedBag<E> org.apache.commons.collections4.bag.TransformedSortedBag<E> = new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"109acc14-3f07-11e6-9057-ed3101d0b1ef","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl"},"failures":[522],"tindex":"109acc15-3f07-11e6-9057-d5aea11e3100","method":{"position":"org.apache.commons.collections4.CollectionUtils:1717","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> synchronizedCollection(final java.util.Collection<C> collection) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            return org.apache.commons.collections4.collection.SynchronizedCollection.synchronizedCollection(collection);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"109acc16-3f07-11e6-9057-614464699406","method":{"position":"org.apache.commons.collections4.MapUtils:297","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Float) {\n                return ((java.lang.Float)(answer));\n            } \n            return java.lang.Float.valueOf(answer.floatValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"109acc17-3f07-11e6-9057-0da784474614","method":{"position":"org.apache.commons.collections4.MapUtils:842","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key, final double defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return defaultValue;\n            } \n            return doubleObject.doubleValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"109af328-3f07-11e6-9057-c3437674952f","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"109af329-3f07-11e6-9057-b7763aaea1f5","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:139","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return decorated().removeAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl"},"failures":[523,524,445,525,526,527],"tindex":"109af32a-3f07-11e6-9057-658521cfd5d6","method":{"position":"org.apache.commons.collections4.map.LRUMap:175","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            moveToMRU(entry);\n            return entry.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl"},"failures":[528,529,530,445,447,448,531],"tindex":"109af32b-3f07-11e6-9057-bf6052d679d3","method":{"position":"org.apache.commons.collections4.map.LRUMap:296","type":"CtMethodImpl","sourcecode":"protected void reuseMapping(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if ((entry.getValue()) == null) {\n        {\n            try {\n                final int int = hashIndex(entry.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = tmp[removeIndex];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n                while ((loop != entry) && (loop != null)) {\n                    previous = loop;\n                    loop = loop.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                }\n                if (loop == null) {\n                    throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][removeIndex])) + \" previous=\") + previous) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                } \n                (int)++;\n                removeEntry(entry, removeIndex, previous);\n                reuseEntry(entry, hashIndex, hashCode, key, value);\n                addEntry(entry, hashIndex);\n            } catch (final java.lang.NullPointerException ex) {\n                throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + entry) + \" entryIsHeader=\") + (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"109b414c-3f07-11e6-9057-bb49b13a3000","method":{"position":"org.apache.commons.collections4.PredicateUtils:289","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AllPredicate.allPredicate(predicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:190","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"109b414d-3f07-11e6-9057-539e3dc667d4","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:188","type":"CtMethodImpl","sourcecode":"public void setIterator(final int index, final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.set(index, iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[532,533,534],"tindex":"109b414e-3f07-11e6-9057-3fcd4ccafc88","method":{"position":"org.apache.commons.collections4.CollectionUtils:1212","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.lang.Iterable<T> iterable, final int index) {\n    if (index < 0) {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            if (iterable instanceof java.util.List<?>) {\n                return ((java.util.List<T>)(iterable)).get(index);\n            } \n            return org.apache.commons.collections4.CollectionUtils.get(iterable.iterator(), index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl"},"failures":[535,536,537,538,539,540,541,542,543,544,545,546,547,548,450,549,550,462,463,551,552,553,554,555,556,557,558,559,560,561,562,563,564],"tindex":"109b414f-3f07-11e6-9057-b579b5e11bf6","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:179","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key == null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[138,174,175,147],"tindex":"109b6860-3f07-11e6-9057-257db09bb150","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:200","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return n.V;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"109c52c1-3f07-11e6-9057-7b5a9df3deb7","method":{"position":"org.apache.commons.collections4.IteratorUtils:888","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Enumeration<E> asEnumeration(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorEnumeration<E>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,377,589,590,591,592,593,594,595,596,597],"tindex":"109c79d2-3f07-11e6-9057-893fd039ff15","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            if ((java.util.Set<E>.contains(object)) == false) {\n                super.add(index, object);\n                java.util.Set<E>.add(object);\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"109c79d3-3f07-11e6-9057-87a338b36ad6","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:133","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"109c79d4-3f07-11e6-9057-95a934f76ec3","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:169","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl"},"failures":[486,489,493,494],"tindex":"109ca0e5-3f07-11e6-9057-e3d1191111b6","method":{"position":"org.apache.commons.collections4.CollectionUtils:80","type":"CtMethodImpl","sourcecode":"public final int max(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Math.max(freqA(obj), freqB(obj));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl"},"failures":[598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,576,580,581,667,582,583,585,587,588,668,377,589,590,591,592,593,594,595,596,669,597,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,127,128,131,132,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,16,31,34,36,39,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840],"tindex":"109d1616-3f07-11e6-9057-51e2b1a08979","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (object == (org.apache.commons.collections4.collection.AbstractCollectionDecorator.this)) || (decorated().equals(object));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:161","type":"CtBinaryOperatorImpl"},"failures":[841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856],"tindex":"109d3d27-3f07-11e6-9057-6bf437fe7dc0","method":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PeekingIterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PeekingIterator<E> org.apache.commons.collections4.iterators.PeekingIterator<E> = ((org.apache.commons.collections4.iterators.PeekingIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PeekingIterator<E>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:112","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"109d3d28-3f07-11e6-9057-7d662e85fc5d","method":{"position":"org.apache.commons.collections4.IteratorUtils:446","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<E> iterator) {\n    if ((iterator.hasNext()) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl"},"failures":[857,858,859],"tindex":"109d6439-3f07-11e6-9057-4d22162da8c4","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <E>org.apache.commons.collections4.Closure<E>[] copy(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Closure<E>[])(closures.clone()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"109d643a-3f07-11e6-9057-69854bfab080","method":{"position":"org.apache.commons.collections4.MapUtils:364","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<K, V> map, final K key, final V defaultValue) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final V V = map.get(key);\n                if (answer != null) {\n                    return answer;\n                } \n            } \n            return defaultValue;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl"},"failures":[180],"tindex":"109d643b-3f07-11e6-9057-3d194b018a61","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((transformers.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(transformers);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1035","type":"CtInvocationImpl"},"failures":[],"tindex":"109d643c-3f07-11e6-9057-3b597e465707","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:64","type":"CtMethodImpl","sourcecode":"static boolean isEqualBitKey(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtBinaryOperatorImpl"},"failures":[860],"tindex":"109d8b4d-3f07-11e6-9057-95596f5fb4d3","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:264","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[861,862,863,864],"tindex":"109d8b4e-3f07-11e6-9057-93d71add7e73","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:76","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((preds.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(preds[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(preds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtBinaryOperatorImpl"},"failures":[73,83,86,87,90,91,92,93,94,69],"tindex":"109d8b4f-3f07-11e6-9057-e9a4fcfd61dd","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:716","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> from, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> to, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (to != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (to != null) {\n                if (from == null) {\n                    to.setBlack(dataElement);\n                } else {\n                    to.copyColor(from, dataElement);\n                }\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"to":"to"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"109db260-3f07-11e6-9057-855cd1979a82","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:68","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"109db261-3f07-11e6-9057-a703255ff4ea","method":{"position":"org.apache.commons.collections4.MapUtils:386","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key, final java.lang.String defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            java.lang.String java.lang.String = org.apache.commons.collections4.MapUtils.getString(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"109db262-3f07-11e6-9057-31fef16bb541","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:330","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryAfter(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"109dd973-3f07-11e6-9057-35d2937b55a0","method":{"position":"org.apache.commons.collections4.ListUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> selectRejected(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl"},"failures":[531,860,865,866,465],"tindex":"109dd974-3f07-11e6-9057-8da6b7b74c2b","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:246","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((multi.size()) == 2) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key1 != null) && (key2.equals(multi.getKey(1)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"109e9cc5-3f07-11e6-9057-d7fbc72b30c6","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:455","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            key2 = (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<K>)(key2)).get();\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl"},"failures":[867,868,863],"tindex":"109ec3d6-3f07-11e6-9057-83f3c7ed8aaa","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[869,870,871,872,873,874,875,876,877,878,879,880,881,882],"tindex":"109eeae7-3f07-11e6-9057-3742eff7a98b","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:339","type":"CtMethodImpl","sourcecode":"private int decrement(int index) {\n    if (index < 0) {\n        {\n            index--;\n            if (index < 0) {\n                index = (int) - 1;\n            } \n            return index;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"109eeae8-3f07-11e6-9057-25c89ef37052","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:713","type":"CtMethodImpl","sourcecode":"protected int entryHashCode(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != null) {\n        {\n            return entry.int;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:74","type":"CtBinaryOperatorImpl"},"failures":[180],"tindex":"109eeae9-3f07-11e6-9057-d5b866c7d0ab","method":{"position":"org.apache.commons.collections4.TransformerUtils:208","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if ((transformers.size()) == 0) {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl"},"failures":[883,884,885],"tindex":"109eeaea-3f07-11e6-9057-6351bebd0fdf","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:105","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl"},"failures":[886,887,888,889,890],"tindex":"109f872b-3f07-11e6-9057-ab7e61c90b64","method":{"position":"org.apache.commons.collections4.map.SingletonMap:221","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return isEqualKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtBinaryOperatorImpl"},"failures":[891],"tindex":"109fae3c-3f07-11e6-9057-01e35d6e7691","method":{"position":"org.apache.commons.collections4.CollectionUtils:606","type":"CtMethodImpl","sourcecode":"public static <O>int cardinality(final O obj, final java.lang.Iterable<? super O> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof java.util.Set<?>) {\n                return ((java.util.Set<? super O>)(coll)).contains(obj) ? 1 : 0;\n            } \n            if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n                return ((org.apache.commons.collections4.Bag<? super O>)(coll)).getCount(obj);\n            } \n            int int = 0;\n            if (obj == null) {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (element == null) {\n                        count++;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (obj.equals(element)) {\n                        count++;\n                    } \n                }\n            }\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"109fae3d-3f07-11e6-9057-797ba47c9bdf","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:126","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformer) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer must not be null\");\n            } \n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:55","type":"CtBinaryOperatorImpl"},"failures":[892],"tindex":"109fae3e-3f07-11e6-9057-f15bc5269d19","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:54","type":"CtMethodImpl","sourcecode":"public static <T>java.util.Collection<T> unmodifiableCollection(final java.util.Collection<? extends T> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Collection<T> java.util.Collection<T> = ((java.util.Collection<T>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableCollection<T>(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"10a04a7f-3f07-11e6-9057-1f5edc427414","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:582","type":"CtMethodImpl","sourcecode":"protected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (entry != null) {\n        {\n            if (previous == null) {\n                {\n                    if (previous == null) {\n                        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    } else {\n                        previous.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl"},"failures":[535,536,893,537,538,539,894,540,541,542,543,895,896,897,898,899,900,901,902,903,904,431,432,438,2,3,905,4,5,6,906,8,9,10,11,907,908,909,910,911,912,913,914,915,916,525,917,918,919,920,921,922,923,924,925,926,927,928,929,930,550,931,932,933,454,934,935,936,937,938,939,940,941,942,943,552,944,945,946,947,948,949,950,951,952,953,954,955,956,556,957,958,959,469,960,961,962,963,964,965,966,967,968,969,562,970,971,972,473,973,974,975,976],"tindex":"10a07190-3f07-11e6-9057-5dddd637aa93","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1309","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((map.size()) != (size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = mapIterator();\n            try {\n                while (it.hasNext()) {\n                    final java.lang.Object java.lang.Object = it.next();\n                    final java.lang.Object java.lang.Object = it.getValue();\n                    if (value == null) {\n                        if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n                            return false;\n                        } \n                    } else {\n                        if ((value.equals(map.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                }\n            } catch (final java.lang.ClassCastException ignored) {\n                return false;\n            } catch (final java.lang.NullPointerException ignored) {\n                return false;\n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:82","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"10a07191-3f07-11e6-9057-47436292662f","method":{"position":"org.apache.commons.collections4.ComparatorUtils:119","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Comparator<E> reversedComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.comparators.ReverseComparator<E>(comparator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl"},"failures":[71],"tindex":"10a098a2-3f07-11e6-9057-016fd5aa97c9","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1229","type":"CtMethodImpl","sourcecode":"private static void checkValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"10a098a3-3f07-11e6-9057-b3a3db446ce4","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:419","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object k) {\n    if (k == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (k == null) {\n                return null;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    if ((!(current.isEmpty())) && (compareKeys(key, current.K))) {\n                        return removeEntry(current);\n                    } else {\n                        return null;\n                    }\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"10a0bfb4-3f07-11e6-9057-bda9a8cde7cd","method":{"position":"org.apache.commons.collections4.CollectionUtils:279","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> disjunction(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (a == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, ((helper.max(obj)) - (helper.min(obj))));\n            }\n            return helper.list();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl"},"failures":[977],"tindex":"10a0bfb5-3f07-11e6-9057-bb8daee9e202","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl"},"failures":[978],"tindex":"10a0bfb6-3f07-11e6-9057-e97097bb3df4","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.OnePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[979],"tindex":"10a0bfb7-3f07-11e6-9057-dbfb965f9773","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(decorated().listIterator(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"10a0e6c8-3f07-11e6-9057-27ef114c28cb","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1784","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"10a0e6c9-3f07-11e6-9057-1358876eef7a","method":{"position":"org.apache.commons.collections4.ListUtils:318","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> retainAll(final java.util.Collection<E> collection, final java.util.Collection<?> retain) {\n    if ((collection == null) || ((collection.size()) != 1)) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(java.lang.Math.min(collection.size(), retain.size()));\n            for (final E E : collection) {\n                if (retain.contains(obj)) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"10a0e6ca-3f07-11e6-9057-0116df511fae","method":{"position":"org.apache.commons.collections4.ListUtils:678","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<T> get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = size();\n            if (listSize < 0) {\n                throw new java.lang.IllegalArgumentException((\"negative size: \" + listSize));\n            } \n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" must not be negative\"));\n            } \n            if (index >= listSize) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" must be less than size \") + listSize));\n            } \n            final int int = index * (int);\n            final int int = java.lang.Math.min((start + (int)), java.util.List<T>.size());\n            return java.util.List<T>.subList(start, end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"10a10ddb-3f07-11e6-9057-cf788ccb4707","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:971","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.get((index + (int)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[980],"tindex":"10a10ddc-3f07-11e6-9057-f1487864b42b","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:72","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            return new org.apache.commons.collections4.functors.OnePredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"10a10ddd-3f07-11e6-9057-5fe8a472c34f","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:100","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.ListOrderedMap<K, V> listOrderedMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.ListOrderedMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl"},"failures":[981],"tindex":"10a10dde-3f07-11e6-9057-6fc447eb8008","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"10a134ef-3f07-11e6-9057-6dd8a65a2f59","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2065","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsValue(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl"},"failures":[982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,761,1019,1020,1021,1022,1023,1024,1025],"tindex":"10a134f0-3f07-11e6-9057-3969b0eb32ea","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:57","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl"},"failures":[1026],"tindex":"10a134f1-3f07-11e6-9057-7b3db65812fb","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl"},"failures":[1027,1028,1029,1030],"tindex":"10a134f2-3f07-11e6-9057-a723fe68d27c","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:208","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.util.List<K>.indexOf(key);\n            if (index > 0) {\n                return java.util.List<K>.get((index - 1));\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl"},"failures":[1031],"tindex":"10a15c03-3f07-11e6-9057-cd2ebb92c38b","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:120","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"10a15c04-3f07-11e6-9057-67aebcaa2081","method":{"position":"org.apache.commons.collections4.ListUtils:386","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> synchronizedList(final java.util.List<E> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl"},"failures":[528,529,530,445,446,447,448,449,1032,1033,1034,920,1035,1036,1037,1038,1039,1040,1041,526,527,1042,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,531],"tindex":"10a15c05-3f07-11e6-9057-f13cab8b18a0","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:298","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if ((entry.getValue()) == null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null;\n            super.removeEntry(entry, hashIndex, previous);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315115119/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}