{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":372,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":441,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":446,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":548,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":28,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":265,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":384,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":479,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":300,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":456,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":13,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":555,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":531,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":530,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":620,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":289,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":88,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":288,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":111,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":292,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":503,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":153,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":190,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":498,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":119,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIteratorRemove":227,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":380,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":80,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIsEmpty":225,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":628,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":82,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":57,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":81,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":404,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":206,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testEqualsNull":236,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":65,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":621,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":251,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":392,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":607,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":410,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":433,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":552,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":159,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":330,"org.apache.commons.collections4.CollectionUtilsTest.get":602,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":386,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":177,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":387,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":590,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":340,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":188,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":314,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":37,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":439,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":305,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":449,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":326,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":478,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":245,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":312,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":348,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":248,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":375,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":431,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":320,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":255,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":229,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":317,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":79,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":303,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":294,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":77,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":78,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":211,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":279,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":424,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":430,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIsEmpty":183,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":156,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":1,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":544,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":163,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullValue":415,"org.apache.commons.collections4.CollectionUtilsTest.select":597,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreater":647,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":327,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreaterOrEqual":646,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":403,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":481,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.initializationError":244,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":182,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":134,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":457,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":232,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":559,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":99,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":553,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":115,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":505,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":105,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":259,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":395,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":396,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapClear":422,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":221,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":394,"org.apache.commons.collections4.CollectionUtilsTest.intersection":605,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":145,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":278,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":506,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testGetSet":215,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":557,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":389,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":539,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLess":644,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":103,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":495,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":126,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":114,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":286,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":56,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":595,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":381,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":169,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":334,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":121,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":623,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":187,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":513,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":477,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToString":179,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":425,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":17,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":216,"org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf":140,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":436,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":373,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":40,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":155,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":370,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":301,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":569,"org.apache.commons.collections4.map.CompositeMapTest.testPut":627,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":338,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":296,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":576,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":73,"org.apache.commons.collections4.map.CompositeMapTest.testGet":626,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":274,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":368,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":52,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":43,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":612,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":359,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":572,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":23,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":575,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":142,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":86,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":535,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":69,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":586,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":451,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":93,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":636,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":367,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":30,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":267,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking2":493,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":101,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":412,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":42,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":173,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":571,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":212,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":316,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":127,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":152,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":568,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":545,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":129,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":358,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":282,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":420,"org.apache.commons.collections4.CollectionUtilsTest.union":604,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":400,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":608,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":87,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":393,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":588,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":565,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":108,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":427,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":546,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":131,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":385,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionSize":178,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":489,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":135,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":651,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":390,"org.apache.commons.collections4.map.UnmodifiableMapTest.testFullMapCompatibility":423,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":299,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":411,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectEqualsSelf":246,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":616,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":27,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":151,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesIteratorRemoveChangesMap":639,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":226,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":138,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":200,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":377,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":136,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":311,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCanonicalEmptyCollectionExists":241,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":36,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":3,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetIteratorRemoveChangesMap":414,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":554,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":58,"org.apache.commons.collections4.set.PredicatedSetTest.testSetHashCode":175,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":529,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":257,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":354,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":426,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":158,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectEqualsSelf":192,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":388,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":293,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":203,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":496,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":298,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":499,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":360,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":399,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":398,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":397,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":32,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":472,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":469,"org.apache.commons.collections4.map.LRUMapTest.testClone":447,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":549,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":521,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":201,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":53,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":199,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":71,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":622,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":509,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":186,"org.apache.commons.collections4.set.PredicatedSetTest.testSimpleSerialization":196,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectHashCodeEqualsSelfHashCode":198,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":409,"org.apache.commons.collections4.set.PredicatedSetTest.testCanonicalFullCollectionExists":193,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":490,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":55,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":313,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":21,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":148,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":523,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":333,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":97,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":455,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":322,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":383,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":432,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":578,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":532,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":213,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":537,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":417,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":567,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":577,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":84,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsContract":238,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":253,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":164,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":369,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":104,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":243,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":351,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":618,"org.apache.commons.collections4.set.PredicatedSetTest.testCanonicalEmptyCollectionExists":195,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":349,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsContract":247,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":378,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":468,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":476,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":29,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":518,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":371,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":94,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray2":233,"org.apache.commons.collections4.map.TransformedSortedMapTest.initializationError":0,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectHashCodeEqualsContract":197,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":467,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":564,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":466,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":34,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":465,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":92,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMakeMap":419,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":128,"org.apache.commons.collections4.set.PredicatedSetTest.testEqualsNull":194,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":625,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":504,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":324,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":110,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":277,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":271,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":402,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":560,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":310,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":630,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":44,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":592,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":629,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":652,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":438,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":474,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":366,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":516,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":189,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":64,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":120,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":619,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":540,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":191,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":272,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":170,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":454,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":556,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":113,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":599,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":551,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":382,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":442,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":538,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":307,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":508,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIteratorRemove":180,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":566,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":584,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":515,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":502,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":162,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSimpleSerialization":240,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":510,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":59,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":230,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":130,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSerializeDeserializeThenCompare":235,"org.apache.commons.collections4.set.PredicatedSetTest.testGetSet":172,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":573,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":365,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":429,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":75,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":487,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":486,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":528,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":485,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":640,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":112,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":480,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":263,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":341,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":91,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":583,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":522,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":543,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":166,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":250,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":494,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":14,"org.apache.commons.collections4.map.ListOrderedMap2Test.testIndexOf":139,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":570,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":534,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":591,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":68,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":593,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":217,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":453,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":617,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":631,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":273,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":122,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":558,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":587,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionSize":231,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":594,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":428,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":445,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":137,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":615,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":220,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":95,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":266,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":287,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":362,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":276,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":31,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":290,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":339,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":501,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":258,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":443,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":336,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":85,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":470,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":514,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":488,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":511,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":606,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":304,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":165,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetHashCode":218,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":596,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":33,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":473,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":150,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":318,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":302,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":61,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":284,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":62,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":63,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectEqualsSelf":237,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":497,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":328,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":483,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLessOrEqual":645,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":482,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":650,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":434,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":484,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":632,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":642,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":600,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":228,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":374,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":208,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":601,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":168,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":533,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":252,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":356,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":329,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":98,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":321,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":582,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":12,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":11,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":8,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":308,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":7,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":10,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":167,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":9,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":4,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":6,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":550,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":41,"org.apache.commons.collections4.set.CompositeSetTest.testContains":585,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":207,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":611,"org.apache.commons.collections4.CollectionUtilsTest.isFull":2,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":526,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":460,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":547,"org.apache.commons.collections4.ListUtilsTest.testEmptyIfNull":141,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":408,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":471,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals":643,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":337,"org.apache.commons.collections4.ListUtilsTest.testSelect":581,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionClear":222,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":306,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":562,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":641,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":435,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionClear":184,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":610,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":269,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":406,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":407,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":536,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":144,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":204,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":635,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":363,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":579,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":609,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":174,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":634,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":102,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":262,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":561,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":268,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":295,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":613,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":256,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":353,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":649,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":15,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":66,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":117,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":331,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":116,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":448,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":350,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":39,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":83,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":343,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsSelfHashCode":239,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":35,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":357,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":323,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":614,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":109,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":344,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":507,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":541,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":452,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":54,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":60,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":107,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":637,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":20,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":517,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":413,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":176,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":309,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":297,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":347,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":171,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":346,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":345,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":352,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":96,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":149,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":100,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":209,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":574,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":401,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":24,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":542,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":264,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":437,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":364,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":492,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":51,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":146,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":285,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":38,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":355,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":223,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":118,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":450,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":280,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":524,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":638,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":90,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":624,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":50,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":48,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":125,"org.apache.commons.collections4.functors.ComparatorPredicateTest.predicateSanityTests":648,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":260,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":603,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":46,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":224,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":47,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullKey":421,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":202,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":391,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":143,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":275,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":520,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":440,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":26,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":106,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":72,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":519,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":379,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":185,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":210,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":459,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":325,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking":491,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":261,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":124,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":205,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":219,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":319,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":500,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCanonicalFullCollectionExists":242,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":580,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testComparator":214,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":444,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":418,"org.apache.commons.collections4.map.UnmodifiableMapTest.testUnmodifiable":405,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToString":234,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":527,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":154,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":512,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":249,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":254,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":633,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":291,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":335,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":464,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiRemove":563,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":589,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":376,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":70,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":132,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":74,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":462,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":463,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":361,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":160,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":281,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":157,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":598,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":181,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":342,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":332,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":475,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":16,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":161,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":283,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":461,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":416,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":270,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":147,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":458,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":315,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":525},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[0],"tindex":"f54474f6-3e62-11e6-a35e-07fb69c272cf","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:66","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformingSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[1],"tindex":"f544c317-3e62-11e6-a35e-c360040d968b","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"f544c318-3e62-11e6-a35e-59482902180e","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:199","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            final int int = hash(key1, key2);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"f544ea29-3e62-11e6-a35e-7313e631402c","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:196","type":"CtMethodImpl","sourcecode":"public void setForwardSort(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.BitSet.clear(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"f544ea2a-3e62-11e6-a35e-e508ecf92eca","method":{"position":"org.apache.commons.collections4.BagUtils:180","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedSortedBag.synchronizedSortedBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15],"tindex":"f544ea2b-3e62-11e6-a35e-0f92b37f1d84","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:339","type":"CtMethodImpl","sourcecode":"private int decrement(int index) {\n    if (index < 0) {\n        {\n            index--;\n            if (index < 0) {\n                index = (int) - 1;\n            } \n            return index;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"f545113c-3e62-11e6-a35e-afbc37085914","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[16,17,18,19,20,21,22],"tindex":"f545113d-3e62-11e6-a35e-d956a2f6bac9","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:951","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.remove(key);\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getRight(dataElement)) == node"},"failures":[23,24,25,26,27,28,29,30,31,32],"tindex":"f545113e-3e62-11e6-a35e-f1aac2adab2b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1959","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n        {\n            boolean[][dataElement.ordinal()] = node.boolean[][dataElement.ordinal()];\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"tindex":"f545384f-3e62-11e6-a35e-d3b77f451633","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:252","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getEntry(final java.lang.Object k) {\n    if (k == null) {\n        {\n            final K K = castKey(k);\n            if (key == null) {\n                return null;\n            } \n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K)) ? entry : null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[86,87],"tindex":"f5453850-3e62-11e6-a35e-e9b315b712d3","method":{"position":"org.apache.commons.collections4.map.LinkedMap:143","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntry(index).getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1083","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[88,89,33,34,90,91,92,35,36,93,94,37,38,39,40,95,41,96,42,97,98,43,44,99,100,101,45,46,47,48,49,50,102,103,104,105,106,107,108,109,51,52,53,110,111,112],"tindex":"f5455e61-3e62-11e6-a35e-ed2abd0cf778","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:57","type":"CtMethodImpl","sourcecode":"static boolean isOutOfBoundsIndex(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)) {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[],"tindex":"f5455e62-3e62-11e6-a35e-d9656b4575ba","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<K, V>.equals(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"f5455e63-3e62-11e6-a35e-bdf384ed1959","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1004","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            rangeCheck(index, ((int) + 1));\n            final int int = coll.size();\n            if (cSize == 0) {\n                return false;\n            } \n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.addAll(((int) + index), coll);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            int += cSize;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[113],"tindex":"f5458574-3e62-11e6-a35e-bb4699513c0e","method":{"position":"org.apache.commons.collections4.ClosureUtils:113","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (closure == null) {\n        {\n            return org.apache.commons.collections4.functors.ForClosure.forClosure(count, closure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[114,115,116,117,118,119],"tindex":"f5458575-3e62-11e6-a35e-0727c73e8064","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:70","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName , paramTypes , args);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"f5458576-3e62-11e6-a35e-07911d352d44","method":{"position":"org.apache.commons.collections4.SetUtils:246","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> orderedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            return org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:234","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"f5458577-3e62-11e6-a35e-6b90fe68b870","method":{"position":"org.apache.commons.collections4.IteratorUtils:938","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> toListIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[120,121],"tindex":"f545ac88-3e62-11e6-a35e-1f9f0fd297ee","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:242","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            return entry.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[88,89,33,34,91,92,90,35,36,93,94,37,38,39,40,95,41,96,42,97,98,43,44,99,100,101,45,46,47,48,49,50,102,103,104,105,106,107,108,109,51,52,53,110,111,112],"tindex":"f545ac89-3e62-11e6-a35e-85e52802083a","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:79","type":"CtMethodImpl","sourcecode":"static boolean isValidBitIndex(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex >= 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"f545ac8a-3e62-11e6-a35e-d97fbc4c0943","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:121","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:95","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[122],"tindex":"f545ac8b-3e62-11e6-a35e-232693fa5627","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:92","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n            } \n            if ((map.size()) == 0) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = map.remove(null);\n            final int int = map.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<? super I>[] org.apache.commons.collections4.Predicate<? super I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> : map.entrySet()) {\n                preds[i] = entry.getKey();\n                transformers[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(false , preds , transformers , defaultTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138],"tindex":"f545ac8c-3e62-11e6-a35e-937e44fd4824","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:105","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return decorated().getCount(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[139,140],"tindex":"f545d39d-3e62-11e6-a35e-d1468ffd5863","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:410","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<K>.indexOf(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f545d39e-3e62-11e6-a35e-095a7616d255","method":{"position":"org.apache.commons.collections4.MapUtils:297","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Float) {\n                return ((java.lang.Float)(answer));\n            } \n            return java.lang.Float.valueOf(answer.floatValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[141],"tindex":"f545d39f-3e62-11e6-a35e-bb5b845a7753","method":{"position":"org.apache.commons.collections4.ListUtils:61","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> emptyIfNull(final java.util.List<T> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return list == null ? java.util.Collections.<T>emptyList() : list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"f545d3a0-3e62-11e6-a35e-1d1ea5d62001","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:225","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            K K = null;\n            if (java.util.Map<V, K>.containsKey(value)) {\n                key = java.util.Map<V, K>.remove(value);\n                java.util.Map<K, V>.remove(key);\n            } \n            return key;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[142],"tindex":"f545d3a1-3e62-11e6-a35e-4b2069ea1158","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[143],"tindex":"f545d3a2-3e62-11e6-a35e-49b9ee83c1cb","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169],"tindex":"f545fab3-3e62-11e6-a35e-23261108bf06","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198],"tindex":"f545fab4-3e62-11e6-a35e-7936ab75c5f1","method":{"position":"org.apache.commons.collections4.set.PredicatedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSet<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSet<E>(set , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[],"tindex":"f545fab5-3e62-11e6-a35e-95e2897d9951","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[],"tindex":"f545fab6-3e62-11e6-a35e-7fb17d136cf4","method":{"position":"org.apache.commons.collections4.map.LinkedMap:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:207","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"f545fab7-3e62-11e6-a35e-13ffff5d16ff","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:188","type":"CtMethodImpl","sourcecode":"public void setIterator(final int index, final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.set(index, iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"f54621c8-3e62-11e6-a35e-11055b5fc528","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:204","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            key2 = isKeyType(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<?>)(key2)).get();\n            return key1 == key2;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[114,115,117,199,200,201,202,203,204,205,118,119],"tindex":"f54621c9-3e62-11e6-a35e-ad18bdc5e50b","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic O transform(final java.lang.Object input) {\n    if (input == null) {\n        {\n            if (input == null) {\n                return null;\n            } \n            try {\n                final java.lang.Class<?> java.lang.Class<?> = input.getClass();\n                final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(java.lang.String, java.lang.Class<?>[]);\n                return ((O)(method.invoke(input, java.lang.Object[])));\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' does not exist\"));\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' cannot be accessed\"));\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' threw an exception\") , ex);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"f54621ca-3e62-11e6-a35e-e90cc8e7ce75","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().equals(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f54621cb-3e62-11e6-a35e-b31f5ea6022b","method":{"position":"org.apache.commons.collections4.MapUtils:526","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key, final java.lang.Float defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"f54621cc-3e62-11e6-a35e-e1bc90813b24","method":{"position":"org.apache.commons.collections4.CollectionUtils:98","type":"CtMethodImpl","sourcecode":"public int freqA(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"f54648dd-3e62-11e6-a35e-fd18f8f78ab2","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[206],"tindex":"f54648de-3e62-11e6-a35e-0b7bc291ba1f","method":{"position":"org.apache.commons.collections4.CollectionUtils:409","type":"CtMethodImpl","sourcecode":"public static boolean containsAny(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if (coll2.isEmpty()) {\n        {\n            if ((coll1.size()) < (coll2.size())) {\n                for (final java.lang.Object java.lang.Object : coll1) {\n                    if (coll2.contains(aColl1)) {\n                        return true;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (coll1.contains(aColl2)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[142],"tindex":"f54648df-3e62-11e6-a35e-333d0c07502d","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[1,207,208],"tindex":"f54648e0-3e62-11e6-a35e-099b3d00a644","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"f54648e1-3e62-11e6-a35e-f1c735a1854c","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:738","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((multi.size()) >= 2) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[209],"tindex":"f5466ff2-3e62-11e6-a35e-4b9e0b6de85b","method":{"position":"org.apache.commons.collections4.CollectionUtils:774","type":"CtMethodImpl","sourcecode":"public static <T>boolean filterInverse(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.CollectionUtils.filter(collection, (predicate == null ? null : org.apache.commons.collections4.PredicateUtils.notPredicate(predicate)));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[202,205],"tindex":"f5466ff3-3e62-11e6-a35e-613ba8035755","method":{"position":"org.apache.commons.collections4.CollectionUtils:722","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    final T T = iterator.next();\n                    if (iterator.hasNext()) {\n                        closure.execute(element);\n                    } else {\n                        return element;\n                    }\n                }\n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f5466ff4-3e62-11e6-a35e-290babf100f4","method":{"position":"org.apache.commons.collections4.MapUtils:1329","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.FixedSizeMap.fixedSizeMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[210],"tindex":"f5466ff5-3e62-11e6-a35e-3b88ec6738bf","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:67","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:816","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[211,212],"tindex":"f5466ff6-3e62-11e6-a35e-a1eb10af0d18","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:815","type":"CtMethodImpl","sourcecode":"protected void checkKey(final org.apache.commons.collections4.keyvalue.MultiKey<?> key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                throw new java.lang.NullPointerException(\"Key must not be null\");\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[213],"tindex":"f5466ff7-3e62-11e6-a35e-413d6b85e881","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((transformers.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(transformers);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242],"tindex":"f5469708-3e62-11e6-a35e-59f5b5c9d0e3","method":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(set , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"f5469709-3e62-11e6-a35e-013a9d1b02f9","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:418","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"f546970a-3e62-11e6-a35e-1d712362e14b","method":{"position":"org.apache.commons.collections4.MapUtils:1588","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"f546970b-3e62-11e6-a35e-0faf8d3db6eb","method":{"position":"org.apache.commons.collections4.SetUtils:274","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> synchronizedSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return java.util.Collections.synchronizedSortedSet(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"f546970c-3e62-11e6-a35e-c12d2ed85137","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1020","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index > 0) {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.set((index + (int)), obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[243],"tindex":"f546970d-3e62-11e6-a35e-7bd9dc68da85","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:332","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[244],"tindex":"f546be1e-3e62-11e6-a35e-15c0e5bb010f","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:74","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeSortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.FixedSizeSortedMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[245],"tindex":"f546be1f-3e62-11e6-a35e-f785fec8858d","method":{"position":"org.apache.commons.collections4.IteratorUtils:805","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.Node node) {\n    if (node == null) {\n        {\n            if (node == null) {\n                throw new java.lang.NullPointerException(\"Node must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(node);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[246,247,248],"tindex":"f546be20-3e62-11e6-a35e-9b86bd7bd879","method":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        {\n            if ((org.apache.commons.collections4.comparators.TransformingComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.TransformingComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.TransformingComparator<?, ?> org.apache.commons.collections4.comparators.TransformingComparator<?, ?> = ((org.apache.commons.collections4.comparators.TransformingComparator<?, ?>)(object));\n                return null == (java.util.Comparator<O>) ? null == (comp.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(comp.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>);\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f546be21-3e62-11e6-a35e-6f14816d973a","method":{"position":"org.apache.commons.collections4.MapUtils:605","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return 0;\n            } \n            return byteObject.byteValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,207,279,280,281,282,283,211,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316],"tindex":"f546e532-3e62-11e6-a35e-c3ad99898351","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:93","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if (key == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().get(key);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"f546e533-3e62-11e6-a35e-09dd6e5f2a89","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:317","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryBefore(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,23,388,389,390,24,391,392,393,394,395,396,397,398,399,25,400,401,26,27,402,403,28,29,30,31,32],"tindex":"f546e534-3e62-11e6-a35e-61fa6896c16b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:538","type":"CtMethodImpl","sourcecode":"private V doRemoveKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[35,36,37,38,39,41,42,43,44,54,55,56,57,58,60,67,68,69,70,71,73,74,75,76],"tindex":"f546e535-3e62-11e6-a35e-31871544aa1b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1463","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            return containsKey(o);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[404,405,406,407,408,409,410,411,412,413,276,414,415,416,417,418,419,420,421,422,423,424,425,277,426,427,428,429,278,430,431,432],"tindex":"f5470c46-3e62-11e6-a35e-3ba0b6f42513","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:62","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[88,89,33,34,90,91,92,35,36,93,94,37,38,39,40,95,41,96,42,97,98,43,44,99,100,101,45,46,47,48,49,50,102,103,104,105,106,107,108,109,51,52,53,110,111,112],"tindex":"f5470c47-3e62-11e6-a35e-6d758c63a1de","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:110","type":"CtMethodImpl","sourcecode":"final boolean isBitSet(final K key, final int bitIndex, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        {\n            if (key == null) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer<? super K>.isBitSet(key, bitIndex, lengthInBits);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"f5470c48-3e62-11e6-a35e-0336dd5900c0","method":{"position":"org.apache.commons.collections4.set.CompositeSet:227","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                if (set.contains(obj)) {\n                    return set.remove(obj);\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"f5470c49-3e62-11e6-a35e-250c93786e62","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:537","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.getValue(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"f5470c4a-3e62-11e6-a35e-89cd17d782f9","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2115","type":"CtMethodImpl","sourcecode":"public V removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[433,434,435,436,437,438,439,440,441,442,443,444],"tindex":"f547335b-3e62-11e6-a35e-abe8a38ccb28","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:438","type":"CtMethodImpl","sourcecode":"protected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        {\n            return (key == null ? 0 : key.hashCode()) ^ (value == null ? 0 : value.hashCode());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[445,446],"tindex":"f547335c-3e62-11e6-a35e-8f429206eb16","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:657","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key2 != null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            if (key5 != null) {\n                h ^= key5.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"tindex":"f547335d-3e62-11e6-a35e-7d2db0a1cf4d","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:205","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(super.getEntry(key)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[2,3],"tindex":"f547335e-3e62-11e6-a35e-25cb5c55459d","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:80","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            if (coll == null) {\n                throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n            } \n            for (int int = 0 ; i < 1000 ; i++) {\n                if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                    break;\n                } \n                if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n                    coll = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(coll)).decorated();\n                } else if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n                    coll = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(coll)).decorated();\n                } \n            }\n            if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(((org.apache.commons.collections4.BoundedCollection<E>)(coll)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"f547335f-3e62-11e6-a35e-cfec5ee6a5d0","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.TransformedQueue:77","type":"CtBinaryOperatorImpl","sourcecode":"(queue.size()) > 0"},"failures":[],"tindex":"f5475a70-3e62-11e6-a35e-c1f959b34e05","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:73","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformedQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if ((queue.size()) > 0) {\n        {\n            final org.apache.commons.collections4.queue.TransformedQueue<E> org.apache.commons.collections4.queue.TransformedQueue<E> = new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n            if ((queue.size()) > 0) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(queue.toArray()));\n                queue.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[489,490],"tindex":"f5475a71-3e62-11e6-a35e-891a3e98aff2","method":{"position":"org.apache.commons.collections4.map.CompositeMap:381","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"No mutator specified\");\n            } \n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.putAll(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520],"tindex":"f5475a72-3e62-11e6-a35e-cb769d377e78","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        {\n            return decorated().remove(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"f5475a73-3e62-11e6-a35e-6d4d9ac7b785","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:202","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final E E : coll) {\n                result |= add(e);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[521],"tindex":"f5475a74-3e62-11e6-a35e-0fcdd8dd3608","method":{"position":"org.apache.commons.collections4.map.Flat3Map:437","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(key);\n            } \n            if ((int) == 0) {\n                return null;\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        return null;\n                    case 2 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        return null;\n                    case 1 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 0;\n                            return old;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            return null;\n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            return null;\n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 0;\n                                return old;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[522,16,523,524,525,526,17,527,528,529,530,531,18,532,533,534,535,536,461,537,538,19,539,468,469,470,540,521,541,542,20,543,544,545,546,547,481,548,549,21,550,488,551,552,553,554,555,556,22,557,558,559,560,561],"tindex":"f5478185-3e62-11e6-a35e-39193c8f249d","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:598","type":"CtMethodImpl","sourcecode":"protected void destroyEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            entry.java.lang.Object = null;\n            entry.java.lang.Object = null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[562],"tindex":"f547a896-3e62-11e6-a35e-1191f9a92f39","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:379","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[122],"tindex":"f547a897-3e62-11e6-a35e-734a2544bb07","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:57","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((predicates.int) != (transformers.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(predicates , transformers , defaultTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[563],"tindex":"f547a898-3e62-11e6-a35e-65ff6f4126a1","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:51","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"f547a899-3e62-11e6-a35e-b583d0477226","method":{"position":"org.apache.commons.collections4.IteratorUtils:888","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Enumeration<E> asEnumeration(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorEnumeration<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"f547a89a-3e62-11e6-a35e-15410ac20ce4","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:701","type":"CtMethodImpl","sourcecode":"public void atomic(final java.lang.Runnable r) {\n    if (r == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (r == null) {\n                throw new java.lang.NullPointerException();\n            } \n            atomic(r, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[564,565,150,157,566,567,130,568,569,143,570,571,572,573,574,575,576,138,577,578],"tindex":"f547a89b-3e62-11e6-a35e-f324fb50034d","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:76","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            return decorated().remove(object, count);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"f547cfac-3e62-11e6-a35e-b1600ed10b81","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:93","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if (key == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().get(key);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag<?>"},"failures":[105,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,351,611,26,612,613,614,615,616,617,618,531,270,619,620,621,622,409,538,623,624,542,625,626,627,628,629,630,631,632,489,633,549,634,635,636,556,637,638,639,640,303,641],"tindex":"f547cfad-3e62-11e6-a35e-63c678b3eae5","method":{"position":"org.apache.commons.collections4.CollectionUtils:438","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Map<O, java.lang.Integer> getCardinalityMap(final java.lang.Iterable<? extends O> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n        {\n            final java.util.Map<O, java.lang.Integer> java.util.Map<O, java.lang.Integer> = new java.util.HashMap<O, java.lang.Integer>();\n            for (final O O : coll) {\n                final java.lang.Integer java.lang.Integer = count.get(obj);\n                if (c == null) {\n                    count.put(obj, java.lang.Integer.valueOf(1));\n                } else {\n                    count.put(obj, java.lang.Integer.valueOf(((c.intValue()) + 1)));\n                }\n            }\n            return count;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[642],"tindex":"f547cfae-3e62-11e6-a35e-91be843a9a7c","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:74","type":"CtBinaryOperatorImpl","sourcecode":"(transformers.size()) == 0"},"failures":[213],"tindex":"f547cfaf-3e62-11e6-a35e-cb69702d107b","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:70","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if ((transformers.size()) == 0) {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n            } \n            if ((transformers.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<T, T>[] org.apache.commons.collections4.Transformer<T, T>[] = transformers.toArray(new org.apache.commons.collections4.Transformer[transformers.size()]);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , cmds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:126","type":"CtBinaryOperatorImpl","sourcecode":"criterion == null"},"failures":[643,644,645,646,647,648],"tindex":"f547cfb0-3e62-11e6-a35e-9bceb1a3deba","method":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:121","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> comparatorPredicate(final T object, final java.util.Comparator<T> comparator, final org.apache.commons.collections4.functors.ComparatorPredicate.Criterion criterion) {\n    if (criterion == null) {\n        {\n            if (comparator == null) {\n                throw new java.lang.IllegalArgumentException(\"Comparator must not be null.\");\n            } \n            if (criterion == null) {\n                throw new java.lang.IllegalArgumentException(\"Criterion must not be null.\");\n            } \n            return new org.apache.commons.collections4.functors.ComparatorPredicate<T>(object , comparator , criterion);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"criterion":"criterion"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"f547cfb1-3e62-11e6-a35e-ffdcd80b563b","method":{"position":"org.apache.commons.collections4.MapUtils:446","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Byte getByte(final java.util.Map<? super K, ?> map, final K key, final java.lang.Byte defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"f547f6c2-3e62-11e6-a35e-35e6be8206ea","method":{"position":"org.apache.commons.collections4.MapUtils:1144","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> putAll(final java.util.Map<K, V> map, final java.lang.Object[] array) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            map.size();\n            if ((array == null) || ((array.int) == 0)) {\n                return map;\n            } \n            final java.lang.Object java.lang.Object = array[0];\n            if (obj instanceof java.util.Map.Entry) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(element));\n                    map.put(entry.getKey(), entry.getValue());\n                }\n            } else if (obj instanceof org.apache.commons.collections4.KeyValue) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(element));\n                    map.put(keyval.getKey(), keyval.getValue());\n                }\n            } else if (obj instanceof java.lang.Object[]) {\n                for (int int = 0 ; i < (array.int) ; i++) {\n                    final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(array[i]));\n                    if ((sub == null) || ((sub.int) < 2)) {\n                        throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + i));\n                    } \n                    map.put(((K)(sub[0])), ((V)(sub[1])));\n                }\n            } else {\n                for (int int = 0 ; i < ((array.int) - 1) ; ) {\n                    map.put(((K)(array[(i++)])), ((V)(array[(i++)])));\n                }\n            }\n            return map;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f547f6c3-3e62-11e6-a35e-876271843f6a","method":{"position":"org.apache.commons.collections4.MapUtils:762","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key, final short defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return defaultValue;\n            } \n            return shortObject.shortValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[581,582,590,591,595,597,603,606,608,609,610],"tindex":"f547f6c4-3e62-11e6-a35e-af2db1b0cfaa","method":{"position":"org.apache.commons.collections4.CollectionUtils:510","type":"CtMethodImpl","sourcecode":"public static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((b.size()) != (a.size())) {\n        {\n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n            if ((helper.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (helper.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n                return false;\n            } \n            for (final java.lang.Object java.lang.Object : helper.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n                if ((helper.freqA(obj)) != (helper.freqB(obj))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[649],"tindex":"f547f6c5-3e62-11e6-a35e-7355a1df49a2","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:631","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(obj);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    final java.lang.Object java.lang.Object = n.getKey();\n                    if ((k == obj) || ((k != null) && (k.equals(obj)))) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(k);\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[650,651],"tindex":"f5481dd6-3e62-11e6-a35e-755590b4c100","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:344","type":"CtMethodImpl","sourcecode":"public java.lang.Object remove(final int index) {\n    if (index < 0) {\n        {\n            final java.lang.Object java.lang.Object = java.util.List<E>.remove(index);\n            remove(obj);\n            return obj;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.LazyList:92","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[],"tindex":"f5481dd7-3e62-11e6-a35e-99574d76a5f7","method":{"position":"org.apache.commons.collections4.ListUtils:477","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (factory == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.LazyList.lazyList(list, factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:79","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (bag != null)) && ((bag.size()) > 0)"},"failures":[652],"tindex":"f5481dd8-3e62-11e6-a35e-ef764ccb3bb0","method":{"position":"org.apache.commons.collections4.BagUtils:136","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        {\n            return org.apache.commons.collections4.bag.TransformedBag.transformingBag(bag, transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"f5481dd9-3e62-11e6-a35e-ede332afe139","method":{"position":"org.apache.commons.collections4.CollectionUtils:774","type":"CtMethodImpl","sourcecode":"public static <T>boolean filterInverse(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.CollectionUtils.filter(collection, (predicate == null ? null : org.apache.commons.collections4.PredicateUtils.notPredicate(predicate)));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273526/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}