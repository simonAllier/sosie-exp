{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":408,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":289,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":224,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":16,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":87,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":368,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":512,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":163,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":421,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":445,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":200,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":68,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":78,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":77,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":60,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":61,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":557,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":338,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":253,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":251,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":244,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":418,"org.apache.commons.collections4.CollectionUtilsTest.collect":0,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":315,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":317,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":316,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":121,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":324,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":430,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":198,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":297,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":93,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":540,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":381,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":465,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":423,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":157,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":414,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":160,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":274,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":464,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":8,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":188,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":290,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":162,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":459,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":304,"org.apache.commons.collections4.ListUtilsTest.testLazyList":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":54,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":142,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":238,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":350,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":412,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":250,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":453,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":583,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":451,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":282,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":20,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":376,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":85,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":526,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":51,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":109,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":337,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":460,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":522,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":444,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":86,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":178,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":53,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":208,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":333,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":364,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":73,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":379,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":94,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":559,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":66,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":433,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":434,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":432,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":382,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":227,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":59,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":560,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":588,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":71,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":99,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":426,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":278,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":366,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":367,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":387,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":419,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":469,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":513,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":340,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":567,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":152,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":501,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":118,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":500,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":499,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":138,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":216,"org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf":391,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":409,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":406,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":472,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":187,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":509,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":404,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":361,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":161,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":490,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":514,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":424,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":357,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":125,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":362,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":532,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":242,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":599,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":139,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":587,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":273,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":83,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":231,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":124,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":168,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":351,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":403,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":447,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":284,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":17,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":349,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":48,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":348,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":110,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":345,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":489,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":505,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":56,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":275,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":336,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":547,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":439,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":307,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":140,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":141,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":276,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":431,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":4,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":256,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":111,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":422,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":243,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":28,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":287,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":518,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":279,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":427,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":536,"org.apache.commons.collections4.list.TreeListTest.testRemove":516,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":298,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":529,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":365,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":442,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":245,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":189,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":548,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking":342,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":415,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":541,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":127,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":296,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":37,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":67,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":165,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":202,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":295,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":294,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":164,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":25,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":76,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":485,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":584,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":425,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":291,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":545,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":292,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":293,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":132,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":358,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":147,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":396,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":437,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":495,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":436,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":435,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":449,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":123,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":521,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":553,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":101,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":595,"org.apache.commons.collections4.map.LRUMapTest.testClone":180,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":88,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":65,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":104,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":169,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":186,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":330,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":146,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":270,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveChangesMap":45,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":205,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":197,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":515,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":301,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":563,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":234,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":354,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":544,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":130,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":280,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":493,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":89,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":115,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":14,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":468,"org.apache.commons.collections4.list.TreeListTest.testListEquals":525,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":255,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":207,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":455,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":392,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":413,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":80,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":369,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":359,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":96,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":491,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":57,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":26,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":13,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":384,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":52,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Array":323,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":262,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":405,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":264,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":483,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":43,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":12,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":312,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":481,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":201,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":416,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":100,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":159,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":283,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":446,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":572,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":407,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":193,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":248,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":42,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":223,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":222,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":221,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":352,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":388,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":254,"org.apache.commons.collections4.map.LRUMapTest.testReset":181,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":558,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":457,"org.apache.commons.collections4.map.SingletonMapTest.testClone":126,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":443,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":18,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":74,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":156,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":252,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":47,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":177,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":302,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":259,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":402,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":570,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":150,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":258,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":346,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":341,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":380,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":103,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":128,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":6,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":591,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":194,"org.apache.commons.collections4.map.LinkedMapTest.testReset":144,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":206,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":520,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":69,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":92,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":209,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":247,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":347,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":420,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":97,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":546,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":277,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":537,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":562,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":508,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":593,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":550,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":580,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":575,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":237,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":569,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":556,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":373,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":329,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":393,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":27,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":334,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":564,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":313,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":394,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":494,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":225,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":233,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":332,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":363,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":600,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":401,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":503,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":235,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":175,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":22,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":120,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":167,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":174,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":581,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":9,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":173,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":539,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":300,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":166,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":383,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":375,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":474,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":524,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":176,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":113,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":246,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":108,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":523,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":229,"org.apache.commons.collections4.map.ListOrderedMap2Test.testIndexOf":395,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":82,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":576,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":204,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":371,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":372,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":511,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":72,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":24,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":309,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":596,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":377,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":582,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":263,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":135,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":232,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":378,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":398,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":288,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":448,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":473,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":355,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":331,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":463,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":212,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":102,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":568,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":594,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":91,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":565,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":136,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":335,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":191,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":269,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":577,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":155,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":226,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":450,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":11,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":535,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":527,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":461,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":552,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":543,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":29,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":171,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":528,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":170,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":172,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":41,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":530,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":411,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":149,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":327,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":190,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":81,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":271,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":154,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":241,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":308,"org.apache.commons.collections4.ListUtilsTest.testDefaultIfNull":257,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":487,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":325,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":462,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":239,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":285,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":454,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":579,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":549,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":1,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":35,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":34,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":31,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":129,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":326,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":531,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":33,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":90,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":32,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":179,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":328,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":10,"org.apache.commons.collections4.CollectionUtilsTest.isFull":36,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":117,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":145,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":214,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":261,"org.apache.commons.collections4.list.TreeListTest.testBug35258":519,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":112,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":3,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":148,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":438,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":471,"org.apache.commons.collections4.map.LinkedMapTest.testClone":143,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":542,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":538,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":502,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":265,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":84,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":517,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":286,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":399,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":299,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":64,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":58,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":267,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":199,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":266,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":598,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":75,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":122,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":484,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":195,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":137,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":466,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":183,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":504,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":482,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":305,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":318,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":597,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":476,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":507,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":589,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":590,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":488,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":131,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":353,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":456,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":281,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":477,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":561,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":203,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":107,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":153,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":344,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":571,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":496,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":390,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":480,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":479,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":478,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":440,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":106,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":428,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":400,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":322,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":374,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":50,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":486,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":213,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":303,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":63,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":196,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":116,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking2":343,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":321,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":320,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":319,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":49,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":339,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":429,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":314,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":492,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":40,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":574,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":441,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":79,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":578,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":151,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":573,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":417,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":268,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":551,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":15,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":249,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":211,"org.apache.commons.collections4.map.LRUMapTest.testLRU":182,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":458,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":534,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":452,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":498,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":510,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":555,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":19,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":260,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":356,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRetainAll":389,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":119,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":370,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":566,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":217,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":236,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":311,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":585,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":310,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":39,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":184,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":470,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":62,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":220,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":385,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":410,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":134,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":218,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":21,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":219,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":215,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":397,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":554,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":497,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":192,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":475,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":158,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":467,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":114,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":272,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":533,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":592,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":586,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":185,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":506,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":95,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":5,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRemoveChangesMap":44,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":46,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":360,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":386,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":240,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":210,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":306,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":228,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":230},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"(inputIterator != null) && (transformer != null)"},"failures":[0],"tindex":"4199bc8d-2e7e-11e6-b13c-9d911eaf428f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1063","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.util.Iterator<? extends I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if ((inputIterator != null) && (transformer != null)) {\n        {\n            if ((inputIterator != null) && (transformer != null)) {\n                while (inputIterator.hasNext()) {\n                    final I I = inputIterator.next();\n                    final O O = transformer.transform(item);\n                    outputCollection.add(value);\n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputIterator":"inputIterator","transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"419a7fde-2e7e-11e6-b13c-7300863d48ff","method":{"position":"org.apache.commons.collections4.list.PredicatedList:94","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[30],"tindex":"419a7fdf-2e7e-11e6-b13c-49e7ddbc9c81","method":{"position":"org.apache.commons.collections4.ListUtils:477","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                {\n                    return org.apache.commons.collections4.list.LazyList.lazyList(list, factory);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1069","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"419aa6f0-2e7e-11e6-b13c-e99b0ac38c89","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:64","type":"CtMethodImpl","sourcecode":"static boolean isEqualBitKey(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[],"tindex":"419aa6f1-2e7e-11e6-b13c-1dfd2b3e0317","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:589","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        {\n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(n.getKey());\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[],"tindex":"419af512-2e7e-11e6-b13c-61ac5b8bdeb4","method":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:109","type":"CtMethodImpl","sourcecode":"public T transform(final java.lang.Class<? extends T> input) {\n    if (input == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            try {\n                if (input == null) {\n                    throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Input object was not an instanceof Class, it was a null object\");\n                } \n                final java.lang.reflect.Constructor<? extends T> java.lang.reflect.Constructor<? extends T> = input.getConstructor(java.lang.Class<?>[]);\n                return con.newInstance(java.lang.Object[]);\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: The constructor must exist and be public \");\n            } catch (final java.lang.InstantiationException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: InstantiationException\" , ex);\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor must be public\" , ex);\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor threw an exception\" , ex);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[31,32,33,34,35,36,37],"tindex":"419b1c23-2e7e-11e6-b13c-15050161af53","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:339","type":"CtMethodImpl","sourcecode":"private int decrement(int index) {\n    if (index > 0) {\n        {\n            index--;\n            if (index < 0) {\n                index = (int) - 1;\n            } \n            return index;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[38],"tindex":"419b1c24-2e7e-11e6-b13c-ab3de26edfdc","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:285","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[36,37],"tindex":"419b4335-2e7e-11e6-b13c-878098acee61","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:80","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (coll == null) {\n                throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n            } \n            for (int int = 0 ; i < 1000 ; i++) {\n                if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                    break;\n                } \n                if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n                    coll = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(coll)).decorated();\n                } else if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n                    coll = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(coll)).decorated();\n                } \n            }\n            if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(((org.apache.commons.collections4.BoundedCollection<E>)(coll)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[39,40],"tindex":"419b6a46-2e7e-11e6-b13c-77edacf1be41","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:255","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if (coll.contains(it.next())) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[41,42],"tindex":"419b9157-2e7e-11e6-b13c-2d2260beb382","method":{"position":"org.apache.commons.collections4.CollectionUtils:606","type":"CtMethodImpl","sourcecode":"public static <O>int cardinality(final O obj, final java.lang.Iterable<? super O> coll) {\n    if (coll instanceof java.util.Set<?>) {\n        {\n            if (coll instanceof java.util.Set<?>) {\n                return ((java.util.Set<? super O>)(coll)).contains(obj) ? 1 : 0;\n            } \n            if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n                return ((org.apache.commons.collections4.Bag<? super O>)(coll)).getCount(obj);\n            } \n            int int = 0;\n            if (obj == null) {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (element == null) {\n                        count++;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (obj.equals(element)) {\n                        count++;\n                    } \n                }\n            }\n            return count;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[43],"tindex":"419bb868-2e7e-11e6-b13c-9f0f7554ae19","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"419bb869-2e7e-11e6-b13c-45ff9df06367","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[58],"tindex":"419bdf7a-2e7e-11e6-b13c-191203ef7fb7","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:792","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((((multi.size()) >= 4) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) && (key4 == null ? (multi.getKey(3)) == null : key4.equals(multi.getKey(3)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"419c068b-2e7e-11e6-b13c-91bca575d6de","method":{"position":"org.apache.commons.collections4.MapUtils:1542","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.PredicatedSortedMap.predicatedSortedMap(map, keyPred, valuePred);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[59,60,61,62,63],"tindex":"419c068c-2e7e-11e6-b13c-f726a21ad499","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.OnePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"419c2d9d-2e7e-11e6-b13c-ef1d5a880d1a","method":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PushbackIterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PushbackIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[64],"tindex":"419c54ae-2e7e-11e6-b13c-f3decc029d97","method":{"position":"org.apache.commons.collections4.CollectionUtils:1717","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> synchronizedCollection(final java.util.Collection<C> collection) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            return org.apache.commons.collections4.collection.SynchronizedCollection.synchronizedCollection(collection);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag<?>"},"failures":[],"tindex":"419c54af-2e7e-11e6-b13c-439923f2810e","method":{"position":"org.apache.commons.collections4.CollectionUtils:438","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Map<O, java.lang.Integer> getCardinalityMap(final java.lang.Iterable<? extends O> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Map<O, java.lang.Integer> java.util.Map<O, java.lang.Integer> = new java.util.HashMap<O, java.lang.Integer>();\n            for (final O O : coll) {\n                final java.lang.Integer java.lang.Integer = count.get(obj);\n                if (c == null) {\n                    count.put(obj, java.lang.Integer.valueOf(1));\n                } else {\n                    count.put(obj, java.lang.Integer.valueOf(((c.intValue()) + 1)));\n                }\n            }\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[65,66],"tindex":"419c7bc0-2e7e-11e6-b13c-4f949dd08d84","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:507","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.remove(value);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<java.lang.Object, V>.remove(key);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[],"tindex":"419ca2d1-2e7e-11e6-b13c-a985bc9094be","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:332","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        {\n            final int int = hash(key1, key2, key3);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key2"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120],"tindex":"419cc9e2-2e7e-11e6-b13c-d16feb638efc","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:337","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(java.lang.Object key) {\n    if (key != null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            final int int = hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    final V V = entry.getValue();\n                    removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"419cf0f3-2e7e-11e6-b13c-8b4d1c4e8922","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[121,122],"tindex":"419cf0f4-2e7e-11e6-b13c-3511c5d8073b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1505","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return containsValue(o);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[123,124],"tindex":"419d1805-2e7e-11e6-b13c-0146faf200dc","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:215","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[125],"tindex":"419d3f16-2e7e-11e6-b13c-ad86a133f0e7","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[126,127,128,129,130],"tindex":"419d3f17-2e7e-11e6-b13c-75c885aff5cf","method":{"position":"org.apache.commons.collections4.map.SingletonMap:221","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return isEqualKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:190","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[131],"tindex":"419d3f18-2e7e-11e6-b13c-2598f4b9673e","method":{"position":"org.apache.commons.collections4.IteratorUtils:920","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asMultipleUseIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[132,133],"tindex":"419d6629-2e7e-11e6-b13c-934c00d843f0","method":{"position":"org.apache.commons.collections4.CollectionUtils:663","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (collection == null) {\n                {\n                    if ((collection != null) && (closure != null)) {\n                        for (final T T : collection) {\n                            closure.execute(element);\n                        }\n                    } \n                    return closure;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"419d662a-2e7e-11e6-b13c-eb22587d317b","method":{"position":"org.apache.commons.collections4.MapUtils:1422","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> orderedMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,123,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,86,167,168,169,170,171,172,173,174,175,87,176,177,88,89,178,179,90,91,92,93,94,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,124,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,95,215,216,217,218,219,220,221,222,223,96,224,225,97,98,226,227,99,100,101,102,103,228,229,230,231,232,233,234,117,118,235,236,237,238,119,239,120,240,241,242,243],"tindex":"419d662b-2e7e-11e6-b13c-9775621244b1","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:262","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if (entry == null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = link;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"419d8d3c-2e7e-11e6-b13c-f9bf10a291ae","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:259","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.lang.Object put(final K key, final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(1);\n                coll.add(((V)(value)));\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.add(((V)(value)));\n            }\n            return result ? value : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[244],"tindex":"419db44d-2e7e-11e6-b13c-e74a1f12cd18","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:237","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"remove() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.remove(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1265","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[245,246,247,248,249,250,251,252,253,254,255,256],"tindex":"419db44e-2e7e-11e6-b13c-8339e1166a92","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:313","type":"CtMethodImpl","sourcecode":"private boolean set(final int i) {\n    if (i == (-1)) {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = java.util.ArrayList<java.util.Iterator<? extends E>>.get(i);\n            if (it.hasNext()) {\n                java.util.ArrayList<E>.set(i, it.next());\n                java.util.BitSet.set(i);\n                return true;\n            } \n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"419db44f-2e7e-11e6-b13c-4bcba1ee7926","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            if (null == object) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[257],"tindex":"419ddb60-2e7e-11e6-b13c-39e68dd8bf54","method":{"position":"org.apache.commons.collections4.ListUtils:75","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> defaultIfNull(final java.util.List<T> list, final java.util.List<T> defaultList) {\n    if (defaultList == null) {\n        {\n            return list == null ? defaultList : list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"defaultList"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:825","type":"CtBinaryOperatorImpl","sourcecode":"(input != null) && (predicate != null)"},"failures":[258],"tindex":"419ddb61-2e7e-11e6-b13c-0def8130f504","method":{"position":"org.apache.commons.collections4.CollectionUtils:823","type":"CtMethodImpl","sourcecode":"public static <C>int countMatches(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if ((input != null) && (predicate != null)) {\n        {\n            int int = 0;\n            if ((input != null) && (predicate != null)) {\n                for (final C C : input) {\n                    if (predicate.evaluate(o)) {\n                        count++;\n                    } \n                }\n            } \n            return count;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input","predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"419ddb62-2e7e-11e6-b13c-bf224872d9f8","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:134","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[259,260,261,262],"tindex":"419e77a3-2e7e-11e6-b13c-f5d83b73bf71","method":{"position":"org.apache.commons.collections4.list.TreeList:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index < 0) {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index);\n            final E E = node.E;\n            node.setValue(obj);\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:816","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[85,263,38,264,265,266,267,58,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308],"tindex":"419e77a4-2e7e-11e6-b13c-5bbfa35dcbe2","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:815","type":"CtMethodImpl","sourcecode":"protected void checkKey(final org.apache.commons.collections4.keyvalue.MultiKey<?> key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                throw new java.lang.NullPointerException(\"Key must not be null\");\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"419e9eb5-2e7e-11e6-b13c-2feb20ae8e52","method":{"position":"org.apache.commons.collections4.FactoryUtils:139","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, paramTypes, args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[309],"tindex":"419e9eb6-2e7e-11e6-b13c-871c1b6e6a64","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[310,311,312,313],"tindex":"419e9eb7-2e7e-11e6-b13c-c1a1c4a77e92","method":{"position":"org.apache.commons.collections4.PredicateUtils:337","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"419e9eb8-2e7e-11e6-b13c-6324d5e734c1","method":{"position":"org.apache.commons.collections4.CollectionUtils:1547","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final boolean includeDuplicates) {\n    if ((a == null) || (a == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), includeDuplicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[314],"tindex":"419ec5c9-2e7e-11e6-b13c-4df9d23b38c4","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:58","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"419ec5ca-2e7e-11e6-b13c-a50eb3483157","method":{"position":"org.apache.commons.collections4.ListUtils:477","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                {\n                    return org.apache.commons.collections4.list.LazyList.lazyList(list, factory);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[315,316,317,318,319,320,321,322],"tindex":"419ec5cb-2e7e-11e6-b13c-e3c1fd271cb8","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1415","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if ((contains(obj)) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(entry.getKey());\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"419eecdc-2e7e-11e6-b13c-79a11c298a74","method":{"position":"org.apache.commons.collections4.MapUtils:1506","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> synchronizedSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            return java.util.Collections.synchronizedSortedMap(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[323],"tindex":"419eecdd-2e7e-11e6-b13c-770626c59265","method":{"position":"org.apache.commons.collections4.CollectionUtils:1329","type":"CtMethodImpl","sourcecode":"public static int size(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return 0;\n            } \n            int int = 0;\n            if (object instanceof java.util.Map<?, ?>) {\n                total = ((java.util.Map<?, ?>)(object)).size();\n            } else if (object instanceof java.util.Collection<?>) {\n                total = ((java.util.Collection<?>)(object)).size();\n            } else if (object instanceof java.lang.Object[]) {\n                total = ((java.lang.Object[])(object)).int;\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    total++;\n                    it.next();\n                }\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    total++;\n                    it.nextElement();\n                }\n            } else {\n                try {\n                    total = java.lang.reflect.Array.getLength(object);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n            return total;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"419f13ee-2e7e-11e6-b13c-b1fa463cc838","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:708","type":"CtMethodImpl","sourcecode":"private void atomic(final java.lang.Runnable r, final int bucket) {\n    if (r == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bucket >= (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int)) {\n                r.run();\n                return ;\n            } \n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][bucket]) {\n                atomic(r, (bucket + 1));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[324],"tindex":"419f13ef-2e7e-11e6-b13c-412a10a9a63f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1120","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Iterator<? extends C> iterator) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            while (iterator.hasNext()) {\n                changed |= collection.add(iterator.next());\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"419f13f0-2e7e-11e6-b13c-a72ab92289da","method":{"position":"org.apache.commons.collections4.IteratorUtils:544","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E> iterator1, final java.util.Iterator<? extends E> iterator2) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterator1 , iterator2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[325],"tindex":"419f3b01-2e7e-11e6-b13c-41a479282643","method":{"position":"org.apache.commons.collections4.map.LazyMap:96","type":"CtMethodImpl","sourcecode":"public static <V, K>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[326],"tindex":"419f6212-2e7e-11e6-b13c-df02d053733e","method":{"position":"org.apache.commons.collections4.BagUtils:214","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.bag.PredicatedSortedBag.predicatedSortedBag(bag, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[159,163,87,88,207,211,96,97],"tindex":"419f6213-2e7e-11e6-b13c-6f05f7a230d0","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                    if ((entry.getValue()) == null) {\n                        return true;\n                    } \n                }\n            } else {\n                for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                    if (isEqualValue(value, entry.getValue())) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"419f8924-2e7e-11e6-b13c-11afc4d3e57d","method":{"position":"org.apache.commons.collections4.CollectionUtils:300","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (b == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<O> org.apache.commons.collections4.Predicate<O> = org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            return org.apache.commons.collections4.CollectionUtils.subtract(a, b, p);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[327,328,51],"tindex":"419f8925-2e7e-11e6-b13c-3d37bbbe34a4","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[38,329,264],"tindex":"419f8926-2e7e-11e6-b13c-59740532b7eb","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:577","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key3 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key3"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[243],"tindex":"419fb037-2e7e-11e6-b13c-d1aa2583a908","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:183","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends J, ? extends U> map) {\n    if (map.isEmpty()) {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"419fb038-2e7e-11e6-b13c-555ae8abe833","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:178","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            return (lookupValue(value)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"419fd749-2e7e-11e6-b13c-db40db3552fc","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:701","type":"CtMethodImpl","sourcecode":"public void atomic(final java.lang.Runnable r) {\n    if (r == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (r == null) {\n                throw new java.lang.NullPointerException();\n            } \n            atomic(r, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[330],"tindex":"419fd74a-2e7e-11e6-b13c-f353bb7fcb73","method":{"position":"org.apache.commons.collections4.CollectionUtils:684","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    closure.execute(iterator.next());\n                }\n            } \n            return closure;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[38],"tindex":"419fd74b-2e7e-11e6-b13c-4583a29042b9","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:154","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false"},"failures":[331,332,333,334,335,229,240,336,337,338],"tindex":"419ffe5c-2e7e-11e6-b13c-43053c366372","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().equals(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[339],"tindex":"419ffe5d-2e7e-11e6-b13c-ab56687a3e2a","method":{"position":"org.apache.commons.collections4.CollectionUtils:705","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (collection != null) && (closure != null) ? org.apache.commons.collections4.CollectionUtils.forAllButLastDo(collection.iterator(), closure) : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[340,341],"tindex":"41a0256e-2e7e-11e6-b13c-f7452f522f12","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return false;\n            } \n            return (entry.getValue()) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[342,343],"tindex":"41a0256f-2e7e-11e6-b13c-b36407d58b38","method":{"position":"org.apache.commons.collections4.list.TransformedList:131","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getList().remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"41a02570-2e7e-11e6-b13c-3f7ef915e99a","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:60","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedBag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedBag<E>(bag , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"41a04c81-2e7e-11e6-b13c-3bb45da2a313","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[],"tindex":"41a04c82-2e7e-11e6-b13c-d3dff4aee001","method":{"position":"org.apache.commons.collections4.ClosureUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,67,361,362,68,69,70,71,72,73,74,75,363,364,365,76,366,367,77,78,79,80,81,82,83,84,264,265,266,267,58,269,270,271,287,294,295,297,300,301,304,305,306,307,308,141,149,150,151,86,173,174,87,88,89,90,91,92,93,94,190,191,192,193,197,198,199,95,221,222,96,97,98,99,100,101,102,103,368,369,370,104,371,372,105,106,107,108,109,110,111,112,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387],"tindex":"41a04c83-2e7e-11e6-b13c-9bee71384641","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:598","type":"CtMethodImpl","sourcecode":"protected void destroyEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            entry.java.lang.Object = null;\n            entry.java.lang.Object = null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[388,389],"tindex":"41a07394-2e7e-11e6-b13c-cfa77e644b1e","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:180","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().retainAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[139,142,141,189],"tindex":"41a07395-2e7e-11e6-b13c-1d6ac06682a2","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:228","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" is less than zero\"));\n            } \n            if (index >= (int)) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" is invalid for size \") + (int)));\n            } \n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            if (index < ((int) / 2)) {\n                entry = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                }\n            } else {\n                entry = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                }\n            }\n            return entry;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[43],"tindex":"41a09aa6-2e7e-11e6-b13c-8b2199fdfc4e","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[],"tindex":"41a09aa7-2e7e-11e6-b13c-d104429f8096","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:999","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(int, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[390],"tindex":"41a09aa8-2e7e-11e6-b13c-afef106eecba","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.SetUniqueList.SetListListIterator<E>(super.listIterator(index) , java.util.Set<E>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[391,392,393,394,395],"tindex":"41a0c1b9-2e7e-11e6-b13c-b5c751a9bca0","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:410","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return java.util.List<K>.indexOf(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,54,481,482,483,55,484,485,486,487,488,489,490],"tindex":"41a0c1ba-2e7e-11e6-b13c-0fed85501e46","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1229","type":"CtMethodImpl","sourcecode":"private static void checkValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507],"tindex":"41a0e8cb-2e7e-11e6-b13c-8174ccf79e52","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:488","type":"CtMethodImpl","sourcecode":"private void removeIfExpired(final java.lang.Object key, final long now) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Long java.lang.Long = java.util.Map<java.lang.Object, java.lang.Long>.get(key);\n            if (isExpired(now, expirationTimeObject)) {\n                remove(key);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[508,509,510],"tindex":"41a0e8cc-2e7e-11e6-b13c-db0d0e92ca79","method":{"position":"org.apache.commons.collections4.map.CompositeMap:281","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].get(key);\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"41a0e8cd-2e7e-11e6-b13c-4dc9ce6dd100","method":{"position":"org.apache.commons.collections4.CollectionUtils:1567","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c) {\n    if ((a == null) || (b == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, c, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[],"tindex":"41a10fde-2e7e-11e6-b13c-613b9372a8b1","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:475","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key3 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key3"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"41a10fdf-2e7e-11e6-b13c-4d23823a0960","method":{"position":"org.apache.commons.collections4.MapUtils:364","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<K, V> map, final K key, final V defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final V V = map.get(key);\n                if (answer != null) {\n                    return answer;\n                } \n            } \n            return defaultValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"41a136f0-2e7e-11e6-b13c-c3f72bff83ea","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:143","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().retainAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[511,512,513,514,515],"tindex":"41a136f1-2e7e-11e6-b13c-0d4b08cc507e","method":{"position":"org.apache.commons.collections4.map.CompositeMap:413","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].remove(key);\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[259,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,262,538,539,540,541,542,543,544,545,546,547,548,549],"tindex":"41a136f2-2e7e-11e6-b13c-c31a4159f870","method":{"position":"org.apache.commons.collections4.list.TreeList:413","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> get(final int index) {\n    if (index < 0) {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode.this;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = indexRelativeToMe < 0 ? getLeftSubTree() : getRightSubTree();\n            if (nextNode == null) {\n                return null;\n            } \n            return nextNode.get(indexRelativeToMe);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[],"tindex":"41a18513-2e7e-11e6-b13c-fbb16b23455a","method":{"position":"org.apache.commons.collections4.CollectionUtils:663","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (collection == null) {\n                {\n                    if ((collection != null) && (closure != null)) {\n                        for (final T T : collection) {\n                            closure.execute(element);\n                        }\n                    } \n                    return closure;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[550],"tindex":"41a18514-2e7e-11e6-b13c-f3b1027ab4bc","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:129","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[551,552,553,107,108,109,110,111,112],"tindex":"41a1ac25-2e7e-11e6-b13c-35798775a61b","method":{"position":"org.apache.commons.collections4.map.Flat3Map:197","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(key);\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                    }\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[554],"tindex":"41a1ac26-2e7e-11e6-b13c-cf6d3118612b","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[516,519,520,530,533,534,535,536,546,547,548],"tindex":"41a1ac27-2e7e-11e6-b13c-43ca08a4943c","method":{"position":"org.apache.commons.collections4.list.TreeList:570","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> remove(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return removeSelf();\n            } \n            if (indexRelativeToMe > 0) {\n                setRight(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) < 0) {\n                    (int)++;\n                } \n            } else {\n                setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) > 0) {\n                    (int)--;\n                } \n            }\n            recalcHeight();\n            return balance();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574],"tindex":"41a1d338-2e7e-11e6-b13c-f3b1b3dbeb78","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:239","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        {\n            final E E = super.remove(index);\n            java.util.Set<E>.remove(result);\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[575,576,163,552,331,577,578,579,580,581,113,114,582,583,584,585,115,586,116,332,587,588,228,229,230,231,232,233,234,117,118,235,236,237,238,119,239,120,240,241,242],"tindex":"41a1d339-2e7e-11e6-b13c-19bd3cbf47f2","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:476","type":"CtMethodImpl","sourcecode":"protected void updateEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final V newValue) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            entry.setValue(newValue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[589,590,591,592,592,593,594,594,595,596,597],"tindex":"41a1fa4a-2e7e-11e6-b13c-7dc718387636","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return org.apache.commons.collections4.functors.FunctorUtils.coerce(predicates[0]);\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"41a1fa4b-2e7e-11e6-b13c-6174856707c2","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            if (null == object) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[598],"tindex":"41a1fa4c-2e7e-11e6-b13c-a774f1729bee","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:69","type":"CtMethodImpl","sourcecode":"public boolean evaluate(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            return java.lang.Class<?>.isInstance(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[],"tindex":"41a2215d-2e7e-11e6-b13c-fd44cb4293d6","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:140","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 1) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[599,600],"tindex":"41a2215e-2e7e-11e6-b13c-952adddf93d6","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:115","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getBag().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[396,397,398,399,401,402,403,404,405,406,407,408,409,400,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,54,481,482,483,55,484,485,486,487,488,489,490],"tindex":"41a2215f-2e7e-11e6-b13c-d170b5c8766d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:586","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<V>lookup(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"41a24870-2e7e-11e6-b13c-2788e21e0661","method":{"position":"org.apache.commons.collections4.list.PredicatedList:102","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}