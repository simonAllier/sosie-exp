{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":266,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":612,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":258,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":486,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":296,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":543,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":365,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":389,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":168,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":31,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":540,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":487,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":34,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":81,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":541,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":253,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx4":267,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testRemove":280,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":551,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":127,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":549,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":600,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":122,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":476,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":525,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":326,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":189,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":475,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":523,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":227,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":362,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":231,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":233,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":153,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":214,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":232,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":251,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":477,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":92,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":374,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":133,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":542,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":408,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":173,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":456,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking":94,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":367,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":485,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicate":203,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":395,"org.apache.commons.collections4.list.GrowthListTest.testFullListCompatibility":303,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":437,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":238,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":196,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":68,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":639,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":405,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":465,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":424,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":469,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":358,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":539,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":54,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":399,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":522,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":579,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":98,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":396,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToString":305,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":230,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":49,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":228,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":12,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":229,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyIterator":281,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":406,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":445,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":309,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":388,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":327,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":314,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":640,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":620,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":503,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":546,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":193,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorOrder":276,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":565,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":130,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":593,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":174,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":571,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":44,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":601,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":191,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":377,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":466,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":378,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":376,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":158,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":344,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":332,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":370,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":322,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":569,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking2":299,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":628,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":213,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":363,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":412,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":514,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":631,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":297,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalEmptyCollectionExists":530,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":143,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullIterator":282,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":510,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":172,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":38,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":262,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":335,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":355,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":561,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":354,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":415,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":256,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":325,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":273,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":621,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":224,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":353,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":511,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":576,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":242,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":272,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":435,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsContract":532,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":368,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":498,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSerializeDeserializeThenCompare":534,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":47,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":204,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":584,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectEqualsSelf":283,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":602,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":71,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":494,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":222,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":23,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":88,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":559,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":603,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":450,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":352,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":391,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":29,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":30,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking2":302,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsSelfHashCode":533,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":567,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":241,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":111,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":176,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveChangesMap":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":500,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":120,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":622,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":463,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":269,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":21,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":311,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":8,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":434,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":479,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":507,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":192,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":343,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":383,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":91,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":9,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":46,"org.apache.commons.collections4.list.GrowthListTest.testFullListSerialization":301,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":375,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":583,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":536,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":574,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":186,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":312,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":117,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":366,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSerializeDeserializeThenCompare":290,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":114,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":371,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":636,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":386,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":517,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":295,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":618,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":359,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":457,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":629,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":237,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":453,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":210,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":100,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":317,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":430,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":369,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":135,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":591,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":625,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":118,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":513,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":346,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":381,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":380,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":379,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":393,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":4,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":197,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":109,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":58,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":644,"org.apache.commons.collections4.map.LRUMapTest.testClone":106,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":26,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":64,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":451,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":617,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":577,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":27,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":219,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":592,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":13,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":14,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":15,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":138,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEqualsNull":285,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalFullCollectionExists":528,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":155,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":627,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":496,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":212,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":484,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":448,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":411,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":610,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorSet":279,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":535,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":563,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":481,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":401,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":394,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":61,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":472,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":544,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSimpleSerialization":531,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":271,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":16,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":163,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":264,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":260,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":570,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":427,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalEmptyCollectionExists":286,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":206,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":41,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":330,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":339,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":634,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":254,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":37,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":78,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":425,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":509,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":360,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":345,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":478,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":585,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":5,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetIteratorRemoveChangesMap":63,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":80,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":390,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":148,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":590,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":265,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":495,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":560,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":468,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":520,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":446,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":554,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":557,"org.apache.commons.collections4.list.GrowthListTest.testCollectionSize":304,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":526,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":129,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":336,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":403,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":578,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":308,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":387,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":164,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":243,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":52,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":524,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":439,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":552,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":181,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":461,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":504,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":113,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":351,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":36,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":33,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":616,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":318,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":459,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":519,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":160,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":364,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":333,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":152,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":151,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":201,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":43,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":170,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":492,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":145,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking":338,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":126,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove1":82,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove2":83,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove3":84,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":259,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking2":300,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":139,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove3":57,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove2":56,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testOrderedMapIterator":274,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove1":55,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":581,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":187,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":611,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":350,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":447,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":278,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":482,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":226,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":490,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":125,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":220,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":491,"org.apache.commons.collections4.functors.AllPredicateTest.nullArrayToGetInstance":516,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":105,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":550,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":35,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiMapIteratorSet":291,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":319,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":1,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":417,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":556,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsContract":288,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":518,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":7,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":19,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":116,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":340,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":199,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":582,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":221,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":3,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":606,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":320,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":449,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":537,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectEqualsSelf":527,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":328,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":512,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":294,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":257,"org.apache.commons.collections4.list.GrowthListTest.testSerializeDeserializeThenCompare":307,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":499,"org.apache.commons.collections4.map.HashedMapTest.testClone":101,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":110,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":348,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":562,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":392,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":416,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":462,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":436,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":642,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":645,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":144,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":51,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":141,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":493,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":488,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":604,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":553,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":40,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":79,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":316,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":207,"org.apache.commons.collections4.list.GrowthListTest.testCollectionClear":306,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":397,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":324,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":216,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":217,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":467,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":218,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":178,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":72,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":75,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":121,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":444,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":407,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":502,"org.apache.commons.collections4.map.StaticBucketMapTest.testObjectEqualsSelf":596,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":115,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":194,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":608,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":480,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":357,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":313,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":42,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":76,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":93,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":432,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":607,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":292,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":53,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":136,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":400,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":564,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":321,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":85,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":438,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":310,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":99,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":599,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":159,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":240,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":86,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":165,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":0,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalFullCollectionExists":284,"org.apache.commons.collections4.CollectionUtilsTest.isFull":268,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":107,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":619,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":452,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":382,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":183,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":414,"org.apache.commons.collections4.map.LinkedMapTest.testClone":104,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":443,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":128,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":594,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":635,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":124,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":293,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":255,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":103,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":349,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":589,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":605,"org.apache.commons.collections4.list.GrowthListTest.testListListIterator":162,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":455,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":547,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":90,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":441,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":298,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyMapIterator":277,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":497,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEqualsNull":529,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":568,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":77,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":261,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":429,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":119,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":580,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":184,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSimpleSerialization":287,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":409,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":473,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":638,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":426,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":470,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":234,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":235,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":11,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":419,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":458,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking2":190,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":236,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":96,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory":252,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":433,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx1":515,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":613,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":588,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":586,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":198,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":402,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":175,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":154,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":137,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":420,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":545,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":575,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":211,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":215,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":573,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":108,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":289,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":147,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":587,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":131,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":423,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":422,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":421,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":428,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":558,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":566,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":205,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":489,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":626,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":384,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":372,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveChangesMap":87,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":548,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":169,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":250,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking2":167,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":630,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":323,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":538,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":180,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":239,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":431,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":643,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":177,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":166,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":70,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":555,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalSet":337,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":633,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":89,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":249,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":248,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":185,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":247,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":263,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":244,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":140,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":245,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":246,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":209,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":373,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":208,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory":275,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":179,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":508,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":150,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":385,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":501,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking":188,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":572,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":149,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":361,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":483,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":95,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":65,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":195,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":521,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":454,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":134,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":69,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":609,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":641,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":59,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking":334,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":404,"org.apache.commons.collections4.map.LRUMapTest.testLRU":637,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":157,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":464,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":632,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":398,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":460,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":123,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":73,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":102,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":20,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":315,"org.apache.commons.collections4.map.StaticBucketMapTest.testObjectHashCodeEqualsContract":597,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":142,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":440,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":624,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":615,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":471,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking":132,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":413,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiRemove":329,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":506,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":505,"org.apache.commons.collections4.ListUtilsTest.testRetainAll":598,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":182,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":356,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":223,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":331,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":25,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":39,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":45,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking":161,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":442,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":225,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":171,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":341,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":347,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":342,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":595,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":17,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":270,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":418,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":410,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":474,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":200,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":623,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":10,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":614,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":202},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1220","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[],"tindex":"8213182f-2eb0-11e6-9196-913b99c177f3","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:477","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<V> createCollection(final int size) {\n    if (size == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Factory<? extends java.util.Collection<V>>.create();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93],"tindex":"82140290-2eb0-11e6-9196-6fe43135c272","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:146","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return java.util.Map<K, V>.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[94,95,96],"tindex":"82140291-2eb0-11e6-9196-dd56e5408768","method":{"position":"org.apache.commons.collections4.list.PredicatedList:106","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        {\n            return decorated().remove(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[97,98,99,100,101,102,103,104,105,106,107,108,109,110,111],"tindex":"821429a2-2eb0-11e6-9196-3ba14515be1c","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:318","type":"CtMethodImpl","sourcecode":"private void _putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            final int int = map.size();\n            if (mapSize == 0) {\n                return ;\n            } \n            final int int = ((int)((((int) + mapSize) / (float)) + 1));\n            ensureCapacity(calculateNewCapacity(newSize));\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200],"tindex":"821450b3-2eb0-11e6-9196-3f18d3847309","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:78","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[201],"tindex":"821477c4-2eb0-11e6-9196-1d88d6399312","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:134","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[202],"tindex":"821477c5-2eb0-11e6-9196-395c1f6ef639","method":{"position":"org.apache.commons.collections4.IteratorUtils:781","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.NodeList nodeList) {\n    if (nodeList == null) {\n        {\n            if (nodeList == null) {\n                throw new java.lang.NullPointerException(\"NodeList must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(nodeList);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"nodeList"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"82149ed6-2eb0-11e6-9196-fb855cac3095","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:726","type":"CtMethodImpl","sourcecode":"protected K entryKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[],"tindex":"82149ed7-2eb0-11e6-9196-7369edc6ad41","method":{"position":"org.apache.commons.collections4.TransformerUtils:273","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (transformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, defaultTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[203,204,205],"tindex":"8214c5e8-2eb0-11e6-9196-4386938a4472","method":{"position":"org.apache.commons.collections4.PredicateUtils:451","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NotPredicate.notPredicate(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"8214ecf9-2eb0-11e6-9196-f93590c01bc1","method":{"position":"org.apache.commons.collections4.MapUtils:591","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean.equals(org.apache.commons.collections4.MapUtils.getBoolean(map, key));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[206,207],"tindex":"8214ecfa-2eb0-11e6-9196-2ba65e58b1ad","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:110","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"8215140b-2eb0-11e6-9196-897e05086dda","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1020","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.set((index + (int)), obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[],"tindex":"8215140c-2eb0-11e6-9196-f9bcf1ce33d7","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:145","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (count == 1) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"cursor == null"},"failures":[],"tindex":"82153b1d-2eb0-11e6-9196-0778728b3775","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:288","type":"CtMethodImpl","sourcecode":"protected void unregisterCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = ref.get();\n                if (cur == null) {\n                    it.remove();\n                } else if (cur == cursor) {\n                    ref.clear();\n                    it.remove();\n                    break;\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[],"tindex":"8215622e-2eb0-11e6-9196-132ee8d133a1","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[],"tindex":"8215622f-2eb0-11e6-9196-87ad460e3e77","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1533","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            return (node != null) && (node.getValue().equals(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[208,209],"tindex":"82158940-2eb0-11e6-9196-8ba10734b3b7","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void putAll(final java.util.Map<? extends K, ?> map) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.MultiMap) {\n                for (final java.util.Map.Entry<? extends K, java.lang.Object> java.util.Map.Entry<? extends K, java.lang.Object> : ((org.apache.commons.collections4.MultiMap<? extends K, V>)(map)).entrySet()) {\n                    putAll(entry.getKey(), ((java.util.Collection<V>)(entry.getValue())));\n                }\n            } else {\n                for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250],"tindex":"8215b051-2eb0-11e6-9196-ed0858e4289b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(((java.util.Map.Entry<?, ?>)(o)).getKey());\n            return (candidate != null) && (candidate.equals(o));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"8215d762-2eb0-11e6-9196-0f1ccfd01448","method":{"position":"org.apache.commons.collections4.MapUtils:1422","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> orderedMap(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"8215d763-2eb0-11e6-9196-6f7e20f225eb","method":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(set , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"8215fe74-2eb0-11e6-9196-7da0fa79e8b2","method":{"position":"org.apache.commons.collections4.CollectionUtils:1588","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c, final boolean includeDuplicates) {\n    if ((a == null) || (a == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"The collections must not be null\");\n            } \n            if (c == null) {\n                throw new java.lang.IllegalArgumentException(\"The comparator must not be null\");\n            } \n            final int int = (a instanceof java.util.Collection<?>) && (b instanceof java.util.Collection<?>) ? java.lang.Math.max(1, ((((java.util.Collection<?>)(a)).size()) + (((java.util.Collection<?>)(b)).size()))) : 10;\n            final java.util.Iterator<O> java.util.Iterator<O> = new org.apache.commons.collections4.iterators.CollatingIterator<O>(c , a.iterator() , b.iterator());\n            if (includeDuplicates) {\n                return org.apache.commons.collections4.IteratorUtils.toList(iterator, totalSize);\n            } else {\n                final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>(totalSize);\n                O O = null;\n                while (iterator.hasNext()) {\n                    final O O = iterator.next();\n                    if ((lastItem == null) || (!(lastItem.equals(item)))) {\n                        mergedList.add(item);\n                    } \n                    lastItem = item;\n                }\n                mergedList.trimToSize();\n                return mergedList;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[251],"tindex":"82162585-2eb0-11e6-9196-b7fb8c0bc0a4","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:62","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:47","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[252],"tindex":"82164c96-2eb0-11e6-9196-c5f8744636cd","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:45","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<? extends K, ? extends V> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (iterator == null) {\n                        throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n                    } \n                    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(iterator));\n                        return tmpIterator;\n                    } \n                    return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(iterator);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[253,254,255,256],"tindex":"82164c97-2eb0-11e6-9196-7fd2d8e014ed","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:210","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E value) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n            addNodeBefore(node, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtBinaryOperatorImpl","sourcecode":"(inverseBidiMap) == null"},"failures":[],"tindex":"821673a8-2eb0-11e6-9196-89dd47851adc","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (normalMap == null) {\n        {\n            if (normalMap == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inverseBidiMap":"normalMap"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[257,258,259,260],"tindex":"821673a9-2eb0-11e6-9196-1340f5634716","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:357","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SplitMapUtils:214","type":"CtBinaryOperatorImpl","sourcecode":"get instanceof java.util.Map"},"failures":[261],"tindex":"821673aa-2eb0-11e6-9196-fdfe9d453d24","method":{"position":"org.apache.commons.collections4.SplitMapUtils:210","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>org.apache.commons.collections4.IterableMap<K, V> readableMap(final org.apache.commons.collections4.Get<K, V> get) {\n    if (get instanceof java.util.Map) {\n        {\n            if (get == null) {\n                throw new java.lang.IllegalArgumentException(\"Get must not be null\");\n            } \n            if (get instanceof java.util.Map) {\n                return get instanceof org.apache.commons.collections4.IterableMap ? ((org.apache.commons.collections4.IterableMap<K, V>)(get)) : org.apache.commons.collections4.MapUtils.iterableMap(((java.util.Map<K, V>)(get)));\n            } \n            return new org.apache.commons.collections4.SplitMapUtils.WrappedGet<K, V>(get);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"get":"get"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"82169abb-2eb0-11e6-9196-0d30e4c76102","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:418","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:76","type":"CtBinaryOperatorImpl","sourcecode":"(trueClosure == null) || (falseClosure == null)"},"failures":[262],"tindex":"82169abc-2eb0-11e6-9196-6fb61c23a511","method":{"position":"org.apache.commons.collections4.functors.IfClosure:70","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if ((falseClosure == null) || (trueClosure == null)) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if ((trueClosure == null) || (falseClosure == null)) {\n                throw new java.lang.IllegalArgumentException(\"Closures must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.IfClosure<E>(predicate , trueClosure , falseClosure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseClosure":"trueClosure","trueClosure":"falseClosure"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[263],"tindex":"82169abd-2eb0-11e6-9196-9b036455ff61","method":{"position":"org.apache.commons.collections4.CollectionUtils:552","type":"CtMethodImpl","sourcecode":"public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n    if (input == null) {\n        {\n            return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[264,265,266],"tindex":"8216c1ce-2eb0-11e6-9196-ef12e66bce0e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2065","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsValue(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250],"tindex":"8216c1cf-2eb0-11e6-9196-390e53af8fcd","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o == (org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.this)) {\n                return true;\n            } else if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(o));\n            if ((org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(K, other.getKey())) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(V, other.getValue()))) {\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:207","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"8216e8e0-2eb0-11e6-9196-778593d32850","method":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PushbackIterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PushbackIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[267],"tindex":"8216e8e1-2eb0-11e6-9196-79592db33833","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:72","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            return new org.apache.commons.collections4.functors.OnePredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1501","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[268],"tindex":"8216e8e2-2eb0-11e6-9196-636ce72491a4","method":{"position":"org.apache.commons.collections4.CollectionUtils:1466","type":"CtMethodImpl","sourcecode":"public static boolean isFull(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).isFull();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.isFull();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return false;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[269,270,271,272,273],"tindex":"82170ff3-2eb0-11e6-9196-fd05e3ad3bb4","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return remove(object, 1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[],"tindex":"82170ff4-2eb0-11e6-9196-6bc3ace8510c","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <E>org.apache.commons.collections4.Closure<E>[] copy(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closures == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Closure<E>[])(closures.clone()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:49","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292],"tindex":"82170ff5-2eb0-11e6-9196-6d39d6407004","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:46","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final org.apache.commons.collections4.OrderedMapIterator<K, ? extends V> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"OrderedMapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMapIterator<K, V> org.apache.commons.collections4.OrderedMapIterator<K, V> = ((org.apache.commons.collections4.OrderedMapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator<K, V>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[293,294,295,296,297],"tindex":"82170ff6-2eb0-11e6-9196-8b43791e2def","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:210","type":"CtMethodImpl","sourcecode":"public boolean removeMapping(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        {\n            if (value == null) {\n                {\n                    final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n                    if (valuesForKey == null) {\n                        return false;\n                    } \n                    final boolean boolean = valuesForKey.remove(value);\n                    if (removed == false) {\n                        return false;\n                    } \n                    if (valuesForKey.isEmpty()) {\n                        remove(key);\n                    } \n                    return true;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[298],"tindex":"82173707-2eb0-11e6-9196-e1b7232bf6ff","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:764","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((((multi.size()) >= 3) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key3"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:977","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"82173708-2eb0-11e6-9196-11bb78fe2f57","method":{"position":"org.apache.commons.collections4.iterators.IteratorChain:159","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.Queue<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:167","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[299,300,155,156,157,158,159,160,162,163,164,165,166,167,301,168,169,302,170,171,303,172,173,174,304,305,175,176,177,178,306,179,180,182,307,308,183],"tindex":"82175e19-2eb0-11e6-9196-55d68c35b047","method":{"position":"org.apache.commons.collections4.list.GrowthList:69","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.GrowthList<E> growthList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            return new org.apache.commons.collections4.list.GrowthList<E>(list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[309],"tindex":"82175e1a-2eb0-11e6-9196-7f112c62c289","method":{"position":"org.apache.commons.collections4.CollectionUtils:208","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>java.util.Collection<T> emptyIfNull(final java.util.Collection<T> collection) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return collection == null ? org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.java.util.Collection : collection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[310,311,312],"tindex":"82175e1b-2eb0-11e6-9196-899104208afb","method":{"position":"org.apache.commons.collections4.map.Flat3Map:126","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(key);\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                    case 2 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                    case 1 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[],"tindex":"8217852c-2eb0-11e6-9196-f554781b626f","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1490","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (doRemoveKey(o)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[264],"tindex":"8217852d-2eb0-11e6-9196-7b284e52f518","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2111","type":"CtMethodImpl","sourcecode":"public K remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.removeValue(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[313],"tindex":"8217852e-2eb0-11e6-9196-ed7a70f7aac0","method":{"position":"org.apache.commons.collections4.CollectionUtils:1749","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> predicatedCollection(final java.util.Collection<C> collection, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.collection.PredicatedCollection.predicatedCollection(collection, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:58","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"8217ac3f-2eb0-11e6-9196-b521390f938f","method":{"position":"org.apache.commons.collections4.ListUtils:492","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> fixedSizeList(final java.util.List<E> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.FixedSizeList.fixedSizeList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[314],"tindex":"8217ac40-2eb0-11e6-9196-05681f297ed3","method":{"position":"org.apache.commons.collections4.TransformerUtils:178","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> asTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"8217ac41-2eb0-11e6-9196-598137544dd1","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isPrefix(final java.lang.String prefix, final int offsetInBits, final int lengthInBits, final java.lang.String key) {\n    if (lengthInBits == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n            } \n            final java.lang.String java.lang.String = prefix.substring((offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)), (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)));\n            return key.startsWith(s1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[315,316,317,318,319,320,321,322,323,324,325,326,327,328],"tindex":"8217ac42-2eb0-11e6-9196-ad3644ea12bb","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:229","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            removeNode(node);\n            return oldValue;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"8217d353-2eb0-11e6-9196-59f68f64da96","method":{"position":"org.apache.commons.collections4.MapUtils:446","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Byte getByte(final java.util.Map<? super K, ?> map, final K key, final java.lang.Byte defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"8217d354-2eb0-11e6-9196-71d164fe6a19","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:342","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            boolean boolean = false;\n            if (coll != null) {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final boolean boolean = remove(i.next(), 1);\n                    result = result || changed;\n                }\n            } \n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[329],"tindex":"8217d355-2eb0-11e6-9196-f7e56af526de","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[330,331],"tindex":"8217fa66-2eb0-11e6-9196-7ff7aa7688bf","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:186","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    V V = null;\n                    if (java.util.Map<K, V>.containsKey(key)) {\n                        value = java.util.Map<K, V>.remove(key);\n                        java.util.Map<V, K>.remove(value);\n                    } \n                    return value;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[332,333,334,302],"tindex":"8217fa67-2eb0-11e6-9196-cfcb7f285f4d","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:120","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[335,336],"tindex":"8217fa68-2eb0-11e6-9196-f9700c67c855","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (set == null) {\n                throw new java.lang.IllegalArgumentException(\"Set must not be null\");\n            } \n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (((set.size()) > 0) || ((list.size()) > 0)) {\n                throw new java.lang.IllegalArgumentException(\"Set and List must be empty\");\n            } \n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[337,338,339,340],"tindex":"82182179-2eb0-11e6-9196-9b0d962a41df","method":{"position":"org.apache.commons.collections4.list.PredicatedList:132","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index < 0) {\n        {\n            validate(object);\n            return decorated().set(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[341,342,343,344,345],"tindex":"8218217a-2eb0-11e6-9196-6fc868bdc0c7","method":{"position":"org.apache.commons.collections4.PredicateUtils:421","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getLeft(dataElement)) == node"},"failures":[346,347,348,349,350,351,352,353,264,354,265,266,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,292,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437],"tindex":"8218217b-2eb0-11e6-9196-23e5d3b37839","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:791","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? null : node.getParent(dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[438,439,440,441,442,443,444,445,254,446,447,448,449,450,451,452,453,316,317,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,256,483,484,485,486,487,488,489,490,327,328,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513],"tindex":"8218488c-2eb0-11e6-9196-918d979e9685","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:215","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            return addAll(int, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"8218488d-2eb0-11e6-9196-6f16814ad62f","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:140","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[187],"tindex":"8218488e-2eb0-11e6-9196-6f1d50ba272b","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(decorated().listIterator(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtBinaryOperatorImpl","sourcecode":"(inverseBidiMap) == null"},"failures":[],"tindex":"82186f9f-2eb0-11e6-9196-ab65209a54ee","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (normalMap == null) {\n        {\n            if (normalMap == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inverseBidiMap":"normalMap"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:72","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"82186fa0-2eb0-11e6-9196-afb48e8463f3","method":{"position":"org.apache.commons.collections4.IteratorUtils:763","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> loopingListIterator(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (list == null) {\n                throw new java.lang.NullPointerException(\"List must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingListIterator<E>(list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:50","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"82186fa1-2eb0-11e6-9196-97566a6ebaf3","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:45","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<? extends K, ? extends V> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (iterator == null) {\n                        throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n                    } \n                    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(iterator));\n                        return tmpIterator;\n                    } \n                    return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(iterator);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[514],"tindex":"821896b2-2eb0-11e6-9196-b31017423af5","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:86","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final V defaultValue) {\n    if (map == null) {\n        {\n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(defaultValue));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[515,516],"tindex":"821896b3-2eb0-11e6-9196-5f0200152841","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return org.apache.commons.collections4.functors.FunctorUtils.coerce(predicates[0]);\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"821896b4-2eb0-11e6-9196-494ff1c7cbea","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:999","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(int, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"821896b5-2eb0-11e6-9196-f3821722eea0","method":{"position":"org.apache.commons.collections4.ComparatorUtils:119","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Comparator<E> reversedComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.comparators.ReverseComparator<E>(comparator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[394,360,361,363,364,367,368,371,372,436,409,410,412,413,416],"tindex":"8218bdc6-2eb0-11e6-9196-2b530af059ac","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1815","type":"CtMethodImpl","sourcecode":"private java.util.Map.Entry<V, K> createEntry(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node) {\n    if (node == null) {\n        {\n            return new org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry<V, K>(node.getValue() , node.getKey());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"8218bdc7-2eb0-11e6-9196-89f1fe39a0f7","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:692","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key1 != null) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((((multi.size()) == 5) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))))) && ((key5 == (multi.getKey(4))) || ((key5 != null) && (key5.equals(multi.getKey(4)))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:161","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536],"tindex":"8218bdc8-2eb0-11e6-9196-a1ab3133f8da","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:171","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[537],"tindex":"8218e4d9-2eb0-11e6-9196-b9af83d888b5","method":{"position":"org.apache.commons.collections4.TransformerUtils:250","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[538],"tindex":"8218e4da-2eb0-11e6-9196-9bc18d6846be","method":{"position":"org.apache.commons.collections4.MapUtils:1144","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> putAll(final java.util.Map<K, V> map, final java.lang.Object[] array) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            map.size();\n            if ((array == null) || ((array.int) == 0)) {\n                return map;\n            } \n            final java.lang.Object java.lang.Object = array[0];\n            if (obj instanceof java.util.Map.Entry) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(element));\n                    map.put(entry.getKey(), entry.getValue());\n                }\n            } else if (obj instanceof org.apache.commons.collections4.KeyValue) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(element));\n                    map.put(keyval.getKey(), keyval.getValue());\n                }\n            } else if (obj instanceof java.lang.Object[]) {\n                for (int int = 0 ; i < (array.int) ; i++) {\n                    final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(array[i]));\n                    if ((sub == null) || ((sub.int) < 2)) {\n                        throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + i));\n                    } \n                    map.put(((K)(sub[0])), ((V)(sub[1])));\n                }\n            } else {\n                for (int int = 0 ; i < ((array.int) - 1) ; ) {\n                    map.put(((K)(array[(i++)])), ((V)(array[(i++)])));\n                }\n            }\n            return map;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[],"tindex":"82190beb-2eb0-11e6-9196-7100c7e742fe","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:110","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"82190bec-2eb0-11e6-9196-939101719367","method":{"position":"org.apache.commons.collections4.IteratorUtils:544","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E> iterator1, final java.util.Iterator<? extends E> iterator2) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterator1 , iterator2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[539,540,541,542,543,544,545,546],"tindex":"82190bed-2eb0-11e6-9196-cf680a6892f2","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1030","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<?, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[547],"tindex":"82190bee-2eb0-11e6-9196-9dab1ab7ae68","method":{"position":"org.apache.commons.collections4.CollectionUtils:1717","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> synchronizedCollection(final java.util.Collection<C> collection) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.collection.SynchronizedCollection.synchronizedCollection(collection);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[346,347,348,349,548,350,351,352,353,264,354,265,266,355,356,357,358,394,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,397,396,398,399,400,401,402,403,404,405,406,407,292,436,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,437],"tindex":"821932ff-2eb0-11e6-9196-198c1e827ec5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:734","type":"CtMethodImpl","sourcecode":"private static boolean isRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (node != null) && (node.isRed(dataElement));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"82193300-2eb0-11e6-9196-c350b8e9e0ae","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:210","type":"CtMethodImpl","sourcecode":"public boolean removeMapping(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        {\n            if (value == null) {\n                {\n                    final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n                    if (valuesForKey == null) {\n                        return false;\n                    } \n                    final boolean boolean = valuesForKey.remove(value);\n                    if (removed == false) {\n                        return false;\n                    } \n                    if (valuesForKey.isEmpty()) {\n                        remove(key);\n                    } \n                    return true;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:971","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[549,550,551,552,553,554,555,556,557,558,559,236,237,560,238,239,561,562,240,241,563,564,242,243,565,566,567,244,245,246,247,248,249,568,569,570,571,572,573,574,235,575,250,576,577,578],"tindex":"82193301-2eb0-11e6-9196-e1d8858d8ce6","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:57","type":"CtMethodImpl","sourcecode":"static boolean isOutOfBoundsIndex(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"82195a12-2eb0-11e6-9196-73921b684100","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:186","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    V V = null;\n                    if (java.util.Map<K, V>.containsKey(key)) {\n                        value = java.util.Map<K, V>.remove(key);\n                        java.util.Map<V, K>.remove(value);\n                    } \n                    return value;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[579,580],"tindex":"82195a13-2eb0-11e6-9196-1bd7f9f8e6ed","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:102","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[],"tindex":"82195a14-2eb0-11e6-9196-e942ac5f0a94","method":{"position":"org.apache.commons.collections4.map.Flat3Map:857","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        {\n            if (boolean) {\n                return false;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = getKey();\n            final java.lang.Object java.lang.Object = getValue();\n            return (key == null ? (other.getKey()) == null : key.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"82198125-2eb0-11e6-9196-5bb243076908","method":{"position":"org.apache.commons.collections4.MapUtils:677","type":"CtMethodImpl","sourcecode":"public static <K>float getFloatValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (floatObject == null) {\n                return 0.0F;\n            } \n            return floatObject.floatValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[581,201,582,583,584],"tindex":"82198126-2eb0-11e6-9196-bbdb9c929534","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"82198127-2eb0-11e6-9196-71d2cdf54a29","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1959","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean[][dataElement.ordinal()] = node.boolean[][dataElement.ordinal()];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[585,586,587,588,589,590,591,592,593,594,595,596,597],"tindex":"82198128-2eb0-11e6-9196-6df2ef5141ea","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            return entrySet().equals(other.entrySet());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[598,599],"tindex":"8219a839-2eb0-11e6-9196-f16db6259b47","method":{"position":"org.apache.commons.collections4.ListUtils:318","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> retainAll(final java.util.Collection<E> collection, final java.util.Collection<?> retain) {\n    if (collection == null) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(java.lang.Math.min(collection.size(), retain.size()));\n            for (final E E : collection) {\n                if (retain.contains(obj)) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtBinaryOperatorImpl","sourcecode":"key5 != null"},"failures":[257],"tindex":"8219a83a-2eb0-11e6-9196-adece72a2dbb","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:554","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key1 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key5":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1784","type":"CtBinaryOperatorImpl","sourcecode":"(collection == null) || ((collection.size()) != 1)"},"failures":[600],"tindex":"8219a83b-2eb0-11e6-9196-35976b7dc65d","method":{"position":"org.apache.commons.collections4.CollectionUtils:1783","type":"CtMethodImpl","sourcecode":"public static <E>E extractSingleton(final java.util.Collection<E> collection) {\n    if ((collection == null) || ((collection.size()) != 1)) {\n        {\n            if ((collection == null) || ((collection.size()) != 1)) {\n                throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n            } \n            return collection.iterator().next();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[313],"tindex":"8219cf4c-2eb0-11e6-9196-c3296a3ccc9e","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.collection.PredicatedCollection<T> predicatedCollection(final java.util.Collection<T> coll, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.collection.PredicatedCollection<T>(coll , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[406,420],"tindex":"8219cf4d-2eb0-11e6-9196-0bd1f48c5bd4","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[97,99,100,101,102,103,104,105,106,107,108,109,110],"tindex":"8219cf4e-2eb0-11e6-9196-c54d4c3dd671","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:302","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            _putAll(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"8219cf4f-2eb0-11e6-9196-8551b0c075db","method":{"position":"org.apache.commons.collections4.MapUtils:566","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key, final java.util.Map<?, ?> defaultValue) {\n    if (map != null) {\n        {\n            java.util.Map<?, ?> java.util.Map<?, ?> = org.apache.commons.collections4.MapUtils.getMap(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[601,602,603,604,605,606,607,608,609,610,272,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,584,627,628,629,630,631,632,633,634,635,636],"tindex":"8219f660-2eb0-11e6-9196-89256d04fb7f","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            return decorated().addAll(transform(coll));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"8219f661-2eb0-11e6-9196-2b7ed14cc4c3","method":{"position":"org.apache.commons.collections4.MapUtils:255","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Integer) {\n                return ((java.lang.Integer)(answer));\n            } \n            return java.lang.Integer.valueOf(answer.intValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[106,637,638,639,640,641,642,643,644,645],"tindex":"8219f662-2eb0-11e6-9196-d5c4bb5a1036","method":{"position":"org.apache.commons.collections4.map.LRUMap:192","type":"CtMethodImpl","sourcecode":"protected void moveToMRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                (int)++;\n                if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n                    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n                } \n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n            } else if (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                throw new java.lang.IllegalStateException((\"Can't move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}