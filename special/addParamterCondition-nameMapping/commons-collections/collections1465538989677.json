{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":51,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":28,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":100,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":2,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx5":22,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":120,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":23,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":48,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":119,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":149,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":5,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":75,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":4,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":11,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":3,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":31,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":77,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":86,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":49,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":70,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":80,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":117,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":38,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":64,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":87,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":35,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":91,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":135,"org.apache.commons.collections4.list.TreeListTest.testRemove":29,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":141,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetIndexed":1,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":8,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":39,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":102,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":82,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":45,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNull":42,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":130,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":97,"org.apache.commons.collections4.IteratorUtilsTest.testAsIterableNull":41,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":59,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":37,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":71,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":124,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":107,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":16,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":104,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":108,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":36,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":69,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":76,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":142,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":115,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":147,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":136,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":118,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":128,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":33,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":139,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":140,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":54,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":153,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":52,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":50,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":17,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":84,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":93,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":26,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":148,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":56,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":65,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":137,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":121,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":15,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":83,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":24,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":13,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":47,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":61,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":32,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":113,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":114,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPutAll":0,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":145,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":7,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":73,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":106,"org.apache.commons.collections4.map.HashedMapTest.testClone":63,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":101,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":58,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":88,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":150,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":94,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":131,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":14,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":126,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":133,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":57,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":122,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":19,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":143,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":144,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":116,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":40,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":20,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":72,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":123,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":85,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":151,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":146,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":21,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":9,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":10,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":109,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":44,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":152,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":34,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":110,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":111,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":103,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":138,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testEqualsNull":125,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":55,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":18,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":99,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":12,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":134,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":25,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":105,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":81,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":78,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":127,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":92,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":60,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":96,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":90,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":62,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":6,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":66,"org.apache.commons.collections4.list.TreeListTest.testBug35258":30,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":95,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":129,"org.apache.commons.collections4.map.LinkedMapTest.testClone":68,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":46,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":43,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":132,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":112,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":27,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":79,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":98,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":74},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[0],"tindex":"f05df2ac-2ed1-11e6-9a6d-a72f26da3d5f","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:117","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> m) {\n    if (m instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"m"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[1,2,3,4,5,6,7,8,9],"tindex":"f05eb5fd-2ed1-11e6-9a6d-8d4df8ed936c","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:195","type":"CtMethodImpl","sourcecode":"public K getKey(final int index) {\n    if (index == 0) {\n        {\n            return K[][index];\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[10],"tindex":"f05edd0e-2ed1-11e6-9a6d-934554e64118","method":{"position":"org.apache.commons.collections4.functors.IfClosure:70","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if ((trueClosure == null) || (falseClosure == null)) {\n                throw new java.lang.IllegalArgumentException(\"Closures must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.IfClosure<E>(predicate , trueClosure , falseClosure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[11],"tindex":"f05f041f-2ed1-11e6-9a6d-3d0d5f2b4935","method":{"position":"org.apache.commons.collections4.QueueUtils:73","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> predicatedQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.queue.PredicatedQueue.predicatedQueue(queue, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"f05f0420-2ed1-11e6-9a6d-dd73c131b0dd","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if ((mapToCopy.size()) != 1) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1377","type":"CtBinaryOperatorImpl","sourcecode":"(nodeCount) == 0"},"failures":[12,13,14,15,16],"tindex":"f05f2b31-2ed1-11e6-9a6d-f167deade0de","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:290","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E value) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            updateNode(node, value);\n            return oldValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[17,18,19,20,21],"tindex":"f05f5242-2ed1-11e6-9a6d-8faf1893b693","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:246","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if ((value instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = 0 ; i < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; i++) {\n                synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][i]) {\n                    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][i];\n                    while (n != null) {\n                        if (((n.V) == value) || (((n.V) != null) && (n.V.equals(value)))) {\n                            return true;\n                        } \n                        n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[22,23,24],"tindex":"f05f7953-2ed1-11e6-9a6d-096f77105805","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:72","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            return new org.apache.commons.collections4.functors.OnePredicate<T>(preds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[25],"tindex":"f05f7954-2ed1-11e6-9a6d-ef206981db81","method":{"position":"org.apache.commons.collections4.functors.MapTransformer:49","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            return new org.apache.commons.collections4.functors.MapTransformer<I, O>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1069","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"f05fa065-2ed1-11e6-9a6d-85f3baef35d5","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1054","type":"CtMethodImpl","sourcecode":"protected void rangeCheck(final int index, final int beyond) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < 0) || (index >= beyond)) {\n                throw new java.lang.IndexOutOfBoundsException(((((\"Index '\" + index) + \"' out of bounds for size '\") + (int)) + \"'\"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[26],"tindex":"f05fc776-2ed1-11e6-9a6d-716c1b50a4aa","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:224","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = super.retainAll(coll);\n            if (changed) {\n                reindex();\n            } \n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"f05fc777-2ed1-11e6-9a6d-3f76dfd51599","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[7,2,8,9,6],"tindex":"f05fee88-2ed1-11e6-9a6d-77e3b1fc771b","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:223","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 == null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:306","type":"CtBinaryOperatorImpl","sourcecode":"null != (comparatorChain)"},"failures":[],"tindex":"f05fee89-2ed1-11e6-9a6d-01de2b72d6f5","method":{"position":"org.apache.commons.collections4.ComparatorUtils:103","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E extends java.lang.Comparable<? super E>>java.util.Comparator<E> chainedComparator(final java.util.Collection<java.util.Comparator<E>> comparators) {\n    if (null != comparators) {\n        {\n            return org.apache.commons.collections4.ComparatorUtils.chainedComparator(((java.util.Comparator<E>[])(comparators.toArray(new java.util.Comparator[comparators.size()]))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparatorChain":"comparators"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:160","type":"CtBinaryOperatorImpl","sourcecode":"(root) == null"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39],"tindex":"f060159a-2ed1-11e6-9a6d-177279658773","method":{"position":"org.apache.commons.collections4.list.TreeList:793","type":"CtMethodImpl","sourcecode":"private void setRight(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node, final org.apache.commons.collections4.list.TreeList.AVLNode<E> next) {\n    if (next == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean = node == null;\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = boolean ? next : node;\n            recalcHeight();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"next"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1069","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"f060159b-2ed1-11e6-9a6d-072c0e483150","method":{"position":"org.apache.commons.collections4.list.GrowthList:121","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E element) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        {\n            final int int = decorated().size();\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n            } \n            decorated().add(index, element);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[40],"tindex":"f0603cac-2ed1-11e6-9a6d-158215142e4d","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((transformers.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(transformers);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:977","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[41],"tindex":"f0603cad-2ed1-11e6-9a6d-5ff9239a3e54","method":{"position":"org.apache.commons.collections4.IteratorUtils:904","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[42,43],"tindex":"f0603cae-2ed1-11e6-9a6d-39b8e2d9b415","method":{"position":"org.apache.commons.collections4.MapUtils:1204","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (map == null) || (map.isEmpty());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[44],"tindex":"f06063bf-2ed1-11e6-9a6d-f1b43626d8a5","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtBinaryOperatorImpl","sourcecode":"(end) < (start)"},"failures":[],"tindex":"f06063c0-2ed1-11e6-9a6d-db24d70f9c82","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:339","type":"CtMethodImpl","sourcecode":"private int decrement(int index) {\n    if (index < index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            index--;\n            if (index < 0) {\n                index = (int) - 1;\n            } \n            return index;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index","end":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[36,37,45,46,47,48,49],"tindex":"f0608ad1-2ed1-11e6-9a6d-0fcb74128eee","method":{"position":"org.apache.commons.collections4.list.TreeList:173","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (indexOf(object)) >= 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[],"tindex":"f0608ad2-2ed1-11e6-9a6d-e98ebe356b09","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:616","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntrySet().contains(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[50],"tindex":"f0608ad3-2ed1-11e6-9a6d-5936cc600046","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:120","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy.isEmpty()) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[51,52,53,54,55],"tindex":"f060b1e4-2ed1-11e6-9a6d-af00305fb825","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1544","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            if ((node != null) && (node.getValue().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:197","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"f060b1e5-2ed1-11e6-9a6d-b77fbaef5f94","method":{"position":"org.apache.commons.collections4.ComparatorUtils:194","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>java.util.Comparator<I> transformedComparator(java.util.Comparator<O> comparator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.TransformingComparator<I, O>(transformer , comparator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:267","type":"CtBinaryOperatorImpl","sourcecode":"(isLocked) == false"},"failures":[],"tindex":"f060d8f6-2ed1-11e6-9a6d-7728e478f765","method":{"position":"org.apache.commons.collections4.MapUtils:722","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key, final boolean defaultValue) {\n    if (defaultValue == false) {\n        {\n            final java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (booleanObject == null) {\n                return defaultValue;\n            } \n            return booleanObject.booleanValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isLocked":"defaultValue"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[56,57,58,59,60,61,62],"tindex":"f060d8f7-2ed1-11e6-9a6d-1bda56ef974f","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:147","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            return org.apache.commons.collections4.MultiMap<K, C>.containsKey(org.apache.commons.collections4.Transformer<C, K>.transform(((C)(object))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"f0610008-2ed1-11e6-9a6d-f37c07949f36","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.set.TransformedSortedSet<E> org.apache.commons.collections4.set.TransformedSortedSet<E> = new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"tindex":"f0610009-2ed1-11e6-9a6d-edad9e10b595","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:179","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key == null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"f061271a-2ed1-11e6-9a6d-99b18abd4136","method":{"position":"org.apache.commons.collections4.SetUtils:306","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.PredicatedSortedSet.predicatedSortedSet(set, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:859","type":"CtBinaryOperatorImpl","sourcecode":"offsetLength == 0"},"failures":[67],"tindex":"f061271b-2ed1-11e6-9a6d-e502727e745e","method":{"position":"org.apache.commons.collections4.map.LinkedMap:183","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetLength":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:239","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Short"},"failures":[96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124],"tindex":"f061271c-2ed1-11e6-9a6d-293d56092335","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:109","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.lang.Short) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (count != null) {\n                return count.int;\n            } \n            return 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[125],"tindex":"f0614e2d-2ed1-11e6-9a6d-91d821f4d1fb","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:279","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object != null) {\n        {\n            if ((org.apache.commons.collections4.comparators.FixedOrderComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.FixedOrderComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(object));\n                return null == (java.util.Map<T, java.lang.Integer>) ? null == (comp.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(comp.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (comp.int))) && ((boolean) == (comp.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1214","type":"CtBinaryOperatorImpl","sourcecode":"iterable instanceof java.util.List<?>"},"failures":[126],"tindex":"f061753e-2ed1-11e6-9a6d-d15c2c8845c8","method":{"position":"org.apache.commons.collections4.CollectionUtils:705","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (collection != null) && (closure != null) ? org.apache.commons.collections4.CollectionUtils.forAllButLastDo(collection.iterator(), closure) : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterable":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:239","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Short"},"failures":[127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150],"tindex":"f061753f-2ed1-11e6-9a6d-03e384061adf","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:568","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value instanceof java.lang.Short) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.KeySetView.this.org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object>.containsKey(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:317","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[151,152],"tindex":"f0619c50-2ed1-11e6-9a6d-93e136dc20ac","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:316","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index > 0) {\n        {\n            boolean boolean = false;\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : coll) {\n                if (contains(e)) {\n                    continue;\n                } \n                decorated().add(e);\n                toAdd.add(e);\n                changed = true;\n            }\n            if (changed) {\n                java.util.List<E>.addAll(index, toAdd);\n            } \n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl","sourcecode":"timeUnit == null"},"failures":[153],"tindex":"f0619c51-2ed1-11e6-9a6d-5baf910877f3","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:194","type":"CtMethodImpl","sourcecode":"private static long validateAndConvertToMillis(final long timeToLive, final java.util.concurrent.TimeUnit timeUnit) {\n    if (timeUnit == null) {\n        {\n            if (timeUnit == null) {\n                throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n            } \n            return java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.convert(timeToLive, timeUnit);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"timeUnit"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"f0619c52-2ed1-11e6-9a6d-d3d8884737ae","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:261","type":"CtUnaryOperatorImpl","sourcecode":"!(obj1 == null ? obj2 == null : obj1.equals(obj2))"},"failures":[],"tindex":"f061c363-2ed1-11e6-9a6d-67796b846b8a","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:106","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (!(object == null ? object == null : obj1.equals(obj2))) {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().getCount(object);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj2":"object","obj1":"object"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"f061c364-2ed1-11e6-9a6d-39bd8f396b8e","method":{"position":"org.apache.commons.collections4.functors.IfClosure:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f061c365-2ed1-11e6-9a6d-f71b7491319a","method":{"position":"org.apache.commons.collections4.MapUtils:276","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Long) {\n                return ((java.lang.Long)(answer));\n            } \n            return java.lang.Long.valueOf(answer.longValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f061ea76-2ed1-11e6-9a6d-45370e11690c","method":{"position":"org.apache.commons.collections4.MapUtils:526","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key, final java.lang.Float defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:341","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"f061ea77-2ed1-11e6-9a6d-3b2804d50de3","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:427","type":"CtMethodImpl","sourcecode":"protected void updateNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == node) {\n        {\n            node.setValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":44,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}