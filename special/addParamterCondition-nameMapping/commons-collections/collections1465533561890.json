{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":247,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":26,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":123,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testSerializeDeserializeThenCompare":181,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":84,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":204,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":139,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":115,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastEntrySet":148,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastEntrySet":169,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":76,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":205,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":63,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullStream":173,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":214,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":77,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":128,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":62,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":27,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":109,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":216,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectHashCodeEqualsSelfHashCode":193,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":258,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":156,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":9,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":228,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":208,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":56,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEqualsNull":195,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":103,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":48,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":129,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":234,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":18,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":229,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":147,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSerializeDeserializeThenCompare":197,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":4,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":122,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":121,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":203,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":212,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":49,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":20,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":11,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":242,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":257,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":51,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":230,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":5,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":211,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":30,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":150,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":93,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":217,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":67,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testObjectEqualsSelf":178,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":158,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":227,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":13,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":209,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":88,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":89,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":248,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":94,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":80,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":120,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":165,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":14,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":222,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":15,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":57,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testEqualsNull":179,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMakeMap":182,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":226,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":219,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":81,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":142,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":130,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testCanonicalEmptyCollectionExists":199,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":35,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":78,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":114,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":19,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":127,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":245,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":185,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":192,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":79,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":111,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":42,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":99,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testCanonicalFullCollectionExists":200,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":60,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":12,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":61,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":255,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":231,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":171,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testEqualsCompatibleInstance":177,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":2,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":170,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":238,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":235,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":159,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":145,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":256,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectEqualsSelf":194,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":117,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":98,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":44,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":66,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":131,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":55,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":201,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":232,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":166,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":74,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":134,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":157,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":37,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":160,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":207,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":75,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":188,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":126,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapHashCode":189,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":250,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":236,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":68,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":1,"org.apache.commons.collections4.CollectionUtilsTest.isFull":144,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":97,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":172,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":187,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEmptyMapCompatibility":191,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":136,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":141,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":176,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":237,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":29,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":254,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":28,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":25,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":95,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":38,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":69,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":223,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":110,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":224,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":225,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":40,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":116,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":39,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":104,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":83,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":96,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":213,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":45,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":58,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":138,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":252,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":251,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":33,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":151,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":253,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":47,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":73,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":46,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":90,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":59,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":92,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":246,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":146,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":24,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":70,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":184,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":243,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":143,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":220,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":91,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":113,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":135,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":240,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":239,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":124,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":162,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":10,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":87,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":190,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":43,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":102,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":210,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":50,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":34,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":164,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":8,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":202,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastEntrySet":161,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":186,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":125,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":7,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastEntrySet":153,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":215,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":163,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":65,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":244,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":137,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":64,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":85,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":71,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":108,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":119,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":21,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSimpleSerialization":198,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":36,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":154,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectHashCodeEqualsContract":196,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":249,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":3,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":86,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":140,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":133,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":101,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":132,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":167,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":22,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testObjectHashCodeEqualsContract":180,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":107,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":32,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":106,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":183,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":149,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":155,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":175,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":100,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":221,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":233,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":6,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":82,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":174,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":241,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":218,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":105,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":152,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":206,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":72,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":168,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":23,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":53,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":0,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":118},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"4d2739a1-2ec5-11e6-8958-397cd8178203","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:362","type":"CtMethodImpl","sourcecode":"public int size(final java.lang.Object key) {\n    if (key != null) {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return 0;\n            } \n            return coll.size();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130],"tindex":"4d27fcf2-2ec5-11e6-8958-694e0e8eb6cd","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:337","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(java.lang.Object key) {\n    if (key == null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            final int int = hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    final V V = entry.getValue();\n                    removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[],"tindex":"4d282403-2ec5-11e6-8958-193525ed265b","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:199","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key instanceof java.util.Set) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[131],"tindex":"4d284b14-2ec5-11e6-8958-3732c2243484","method":{"position":"org.apache.commons.collections4.CollectionUtils:1749","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> predicatedCollection(final java.util.Collection<C> collection, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.collection.PredicatedCollection.predicatedCollection(collection, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:157","type":"CtBinaryOperatorImpl","sourcecode":"((object == null) && (current == null)) || ((object != null) && (object.equals(current)))"},"failures":[],"tindex":"4d287225-2ec5-11e6-8958-979da5f99f2c","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:381","type":"CtMethodImpl","sourcecode":"protected java.lang.Object convertKey(final java.lang.Object key) {\n    if (((key == null) && (key == null)) || ((object != null) && (object.equals(current)))) {\n        {\n            return key == null ? org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object : key;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"current":"key","object":"key"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[132],"tindex":"4d287226-2ec5-11e6-8958-e90315d67f73","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return decorated().indexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"4d289937-2ec5-11e6-8958-9dedf2e7bd3d","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.CollectionUtils.isSubCollection(mapToCopy.keySet(), keySet())) {\n                throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n            } \n            java.util.Map<K, V>.putAll(mapToCopy);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:158","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(bitIndex))"},"failures":[],"tindex":"4d289938-2ec5-11e6-8958-9d952d87f9a7","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:77","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(index))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtBinaryOperatorImpl","sourcecode":"index >= (size)"},"failures":[133],"tindex":"4d28c049-2ec5-11e6-8958-bb46a28bba7d","method":{"position":"org.apache.commons.collections4.ListUtils:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Character get(int index) {\n    if (index >= index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Character.valueOf(java.lang.CharSequence.charAt(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1019","type":"CtInvocationImpl","sourcecode":"currentNode.isLeftChild(dataElement)"},"failures":[134,135,136,137,138,139,140,141,142,143],"tindex":"4d28c04a-2ec5-11e6-8958-4d26d3e66048","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1959","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node.isLeftChild(dataElement)) {\n        {\n            boolean[][dataElement.ordinal()] = node.boolean[][dataElement.ordinal()];\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentNode":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[144],"tindex":"4d28e75b-2ec5-11e6-8958-d1fe9c9c3841","method":{"position":"org.apache.commons.collections4.CollectionUtils:1466","type":"CtMethodImpl","sourcecode":"public static boolean isFull(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).isFull();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.isFull();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return false;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170],"tindex":"4d290e6c-2ec5-11e6-8958-197b95161ad5","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:186","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            V V = null;\n            if (java.util.Map<K, V>.containsKey(key)) {\n                value = java.util.Map<K, V>.remove(key);\n                java.util.Map<V, K>.remove(value);\n            } \n            return value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[171,172,173,174,175],"tindex":"4d290e6d-2ec5-11e6-8958-0fc342006708","method":{"position":"org.apache.commons.collections4.MapUtils:938","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void debugPrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (label == null) {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"label"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"4d29357e-2ec5-11e6-8958-3f44895320bc","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtBinaryOperatorImpl","sourcecode":"newCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY)"},"failures":[],"tindex":"4d29357f-2ec5-11e6-8958-230cf4296171","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1043","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index > index) {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this, index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"index","newCapacity":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:971","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"4d295c90-2ec5-11e6-8958-a510f799b112","method":{"position":"org.apache.commons.collections4.list.PredicatedList:94","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"4d295c91-2ec5-11e6-8958-4978f6d75c57","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1243","type":"CtMethodImpl","sourcecode":"private static void checkKeyAndValue(final java.lang.Object key, final java.lang.Object value) {\n    if (value instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[176],"tindex":"4d2983a2-2ec5-11e6-8958-2bde58308851","method":{"position":"org.apache.commons.collections4.BagUtils:194","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"4d2983a3-2ec5-11e6-8958-8912da8edc4a","method":{"position":"org.apache.commons.collections4.map.LinkedMap:238","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object obj) {\n    if (null == obj) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:157","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.String"},"failures":[177,178,179,180,181],"tindex":"4d29aab4-2ec5-11e6-8958-376f32b1d969","method":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.String) {\n        {\n            return ((org.apache.commons.collections4.comparators.BooleanComparator.this) == object) || ((object instanceof org.apache.commons.collections4.comparators.BooleanComparator) && ((org.apache.commons.collections4.comparators.BooleanComparator.this.boolean) == (((org.apache.commons.collections4.comparators.BooleanComparator)(object)).boolean)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtBinaryOperatorImpl","sourcecode":"(inverse) == null"},"failures":[],"tindex":"4d29aab5-2ec5-11e6-8958-f30e4cc2892d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:283","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            return node == null ? null : node.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inverse":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:172","type":"CtInvocationImpl","sourcecode":"hm.isEmpty()"},"failures":[182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200],"tindex":"4d29d1c6-2ec5-11e6-8958-1d6dd795b8cd","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:74","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeSortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if (map.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.FixedSizeSortedMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"hm":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"booleanObject == null"},"failures":[],"tindex":"4d29d1c7-2ec5-11e6-8958-9f0a13d49607","method":{"position":"org.apache.commons.collections4.MapUtils:406","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key, final java.lang.Boolean defaultValue) {\n    if (defaultValue == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"booleanObject":"defaultValue"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:154","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Boolean"},"failures":[],"tindex":"4d29d1c8-2ec5-11e6-8958-87351533dd68","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:384","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 instanceof java.lang.Boolean) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((multi.size()) == 3) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1084","type":"CtInvocationImpl","sourcecode":"java.util.Iterator.class.isAssignableFrom(method.getReturnType())"},"failures":[],"tindex":"4d29f8d9-2ec5-11e6-8958-8d046f19140c","method":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key.isAssignableFrom(key.getReturnType())) {\n        {\n            if (key != null) {\n                final char[] char[] = key.toString().toCharArray();\n                for (int int = (chars.int) - 1 ; i >= 0 ; i--) {\n                    chars[i] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(chars[i]));\n                }\n                return new java.lang.String(chars);\n            } \n            return org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.util.Iterator.class":"key","method":"key"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:784","type":"CtBinaryOperatorImpl","sourcecode":"integerObject == null"},"failures":[201],"tindex":"4d29f8da-2ec5-11e6-8958-cd2b432a20a3","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"integerObject":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:859","type":"CtBinaryOperatorImpl","sourcecode":"offsetLength == 0"},"failures":[202,203,204,205,9,10,11,206,207,208,209,210,211,12,212,213,214,215,216,217,218,219,13,220,221,222,223,224,225,14,15,226,16,227,228,17,18,229,230,19,20,21,22,23,231,232,24,25,26,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,27,248,249,250,251,252,253,28,29,254,30,255,256,31,32,257,258,33,34,35,36,37],"tindex":"4d2a1feb-2ec5-11e6-8958-6308c34f2847","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:708","type":"CtMethodImpl","sourcecode":"protected <T>java.lang.Object toReference(final org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength type, final T referent, final int hash) {\n    if (hash == 0) {\n        {\n            if (type == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n                return referent;\n            } \n            if (type == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n                return new org.apache.commons.collections4.map.AbstractReferenceMap.SoftRef<T>(hash , referent , org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.java.lang.ref.ReferenceQueue<java.lang.Object>);\n            } \n            if (type == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n                return new org.apache.commons.collections4.map.AbstractReferenceMap.WeakRef<T>(hash , referent , org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.java.lang.ref.ReferenceQueue<java.lang.Object>);\n            } \n            throw new java.lang.Error();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetLength":"hash"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":27,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}