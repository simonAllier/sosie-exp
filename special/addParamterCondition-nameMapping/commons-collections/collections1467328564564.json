{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":364,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":427,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":221,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":960,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":726,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":2,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":517,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testSimpleSerialization":544,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":357,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":1060,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":627,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":771,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":1061,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":190,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":899,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":786,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":508,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":507,"org.apache.commons.collections4.CollectionUtilsTest.collect":15,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetIteratorRemoveChangesMap":721,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":816,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testEqualsNull":312,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":290,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":373,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":383,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRetainAll":922,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":1004,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsContract":309,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":1057,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":904,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":983,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":399,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":662,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListCompatibility":191,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":484,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":86,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":154,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":177,"org.apache.commons.collections4.map.CompositeMapTest.testFullMapCompatibility":789,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":761,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":955,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testEqualsNull":267,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":1065,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":370,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":993,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":68,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectEqualsSelf":34,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":919,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":567,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":76,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":702,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":720,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":853,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":681,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":970,"org.apache.commons.collections4.CollectionUtilsTest.select":348,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":661,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":533,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":1048,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":433,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":160,"org.apache.commons.collections4.set.ListOrderedSet2Test.testObjectEqualsSelf":302,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":450,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":1042,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":981,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":1058,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveAll":99,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":193,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":124,"org.apache.commons.collections4.list.GrowthListTest.testObjectHashCodeEqualsContract":138,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":716,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":152,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnmodifiable":829,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":799,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":984,"org.apache.commons.collections4.CollectionUtilsTest.intersection":813,"org.apache.commons.collections4.list.UnmodifiableListTest.testEqualsNull":184,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":803,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":25,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":1059,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":1040,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":882,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":323,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":393,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":747,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":381,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":1021,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":977,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":1022,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectEqualsSelf":260,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":693,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":616,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":727,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":890,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListCompatibility":141,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":551,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableIteratorImmutability":779,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":703,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":608,"org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf":18,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":147,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":901,"org.apache.commons.collections4.map.CompositeMapTest.testPut":815,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":598,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":66,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":330,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":213,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":755,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":568,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":611,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":367,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":444,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCanonicalEmptyCollectionExists":840,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":653,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSerializeDeserializeThenCompare":837,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":860,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":83,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":48,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":673,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":438,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":47,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableIteratorIteration":778,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":994,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":112,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking2":24,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":126,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":447,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":515,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":222,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":691,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":898,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":992,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":991,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":971,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":988,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":61,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":701,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRetainAll":102,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":1011,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":351,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":679,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":958,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":321,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":821,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":733,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":845,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":949,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":241,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":864,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":319,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":856,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":1019,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":648,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":586,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":797,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRetainAll":326,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectHashCodeEqualsContract":262,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":876,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListCompatibility":242,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":686,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":38,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":514,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":1034,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":561,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":569,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":248,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectEqualsSelf":50,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":688,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":769,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":106,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":704,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":903,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":531,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectEqualsSelf":335,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":658,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":417,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectEqualsSelf":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":5,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":605,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":300,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":847,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":329,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRetainAll":920,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEqualsNull":339,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":476,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":139,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":947,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":757,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionSize":835,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectEqualsSelf":266,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":888,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":195,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":872,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":997,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueElement":831,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testBagEqualsSelf":65,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":550,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":441,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":754,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":197,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":214,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":564,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":425,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":395,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":423,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":6,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsContract":166,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":322,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":1026,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":27,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":961,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":511,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":1009,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking2":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":416,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":700,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":232,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":524,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":116,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectHashCodeEqualsContract":337,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":365,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsContract":43,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":291,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":621,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":624,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":77,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":419,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":463,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":205,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":363,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testEqualsNull":292,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":246,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":1002,"org.apache.commons.collections4.list.GrowthListTest.testEqualsNull":137,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRemoveAll":333,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":560,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":1008,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":995,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":1007,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":59,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":556,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":56,"org.apache.commons.collections4.queue.TransformedQueueTest.testEqualsNull":336,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":659,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":192,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":407,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":566,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListCompatibility":174,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectEqualsSelf":257,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":575,"org.apache.commons.collections4.map.CompositeMapTest.testEmptyMapCompatibility":788,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":1043,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":685,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectEqualsSelf":75,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":807,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":518,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":85,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testDecorateFactory":828,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":660,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":695,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":1046,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":296,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":989,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":982,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testObjectHashCodeEqualsSelfHashCode":546,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":386,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":825,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testEqualsNull":270,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":1038,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":603,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":1056,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsContract":271,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":990,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":1010,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":874,"org.apache.commons.collections4.set.CompositeSetTest.testSimpleSerialization":666,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":865,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":359,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":11,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":752,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":120,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":656,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":783,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":202,"org.apache.commons.collections4.list.UnmodifiableListTest.testObjectEqualsSelf":183,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":462,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":925,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":418,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":489,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":604,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":421,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":230,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":446,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":227,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":217,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":372,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":380,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":400,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":523,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray2":781,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":867,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":773,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":985,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":39,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueCompatibility":833,"org.apache.commons.collections4.map.CompositeMapTest.testMakeMap":787,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRetainAll":98,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":390,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":142,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":599,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":851,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":938,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":595,"org.apache.commons.collections4.map.ListOrderedMap2Test.testIndexOf":22,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":180,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRetainAll":110,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRetainAll":931,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":601,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":145,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":148,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":474,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":229,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":823,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":906,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":434,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":45,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveAll":93,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":979,"org.apache.commons.collections4.list.GrowthListTest.testSerializeDeserializeThenCompare":134,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":40,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":597,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":980,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":758,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":530,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":670,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":619,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":493,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":886,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":617,"org.apache.commons.collections4.list.TransformedListTest.testObjectEqualsSelf":164,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":725,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":92,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":201,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":1055,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsContract":294,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":591,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":198,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":247,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":437,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":429,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":794,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":52,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":647,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":1000,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":650,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":362,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":467,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":809,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":606,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":669,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectEqualsSelf":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":414,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":163,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":698,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":499,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":128,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":488,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":854,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":652,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":871,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":236,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":175,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":820,"org.apache.commons.collections4.CollectionUtilsTest.emptyCollection":82,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":858,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":1045,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":811,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":948,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":1027,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":664,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":494,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":959,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveAll":107,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":633,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":9,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":877,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":464,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":859,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":115,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":1054,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectHashCodeEqualsContract":268,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testFullIterator":538,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":713,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":927,"org.apache.commons.collections4.list.TreeListTest.testBug35258":846,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":973,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":135,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":618,"org.apache.commons.collections4.ListUtilsTest.testSelect":354,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":315,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveAll":331,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":870,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":158,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":682,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":353,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":878,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":239,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":804,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":942,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":1030,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":404,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":534,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":53,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":0,"org.apache.commons.collections4.list.TransformedListTest.testEqualsNull":165,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":483,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":945,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":944,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":943,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":1005,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":881,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":1044,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":162,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":105,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":186,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":505,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectHashCodeEqualsContract":265,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":502,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveAll":101,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":956,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":486,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":772,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":800,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testObjectEqualsSelf":540,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":125,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":620,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":966,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":795,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRetainAll":334,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":668,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":987,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":684,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":31,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEqualsNull":33,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":593,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":55,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":149,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":926,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":967,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testRemove":539,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":775,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":893,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRetainAll":930,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":401,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":753,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":131,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":622,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":1063,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":16,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyWritableMap":884,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":588,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":243,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":118,"org.apache.commons.collections4.set.TransformedSetTest.testSetEquals":275,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":722,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":385,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":941,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":712,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectHashCodeEqualsContract":343,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":590,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":256,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":168,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":349,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":415,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectEqualsSelf":63,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":573,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":245,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":1025,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectEqualsSelf":338,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":448,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":1047,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":206,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":384,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFirstKey":766,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":482,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":718,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":81,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":862,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":496,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":310,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":153,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":490,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":637,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":361,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsSelfHashCode":842,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":582,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":253,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":529,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRetainAll":921,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":936,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":199,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":466,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":900,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":589,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":654,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveAll":324,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":774,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":525,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectHashCodeEqualsContract":259,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":452,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":133,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":121,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":1001,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":810,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":615,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRetainAll":88,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":770,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":182,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":327,"org.apache.commons.collections4.set.ListOrderedSet2Test.testEqualsNull":303,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":377,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":1006,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":519,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testObjectHashCodeEqualsContract":545,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":667,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":1033,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":894,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":909,"org.apache.commons.collections4.map.ListOrderedMap2Test.testNextKey":918,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":957,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":388,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":933,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":8,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":1051,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":768,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":1037,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":428,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":1024,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":379,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":1023,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":749,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":244,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":805,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":762,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":883,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":692,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":675,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testBagEqualsSelf":71,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":814,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":952,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":743,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":868,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectEqualsSelf":263,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":123,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":426,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectEqualsSelf":272,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":345,"org.apache.commons.collections4.list.GrowthListTest.testFullListCompatibility":122,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":317,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":497,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":501,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIsEmpty":635,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":708,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray2":625,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":657,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":565,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":594,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":225,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":978,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":707,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":719,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":155,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveAll":89,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":626,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":576,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":479,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":376,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":848,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.initializationError":777,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":776,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":1018,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRetainAll":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":371,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":173,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetEquals":280,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":171,"org.apache.commons.collections4.list.UnmodifiableListTest.testSerializeDeserializeThenCompare":181,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":72,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":498,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":553,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":1039,"org.apache.commons.collections4.set.TransformedSetTest.testSerializeDeserializeThenCompare":276,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":161,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testCanonicalFullCollectionExists":541,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":114,"org.apache.commons.collections4.list.SetUniqueListTest.testObjectHashCodeEqualsContract":211,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":706,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":911,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":1012,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRetainAll":332,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":140,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEqualsNull":261,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalFullCollectionExists":663,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":347,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":760,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":200,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":457,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":387,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":735,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":935,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":751,"org.apache.commons.collections4.list.PredicatedListTest.testEqualsNull":238,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":240,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":838,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":409,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueCompatibility":830,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":360,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":629,"org.apache.commons.collections4.map.CompositeMapTest.testGet":358,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":526,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSimpleSerialization":841,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":928,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":458,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":579,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":1035,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":651,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":728,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsContract":35,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":690,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":998,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":785,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":1036,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":759,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRetainAll":923,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalEmptyCollectionExists":665,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":1029,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":641,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsContract":340,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":475,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testCanonicalEmptyCollectionExists":543,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":740,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":3,"org.apache.commons.collections4.list.UnmodifiableListTest.testObjectHashCodeEqualsContract":185,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":187,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":495,"org.apache.commons.collections4.set.TransformedSortedSetTest.testEqualsNull":282,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":420,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":454,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":558,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":596,"org.apache.commons.collections4.CollectionUtilsTest.union":812,"org.apache.commons.collections4.collection.TransformedCollectionTest.testEqualsNull":264,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":580,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":875,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":172,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":555,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":592,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":403,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":643,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":215,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":170,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":972,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":655,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":885,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":234,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":397,"org.apache.commons.collections4.list.TreeListTest.testRemove":843,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray2":680,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":897,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":917,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":549,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":869,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":37,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":485,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":636,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":694,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":478,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":932,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":951,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":950,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":231,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":581,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":1020,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCanonicalFullCollectionExists":839,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":223,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":412,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":74,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":481,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueSerialization":834,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectEqualsSelf":297,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":873,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":1031,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":402,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":460,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveAll":95,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":178,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":717,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":744,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRetainAll":100,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":1014,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":1052,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":375,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":602,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":963,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":32,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":150,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":711,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":724,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":709,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":251,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":710,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":1003,"org.apache.commons.collections4.ListUtilsTest.testSubtract":1064,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":954,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":924,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":510,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":562,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":587,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":111,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsContract":70,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":699,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":440,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":328,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":382,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":687,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectEqualsSelf":287,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":301,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":1053,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":940,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":473,"org.apache.commons.collections4.list.TreeListTest.testListEquals":852,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":731,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":389,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":570,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":19,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":504,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":1032,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":578,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":729,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":730,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":801,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":750,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":156,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsContract":314,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalEmptyCollectionExists":792,"org.apache.commons.collections4.list.SetUniqueListTest.testObjectEqualsSelf":209,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":609,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":146,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectEqualsSelf":308,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":857,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":822,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveAll":97,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":219,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":907,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":456,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":742,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":1013,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEqualsNull":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":798,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":378,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":439,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListCompatibility":169,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testEqualsNull":273,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":500,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":612,"org.apache.commons.collections4.list.GrowthListTest.testObjectEqualsSelf":136,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":318,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":471,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectHashCodeEqualsContract":299,"org.apache.commons.collections4.list.GrowthListTest.testEmptyListCompatibility":113,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":58,"org.apache.commons.collections4.set.PredicatedSetTest.testEqualsNull":298,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectEqualsSelf":54,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectHashCodeEqualsContract":284,"org.apache.commons.collections4.set.UnmodifiableSetTest.testEqualsNull":307,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":355,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":913,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsContract":64,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiableIterator":623,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":671,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":818,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":117,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":817,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":465,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":132,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":451,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":492,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":734,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":203,"org.apache.commons.collections4.set.TransformedSetTest.testObjectHashCodeEqualsContract":279,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":849,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testLastKey":765,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectHashCodeEqualsContract":289,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":563,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":44,"org.apache.commons.collections4.list.PredicatedListTest.testObjectEqualsSelf":237,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":631,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":1016,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":610,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":646,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":522,"org.apache.commons.collections4.QueueUtilsTest.testEmptyQueue":824,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":850,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":487,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":366,"org.apache.commons.collections4.set.TransformedSetTest.testEqualsNull":278,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":516,"org.apache.commons.collections4.set.ListOrderedSet2Test.testObjectHashCodeEqualsContract":304,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":584,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":26,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":639,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":436,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":189,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":144,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":715,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":974,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":20,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":889,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":233,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":196,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":21,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":915,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSerializeDeserializeThenCompare":311,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":1017,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":157,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":472,"org.apache.commons.collections4.set.TransformedSetTest.testObjectEqualsSelf":277,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":630,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":705,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":432,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":937,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":1050,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":431,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":1049,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveAll":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":435,"org.apache.commons.collections4.functors.AllPredicateTest.nullArrayToGetInstance":879,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":953,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectEqualsSelf":269,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":976,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":638,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":697,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":969,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":408,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":866,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":80,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":763,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":887,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":346,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":1028,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":305,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":808,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":84,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":964,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":819,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":965,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":741,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":391,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":235,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":344,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":1041,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":459,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":642,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":554,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":445,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":677,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":4,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectEqualsSelf":293,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":461,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testEqualsNull":542,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":143,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":528,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":10,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":1015,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":552,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectHashCodeEqualsContract":274,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":350,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":892,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":946,"org.apache.commons.collections4.IteratorUtilsTest.testToArray2":356,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":286,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":480,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetIteratorRemoveChangesMap":714,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":896,"org.apache.commons.collections4.list.GrowthListTest.testCollectionClear":129,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":46,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEqualsNull":342,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray2":674,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":78,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectEqualsSelf":283,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":634,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":745,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":863,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectEqualsSelf":313,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":613,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":449,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":855,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":916,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":826,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":422,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":999,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":559,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRetainAll":90,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":802,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":41,"org.apache.commons.collections4.map.CompositeMapTest.testSimpleSerialization":793,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":532,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":250,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":392,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":212,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":683,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":585,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":891,"org.apache.commons.collections4.set.CompositeSetTest.testContains":640,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":218,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":325,"org.apache.commons.collections4.CollectionUtilsTest.isFull":520,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":934,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking":13,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":491,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":571,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":17,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":477,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":368,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":396,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":470,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":406,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":548,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":649,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":844,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIsEmpty":628,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":557,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":352,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":410,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":295,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":676,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":468,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":739,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":746,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":442,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":910,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectEqualsSelf":79,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":252,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":167,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":394,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":614,"org.apache.commons.collections4.list.FixedSizeListTest.testEqualsNull":258,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":104,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":723,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":908,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx1":880,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":696,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":179,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":912,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":996,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":254,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":736,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":738,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":737,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":194,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":767,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":968,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":509,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray2":632,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueRemove":827,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":204,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":29,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":249,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":895,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":430,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":600,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":527,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":796,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":36,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":119,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":748,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":255,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":316,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":975,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":413,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":405,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":127,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":521,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":73,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":764,"org.apache.commons.collections4.set.ListOrderedSetTest.testEqualsNull":288,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIsEmpty":784,"org.apache.commons.collections4.map.CompositeMapTest.testEqualsNull":791,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToString":836,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":398,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":207,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":583,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":130,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":455,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":208,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":1,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIsEmpty":678,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":424,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":220,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":176,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testSerializeDeserializeThenCompare":547,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRetainAll":96,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":914,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":411,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testDecorateFactory":535,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":572,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":188,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectEqualsSelf":341,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":224,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":151,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":320,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":806,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":782,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":962,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":780,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testIterator":536,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":513,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":503,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":732,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":929,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":607,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":644,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":369,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":645,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":443,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":512,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":453,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":1062,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":228,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":374,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":306,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":469,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":226,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalFullCollectionExists":790,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":905,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":756,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":902,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testEmptyIterator":537,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":939,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRetainAll":94,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":861,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveAll":109,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":506,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":159,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":216,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIsEmpty":672,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":986,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":574,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":577,"org.apache.commons.collections4.list.SetUniqueListTest.testEqualsNull":210,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":285,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueSerialization":832,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSerializeDeserializeThenCompare":281,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":689},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl"},"failures":[],"tindex":"9e1dd9a8-3f18-11e6-925e-3d359df4d6cd","method":{"position":"org.apache.commons.collections4.ListUtils:386","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> synchronizedList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3,4,5,6],"tindex":"9e1e4ed9-3f18-11e6-925e-b125d78d3695","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:631","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextSmaller(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getLeft(dataElement)) != null) {\n                rval = greatestNode(node.getLeft(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getLeft(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e1e75ea-3f18-11e6-925e-cde99428ff87","method":{"position":"org.apache.commons.collections4.MapUtils:364","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<K, V> map, final K key, final V defaultValue) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final V V = map.get(key);\n                if (answer != null) {\n                    return answer;\n                } \n            } \n            return defaultValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e1e75eb-3f18-11e6-925e-8109035e8f2f","method":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:112","type":"CtMethodImpl","sourcecode":"protected void checkBound(final int bound, final int len, final java.lang.String type) {\n    if (bound < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bound > bound) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (bound > len) {\n                        throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s beyond the end of the array. \"));\n                    } \n                    if (bound < 0) {\n                        throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s before the start of the array. \"));\n                    } \n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"bound","bound":"bound"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl"},"failures":[7,8],"tindex":"9e1e9cfc-3f18-11e6-925e-cf0e5118d072","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:532","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key3 != null) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((((multi.size()) == 4) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key3"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e1e9cfd-3f18-11e6-925e-83cff8d10ea0","method":{"position":"org.apache.commons.collections4.CollectionUtils:1427","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.collections4.CollectionUtils.isEmpty(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e1ec40e-3f18-11e6-925e-bfee96bcc6b5","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:80","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        {\n            if (coll == null) {\n                throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n            } \n            for (int int = 0 ; i < 1000 ; i++) {\n                if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                    break;\n                } \n                if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n                    coll = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(coll)).decorated();\n                } else if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n                    coll = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(coll)).decorated();\n                } \n            }\n            if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(((org.apache.commons.collections4.BoundedCollection<E>)(coll)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e1ec40f-3f18-11e6-925e-879a822d149b","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:627","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if (getEntrySet().contains(obj)) {\n                final java.lang.Object java.lang.Object = ((java.util.Map.Entry<K, V>)(obj)).getKey();\n                org.apache.commons.collections4.map.ListOrderedMap<K, V>.remove(key);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl"},"failures":[9],"tindex":"9e1eeb20-3f18-11e6-925e-45bb918a3153","method":{"position":"org.apache.commons.collections4.ListUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> selectRejected(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl"},"failures":[10],"tindex":"9e1eeb21-3f18-11e6-925e-3185e7a6d8bb","method":{"position":"org.apache.commons.collections4.IteratorUtils:396","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start) {\n    if (start < 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl"},"failures":[11],"tindex":"9e1f1232-3f18-11e6-925e-73cae7748b1b","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:134","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e1f1233-3f18-11e6-925e-45946e87620f","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:63","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e1f3944-3f18-11e6-925e-61c1aa40e270","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:462","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.Node.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((K) == null ? (e2.getKey()) == null : K.equals(e2.getKey())) && ((V) == null ? (e2.getValue()) == null : V.equals(e2.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[12],"tindex":"9e1f3945-3f18-11e6-925e-83e3059687dc","method":{"position":"org.apache.commons.collections4.map.LinkedMap:183","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index > 0) {\n        {\n            return remove(get(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[13,14],"tindex":"9e1f3946-3f18-11e6-925e-7dbd9dd0cee8","method":{"position":"org.apache.commons.collections4.list.TransformedList:119","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getList().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1065","type":"CtBinaryOperatorImpl"},"failures":[15],"tindex":"9e1f6057-3f18-11e6-925e-d177f3301d2f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1063","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.util.Iterator<? extends I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if ((inputIterator != null) && (transformer != null)) {\n        {\n            if ((inputIterator != null) && (transformer != null)) {\n                while (inputIterator.hasNext()) {\n                    final I I = inputIterator.next();\n                    final O O = transformer.transform(item);\n                    outputCollection.add(value);\n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputIterator":"inputIterator","transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl"},"failures":[16,17],"tindex":"9e1f6058-3f18-11e6-925e-37219ae387ed","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:199","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e1f8769-3f18-11e6-925e-950b2ae9097d","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:97","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl"},"failures":[18,19,20,21,22],"tindex":"9e1f876a-3f18-11e6-925e-89aed565d928","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:410","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<K>.indexOf(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[23,24,25,26],"tindex":"9e1f876b-3f18-11e6-925e-2b2a96cb0fe6","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e1fae7c-3f18-11e6-925e-ed41fff4e31c","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:701","type":"CtMethodImpl","sourcecode":"public void atomic(final java.lang.Runnable r) {\n    if (r == null) {\n        {\n            if (r == null) {\n                throw new java.lang.NullPointerException();\n            } \n            atomic(r, 0);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e1fae7d-3f18-11e6-925e-819fb8592cdb","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:317","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryBefore(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl"},"failures":[27],"tindex":"9e1fae7e-3f18-11e6-925e-23fe4d29696f","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((transformers.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(transformers);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl"},"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343],"tindex":"9e1fd58f-3f18-11e6-925e-7f043f2f4941","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            return (object == (org.apache.commons.collections4.collection.AbstractCollectionDecorator.this)) || (decorated().equals(object));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl"},"failures":[344],"tindex":"9e1fd590-3f18-11e6-925e-072ae5942c5f","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:57","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((predicates.int) != (transformers.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(predicates , transformers , defaultTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[188,189,190,192,193,25,194,26,195,196,198,199,200,201,202,204,205,206,208],"tindex":"9e1ffca1-3f18-11e6-925e-0f87960a7d82","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:239","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final E E = super.remove(index);\n            java.util.Set<E>.remove(result);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:57","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e1ffca2-3f18-11e6-925e-ff99f964a35c","method":{"position":"org.apache.commons.collections4.iterators.IteratorChain:159","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.Queue<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl"},"failures":[345,346,347,348,349,350,351,352,353,354,9],"tindex":"9e1ffca3-3f18-11e6-925e-6ba17b523c03","method":{"position":"org.apache.commons.collections4.CollectionUtils:510","type":"CtMethodImpl","sourcecode":"public static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((b.size()) != (a.size())) {\n        {\n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n            if ((helper.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (helper.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n                return false;\n            } \n            for (final java.lang.Object java.lang.Object : helper.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n                if ((helper.freqA(obj)) != (helper.freqB(obj))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e2023b4-3f18-11e6-925e-5b5f8e78824f","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:75","type":"CtInvocationImpl"},"failures":[355],"tindex":"9e2023b5-3f18-11e6-925e-ab3af06fb341","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:119","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            final java.util.Set<E> java.util.Set<E> = new java.util.HashSet<E>(list);\n            list.retainAll(set);\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:97","type":"CtBinaryOperatorImpl"},"failures":[356],"tindex":"9e2023b6-3f18-11e6-925e-83a710031dd0","method":{"position":"org.apache.commons.collections4.IteratorUtils:976","type":"CtMethodImpl","sourcecode":"public static <E>E[] toArray(final java.util.Iterator<? extends E> iterator, final java.lang.Class<E> arrayClass) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (arrayClass == null) {\n                throw new java.lang.NullPointerException(\"Array class must not be null\");\n            } \n            final java.util.List<E> java.util.List<E> = org.apache.commons.collections4.IteratorUtils.toList(iterator, 100);\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final E[] E[] = ((E[])(java.lang.reflect.Array.newInstance(arrayClass, list.size())));\n            return list.toArray(array);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl"},"failures":[180],"tindex":"9e204ac7-3f18-11e6-925e-55b7e76965fb","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[357],"tindex":"9e204ac8-3f18-11e6-925e-a74f1b86d237","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:547","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final int index) {\n    if (index < 0) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.remove(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl"},"failures":[358,359,360,361],"tindex":"9e204ac9-3f18-11e6-925e-3f14ade8043f","method":{"position":"org.apache.commons.collections4.map.CompositeMap:281","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].get(key);\n                } \n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl"},"failures":[362],"tindex":"9e2071da-3f18-11e6-925e-7d2c3aefd44e","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl"},"failures":[363,364,365,1,366,367,368,369,370],"tindex":"9e2071db-3f18-11e6-925e-610ff34a67f9","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:178","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            return (lookupValue(value)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e2071dc-3f18-11e6-925e-c3a4d5679765","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:582","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<K>lookup(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511],"tindex":"9e2071dd-3f18-11e6-925e-f53b060b8406","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:536","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.list.AbstractLinkedList.Node<E> getNode(final int index, final boolean endMarkerAllowed) throws java.lang.IndexOutOfBoundsException {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") less than zero.\"));\n            } \n            if ((!endMarkerAllowed) && (index == (int))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") is the size of the list.\"));\n            } \n            if (index > (int)) {\n                throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn't get the node: \" + \"index (\") + index) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n            } \n            org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            if (index < ((int) / 2)) {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            } else {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            }\n            return node;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IndexOutOfBoundsException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e2098ee-3f18-11e6-925e-75375c8f8987","method":{"position":"org.apache.commons.collections4.list.GrowthList:69","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.GrowthList<E> growthList(final java.util.List<E> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.GrowthList<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e2098ef-3f18-11e6-925e-df6cff84c279","method":{"position":"org.apache.commons.collections4.CollectionUtils:1154","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final C[] elements) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            for (final C C : elements) {\n                changed |= collection.add(element);\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e20c000-3f18-11e6-925e-ff7aba8002b2","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:59","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.MapBackedSet.mapBackedSet(map, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl"},"failures":[512,513,514,515,516,517],"tindex":"9e20c001-3f18-11e6-925e-bf64a8791dc6","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:252","type":"CtMethodImpl","sourcecode":"private void buildScript(final int start1, final int end1, final int start2, final int end2, final org.apache.commons.collections4.sequence.EditScript<T> script) {\n    if ((start2 - start2) > (start2 - start1)) {\n        {\n            final org.apache.commons.collections4.sequence.SequencesComparator.Snake org.apache.commons.collections4.sequence.SequencesComparator.Snake = getMiddleSnake(start1, end1, start2, end2);\n            if (((middle == null) || (((middle.getStart()) == end1) && ((middle.getDiag()) == (end1 - end2)))) || (((middle.getEnd()) == start1) && ((middle.getDiag()) == (start1 - start2)))) {\n                int int = start1;\n                int int = start2;\n                while ((i < end1) || (j < end2)) {\n                    if (((i < end1) && (j < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(i), java.util.List<T>.get(j)))) {\n                        script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                        ++i;\n                        ++j;\n                    } else {\n                        if ((end1 - start1) > (end2 - start2)) {\n                            script.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(i)));\n                            ++i;\n                        } else {\n                            script.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(j)));\n                            ++j;\n                        }\n                    }\n                }\n            } else {\n                buildScript(start1, middle.getStart(), start2, ((middle.getStart()) - (middle.getDiag())), script);\n                for (int int = middle.getStart() ; i < (middle.getEnd()) ; ++i) {\n                    script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                }\n                buildScript(middle.getEnd(), end1, ((middle.getEnd()) - (middle.getDiag())), end2, script);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"start2","end2":"start2","end1":"start2","start2":"start1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e20c002-3f18-11e6-925e-d1d6ff664c0b","method":{"position":"org.apache.commons.collections4.MapUtils:722","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key, final boolean defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (booleanObject == null) {\n                return defaultValue;\n            } \n            return booleanObject.booleanValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e20e713-3f18-11e6-925e-2f56da77643f","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:136","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<E> transform(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(coll.size());\n            for (final E E : coll) {\n                list.add(transform(item));\n            }\n            return list;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl"},"failures":[518],"tindex":"9e20e714-3f18-11e6-925e-7bfb2ec70752","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:57","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            return new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e20e715-3f18-11e6-925e-51cd05d608b4","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl"},"failures":[519],"tindex":"9e210e26-3f18-11e6-925e-891c1a6a7c26","method":{"position":"org.apache.commons.collections4.MapUtils:1217","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.collections4.MapUtils.isEmpty(map));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtInvocationImpl"},"failures":[],"tindex":"9e210e27-3f18-11e6-925e-2124cdd29ee1","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:183","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends J, ? extends U> map) {\n    if (map.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1467","type":"CtBinaryOperatorImpl"},"failures":[520],"tindex":"9e210e28-3f18-11e6-925e-6512ed86fb4a","method":{"position":"org.apache.commons.collections4.CollectionUtils:1466","type":"CtMethodImpl","sourcecode":"public static boolean isFull(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll == null) {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).isFull();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.isFull();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return false;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl"},"failures":[521,522,523,524,525,526,527,528,529],"tindex":"9e210e29-3f18-11e6-925e-b3688b689290","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:242","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            return entry.getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e21353a-3f18-11e6-925e-170621a8e52e","method":{"position":"org.apache.commons.collections4.MapUtils:340","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if ((answer != null) && (answer instanceof java.util.Map)) {\n                    return ((java.util.Map<?, ?>)(answer));\n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl"},"failures":[530,0,531,532,6],"tindex":"9e21353b-3f18-11e6-925e-4bcc0d7f6252","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1217","type":"CtMethodImpl","sourcecode":"private static void checkKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e21353c-3f18-11e6-925e-47d329a0bc38","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:631","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            final int int = getHash(obj);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    final java.lang.Object java.lang.Object = n.getKey();\n                    if ((k == obj) || ((k != null) && (k.equals(obj)))) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(k);\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e215c4d-3f18-11e6-925e-7b3b3249d4f4","method":{"position":"org.apache.commons.collections4.MapUtils:1698","type":"CtMethodImpl","sourcecode":"public static <K, V, E>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends E> elements, final org.apache.commons.collections4.Transformer<E, K> keyTransformer, final org.apache.commons.collections4.Transformer<E, V> valueTransformer) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = elements.iterator();\n            while (iter.hasNext()) {\n                final E E = iter.next();\n                map.put(keyTransformer.transform(temp), valueTransformer.transform(temp));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e215c4e-3f18-11e6-925e-b1c74290bcfa","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1004","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        {\n            rangeCheck(index, ((int) + 1));\n            final int int = coll.size();\n            if (cSize == 0) {\n                return false;\n            } \n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.addAll(((int) + index), coll);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            int += cSize;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl"},"failures":[533,534],"tindex":"9e215c4f-3f18-11e6-925e-f995eefecf43","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtBinaryOperatorImpl"},"failures":[535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,11,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,534,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,369,617,618,619,620,621,622,623,167,168,170,171,172,173,175,176,177,178,179,180,182,240,241,243,244,245,246,247,249,250,251,252,253,254,256,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,290,291,669,670,671,672,673,674,362,294,305,306,675,676,677,678,679,680,681,309,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,359,741,742,743,744,745,746,747,748,749,750,751,360,752,753,754,755,361,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786],"tindex":"9e218260-3f18-11e6-925e-bbedf0006659","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:47","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableIterator<E>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:382","type":"CtBinaryOperatorImpl"},"failures":[726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,359,741,742,743,744,745,746,787,747,748,788,749,789,750,751,360,752,753,754,755,361,756,757,758,759,760,761,790,791,792,793,762,763,764],"tindex":"9e218261-3f18-11e6-925e-c9468807fb10","method":{"position":"org.apache.commons.collections4.map.CompositeMap:121","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> mutator) {\n    if (mutator == null) {\n        {\n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> = mutator;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e218262-3f18-11e6-925e-439b399752a9","method":{"position":"org.apache.commons.collections4.map.SingletonMap:231","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return isEqualValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl"},"failures":[317],"tindex":"9e21a973-3f18-11e6-925e-651f314a189a","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl"},"failures":[794],"tindex":"9e21a974-3f18-11e6-925e-ddf97ddd2cb8","method":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtBinaryOperatorImpl"},"failures":[795],"tindex":"9e21a975-3f18-11e6-925e-ffffec656782","method":{"position":"org.apache.commons.collections4.functors.TransformerClosure:48","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> transformerClosure(final org.apache.commons.collections4.Transformer<? super E, ?> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            return new org.apache.commons.collections4.functors.TransformerClosure<E>(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtBinaryOperatorImpl"},"failures":[367,796,368,1,797,2,798,3,4,5],"tindex":"9e21a976-3f18-11e6-925e-9b617695899b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1959","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            boolean[][dataElement.ordinal()] = node.boolean[][dataElement.ordinal()];\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e21d087-3f18-11e6-925e-f18f8a62775b","method":{"position":"org.apache.commons.collections4.CollectionUtils:1307","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map.Entry<K, V> get(final java.util.Map<K, V> map, final int index) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            return org.apache.commons.collections4.CollectionUtils.get(map.entrySet(), index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e21d088-3f18-11e6-925e-1f4b0942d37e","method":{"position":"org.apache.commons.collections4.MapUtils:276","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Long) {\n                return ((java.lang.Long)(answer));\n            } \n            return java.lang.Long.valueOf(answer.longValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl"},"failures":[799,800,801,802,803,578],"tindex":"9e21d089-3f18-11e6-925e-2dfcf1712d0b","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                    while (e.hasNext()) {\n                        if (!(contains(e.next()))) {\n                            return false;\n                        } \n                    }\n                    return true;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e21d08a-3f18-11e6-925e-61870ac8ff19","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e21f79b-3f18-11e6-925e-9997dece8009","method":{"position":"org.apache.commons.collections4.CollectionUtils:463","type":"CtMethodImpl","sourcecode":"public static boolean isSubCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((a.size()) != (a.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n            for (final java.lang.Object java.lang.Object : a) {\n                if ((helper.freqA(obj)) > (helper.freqB(obj))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl"},"failures":[804],"tindex":"9e21f79c-3f18-11e6-925e-873f41ddcea1","method":{"position":"org.apache.commons.collections4.IteratorUtils:297","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start) {\n    if (start < 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl"},"failures":[512,513,514,515,516,517],"tindex":"9e21f79d-3f18-11e6-925e-f90c7af70cbf","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:169","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake getMiddleSnake(final int start1, final int end1, final int start2, final int end2) {\n    if ((end2 - end1) > (start1 - start1)) {\n        {\n            final int int = end1 - start1;\n            final int int = end2 - start2;\n            if ((m == 0) || (n == 0)) {\n                return null;\n            } \n            final int int = m - n;\n            final int int = n + m;\n            final int int = ((sum % 2) == 0 ? sum : sum + 1) / 2;\n            int[][(1 + offset)] = start1;\n            int[][(1 + offset)] = end1 + 1;\n            for (int int = 0 ; d <= offset ; ++d) {\n                for (int int = -d ; k <= d ; k += 2) {\n                    final int int = k + offset;\n                    if ((k == (-d)) || ((k != d) && ((int[][(i - 1)]) < (int[][(i + 1)])))) {\n                        int[][i] = int[][(i + 1)];\n                    } else {\n                        int[][i] = (int[][(i - 1)]) + 1;\n                    }\n                    int int = int[][i];\n                    int int = ((x - start1) + start2) - k;\n                    while (((x < end1) && (y < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = ++x;\n                        ++y;\n                    }\n                    if ((((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))) {\n                        if ((int[][(i - delta)]) <= (int[][i])) {\n                            return buildSnake(int[][(i - delta)], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n                for (int int = delta - d ; k <= (delta + d) ; k += 2) {\n                    final int int = (k + offset) - delta;\n                    if ((k == (delta - d)) || ((k != (delta + d)) && ((int[][(i + 1)]) <= (int[][(i - 1)])))) {\n                        int[][i] = (int[][(i + 1)]) - 1;\n                    } else {\n                        int[][i] = int[][(i - 1)];\n                    }\n                    int int = (int[][i]) - 1;\n                    int int = ((x - start1) + start2) - k;\n                    while (((x >= start1) && (y >= start2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = x--;\n                        y--;\n                    }\n                    if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n                        if ((int[][i]) <= (int[][(i + delta)])) {\n                            return buildSnake(int[][i], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n            }\n            throw new java.lang.RuntimeException(\"Internal Error\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"end1","end2":"start1","end1":"end2","start2":"start1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[386,390,391,392,393,401,409,414,805,433,434,806,480,481],"tindex":"9e221eae-3f18-11e6-925e-2d4fc751a749","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:229","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            removeNode(node);\n            return oldValue;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl"},"failures":[345,346,807,808,809,348,810,811,349,812,813,350,814,351,352,353,354,9,638,639,640,641,642,643,358,815,816,817,818,819,820,821],"tindex":"9e221eaf-3f18-11e6-925e-75d4bb9fa035","method":{"position":"org.apache.commons.collections4.CollectionUtils:98","type":"CtMethodImpl","sourcecode":"public int freqA(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.TransformedSet:78","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e221eb0-3f18-11e6-925e-ab73f63650f3","method":{"position":"org.apache.commons.collections4.set.TransformedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n        {\n            final org.apache.commons.collections4.set.TransformedSet<E> org.apache.commons.collections4.set.TransformedSet<E> = new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl"},"failures":[822],"tindex":"9e2245c1-3f18-11e6-925e-2145024dc2f4","method":{"position":"org.apache.commons.collections4.ClosureUtils:145","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> doWhileClosure(final org.apache.commons.collections4.Closure<? super E> closure, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl"},"failures":[823,824,825,826,827,828,829,830,831,832,833,834,780,781,835,836,782,783,784,785,837,838,786,338,839,339,840,841,340,842],"tindex":"9e2245c2-3f18-11e6-925e-077e3cb7b176","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Queue<E> java.util.Queue<E> = ((java.util.Queue<E>)(queue));\n                return tmpQueue;\n            } \n            return new org.apache.commons.collections4.queue.UnmodifiableQueue<E>(queue);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e2245c3-3f18-11e6-925e-3b4d5d45e9c0","method":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:112","type":"CtMethodImpl","sourcecode":"protected void checkBound(final int bound, final int len, final java.lang.String type) {\n    if (bound < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bound > bound) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (bound > len) {\n                        throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s beyond the end of the array. \"));\n                    } \n                    if (bound < 0) {\n                        throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s before the start of the array. \"));\n                    } \n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bound":"bound"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878],"tindex":"9e2245c4-3f18-11e6-925e-43835ea2eab9","method":{"position":"org.apache.commons.collections4.list.TreeList:413","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode.this;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = indexRelativeToMe < 0 ? getLeftSubTree() : getRightSubTree();\n            if (nextNode == null) {\n                return null;\n            } \n            return nextNode.get(indexRelativeToMe);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl"},"failures":[879,880],"tindex":"9e226cd5-3f18-11e6-925e-b920dd4155f7","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return org.apache.commons.collections4.functors.FunctorUtils.coerce(predicates[0]);\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl"},"failures":[881,882,883],"tindex":"9e226cd6-3f18-11e6-925e-23abe5baecfe","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1505","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            return containsValue(o);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SplitMapUtils:235","type":"CtBinaryOperatorImpl"},"failures":[884,885],"tindex":"9e226cd7-3f18-11e6-925e-f34d9452c898","method":{"position":"org.apache.commons.collections4.SplitMapUtils:234","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> writableMap(final org.apache.commons.collections4.Put<K, V> put) {\n    if (put == null) {\n        {\n            if (put == null) {\n                {\n                    if (put == null) {\n                        throw new java.lang.IllegalArgumentException(\"Put must not be null\");\n                    } \n                    if (put instanceof java.util.Map) {\n                        return ((java.util.Map<K, V>)(put));\n                    } \n                    return new org.apache.commons.collections4.SplitMapUtils.WrappedPut<K, V>(put);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"put":"put"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl"},"failures":[886,887],"tindex":"9e226cd8-3f18-11e6-925e-7bd256d4978a","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:206","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            final boolean boolean = super.remove(object);\n            if (removed) {\n                removeFromIndex(((C)(object)));\n            } \n            return removed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e2293e9-3f18-11e6-925e-65d91eff27b8","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:167","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator) throws java.lang.IndexOutOfBoundsException {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IndexOutOfBoundsException();\n    } else {\n        {\n            setComparator(index, comparator, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:153","type":"CtBinaryOperatorImpl"},"failures":[888],"tindex":"9e2293ea-3f18-11e6-925e-3fa955002c77","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:138","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            addComparator(comparator, false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"9e2293eb-3f18-11e6-925e-d374cdb76de1","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:128","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SplitMapUtils:235","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e2293ec-3f18-11e6-925e-474dbdb547d8","method":{"position":"org.apache.commons.collections4.SplitMapUtils:234","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> writableMap(final org.apache.commons.collections4.Put<K, V> put) {\n    if (put == null) {\n        {\n            if (put == null) {\n                {\n                    if (put == null) {\n                        throw new java.lang.IllegalArgumentException(\"Put must not be null\");\n                    } \n                    if (put instanceof java.util.Map) {\n                        return ((java.util.Map<K, V>)(put));\n                    } \n                    return new org.apache.commons.collections4.SplitMapUtils.WrappedPut<K, V>(put);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"put":"put"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e2293ed-3f18-11e6-925e-55873f046198","method":{"position":"org.apache.commons.collections4.MapUtils:677","type":"CtMethodImpl","sourcecode":"public static <K>float getFloatValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (floatObject == null) {\n                return 0.0F;\n            } \n            return floatObject.floatValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl"},"failures":[889,890,891,892,53,803,893,894,564,895,896,897,898,899,900,901,902,903,904,905,576],"tindex":"9e22bafe-3f18-11e6-925e-539fec99fa71","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next(), 1);\n                changed = changed || added;\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e22baff-3f18-11e6-925e-dbab179eaf2d","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl"},"failures":[906,907,908,909,910,911,912,913,914],"tindex":"9e22bb00-3f18-11e6-925e-2f6b38d775cd","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().getKey(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl"},"failures":[221],"tindex":"9e22bb01-3f18-11e6-925e-5990f24a5e04","method":{"position":"org.apache.commons.collections4.list.PredicatedList:98","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            return decorated().indexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl"},"failures":[915,916,917,918],"tindex":"9e22bb02-3f18-11e6-925e-f39c6b5b5845","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:193","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = java.util.List<K>.indexOf(key);\n            if ((index >= 0) && (index < ((size()) - 1))) {\n                return java.util.List<K>.get((index + 1));\n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl"},"failures":[549,559,562,566,131,159,232,919,920,921,922,923,924,925,926,927,928,929,930,931],"tindex":"9e22e213-3f18-11e6-925e-87912cc63e80","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:143","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            return decorated().retainAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtBinaryOperatorImpl"},"failures":[7,8],"tindex":"9e22e214-3f18-11e6-925e-25802a7670cf","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:657","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key2 != null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            if (key5 != null) {\n                h ^= key5.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl"},"failures":[27],"tindex":"9e22e215-3f18-11e6-925e-21c805a47e01","method":{"position":"org.apache.commons.collections4.TransformerUtils:192","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e22e216-3f18-11e6-925e-bd566b97940b","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                    while (e.hasNext()) {\n                        if (!(contains(e.next()))) {\n                            return false;\n                        } \n                    }\n                    return true;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtBinaryOperatorImpl"},"failures":[932],"tindex":"9e22e217-3f18-11e6-925e-9bfce6227ba3","method":{"position":"org.apache.commons.collections4.CollectionUtils:1497","type":"CtMethodImpl","sourcecode":"public static int maxSize(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).maxSize();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.maxSize();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return -1;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl"},"failures":[933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,524,525,986,987,988,989,990,991,992,993,994,995,996,997,528,529,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,12,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058],"tindex":"9e230928-3f18-11e6-925e-cd3fd551b3d7","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:337","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(java.lang.Object key) {\n    if (key == null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            final int int = hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    final V V = entry.getValue();\n                    removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl"},"failures":[1059,1060,1061,1062,1063],"tindex":"9e230929-3f18-11e6-925e-e75f3ce01229","method":{"position":"org.apache.commons.collections4.PredicateUtils:371","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.OnePredicate.onePredicate(predicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl"},"failures":[1064,1065],"tindex":"9e23092a-3f18-11e6-925e-7bbc0886b913","method":{"position":"org.apache.commons.collections4.ListUtils:126","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> subtract(final java.util.List<E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list2.size())) {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>();\n            final org.apache.commons.collections4.bag.HashBag<E> org.apache.commons.collections4.bag.HashBag<E> = new org.apache.commons.collections4.bag.HashBag<E>(list2);\n            for (final E E : list1) {\n                if (!(bag.remove(e, 1))) {\n                    result.add(e);\n                } \n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9e23303b-3f18-11e6-925e-995c9a7f3a78","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094228/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}