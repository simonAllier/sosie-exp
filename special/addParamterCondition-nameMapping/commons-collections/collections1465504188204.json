{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":512,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":55,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":36,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":128,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":521,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":544,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":370,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":108,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":328,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":257,"org.apache.commons.collections4.CollectionUtilsTest.getNegative":195,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":342,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":373,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":389,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":218,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":426,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":345,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":517,"org.apache.commons.collections4.CollectionUtilsTest.collect":250,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":335,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":37,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithEmptyCollection":184,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testSerializeDeserializeThenCompare":392,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":293,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":231,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":291,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":214,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":530,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":100,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":243,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testDecorateFactory":382,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":473,"org.apache.commons.collections4.CollectionUtilsTest.get":223,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":523,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":524,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":185,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":244,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":483,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":364,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":93,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":469,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testEqualsNull":397,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":454,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":491,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":416,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":32,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":288,"org.apache.commons.collections4.CollectionUtilsTest.addAllForElements":193,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray2":385,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":463,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":437,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":461,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":344,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":456,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":17,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":283,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":310,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":15,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":388,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":230,"org.apache.commons.collections4.CollectionUtilsTest.transform2":188,"org.apache.commons.collections4.CollectionUtilsTest.transform1":187,"org.apache.commons.collections4.CollectionUtilsTest.select":205,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":424,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":470,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":248,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":427,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Other":264,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":207,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":543,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionNullEquator":256,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":377,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":157,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKey":8,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":109,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":446,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":63,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":307,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":380,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":533,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":534,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":532,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":393,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":2,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":133,"org.apache.commons.collections4.CollectionUtilsTest.intersection":229,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":318,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":287,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToString":387,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":445,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":7,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":527,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":304,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRetainAll":326,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":150,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":550,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":72,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":196,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":348,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":518,"org.apache.commons.collections4.CollectionUtilsTest.testPermutationsWithNullCollection":237,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":294,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":477,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":75,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNonEmptyCollection":183,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":289,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":284,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":412,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":119,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":513,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":305,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":458,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Other":272,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":510,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":143,"org.apache.commons.collections4.map.CompositeMapTest.testPut":334,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":481,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":92,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":64,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":358,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":391,"org.apache.commons.collections4.map.CompositeMapTest.testGet":333,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":509,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":172,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":53,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":501,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":525,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":70,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":259,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":422,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":44,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":235,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":444,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":234,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":407,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKey":21,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":168,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":98,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":320,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":45,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":292,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":508,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":546,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":201,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":65,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":366,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":151,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":346,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":153,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":500,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":282,"org.apache.commons.collections4.CollectionUtilsTest.union":228,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":23,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":423,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":131,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":539,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":251,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":26,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":170,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":531,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":145,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull":202,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":239,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":28,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":286,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":154,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":522,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":340,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":158,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Enumeration":190,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":77,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":528,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":279,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":174,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":541,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":10,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":94,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesIteratorRemoveChangesMap":327,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Null":220,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":141,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":61,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking":457,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":514,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":159,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":362,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":73,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":295,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":102,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":245,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":268,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":371,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":285,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":438,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":496,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":526,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":68,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":240,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":317,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":502,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":537,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":536,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":535,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":548,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":308,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":455,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":136,"org.apache.commons.collections4.map.LRUMapTest.testClone":82,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":375,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":355,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":452,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":91,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":60,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":179,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":322,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":105,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":99,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":302,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectEqualsSelf":395,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":410,"org.apache.commons.collections4.set.MapBackedSetTest.testCanonicalEmptyCollectionExists":449,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":71,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":278,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKey":13,"org.apache.commons.collections4.CollectionUtilsTest.get1":225,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":162,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_PrimitiveArray":209,"org.apache.commons.collections4.CollectionUtilsTest.collateException2":217,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":363,"org.apache.commons.collections4.CollectionUtilsTest.collateException1":216,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCanonicalFullCollectionExists":396,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":440,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":450,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":52,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":476,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":238,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":107,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":465,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":274,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":520,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":552,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":139,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":267,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":127,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":281,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Array":271,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":29,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Map":263,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":173,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":331,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":384,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":78,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":19,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":270,"org.apache.commons.collections4.CollectionUtilsTest.testUnmodifiableCollection":252,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":492,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":515,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNull":182,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":135,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":545,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":511,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":86,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":246,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":352,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":126,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":125,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":124,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":152,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":227,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":354,"org.apache.commons.collections4.map.LRUMapTest.testReset":81,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":467,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Array":261,"org.apache.commons.collections4.CollectionUtilsTest.exists":197,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":542,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":353,"org.apache.commons.collections4.CollectionUtilsTest.filter":198,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectHashCodeEqualsSelfHashCode":401,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":337,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":361,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":191,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":336,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":296,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":507,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":180,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":59,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":290,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":138,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":95,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":146,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":106,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":332,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":212,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":110,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKey":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":519,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":130,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":166,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":432,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":415,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":16,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":41,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":306,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":553,"org.apache.commons.collections4.CollectionUtilsTest.addIgnoreNull":249,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":448,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":549,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":129,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":409,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":140,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":443,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":9,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":54,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":506,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":413,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":394,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":419,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":433,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":301,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":484,"org.apache.commons.collections4.CollectionUtilsTest.testSize_List":255,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":165,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionSize":386,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":434,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":12,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":298,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":163,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":11,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":405,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":39,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":142,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":189,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":192,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":48,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":104,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":236,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":330,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":338,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":18,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":169,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":194,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":347,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":436,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":35,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":160,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":176,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":408,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnmodifiable":383,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":504,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":147,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":547,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":482,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":428,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":479,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":314,"org.apache.commons.collections4.set.MapBackedSetTest.testCanonicalFullCollectionExists":447,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":114,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":137,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":551,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":323,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":233,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":213,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":451,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":46,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":84,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":429,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":203,"org.apache.commons.collections4.CollectionUtilsTest.addAllForEnumeration":204,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEqualsNull":453,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":132,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":144,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":460,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":299,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Iterator":258,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":186,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":471,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":50,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":241,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":339,"org.apache.commons.collections4.CollectionUtilsTest.emptyCollection":210,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":215,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":31,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":83,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":221,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":242,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":421,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":351,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":498,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":472,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":418,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":403,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":464,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_List":219,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":431,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":359,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":164,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":208,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":321,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectHashCodeEqualsContract":400,"org.apache.commons.collections4.set.CompositeSetTest.testContains":167,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":175,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithEmptyCollection":276,"org.apache.commons.collections4.CollectionUtilsTest.isFull":200,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":311,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":411,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":62,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":116,"org.apache.commons.collections4.CollectionUtilsTest.getFromObjectArray":232,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":538,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":254,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":480,"org.apache.commons.collections4.ListUtilsTest.testSelect":402,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveAll":325,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":357,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":79,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":356,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":269,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Map":222,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":14,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIsEmpty":390,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":260,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":315,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":505,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":381,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":266,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":247,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":300,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":101,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":6,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":171,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":495,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":96,"org.apache.commons.collections4.CollectionUtilsTest.reverse":253,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":474,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":88,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testSimpleSerialization":399,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":493,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCanonicalEmptyCollectionExists":398,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":486,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":313,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":20,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":56,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":374,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":499,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":297,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":178,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":466,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":487,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":103,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":369,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":367,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":40,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":280,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":360,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":490,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":489,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":488,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":494,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":69,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":262,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":540,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":33,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":343,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":275,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":161,"org.apache.commons.collections4.CollectionUtilsTest.find":224,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":74,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNonEmptyCollection":265,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":497,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":115,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":97,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":312,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":329,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":442,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":303,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking2":459,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":42,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":149,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":226,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":319,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":206,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":350,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":529,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":349,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicate":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":177,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":430,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":199,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":516,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":309,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":51,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":113,"org.apache.commons.collections4.map.LRUMapTest.testLRU":87,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":468,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":43,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":148,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":273,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":462,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":379,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":38,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":1,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":324,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":417,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":67,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":425,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":120,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":414,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":439,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":58,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":89,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":341,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":376,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":478,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":123,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":181,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":30,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":316,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":155,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":80,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":121,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":122,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":118,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":503,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":85,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":211,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":485,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":475,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":435,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":372,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":441,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":27,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":66,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":368,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":90,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":117,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":378,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKeyInverse":22,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":5,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":277,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":420,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":57,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":111,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":365,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":404,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":406},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:697","type":"CtBinaryOperatorImpl","sourcecode":"doubleObject == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"e91270ca-2e80-11e6-88d7-950cbe467d4e","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:221","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return java.util.Map<V, K>.get(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"doubleObject":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtBinaryOperatorImpl","sourcecode":"cmp < 0"},"failures":[26],"tindex":"e913341b-2e80-11e6-88d7-b947feaa5d70","method":{"position":"org.apache.commons.collections4.map.LinkedMap:183","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        {\n            return remove(get(index));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"e913341c-2e80-11e6-88d7-2f29192c1286","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.set.TransformedSortedSet<E> org.apache.commons.collections4.set.TransformedSortedSet<E> = new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[27,28],"tindex":"e9135b2d-2e80-11e6-88d7-3fbe2dd9240e","method":{"position":"org.apache.commons.collections4.set.TransformedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set == null) {\n        {\n            final org.apache.commons.collections4.set.TransformedSet<E> org.apache.commons.collections4.set.TransformedSet<E> = new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[29,30,31,32,33],"tindex":"e913823e-2e80-11e6-88d7-27901e244390","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:255","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return doRemoveKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:384","type":"CtBinaryOperatorImpl","sourcecode":"(1 <= otherCount) && (otherCount <= myCount)"},"failures":[],"tindex":"e913a94f-2e80-11e6-88d7-95a8bbdb23ed","method":{"position":"org.apache.commons.collections4.ClosureUtils:113","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if ((1 <= count) && (otherCount <= count)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ForClosure.forClosure(count, closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"myCount":"count","otherCount":"count"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:625","type":"CtBinaryOperatorImpl","sourcecode":"shortObject == null"},"failures":[],"tindex":"e913a950-2e80-11e6-88d7-fb246c79d492","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"shortObject":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[34],"tindex":"e913cf61-2e80-11e6-88d7-dbe504ba9d44","method":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsFalsePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((predicate == null) || (predicate == null)) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsFalsePredicate<T>(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[35,36],"tindex":"e913cf62-2e80-11e6-88d7-ff363d340047","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:357","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtUnaryOperatorImpl","sourcecode":"!(excess.isEmpty())"},"failures":[37],"tindex":"e913f673-2e80-11e6-88d7-a507e9013ba2","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:379","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Collection<E> coll) {\n    if (!(coll.isEmpty())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.List<java.util.Collection<E>>.remove(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"excess":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"e9141d84-2e80-11e6-88d7-11083b57b653","method":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        {\n            if (classToInstantiate == null) {\n                throw new java.lang.IllegalArgumentException(\"Class to instantiate must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate);\n            } \n            return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate , paramTypes , args);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[38,39,40,41],"tindex":"e9144495-2e80-11e6-88d7-311fb4af77ed","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:185","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : mapToCopy.entrySet()) {\n                validate(entry.getKey(), entry.getValue());\n            }\n            super.putAll(mapToCopy);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"(collection.size()) == 0"},"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"tindex":"e9146ba6-2e80-11e6-88d7-e3b3670a3ef7","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll.size()) == 0) {\n        {\n            return decorated().addAll(transform(coll));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:147","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138],"tindex":"e9146ba7-2e80-11e6-88d7-03ae5bebcbd9","method":{"position":"org.apache.commons.collections4.map.LRUMap:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addMapping(final int hashIndex, final int hashCode, final K key, final V value) {\n    if (hashIndex > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (isFull()) {\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                boolean boolean = false;\n                if (boolean) {\n                    while ((reuse != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (reuse != null)) {\n                        if (removeLRU(reuse)) {\n                            removeLRUEntry = true;\n                            break;\n                        } \n                        reuse = reuse.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                    }\n                    if (reuse == null) {\n                        throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                    } \n                } else {\n                    removeLRUEntry = removeLRU(reuse);\n                }\n                if (removeLRUEntry) {\n                    if (reuse == null) {\n                        throw new java.lang.IllegalStateException((((((((((((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                    } \n                    reuseMapping(reuse, hashIndex, hashCode, key, value);\n                } else {\n                    super.addMapping(hashIndex, hashCode, key, value);\n                }\n            } else {\n                super.addMapping(hashIndex, hashCode, key, value);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"hashIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[],"tindex":"e914e0d8-2e80-11e6-88d7-55ef5af70bf5","method":{"position":"org.apache.commons.collections4.CollectionUtils:80","type":"CtMethodImpl","sourcecode":"public final int max(final java.lang.Object obj) {\n    if (obj != null) {\n        {\n            return java.lang.Math.max(freqA(obj), freqB(obj));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtBinaryOperatorImpl","sourcecode":"(callCounter) == 0"},"failures":[139,140,141,142,54,70,143,144,145],"tindex":"e914e0d9-2e80-11e6-88d7-31b0829bcc9a","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:76","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (count >= count) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (count == 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().remove(object, count);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"callCounter":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl","sourcecode":"list1 == list2"},"failures":[],"tindex":"e91507ea-2e80-11e6-88d7-c7c7a34665a1","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:229","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        {\n            final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (decorated().contains(next)) {\n                    collectionRetainAll.add(next);\n                } \n            }\n            if ((collectionRetainAll.size()) == (decorated().size())) {\n                return false;\n            } \n            if ((collectionRetainAll.size()) == 0) {\n                clear();\n            } else {\n                for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                    if (!(collectionRetainAll.contains(it.next()))) {\n                        it.remove();\n                    } \n                }\n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"e9152efb-2e80-11e6-88d7-e946e702d22c","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object o) {\n    if (o != null) {\n        {\n            if (o == (org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.this)) {\n                return true;\n            } else if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(o));\n            if ((org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(K, other.getKey())) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(V, other.getValue()))) {\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"o"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtBinaryOperatorImpl","sourcecode":"(start) >= (maxElements)"},"failures":[],"tindex":"e915560c-2e80-11e6-88d7-a7f27eb0b887","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:76","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (count >= count) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (count == 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().remove(object, count);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"count","maxElements":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[146],"tindex":"e915560d-2e80-11e6-88d7-971dbc2020b0","method":{"position":"org.apache.commons.collections4.QueueUtils:73","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> predicatedQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.queue.PredicatedQueue.predicatedQueue(queue, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[147,148,149,150,151,152,153,140,154,155,156,157,158,159,160,141],"tindex":"e9157d1e-2e80-11e6-88d7-8b44598ceaad","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:105","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"e9157d1f-2e80-11e6-88d7-7d0f1198221b","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:292","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:278","type":"CtBinaryOperatorImpl","sourcecode":"retval != 0"},"failures":[149,161,162,156,163,164],"tindex":"e915a430-2e80-11e6-88d7-c79cae29a0d8","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:92","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count != 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validate(object);\n            return decorated().add(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"retval":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:55","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,130,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403],"tindex":"e915a431-2e80-11e6-88d7-25e0d83da8a8","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:54","type":"CtMethodImpl","sourcecode":"public static <T>java.util.Collection<T> unmodifiableCollection(final java.util.Collection<? extends T> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Collection<T> java.util.Collection<T> = ((java.util.Collection<T>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableCollection<T>(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof org.apache.commons.collections4.ResettableIterator"},"failures":[],"tindex":"e915cb42-2e80-11e6-88d7-3d45b4e29c01","method":{"position":"org.apache.commons.collections4.IteratorUtils:544","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E> iterator1, final java.util.Iterator<? extends E> iterator2) {\n    if (iterator1 instanceof org.apache.commons.collections4.ResettableIterator) {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterator1 , iterator2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452],"tindex":"e915cb43-2e80-11e6-88d7-ef43ca646561","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:74","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map, final V dummyValue) {\n    if (map == null) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"The map must not be null\");\n            } \n            return new org.apache.commons.collections4.set.MapBackedSet<E, V>(map , dummyValue);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtBinaryOperatorImpl","sourcecode":"cmp < 0"},"failures":[80,87,89,92,93,83,84,85,86],"tindex":"e915f254-2e80-11e6-88d7-d5de74858f5c","method":{"position":"org.apache.commons.collections4.map.LRUMap:296","type":"CtMethodImpl","sourcecode":"protected void reuseMapping(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if (hashCode < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            try {\n                final int int = hashIndex(entry.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = tmp[removeIndex];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n                while ((loop != entry) && (loop != null)) {\n                    previous = loop;\n                    loop = loop.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                }\n                if (loop == null) {\n                    throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][removeIndex])) + \" previous=\") + previous) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                } \n                (int)++;\n                removeEntry(entry, removeIndex, previous);\n                reuseEntry(entry, hashIndex, hashCode, key, value);\n                addEntry(entry, hashIndex);\n            } catch (final java.lang.NullPointerException ex) {\n                throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + entry) + \" entryIsHeader=\") + (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"hashCode"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:331","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"e9161965-2e80-11e6-88d7-b333ce5c0cda","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void updateNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == node) {\n        {\n            super.updateNode(node, value);\n            broadcastNodeChanged(node);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:80","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"e9164076-2e80-11e6-88d7-e590426ebd1d","method":{"position":"org.apache.commons.collections4.IteratorUtils:824","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:62","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[453],"tindex":"e9164077-2e80-11e6-88d7-f369e9574600","method":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.TransformingComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.TransformingComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.TransformingComparator<?, ?> org.apache.commons.collections4.comparators.TransformingComparator<?, ?> = ((org.apache.commons.collections4.comparators.TransformingComparator<?, ?>)(object));\n                return null == (java.util.Comparator<O>) ? null == (comp.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(comp.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[454],"tindex":"e9164078-2e80-11e6-88d7-89e2d2cb59b7","method":{"position":"org.apache.commons.collections4.IteratorUtils:805","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.Node node) {\n    if (node == null) {\n        {\n            if (node == null) {\n                throw new java.lang.NullPointerException(\"Node must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(node);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[98,455],"tindex":"e9166789-2e80-11e6-88d7-9dfabc0b927e","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:215","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:68","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[456],"tindex":"e916678a-2e80-11e6-88d7-631d91a1c52b","method":{"position":"org.apache.commons.collections4.functors.ChainedClosure:67","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if (closures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure collection must not be null\");\n            } \n            if ((closures.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[closures.size()];\n            int int = 0;\n            for (final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> : closures) {\n                cmds[(i++)] = closure;\n            }\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedClosure<E>(false , cmds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:613","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[457,458,459],"tindex":"e9168e9b-2e80-11e6-88d7-c73a6f66cdc3","method":{"position":"org.apache.commons.collections4.list.TransformedList:131","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index == 0) {\n        {\n            return getList().remove(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452],"tindex":"e9168e9c-2e80-11e6-88d7-87d71e6d22ad","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:59","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map) {\n    if (map == null) {\n        {\n            return org.apache.commons.collections4.set.MapBackedSet.mapBackedSet(map, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:917","type":"CtUnaryOperatorImpl","sourcecode":"!(root.isEmpty())"},"failures":[],"tindex":"e9168e9d-2e80-11e6-88d7-1397612e88ae","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:480","type":"CtMethodImpl","sourcecode":"V removeEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isEmpty())) {\n        {\n            if (h != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (h.isInternalNode()) {\n                    removeInternalEntry(h);\n                } else {\n                    removeExternalEntry(h);\n                }\n            } \n            decrementSize();\n            return h.setKeyValue(null, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"h"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtBinaryOperatorImpl","sourcecode":"to != null"},"failures":[460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,173,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,29,510,511,512,513,30,31,32,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,33,529,530,531,532,533,534,535,536,537,538,539,540,177,541,542,543,544,545,546,547,548],"tindex":"e916b5ae-2e80-11e6-88d7-5bbc33d350d4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1888","type":"CtMethodImpl","sourcecode":"private void setParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"to":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"e916b5af-2e80-11e6-88d7-8fbfeb195a19","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:132","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtBinaryOperatorImpl","sourcecode":"estimatedSize < 1"},"failures":[549,550,551,552,553],"tindex":"e916dcc0-2e80-11e6-88d7-a17d810d3403","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:447","type":"CtMethodImpl","sourcecode":"public V put(int index, final K key, final V value) {\n    if (index < 1) {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = decorated();\n            if (m.containsKey(key)) {\n                final V V = m.remove(key);\n                final int int = java.util.List<K>.indexOf(key);\n                java.util.List<K>.remove(pos);\n                if (pos < index) {\n                    index--;\n                } \n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return result;\n            } else {\n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return null;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"estimatedSize":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtInvocationImpl","sourcecode":"iteratorChain.isEmpty()"},"failures":[],"tindex":"e916dcc1-2e80-11e6-88d7-65d443754742","method":{"position":"org.apache.commons.collections4.IteratorUtils:521","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> chainedIterator(final java.util.Collection<java.util.Iterator<? extends E>> iterators) {\n    if (iterators.isEmpty()) {\n        {\n            return new org.apache.commons.collections4.iterators.IteratorChain<E>(iterators);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iteratorChain":"iterators"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[200,245],"tindex":"e91703d2-2e80-11e6-88d7-0b7f954545ba","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:80","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (coll == null) {\n                throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n            } \n            for (int int = 0 ; i < 1000 ; i++) {\n                if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                    break;\n                } \n                if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n                    coll = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(coll)).decorated();\n                } else if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n                    coll = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(coll)).decorated();\n                } \n            }\n            if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(((org.apache.commons.collections4.BoundedCollection<E>)(coll)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":41,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}