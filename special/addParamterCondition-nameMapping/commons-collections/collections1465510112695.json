{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":30,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":148,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":219,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":458,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":606,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":65,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":574,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":17,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":642,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":643,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testRemove":257,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":547,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":431,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":610,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":38,"org.apache.commons.collections4.CollectionUtilsTest.collect":175,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":163,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":248,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueRemove":152,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":395,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":212,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":50,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testBagEqualsSelf":352,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsContract":402,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":85,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":586,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectEqualsSelf":570,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":193,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListCompatibility":432,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":486,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":218,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectEqualsSelf":562,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":71,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":145,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":426,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":114,"org.apache.commons.collections4.list.GrowthListTest.testFullListCompatibility":485,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":313,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":535,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":81,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking":249,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":101,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":34,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":75,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectEqualsSelf":369,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsSelfHashCode":591,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":73,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":140,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray2":159,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyIterator":258,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":462,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":356,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":515,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveAll":417,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":291,"org.apache.commons.collections4.CollectionUtilsTest.transform2":173,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":580,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":82,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSimpleSerialization":592,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":210,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":288,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":64,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":520,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":628,"org.apache.commons.collections4.set.ListOrderedSet2Test.testObjectEqualsSelf":393,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRetainAll":420,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":237,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorOrder":253,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":531,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveAll":411,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":434,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetEquals":379,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":487,"org.apache.commons.collections4.list.GrowthListTest.testObjectHashCodeEqualsContract":499,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":166,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":513,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":530,"org.apache.commons.collections4.list.UnmodifiableListTest.testSerializeDeserializeThenCompare":539,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":53,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":353,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking":611,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":54,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":52,"org.apache.commons.collections4.set.TransformedSetTest.testSerializeDeserializeThenCompare":372,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":521,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":478,"org.apache.commons.collections4.list.SetUniqueListTest.testObjectHashCodeEqualsContract":448,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":641,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":636,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":187,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":307,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRetainAll":300,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":623,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":215,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":501,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":39,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":246,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectEqualsSelf":564,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":89,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":364,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":607,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListCompatibility":502,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullIterator":259,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":439,"org.apache.commons.collections4.queue.TransformedQueueTest.testFullQueueSerialization":157,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":181,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":5,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":4,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":31,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":137,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":277,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":508,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":280,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":543,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":92,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":344,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":318,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySet":295,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":450,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicateEx1":247,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":26,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":602,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":583,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":112,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":608,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":230,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsContract":370,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectEqualsSelf":260,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":115,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":134,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":423,"org.apache.commons.collections4.queue.TransformedQueueTest.testSerializeDeserializeThenCompare":169,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":340,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":226,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove3":121,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":120,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":339,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":274,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":136,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":576,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsContract":320,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":25,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":476,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":67,"org.apache.commons.collections4.list.UnmodifiableListTest.testObjectHashCodeEqualsContract":542,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":597,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":600,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":144,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":234,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":15,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":428,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":459,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":624,"org.apache.commons.collections4.queue.TransformedQueueTest.testFullQueueCompatibility":153,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":333,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":111,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":241,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":584,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRetainAll":414,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":126,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":637,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":59,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCanonicalEmptyCollectionExists":593,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":197,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":452,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":529,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":305,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":626,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":42,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":629,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSerializeDeserializeThenCompare":267,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":285,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":470,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":191,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":544,"org.apache.commons.collections4.list.TreeListTest.testRemove":283,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":303,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":62,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRetainAll":310,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectHashCodeEqualsContract":565,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":630,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":35,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListCompatibility":545,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":358,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":657,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":14,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":359,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":118,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":467,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":551,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectEqualsSelf":341,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":587,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":290,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":203,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":460,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":590,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":107,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectEqualsSelf":385,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":45,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":275,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":196,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectEqualsSelf":321,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":208,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":55,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":146,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectEqualsSelf":346,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":69,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveAll":407,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":536,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":391,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":117,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRetainAll":412,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":652,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":317,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":179,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":154,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":368,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":511,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":500,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":554,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":578,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":609,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":130,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectEqualsSelf":566,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":124,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":648,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEqualsNull":262,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":475,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testBagEqualsSelf":343,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsContract":347,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":228,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":316,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":437,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":211,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectEqualsSelf":389,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":392,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":451,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":217,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":88,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToString":161,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorSet":256,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":183,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":276,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":189,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":77,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":70,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":271,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":306,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsContract":525,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":575,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":128,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":582,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":207,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":468,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":516,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":132,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsContract":378,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":480,"org.apache.commons.collections4.list.SetUniqueListTest.testObjectEqualsSelf":447,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":27,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectHashCodeEqualsContract":322,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectEqualsSelf":401,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":507,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsContract":363,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":150,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":396,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":104,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalEmptyCollectionExists":263,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":348,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveAll":409,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":456,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":640,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":243,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":36,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":646,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":66,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":443,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":209,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":227,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListCompatibility":528,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":549,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRemoveAll":301,"org.apache.commons.collections4.list.GrowthListTest.testObjectEqualsSelf":498,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":273,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":314,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectHashCodeEqualsContract":386,"org.apache.commons.collections4.list.GrowthListTest.testEmptyListCompatibility":477,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":331,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":330,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":328,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectEqualsSelf":327,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectHashCodeEqualsContract":382,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":433,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":199,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":63,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsContract":335,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListCompatibility":532,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectEqualsSelf":560,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":170,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectEqualsSelf":355,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":481,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":595,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":425,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":494,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":238,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":24,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":282,"org.apache.commons.collections4.set.TransformedSetTest.testObjectHashCodeEqualsContract":374,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":442,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectHashCodeEqualsContract":390,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":384,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":336,"org.apache.commons.collections4.list.PredicatedListTest.testObjectEqualsSelf":473,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":270,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":180,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":342,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":647,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":287,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsContract":569,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":40,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":16,"org.apache.commons.collections4.set.ListOrderedSet2Test.testObjectHashCodeEqualsContract":394,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":289,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":139,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":650,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":224,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":585,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":441,"org.apache.commons.collections4.list.UnmodifiableListTest.testObjectEqualsSelf":541,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":430,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":245,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":505,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":149,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIteratorRemove":162,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":469,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":436,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testOrderedMapIterator":251,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":625,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSerializeDeserializeThenCompare":376,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":517,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":23,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":7,"org.apache.commons.collections4.set.TransformedSetTest.testObjectEqualsSelf":373,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":231,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":255,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":466,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":233,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":143,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":454,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":298,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":223,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":293,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveAll":415,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":360,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiMapIteratorSet":268,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectEqualsSelf":568,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRetainAll":410,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":184,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":94,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":292,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":503,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsContract":265,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":200,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":366,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":573,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":538,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEqualsNull":119,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRetainAll":422,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":399,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":424,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":506,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":509,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":603,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":598,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":605,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":129,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":185,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":471,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":656,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":465,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":222,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":244,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":168,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":337,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":653,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveAll":405,"org.apache.commons.collections4.list.GrowthListTest.testSerializeDeserializeThenCompare":496,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":618,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":232,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":361,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking2":613,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":20,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":621,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":68,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectEqualsSelf":397,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":93,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":504,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":113,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":131,"org.apache.commons.collections4.list.TransformedListTest.testObjectEqualsSelf":524,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":604,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":404,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":440,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":651,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsContract":398,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":151,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":225,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":550,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":220,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":325,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectHashCodeEqualsContract":563,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":133,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":388,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEqualsNull":127,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":72,"org.apache.commons.collections4.list.GrowthListTest.testCollectionClear":491,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectEqualsSelf":362,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":205,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":338,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":523,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":349,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectEqualsSelf":381,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":177,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":490,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectEqualsSelf":377,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":83,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":236,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":472,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":533,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":172,"org.apache.commons.collections4.CollectionUtilsTest.emptyCollection":572,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":345,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":272,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":33,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionSize":160,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":109,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":294,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRetainAll":418,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveAll":419,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":84,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":599,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":186,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":553,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":449,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":601,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":479,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectHashCodeEqualsContract":567,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalFullCollectionExists":261,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":309,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":455,"org.apache.commons.collections4.list.TreeListTest.testBug35258":286,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":190,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":612,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":497,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":91,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionClear":165,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveAll":299,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":311,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":518,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":6,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":474,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":614,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":284,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":198,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":326,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":332,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":201,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":383,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":616,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":269,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":615,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyMapIterator":254,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":522,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectEqualsSelf":350,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":106,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":427,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":555,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":577,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":526,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSimpleSerialization":264,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":188,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":8,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectHashCodeEqualsContract":571,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":596,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":103,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetIndexed":619,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveAll":413,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":654,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":96,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":11,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove3":123,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":638,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":122,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":639,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":110,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIsEmpty":164,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":537,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":620,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":78,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":557,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":278,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":488,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":97,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":435,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRetainAll":302,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":266,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":281,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":1,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":365,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":100,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":99,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":367,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":552,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":98,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":105,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":403,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":178,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":221,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":510,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":48,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":357,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":22,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":296,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":483,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRetainAll":167,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":312,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":558,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":195,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":493,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":204,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":329,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":645,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":489,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":546,"org.apache.commons.collections4.set.TransformedSetTest.testSetEquals":371,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":482,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":214,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":655,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectHashCodeEqualsContract":324,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":141,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":559,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":135,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":527,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":156,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":174,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":354,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":206,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectEqualsSelf":334,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":192,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory":252,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":445,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":589,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":0,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":158,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":492,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":242,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicate":631,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":446,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":61,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":548,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":235,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectEqualsSelf":319,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":444,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":213,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":216,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":457,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":534,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRetainAll":408,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":80,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking2":250,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":351,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":202,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":622,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":74,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":375,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":2,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":514,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectEqualsSelf":323,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":429,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":588,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":461,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":512,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":556,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":304,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":438,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":632,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":13,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveAll":308,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":633,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":297,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":90,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":229,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiRemove":176,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":240,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":644,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":464,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectHashCodeEqualsContract":561,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":239,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":116,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":495,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":32,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":400,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":627,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":138,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":617,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":463,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":484,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":634,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":19,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":635,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":95,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":142,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCanonicalFullCollectionExists":594,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":87,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":171,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRetainAll":416,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRetainAll":406,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":649,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveAll":421,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":540,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":315,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":10,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":519,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":147,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":579,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePoll":155,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":453,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":279,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":581,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":387,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSerializeDeserializeThenCompare":380,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":182},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"b4593e99-2e8e-11e6-a1e3-8f899c37ed2d","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            removeIfExpired(key, now());\n            return super.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[12,13,14,15,16,17],"tindex":"b45a28fa-2e8e-11e6-a1e3-5190082d344b","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:169","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake getMiddleSnake(final int start1, final int end1, final int start2, final int end2) {\n    if ((start1 - end1) > (start1 - start2)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((start2 - start1) > (start1 - start1)) {\n                {\n                    final int int = end1 - start1;\n                    final int int = end2 - start2;\n                    if ((m == 0) || (n == 0)) {\n                        return null;\n                    } \n                    final int int = m - n;\n                    final int int = n + m;\n                    final int int = ((sum % 2) == 0 ? sum : sum + 1) / 2;\n                    int[][(1 + offset)] = start1;\n                    int[][(1 + offset)] = end1 + 1;\n                    for (int int = 0 ; d <= offset ; ++d) {\n                        for (int int = -d ; k <= d ; k += 2) {\n                            final int int = k + offset;\n                            if ((k == (-d)) || ((k != d) && ((int[][(i - 1)]) < (int[][(i + 1)])))) {\n                                int[][i] = int[][(i + 1)];\n                            } else {\n                                int[][i] = (int[][(i - 1)]) + 1;\n                            }\n                            int int = int[][i];\n                            int int = ((x - start1) + start2) - k;\n                            while (((x < end1) && (y < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                                int[][i] = ++x;\n                                ++y;\n                            }\n                            if ((((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))) {\n                                if ((int[][(i - delta)]) <= (int[][i])) {\n                                    return buildSnake(int[][(i - delta)], ((k + start1) - start2), end1, end2);\n                                } \n                            } \n                        }\n                        for (int int = delta - d ; k <= (delta + d) ; k += 2) {\n                            final int int = (k + offset) - delta;\n                            if ((k == (delta - d)) || ((k != (delta + d)) && ((int[][(i + 1)]) <= (int[][(i - 1)])))) {\n                                int[][i] = (int[][(i + 1)]) - 1;\n                            } else {\n                                int[][i] = int[][(i - 1)];\n                            }\n                            int int = (int[][i]) - 1;\n                            int int = ((x - start1) + start2) - k;\n                            while (((x >= start1) && (y >= start2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                                int[][i] = x--;\n                                y--;\n                            }\n                            if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n                                if ((int[][i]) <= (int[][(i + delta)])) {\n                                    return buildSnake(int[][i], ((k + start1) - start2), end1, end2);\n                                } \n                            } \n                        }\n                    }\n                    throw new java.lang.RuntimeException(\"Internal Error\");\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"start1","end2":"start1","end1":"start2","start2":"start1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],"tindex":"b45a9e2b-2e8e-11e6-a1e3-35669db82b35","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:767","type":"CtMethodImpl","sourcecode":"private static void makeBlack(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node != null) {\n                node.setBlack(dataElement);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"b45ac53c-2e8e-11e6-a1e3-3d2ae7d22043","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:336","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return false;\n            } \n            return coll.contains(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl","sourcecode":"predicatesAndClosures == null"},"failures":[115],"tindex":"b45ac53d-2e8e-11e6-a1e3-736ef5721451","method":{"position":"org.apache.commons.collections4.ClosureUtils:331","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.switchClosure(predicatesAndClosures);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b45aec4e-2e8e-11e6-a1e3-796c122f5522","method":{"position":"org.apache.commons.collections4.MapUtils:802","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key, final long defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return defaultValue;\n            } \n            return longObject.longValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:173","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"b45aec4f-2e8e-11e6-a1e3-85701e64aad2","method":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:178","type":"CtMethodImpl","sourcecode":"protected void findNextByIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            if (iterator == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (iterator != (java.util.Iterator<? extends E>)) {\n                        if ((java.util.Iterator<? extends E>) != null) {\n                            org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n                        } \n                        java.util.Iterator<? extends E> = iterator;\n                    } \n                    while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n                        E E = java.util.Iterator<? extends E>.next();\n                        if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n                            next = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(next);\n                        } \n                        findNext(next);\n                    }\n                    if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n                        java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n                        findNextByIterator(java.util.Iterator<? extends E>);\n                    } \n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[116,117],"tindex":"b45b1360-2e8e-11e6-a1e3-9d40f68b100d","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(key)));\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[118,119],"tindex":"b45b3a71-2e8e-11e6-a1e3-2149b79973d7","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:178","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.equals(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:216","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"b45b3a72-2e8e-11e6-a1e3-efc6fcee399e","method":{"position":"org.apache.commons.collections4.ComparatorUtils:172","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullHighComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"b45b6183-2e8e-11e6-a1e3-13ca750633d4","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:87","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count > 3) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().add(object, count);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[120,121,122,123],"tindex":"b45b8894-2e8e-11e6-a1e3-e550c554351c","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:627","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if (getEntrySet().contains(obj)) {\n                final java.lang.Object java.lang.Object = ((java.util.Map.Entry<K, V>)(obj)).getKey();\n                org.apache.commons.collections4.map.ListOrderedMap<K, V>.remove(key);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[124,125,126],"tindex":"b45bafa5-2e8e-11e6-a1e3-bff27bc4f951","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:82","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (null == object) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().indexOf(object);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[127],"tindex":"b45bafa6-2e8e-11e6-a1e3-afba666562f6","method":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.TransformingComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.TransformingComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.TransformingComparator<?, ?> org.apache.commons.collections4.comparators.TransformingComparator<?, ?> = ((org.apache.commons.collections4.comparators.TransformingComparator<?, ?>)(object));\n                return null == (java.util.Comparator<O>) ? null == (comp.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(comp.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,70,71,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,73,72,74,75,76,77,78,79,80,81,82,83,84,113,114,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"tindex":"b45bd6b7-2e8e-11e6-a1e3-83a7c3179fc2","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1229","type":"CtMethodImpl","sourcecode":"private static void checkValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b45bfdc8-2e8e-11e6-a1e3-fdf52e5a025c","method":{"position":"org.apache.commons.collections4.MapUtils:255","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Integer) {\n                return ((java.lang.Integer)(answer));\n            } \n            return java.lang.Integer.valueOf(answer.intValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:194","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"b45c24d9-2e8e-11e6-a1e3-57315e48f9b3","method":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:178","type":"CtMethodImpl","sourcecode":"protected void findNextByIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            if (iterator == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (iterator != (java.util.Iterator<? extends E>)) {\n                        if ((java.util.Iterator<? extends E>) != null) {\n                            org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n                        } \n                        java.util.Iterator<? extends E> = iterator;\n                    } \n                    while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n                        E E = java.util.Iterator<? extends E>.next();\n                        if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n                            next = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(next);\n                        } \n                        findNext(next);\n                    }\n                    if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n                        java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n                        findNextByIterator(java.util.Iterator<? extends E>);\n                    } \n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[128],"tindex":"b45c4bea-2e8e-11e6-a1e3-e5501c20912d","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((transformers.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(transformers);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"b45c4beb-2e8e-11e6-a1e3-4fe04549a1d4","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:136","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return java.util.Map<E, ? super V>.keySet().removeAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147],"tindex":"b45c72fc-2e8e-11e6-a1e3-eb3896c8aa3e","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:139","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().removeAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtBinaryOperatorImpl","sourcecode":"key5 != null"},"failures":[148,149,150],"tindex":"b45c72fd-2e8e-11e6-a1e3-5b27884cfbae","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:577","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key4 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key5":"key4"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[151],"tindex":"b45c9a0e-2e8e-11e6-a1e3-a7486193c773","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Set<E>.containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"b45cc11f-2e8e-11e6-a1e3-4b343e5bcdb6","method":{"position":"org.apache.commons.collections4.bag.SynchronizedSortedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedSortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.SynchronizedSortedBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.TransformedQueue:77","type":"CtBinaryOperatorImpl","sourcecode":"(queue.size()) > 0"},"failures":[152,153,154,155,156,157,158,159,160,161,162,133,163,164,165,166,167,168,169,170,171,172],"tindex":"b45cc120-2e8e-11e6-a1e3-e93d1c746303","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if ((queue.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"b45ce831-2e8e-11e6-a1e3-cd018149daa9","method":{"position":"org.apache.commons.collections4.ListUtils:75","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> defaultIfNull(final java.util.List<T> list, final java.util.List<T> defaultList) {\n    if (defaultList == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return list == null ? defaultList : list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"defaultList"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1039","type":"CtBinaryOperatorImpl","sourcecode":"inputCollection != null"},"failures":[173,174,175],"tindex":"b45ce832-2e8e-11e6-a1e3-a32ac04759a2","method":{"position":"org.apache.commons.collections4.CollectionUtils:1037","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.lang.Iterable<? extends I> inputCollection, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if (inputCollection != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (inputCollection != null) {\n                return org.apache.commons.collections4.CollectionUtils.collect(inputCollection.iterator(), transformer, outputCollection);\n            } \n            return outputCollection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputCollection":"inputCollection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[176],"tindex":"b45d0f43-2e8e-11e6-a1e3-4f34d9cdfcf7","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"b45d0f44-2e8e-11e6-a1e3-f7074c554837","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[177,178],"tindex":"b45d0f45-2e8e-11e6-a1e3-edd4be170070","method":{"position":"org.apache.commons.collections4.CollectionUtils:747","type":"CtMethodImpl","sourcecode":"public static <T>boolean filter(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            if ((collection != null) && (predicate != null)) {\n                for (final java.util.Iterator<T> java.util.Iterator<T> = collection.iterator() ; it.hasNext() ; ) {\n                    if (!(predicate.evaluate(it.next()))) {\n                        it.remove();\n                        result = true;\n                    } \n                }\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"cursor == null"},"failures":[179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245],"tindex":"b45d3656-2e8e-11e6-a1e3-ab03cc16b14a","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:271","type":"CtMethodImpl","sourcecode":"protected void registerCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                if ((ref.get()) == null) {\n                    it.remove();\n                } \n            }\n            java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.add(new java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>(cursor));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"b45d5d67-2e8e-11e6-a1e3-1dbe3470e4d9","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1043","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this, index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"b45d5d68-2e8e-11e6-a1e3-259920150b0b","method":{"position":"org.apache.commons.collections4.FactoryUtils:139","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, paramTypes, args);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"b45d5d69-2e8e-11e6-a1e3-e5409dad7e78","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:133","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[246],"tindex":"b45d847a-2e8e-11e6-a1e3-8f44f9a78303","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:126","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformer) {\n    if (map == null) {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer must not be null\");\n            } \n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"b45d847b-2e8e-11e6-a1e3-1124bdce143a","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1729","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[247],"tindex":"b45d847c-2e8e-11e6-a1e3-ddac263ff020","method":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:46","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsExceptionPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsExceptionPredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:49","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[248],"tindex":"b45d847d-2e8e-11e6-a1e3-0522e0b56ca9","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:141","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.java.util.Iterator<? extends E> = iterator;\n            E = null;\n            boolean = false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[249,250],"tindex":"b45dab8e-2e8e-11e6-a1e3-9dfbbb79abf5","method":{"position":"org.apache.commons.collections4.list.TransformedList:155","type":"CtMethodImpl","sourcecode":"public E set(final int index, E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            object = transform(object);\n            return getList().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b45dab8f-2e8e-11e6-a1e3-f594a53743ac","method":{"position":"org.apache.commons.collections4.MapUtils:742","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key, final byte defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return defaultValue;\n            } \n            return byteObject.byteValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:52","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,84],"tindex":"b45dab90-2e8e-11e6-a1e3-b5763247d06a","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:46","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final org.apache.commons.collections4.OrderedMapIterator<K, ? extends V> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"OrderedMapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMapIterator<K, V> org.apache.commons.collections4.OrderedMapIterator<K, V> = ((org.apache.commons.collections4.OrderedMapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator<K, V>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"b45dd2a1-2e8e-11e6-a1e3-8153f6d40f2d","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[269],"tindex":"b45dd2a2-2e8e-11e6-a1e3-7d2cc8dd7b94","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:764","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((((multi.size()) >= 3) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key3"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"b45dd2a3-2e8e-11e6-a1e3-c7fb36afc231","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:109","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (count != null) {\n                return count.int;\n            } \n            return 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"b45df9b4-2e8e-11e6-a1e3-1dbc6c920b2b","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:72","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[270,271],"tindex":"b45df9b5-2e8e-11e6-a1e3-9996d58f4b37","method":{"position":"org.apache.commons.collections4.ListUtils:352","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : collection) {\n                if (!(remove.contains(obj))) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"b45df9b6-2e8e-11e6-a1e3-c3f66d10bd56","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:330","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryAfter(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"b45e20c7-2e8e-11e6-a1e3-fdf0a1bc096e","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:82","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (null == object) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().indexOf(object);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"b45e20c8-2e8e-11e6-a1e3-598d321f9384","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2057","type":"CtMethodImpl","sourcecode":"public K get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.getKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag<?>"},"failures":[272,273],"tindex":"b45e47d9-2e8e-11e6-a1e3-8d33612c7637","method":{"position":"org.apache.commons.collections4.CollectionUtils:606","type":"CtMethodImpl","sourcecode":"public static <O>int cardinality(final O obj, final java.lang.Iterable<? super O> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n        {\n            if (coll instanceof java.util.Set<?>) {\n                return ((java.util.Set<? super O>)(coll)).contains(obj) ? 1 : 0;\n            } \n            if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n                return ((org.apache.commons.collections4.Bag<? super O>)(coll)).getCount(obj);\n            } \n            int int = 0;\n            if (obj == null) {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (element == null) {\n                        count++;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (obj.equals(element)) {\n                        count++;\n                    } \n                }\n            }\n            return count;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[274,275,276,277],"tindex":"b45e47da-2e8e-11e6-a1e3-4932996b98fb","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:200","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return n.V;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"b45e6eeb-2e8e-11e6-a1e3-1be34082f222","method":{"position":"org.apache.commons.collections4.SetUtils:306","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.set.PredicatedSortedSet.predicatedSortedSet(set, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"b45e6eec-2e8e-11e6-a1e3-d9cb160d3405","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:971","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.get((index + (int)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:540","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[61,65,67,68,69],"tindex":"b45e6eed-2e8e-11e6-a1e3-0508326d0add","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:698","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> greatestNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getRight(dataElement)) != null) {\n                    rval = rval.getRight(dataElement);\n                }\n            } \n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[278,279,280,281],"tindex":"b45e95fe-2e8e-11e6-a1e3-35c46ca463a3","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:255","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (java.util.Set<E>.contains(next)) {\n                    setRetainAll.add(next);\n                } \n            }\n            if ((setRetainAll.size()) == (java.util.Set<E>.size())) {\n                return false;\n            } \n            if ((setRetainAll.size()) == 0) {\n                clear();\n            } else {\n                for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                    if (!(setRetainAll.contains(it.next()))) {\n                        it.remove();\n                    } \n                }\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"b45e95ff-2e8e-11e6-a1e3-cd8e80c756ba","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:713","type":"CtMethodImpl","sourcecode":"protected int entryHashCode(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[282,283,284,285,286,287,288,289,290,291,292,293],"tindex":"b45e9600-2e8e-11e6-a1e3-8bbe41b83ac6","method":{"position":"org.apache.commons.collections4.list.TreeList:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index < 0) {\n        {\n            (int)++;\n            checkInterval(index, 0, size());\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(index , obj , null , null);\n            } else {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(index, obj);\n            }\n            (int)++;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[149,150,148],"tindex":"b45ebd11-2e8e-11e6-a1e3-f3c8180da5f5","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:285","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key1 != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final int int = hash(key1, key2, key3);\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n                    while (entry != null) {\n                        if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n                    }\n                    return false;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[294],"tindex":"b45ebd12-2e8e-11e6-a1e3-17b60bacd835","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"b45ee423-2e8e-11e6-a1e3-a3b03db9887e","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:438","type":"CtMethodImpl","sourcecode":"protected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (key == null ? 0 : key.hashCode()) ^ (value == null ? 0 : value.hashCode());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[295],"tindex":"b45ee424-2e8e-11e6-a1e3-c1de4483ec9f","method":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:66","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedSortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[296],"tindex":"b45ee425-2e8e-11e6-a1e3-37d340bab8fb","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"b45ee426-2e8e-11e6-a1e3-bdf92f24dd3f","method":{"position":"org.apache.commons.collections4.IteratorUtils:718","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> filteredListIterator(final java.util.ListIterator<? extends E> listIterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            if (listIterator == null) {\n                throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterListIterator<E>(listIterator , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[172],"tindex":"b45f0b37-2e8e-11e6-a1e3-77bb4d1f17a8","method":{"position":"org.apache.commons.collections4.QueueUtils:93","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.queue.TransformedQueue.transformingQueue(queue, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[297,298,242],"tindex":"b45f0b38-2e8e-11e6-a1e3-9b5609d47bc4","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:255","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if (coll.contains(it.next())) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,102,103,106,107,423,424,425,426,427,428,429,430,431,432,433,434,435,124,436,437,151,438,439,440,441,442,281,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,143,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,125,484,485,486,487,488,144,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,145,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,126,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572],"tindex":"b45f0b39-2e8e-11e6-a1e3-11bcb3d09a1c","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return (object == (org.apache.commons.collections4.collection.AbstractCollectionDecorator.this)) || (decorated().equals(object));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[573,574,575,576],"tindex":"b45f324a-2e8e-11e6-a1e3-fbee47d64caf","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) || (coll.isEmpty())) {\n                return false;\n            } \n            boolean boolean = false;\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (it.hasNext()) {\n                modified |= remove(it.next());\n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[577,578,352,353,354,579,580,581,582,583,584,585,586,587,588,589,355,590,591,356,592,593,594,595,596,597,598,599,600,601,602],"tindex":"b45f595b-2e8e-11e6-a1e3-27a7a3254fa7","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = ((org.apache.commons.collections4.Bag<E>)(bag));\n                return tmpBag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableBag<E>(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"b45f595c-2e8e-11e6-a1e3-0b75eba3bb5f","method":{"position":"org.apache.commons.collections4.IteratorUtils:566","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E>... iterators) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[549],"tindex":"b45f595d-2e8e-11e6-a1e3-9f67c22afb5e","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            return decorated().indexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"b45f595e-2e8e-11e6-a1e3-9b65efa2eb2c","method":{"position":"org.apache.commons.collections4.SetUtils:274","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> synchronizedSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return java.util.Collections.synchronizedSortedSet(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[603],"tindex":"b45f806f-2e8e-11e6-a1e3-3d241f481b0e","method":{"position":"org.apache.commons.collections4.PredicateUtils:535","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(transformer, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"b45f8070-2e8e-11e6-a1e3-47f1dbd7186f","method":{"position":"org.apache.commons.collections4.MapUtils:1542","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.PredicatedSortedMap.predicatedSortedMap(map, keyPred, valuePred);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[604],"tindex":"b45f8071-2e8e-11e6-a1e3-0dbf7349f041","method":{"position":"org.apache.commons.collections4.IteratorUtils:431","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start, final int end) {\n    if (end == end) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end","end":"end"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[605,606,607,608,609],"tindex":"b45f8072-2e8e-11e6-a1e3-f9d8d08ce6ed","method":{"position":"org.apache.commons.collections4.map.CompositeMap:413","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].remove(key);\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"b45fa783-2e8e-11e6-a1e3-cd946c10006b","method":{"position":"org.apache.commons.collections4.list.TransformedList:123","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getList().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,70,71,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,73,72,74,75,76,77,78,79,80,81,82,83,84,113,114,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"tindex":"b45fa784-2e8e-11e6-a1e3-c9370fc4c89f","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:813","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getLeftChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? null : node.getLeft(dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getRight(dataElement)) == node"},"failures":[18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,70,71,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,113,114,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"tindex":"b45fce95-2e8e-11e6-a1e3-217636dd0be6","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:791","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n        {\n            return node == null ? null : node.getParent(dataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[174],"tindex":"b45fce96-2e8e-11e6-a1e3-29be9abd46e5","method":{"position":"org.apache.commons.collections4.CollectionUtils:583","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(obj instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n                return false;\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> = ((org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O>)(obj));\n            return org.apache.commons.collections4.Equator<O>.equate(O, otherObj.getObject());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[543,544,546,610,611,612,547,548,613,549,550,552,553,554,555,556,557,559],"tindex":"b45ff5a7-2e8e-11e6-a1e3-d53d5d2d86d5","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[],"tindex":"b45ff5a8-2e8e-11e6-a1e3-192a34a2da10","method":{"position":"org.apache.commons.collections4.CollectionUtils:946","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection != null) && (predicate != null)) {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, answer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[149,150,614,615,269,616,617,618,148,619],"tindex":"b45ff5a9-2e8e-11e6-a1e3-5b6923d83ba2","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:195","type":"CtMethodImpl","sourcecode":"public K getKey(final int index) {\n    if (index < 0) {\n        {\n            return K[][index];\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:85","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[620],"tindex":"b4601cba-2e8e-11e6-a1e3-9528f3006000","method":{"position":"org.apache.commons.collections4.IteratorUtils:920","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asMultipleUseIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator.hasNext()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[621,622,135,623,624,330,333,625,626,627,137,628,629,358,361,630],"tindex":"b4601cbb-2e8e-11e6-a1e3-25d175deb879","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:105","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            return decorated().getCount(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"b4601cbc-2e8e-11e6-a1e3-3baa6d2e8992","method":{"position":"org.apache.commons.collections4.list.TreeList:286","type":"CtMethodImpl","sourcecode":"private void checkInterval(final int index, final int startIndex, final int endIndex) {\n    if (startIndex < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < startIndex) || (index > endIndex)) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + index) + \", size=\") + (size())));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"startIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[],"tindex":"b4601cbd-2e8e-11e6-a1e3-dff8cb9ffce7","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:120","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:182","type":"CtBinaryOperatorImpl","sourcecode":"(valueTransformer) == null"},"failures":[],"tindex":"b46043ce-2e8e-11e6-a1e3-1dd49f009a59","method":{"position":"org.apache.commons.collections4.map.TransformedMap:99","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (valueTransformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.TransformedMap<K, V> org.apache.commons.collections4.map.TransformedMap<K, V> = new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"valueTransformer":"valueTransformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[631],"tindex":"b46043cf-2e8e-11e6-a1e3-37086fea48d4","method":{"position":"org.apache.commons.collections4.PredicateUtils:502","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsFalsePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NullIsFalsePredicate.nullIsFalsePredicate(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"b46043d0-2e8e-11e6-a1e3-534094f542aa","method":{"position":"org.apache.commons.collections4.MapUtils:1329","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.FixedSizeMap.fixedSizeMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b46043d1-2e8e-11e6-a1e3-17d6e7cd1407","method":{"position":"org.apache.commons.collections4.MapUtils:340","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if ((answer != null) && (answer instanceof java.util.Map)) {\n                    return ((java.util.Map<?, ?>)(answer));\n                } \n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"b4606ae2-2e8e-11e6-a1e3-6b8f21b712ef","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1240","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntryInSubtree(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> parentOfSubtree) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, parentOfSubtree);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[],"tindex":"b4606ae3-2e8e-11e6-a1e3-15860e226d2f","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:151","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[],"tindex":"b4606ae4-2e8e-11e6-a1e3-29dfaafe2394","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,115,649,649,650,651,651,652,653,654,655,656],"tindex":"b46091f5-2e8e-11e6-a1e3-1567ad7a664b","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:78","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Predicate<?>... predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n            } \n            for (int int = 0 ; i < (predicates.int) ; i++) {\n                if ((predicates[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[596],"tindex":"b46091f6-2e8e-11e6-a1e3-9920fe7568fc","method":{"position":"org.apache.commons.collections4.BagUtils:84","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedBag.synchronizedBag(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"b46091f7-2e8e-11e6-a1e3-d9997d31d1d9","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:285","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key1 != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final int int = hash(key1, key2, key3);\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n                    while (entry != null) {\n                        if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n                    }\n                    return false;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"b460b908-2e8e-11e6-a1e3-a326ef905a80","method":{"position":"org.apache.commons.collections4.MapUtils:861","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Properties toProperties(final java.util.Map<K, V> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Properties java.util.Properties = new java.util.Properties();\n            if (map != null) {\n                for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = entry2;\n                    final java.lang.Object java.lang.Object = entry.getKey();\n                    final java.lang.Object java.lang.Object = entry.getValue();\n                    answer.put(key, value);\n                }\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"b460b909-2e8e-11e6-a1e3-db023ae20cda","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:180","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"b460e01a-2e8e-11e6-a1e3-e504da1dab59","method":{"position":"org.apache.commons.collections4.SplitMapUtils:158","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[],"tindex":"b460e01b-2e8e-11e6-a1e3-bd822bfeed3d","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:169","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake getMiddleSnake(final int start1, final int end1, final int start2, final int end2) {\n    if ((start1 - end1) > (start1 - start2)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((start2 - start1) > (start1 - start1)) {\n                {\n                    final int int = end1 - start1;\n                    final int int = end2 - start2;\n                    if ((m == 0) || (n == 0)) {\n                        return null;\n                    } \n                    final int int = m - n;\n                    final int int = n + m;\n                    final int int = ((sum % 2) == 0 ? sum : sum + 1) / 2;\n                    int[][(1 + offset)] = start1;\n                    int[][(1 + offset)] = end1 + 1;\n                    for (int int = 0 ; d <= offset ; ++d) {\n                        for (int int = -d ; k <= d ; k += 2) {\n                            final int int = k + offset;\n                            if ((k == (-d)) || ((k != d) && ((int[][(i - 1)]) < (int[][(i + 1)])))) {\n                                int[][i] = int[][(i + 1)];\n                            } else {\n                                int[][i] = (int[][(i - 1)]) + 1;\n                            }\n                            int int = int[][i];\n                            int int = ((x - start1) + start2) - k;\n                            while (((x < end1) && (y < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                                int[][i] = ++x;\n                                ++y;\n                            }\n                            if ((((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))) {\n                                if ((int[][(i - delta)]) <= (int[][i])) {\n                                    return buildSnake(int[][(i - delta)], ((k + start1) - start2), end1, end2);\n                                } \n                            } \n                        }\n                        for (int int = delta - d ; k <= (delta + d) ; k += 2) {\n                            final int int = (k + offset) - delta;\n                            if ((k == (delta - d)) || ((k != (delta + d)) && ((int[][(i + 1)]) <= (int[][(i - 1)])))) {\n                                int[][i] = (int[][(i + 1)]) - 1;\n                            } else {\n                                int[][i] = int[][(i - 1)];\n                            }\n                            int int = (int[][i]) - 1;\n                            int int = ((x - start1) + start2) - k;\n                            while (((x >= start1) && (y >= start2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                                int[][i] = x--;\n                                y--;\n                            }\n                            if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n                                if ((int[][i]) <= (int[][(i + delta)])) {\n                                    return buildSnake(int[][i], ((k + start1) - start2), end1, end2);\n                                } \n                            } \n                        }\n                    }\n                    throw new java.lang.RuntimeException(\"Internal Error\");\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"end1","end2":"start1","end1":"start1","start2":"start2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[657],"tindex":"b461072c-2e8e-11e6-a1e3-7b92cf78192e","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:136","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}