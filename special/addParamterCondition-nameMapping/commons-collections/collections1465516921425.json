{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":124,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":422,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":465,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":338,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":161,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":469,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":66,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":62,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":484,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":447,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":285,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":11,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":10,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":181,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":175,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":405,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":281,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":167,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":132,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToString":345,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":505,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":246,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":264,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":288,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":146,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":186,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":83,"org.apache.commons.collections4.CollectionUtilsTest.get":525,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":138,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":393,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":139,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":220,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":234,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":93,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":529,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":403,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":22,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":494,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":326,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":79,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":305,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":101,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":523,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":128,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":73,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":479,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":368,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":71,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":376,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":555,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":343,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":63,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":235,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIsEmpty":399,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":553,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":380,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":462,"org.apache.commons.collections4.CollectionUtilsTest.select":511,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":522,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":2,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":80,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":160,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":239,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":398,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":379,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKey":535,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":430,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":314,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":3,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":34,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":184,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":282,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":46,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":232,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":445,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":149,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":306,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":150,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":408,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":148,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":240,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":532,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":142,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":542,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":44,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":472,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":214,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":279,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":439,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":245,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":133,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":265,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":87,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":365,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":442,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":59,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":203,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":290,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToString":395,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":168,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":189,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":125,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":174,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":227,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":25,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":361,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":122,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":534,"org.apache.commons.collections4.map.CompositeMapTest.testPut":504,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":301,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":382,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":431,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":470,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":321,"org.apache.commons.collections4.map.CompositeMapTest.testGet":503,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":120,"org.apache.commons.collections4.list.UnmodifiableListTest.testDecorateFactory":521,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":317,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":0,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":372,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":32,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":112,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":420,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":140,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":437,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":487,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":337,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":411,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":527,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":526,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKey":546,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":498,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":18,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":412,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":119,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":163,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":468,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":36,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":29,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":389,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":312,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":173,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":482,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":432,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":339,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":304,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":358,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":371,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":357,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":111,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":259,"org.apache.commons.collections4.CollectionUtilsTest.union":517,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":548,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":155,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":518,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":147,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":500,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":491,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":49,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":323,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":137,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":169,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionSize":394,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":510,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":353,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":143,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":294,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":410,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToString":202,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":158,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":537,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":383,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":409,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":450,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":428,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":129,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNull":68,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":230,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":266,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":440,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":20,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":1,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":481,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":247,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":351,"org.apache.commons.collections4.set.PredicatedSetTest.testSetHashCode":391,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":218,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":297,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":340,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":107,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":176,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":141,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":188,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":435,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":453,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":473,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":476,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":113,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":153,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":152,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":151,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":165,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":318,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":302,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":427,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":451,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":213,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":53,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":449,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":195,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":362,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":402,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":276,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":438,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKey":551,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":197,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":244,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":359,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":333,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":86,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":419,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":292,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":135,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":446,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking2":225,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":366,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":352,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":378,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":331,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":236,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":121,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":224,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":104,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":330,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":490,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":212,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":544,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":287,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":448,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":130,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":457,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":549,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":162,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testDecorateFactory":466,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":123,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":307,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":286,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":388,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":14,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":319,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":374,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":17,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":183,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":77,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":226,"org.apache.commons.collections4.map.SingletonMapTest.testClone":263,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":54,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":210,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":159,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":377,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":341,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":507,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":33,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":506,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":118,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":206,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":267,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":404,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":426,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":215,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":271,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":406,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":325,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":67,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":370,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":134,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKey":530,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":483,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":193,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":557,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIteratorRemove":396,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":556,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":496,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":65,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":205,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":180,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":221,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":554,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":196,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":248,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":367,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":536,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":242,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":421,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":117,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":257,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":355,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":6,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":350,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":387,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":311,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":347,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":5,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":327,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":467,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":478,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":9,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":458,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":94,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":216,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":16,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":495,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":269,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":539,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":538,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":471,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":334,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":492,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEqualsNull":251,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":60,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":407,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":415,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":222,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":228,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":4,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":528,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectEqualsSelf":250,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":508,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":354,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":349,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":543,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":499,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":493,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":464,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":461,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":373,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":115,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":164,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":533,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":92,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":477,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":217,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":223,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":89,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":204,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":201,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":199,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":310,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":381,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":55,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":194,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":512,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":363,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":413,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":515,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":13,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEqualsNull":463,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":70,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":241,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":270,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":278,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":364,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":329,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":475,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":313,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":356,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":417,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":509,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":127,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":474,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":303,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":550,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":109,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":416,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":82,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":74,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":190,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":502,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":320,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":375,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":275,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":27,"org.apache.commons.collections4.set.CompositeSetTest.testContains":497,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":328,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":429,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking":219,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":322,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":513,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":154,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":293,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":90,"org.apache.commons.collections4.ListUtilsTest.testSelect":501,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":182,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":237,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":178,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionClear":400,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":256,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":299,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":552,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":524,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":454,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":116,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":414,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":519,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":390,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":43,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":541,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":106,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":277,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":172,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":191,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":284,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":84,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":283,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":258,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":103,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":24,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":96,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectHashCodeEqualsContract":252,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":261,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":19,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":545,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":110,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory":262,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":336,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":423,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":268,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSerializeDeserializeThenCompare":253,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":76,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":170,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":50,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":57,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":97,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":192,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":243,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":249,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":48,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":207,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":254,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":392,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":185,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":100,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":99,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":98,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":105,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":35,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":436,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":229,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains3":273,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":385,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains2":272,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":156,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":166,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":144,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":456,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":384,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":51,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":441,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":480,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":179,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":298,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":280,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":514,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":558,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":15,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":444,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":42,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":460,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":41,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":40,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":37,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":38,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":198,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":39,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":452,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":145,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":295,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":209,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":316,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":211,"org.apache.commons.collections4.list.PredicatedListTest.testFullListSerialization":332,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":157,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":47,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":208,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":274,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":289,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":131,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":300,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":335,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":401,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":187,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":418,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":296,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":443,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":72,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":455,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":233,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":255,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":64,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":177,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":342,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":231,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionSize":344,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":459,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":531,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicateEx":520,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":200,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":386,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":434,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":488,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":486,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":489,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":425,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":308,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":88,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":485,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":348,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":315,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":126,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":346,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":114,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":516,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":369,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":95,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":397,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":85,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":309,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":433,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":238,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":260,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":360,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":324,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":69,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":171,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKeyInverse":547,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":540,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":424,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":291},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"8eaafe50-2e9e-11e6-b47a-5f611739ed28","method":{"position":"org.apache.commons.collections4.SetUtils:192","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"8eabc1a1-2e9e-11e6-b47a-25d7eac1f968","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:378","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object k) {\n    if (k == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (k == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (k == null) {\n                        return false;\n                    } \n                    final K K = castKey(k);\n                    final int int = lengthInBits(key);\n                    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n                    return (!(entry.isEmpty())) && (compareKeys(key, entry.K));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[0,1,2,3,4,5,6],"tindex":"8eabe8b2-2e9e-11e6-b47a-43df0272ab01","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:290","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E value) {\n    if (index < 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            updateNode(node, value);\n            return oldValue;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"8eac0fc3-2e9e-11e6-b47a-1d436778b30f","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:180","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().retainAll(coll);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[7,8],"tindex":"8eac0fc4-2e9e-11e6-b47a-f78c9c09d6c9","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                return bag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableSortedBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:985","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"tindex":"8eac36d5-2e9e-11e6-b47a-57cf857cf1ef","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:110","type":"CtMethodImpl","sourcecode":"final boolean isBitSet(final K key, final int bitIndex, final int lengthInBits) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(lengthInBits)) {\n        {\n            if (key == null) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer<? super K>.isBitSet(key, bitIndex, lengthInBits);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"lengthInBits"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[55,56,57,58,59,60,61,62,63,64,65,66,67],"tindex":"8eac36d6-2e9e-11e6-b47a-ff27649e6fa5","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                    while (entry != null) {\n                        if ((entry.getValue()) == null) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            } else {\n                for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                    while (entry != null) {\n                        if (isEqualValue(value, entry.getValue())) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"8eac84f7-2e9e-11e6-b47a-b31a6ea0b202","method":{"position":"org.apache.commons.collections4.set.CompositeSet:282","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[68,69],"tindex":"8eac84f8-2e9e-11e6-b47a-67535db0e829","method":{"position":"org.apache.commons.collections4.MapUtils:1204","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (map == null) || (map.isEmpty());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"8eacac09-2e9e-11e6-b47a-2b5a54c6a4fc","method":{"position":"org.apache.commons.collections4.IteratorUtils:649","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> objectGraphIterator(final E root, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectGraphIterator<E>(root , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:540","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165],"tindex":"8eacac0a-2e9e-11e6-b47a-372e87155a65","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:823","type":"CtMethodImpl","sourcecode":"private void rotateLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getRight(dataElement);\n            node.setRight(rightChild.getLeft(dataElement), dataElement);\n            if ((rightChild.getLeft(dataElement)) != null) {\n                rightChild.getLeft(dataElement).setParent(node, dataElement);\n            } \n            rightChild.setParent(node.getParent(dataElement), dataElement);\n            if ((node.getParent(dataElement)) == null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = rightChild;\n            } else if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n                node.getParent(dataElement).setLeft(rightChild, dataElement);\n            } else {\n                node.getParent(dataElement).setRight(rightChild, dataElement);\n            }\n            rightChild.setLeft(node, dataElement);\n            node.setParent(rightChild, dataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"8eacd31b-2e9e-11e6-b47a-376b8bea15e0","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(((java.util.Map.Entry<?, ?>)(o)).getKey());\n            return (candidate != null) && (candidate.equals(o));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[166],"tindex":"8eacfa2c-2e9e-11e6-b47a-039d9c820017","method":{"position":"org.apache.commons.collections4.TransformerUtils:163","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, java.lang.Boolean> asTransformer(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.PredicateTransformer.predicateTransformer(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[167],"tindex":"8ead213d-2e9e-11e6-b47a-f18ba3413eb5","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            return new FixedSizeListIterator(decorated().listIterator(index));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[168],"tindex":"8ead213e-2e9e-11e6-b47a-bb694bcfb9f1","method":{"position":"org.apache.commons.collections4.functors.IfClosure:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"8ead213f-2e9e-11e6-b47a-d530e5d762a7","method":{"position":"org.apache.commons.collections4.map.LinkedMap:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"8ead4850-2e9e-11e6-b47a-a3e2fc905968","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:196","type":"CtMethodImpl","sourcecode":"public void setForwardSort(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.BitSet.clear(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211],"tindex":"8ead4851-2e9e-11e6-b47a-d34f6b68d1f9","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:74","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            return decorated().addAll(index, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241],"tindex":"8ead6f62-2e9e-11e6-b47a-d9c9b2be43c2","method":{"position":"org.apache.commons.collections4.list.TransformedList:119","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getList().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtBinaryOperatorImpl","sourcecode":"from == null"},"failures":[140,144,154,157,158,161,162,163,164,165],"tindex":"8ead6f63-2e9e-11e6-b47a-9dc3e3ee3e81","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:716","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> from, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> to, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (from == null) {\n        {\n            if (to != null) {\n                if (from == null) {\n                    to.setBlack(dataElement);\n                } else {\n                    to.copyColor(from, dataElement);\n                }\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"from"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"8ead9674-2e9e-11e6-b47a-4711cb9cf05b","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:74","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map, final V dummyValue) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"The map must not be null\");\n            } \n            return new org.apache.commons.collections4.set.MapBackedSet<E, V>(map , dummyValue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[88,101,121,123,124,134,140,154,157],"tindex":"8eadbd85-2e9e-11e6-b47a-2502d732fcfb","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:178","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            return (lookupValue(value)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"8eadbd86-2e9e-11e6-b47a-13cdde3ecb80","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:971","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.get((index + (int)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[],"tindex":"8eade497-2e9e-11e6-b47a-6f0073095cb5","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:475","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key4 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key4"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[242],"tindex":"8eae0ba8-2e9e-11e6-b47a-192e747ac8ab","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(decorated().listIterator(index));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[243,244,245,246,247,248,249,250,251,252,253],"tindex":"8eae0ba9-2e9e-11e6-b47a-876a6f7b95e9","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:178","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.equals(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[254,255,256,257,258,259,260,261],"tindex":"8eae32ba-2e9e-11e6-b47a-a508449e7f0d","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            removeIfExpired(key, now());\n            return super.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:50","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[262],"tindex":"8eae32bb-2e9e-11e6-b47a-15e3c1f1421b","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:45","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<? extends K, ? extends V> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[263,264,265,266,267,268,269,270,271,272,273,274,275,276],"tindex":"8eae32bc-2e9e-11e6-b47a-718ba51592da","method":{"position":"org.apache.commons.collections4.map.SingletonMap:385","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return key == null ? (getKey()) == null : key.equals(getKey());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"8eae32bd-2e9e-11e6-b47a-87a38d08e354","method":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:134","type":"CtMethodImpl","sourcecode":"public void setEnumeration(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        {\n            org.apache.commons.collections4.iterators.EnumerationIterator.this.java.util.Enumeration<? extends E> = enumeration;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[277,278],"tindex":"8eae59ce-2e9e-11e6-b47a-2d5ffb690553","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:400","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return get(java.util.List<K>.get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[279,280,281,282,283,284],"tindex":"8eae59cf-2e9e-11e6-b47a-35531ccf50fc","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:70","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName , paramTypes , args);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"8eae59d0-2e9e-11e6-b47a-2b765659c1b1","method":{"position":"org.apache.commons.collections4.IteratorUtils:669","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Iterator<O> transformedIterator(final java.util.Iterator<? extends I> iterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transform) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (transform == null) {\n                throw new java.lang.NullPointerException(\"Transformer must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.TransformIterator<I, O>(iterator , transform);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301],"tindex":"8eae80e1-2e9e-11e6-b47a-d763053fc6d6","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:210","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E value) {\n    if (index < 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n            addNodeBefore(node, value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317],"tindex":"8eae80e2-2e9e-11e6-b47a-d16cbb9025d7","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:132","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i++;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtBinaryOperatorImpl","sourcecode":"(node.getRight(dataElement)) != null"},"failures":[74,81,84,85,87,88,89,91,92,110,111,115,122,130,131,133,134,135,137,138,140,143,144,154,157,158,161,162,163,164,165],"tindex":"8eaea7f3-2e9e-11e6-b47a-3786561d78dd","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:597","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextGreater(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getRight(dataElement)) != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getRight(dataElement)) != null) {\n                rval = leastNode(node.getRight(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getRight(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409],"tindex":"8eaea7f4-2e9e-11e6-b47a-6fd1c85498c5","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        {\n            if (!(coll.isEmpty())) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n                        {\n                            for (final E E : coll) {\n                                validate(item);\n                            }\n                            return decorated().addAll(coll);\n                        }\n                    } else {\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[410,212,237,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445],"tindex":"8eaecf05-2e9e-11e6-b47a-799d71b505f8","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:136","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<E> transform(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(coll.size());\n            for (final E E : coll) {\n                list.add(transform(item));\n            }\n            return list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LazyMap:110","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[],"tindex":"8eaecf06-2e9e-11e6-b47a-23a04c1d2674","method":{"position":"org.apache.commons.collections4.MapUtils:1623","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (factory == null) {\n        {\n            return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"8eaecf07-2e9e-11e6-b47a-8b1a5f816a2d","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        {\n            if (object instanceof java.util.Map<?, ?>) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[185],"tindex":"8eaef618-2e9e-11e6-b47a-c9f005430303","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (index < 0) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            return new org.apache.commons.collections4.list.SetUniqueList.SetListListIterator<E>(super.listIterator(index) , java.util.Set<E>);\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[446,447,448],"tindex":"8eaef619-2e9e-11e6-b47a-abb78eea49e2","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:278","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[279,280,281,282,284,449,450,451,452,453,454,455],"tindex":"8eaf1d2a-2e9e-11e6-b47a-33f07e372e0b","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic O transform(final java.lang.Object input) {\n    if (input == null) {\n        {\n            if (input == null) {\n                return null;\n            } \n            try {\n                final java.lang.Class<?> java.lang.Class<?> = input.getClass();\n                final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(java.lang.String, java.lang.Class<?>[]);\n                return ((O)(method.invoke(input, java.lang.Object[])));\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' does not exist\"));\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' cannot be accessed\"));\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' threw an exception\") , ex);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"8eaf1d2b-2e9e-11e6-b47a-6f0b704280af","method":{"position":"org.apache.commons.collections4.list.TreeList:173","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (indexOf(object)) >= 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,456,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165],"tindex":"8eaf443c-2e9e-11e6-b47a-6398b0cf9a2c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1217","type":"CtMethodImpl","sourcecode":"private static void checkKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[121],"tindex":"8eaf443d-2e9e-11e6-b47a-edbb83419a17","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:300","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return doRemoveValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"8eaf6b4e-2e9e-11e6-b47a-8fef7c66c20c","method":{"position":"org.apache.commons.collections4.CollectionUtils:227","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> union(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((b == null) || (b == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, helper.max(obj));\n            }\n            return helper.list();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[457],"tindex":"8eaf6b4f-2e9e-11e6-b47a-999db6e65d49","method":{"position":"org.apache.commons.collections4.PredicateUtils:402","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> neitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate2 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(predicate1, predicate2);\n            return nonePredicate;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[458,459,460,461],"tindex":"8eaf9260-2e9e-11e6-b47a-05a8594fc4cd","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            if (object == (org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.this)) {\n                return true;\n            } \n            return java.util.Map.Entry<K, V>.equals(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:764","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"8eaf9261-2e9e-11e6-b47a-3bf0f19fec81","method":{"position":"org.apache.commons.collections4.list.TransformedList:79","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.TransformedList<E> org.apache.commons.collections4.list.TransformedList<E> = new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n            if (((transformer != null) && (list != null)) && ((list.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(list.toArray()));\n                list.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"8eaf9262-2e9e-11e6-b47a-a19f5a570a8d","method":{"position":"org.apache.commons.collections4.ArrayStack:152","type":"CtMethodImpl","sourcecode":"public int search(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = (size()) - 1;\n            int int = 1;\n            while (i >= 0) {\n                final java.lang.Object java.lang.Object = get(i);\n                if (((object == null) && (current == null)) || ((object != null) && (object.equals(current)))) {\n                    return n;\n                } \n                i--;\n                n++;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"8eafb973-2e9e-11e6-b47a-d75f6bf4ac85","method":{"position":"org.apache.commons.collections4.map.LinkedMap:248","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K remove(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl","sourcecode":"(coll1.size()) < (coll2.size())"},"failures":[462],"tindex":"8eafb974-2e9e-11e6-b47a-cf4ca5d58a0c","method":{"position":"org.apache.commons.collections4.CollectionUtils:366","type":"CtMethodImpl","sourcecode":"public static boolean containsAll(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if ((coll1.size()) < (coll1.size())) {\n        {\n            if (coll2.isEmpty()) {\n                return true;\n            } else {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll1.iterator();\n                final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (elementsAlreadySeen.contains(nextElement)) {\n                        continue;\n                    } \n                    boolean boolean = false;\n                    while (it.hasNext()) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        elementsAlreadySeen.add(p);\n                        if (nextElement == null ? p == null : nextElement.equals(p)) {\n                            foundCurrentElement = true;\n                            break;\n                        } \n                    }\n                    if (foundCurrentElement) {\n                        continue;\n                    } else {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll1","coll1":"coll1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false"},"failures":[],"tindex":"8eafe085-2e9e-11e6-b47a-a51d16562bba","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:451","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[463],"tindex":"8eafe086-2e9e-11e6-b47a-11af7b1fcd3c","method":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.TransformingComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.TransformingComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.TransformingComparator<?, ?> org.apache.commons.collections4.comparators.TransformingComparator<?, ?> = ((org.apache.commons.collections4.comparators.TransformingComparator<?, ?>)(object));\n                return null == (java.util.Comparator<O>) ? null == (comp.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(comp.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"8eafe087-2e9e-11e6-b47a-b9e2aae1f894","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:701","type":"CtMethodImpl","sourcecode":"public void atomic(final java.lang.Runnable r) {\n    if (r == null) {\n        {\n            if (r == null) {\n                throw new java.lang.NullPointerException();\n            } \n            atomic(r, 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[464,465],"tindex":"8eb00798-2e9e-11e6-b47a-eb5f3e2697a3","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:692","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key4 != null) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((((multi.size()) == 5) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))))) && ((key5 == (multi.getKey(4))) || ((key5 != null) && (key5.equals(multi.getKey(4)))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key4"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"8eb00799-2e9e-11e6-b47a-937bf44ff06c","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:378","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object k) {\n    if (k == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (k == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (k == null) {\n                        return false;\n                    } \n                    final K K = castKey(k);\n                    final int int = lengthInBits(key);\n                    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n                    return (!(entry.isEmpty())) && (compareKeys(key, entry.K));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"8eb0079a-2e9e-11e6-b47a-e3c53e7dbec6","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        {\n            if (object instanceof java.util.Map<?, ?>) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"8eb02eab-2e9e-11e6-b47a-0332698eab04","method":{"position":"org.apache.commons.collections4.MapUtils:1422","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> orderedMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[466],"tindex":"8eb02eac-2e9e-11e6-b47a-b1901e9441d9","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:57","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.SortedBidiMap<K, V> unmodifiableSortedBidiMap(final org.apache.commons.collections4.SortedBidiMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.SortedBidiMap<K, V> org.apache.commons.collections4.SortedBidiMap<K, V> = ((org.apache.commons.collections4.SortedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[],"tindex":"8eb02ead-2e9e-11e6-b47a-bdd65585be4f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1086","type":"CtMethodImpl","sourcecode":"public static <T>boolean addIgnoreNull(final java.util.Collection<T> collection, final T object) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (collection == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            return (object != null) && (collection.add(object));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[308,467,316],"tindex":"8eb02eae-2e9e-11e6-b47a-07e749b78855","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:255","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if (coll.contains(it.next())) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"8eb055bf-2e9e-11e6-b47a-17918d52e0e3","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[468,469,470],"tindex":"8eb055c0-2e9e-11e6-b47a-4d0cc2d09616","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:518","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[],"tindex":"8eb055c1-2e9e-11e6-b47a-0b78282e8d14","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:183","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends J, ? extends U> map) {\n    if (map.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[471,472,473,474,475,175,476,477,478,479,191],"tindex":"8eb07cd2-2e9e-11e6-b47a-45f3f9aad80a","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:213","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        {\n            final int int = indexOf(object);\n            final E E = super.set(index, object);\n            if ((pos != (-1)) && (pos != index)) {\n                super.remove(pos);\n            } \n            java.util.Set<E>.remove(removed);\n            java.util.Set<E>.add(object);\n            return removed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[480],"tindex":"8eb07cd3-2e9e-11e6-b47a-e522711c94f2","method":{"position":"org.apache.commons.collections4.MapUtils:1144","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> putAll(final java.util.Map<K, V> map, final java.lang.Object[] array) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            map.size();\n            if ((array == null) || ((array.int) == 0)) {\n                return map;\n            } \n            final java.lang.Object java.lang.Object = array[0];\n            if (obj instanceof java.util.Map.Entry) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(element));\n                    map.put(entry.getKey(), entry.getValue());\n                }\n            } else if (obj instanceof org.apache.commons.collections4.KeyValue) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(element));\n                    map.put(keyval.getKey(), keyval.getValue());\n                }\n            } else if (obj instanceof java.lang.Object[]) {\n                for (int int = 0 ; i < (array.int) ; i++) {\n                    final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(array[i]));\n                    if ((sub == null) || ((sub.int) < 2)) {\n                        throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + i));\n                    } \n                    map.put(((K)(sub[0])), ((V)(sub[1])));\n                }\n            } else {\n                for (int int = 0 ; i < ((array.int) - 1) ; ) {\n                    map.put(((K)(array[(i++)])), ((V)(array[(i++)])));\n                }\n            }\n            return map;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[481,482,483,484,485,486],"tindex":"8eb0a3e4-2e9e-11e6-b47a-bbcbc83fc284","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:169","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake getMiddleSnake(final int start1, final int end1, final int start2, final int end2) {\n    if ((start2 - end1) > (start1 - start2)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((start1 - start1) > (end1 - start2)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final int int = end1 - start1;\n                    final int int = end2 - start2;\n                    if ((m == 0) || (n == 0)) {\n                        return null;\n                    } \n                    final int int = m - n;\n                    final int int = n + m;\n                    final int int = ((sum % 2) == 0 ? sum : sum + 1) / 2;\n                    int[][(1 + offset)] = start1;\n                    int[][(1 + offset)] = end1 + 1;\n                    for (int int = 0 ; d <= offset ; ++d) {\n                        for (int int = -d ; k <= d ; k += 2) {\n                            final int int = k + offset;\n                            if ((k == (-d)) || ((k != d) && ((int[][(i - 1)]) < (int[][(i + 1)])))) {\n                                int[][i] = int[][(i + 1)];\n                            } else {\n                                int[][i] = (int[][(i - 1)]) + 1;\n                            }\n                            int int = int[][i];\n                            int int = ((x - start1) + start2) - k;\n                            while (((x < end1) && (y < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                                int[][i] = ++x;\n                                ++y;\n                            }\n                            if ((((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))) {\n                                if ((int[][(i - delta)]) <= (int[][i])) {\n                                    return buildSnake(int[][(i - delta)], ((k + start1) - start2), end1, end2);\n                                } \n                            } \n                        }\n                        for (int int = delta - d ; k <= (delta + d) ; k += 2) {\n                            final int int = (k + offset) - delta;\n                            if ((k == (delta - d)) || ((k != (delta + d)) && ((int[][(i + 1)]) <= (int[][(i - 1)])))) {\n                                int[][i] = (int[][(i + 1)]) - 1;\n                            } else {\n                                int[][i] = int[][(i - 1)];\n                            }\n                            int int = (int[][i]) - 1;\n                            int int = ((x - start1) + start2) - k;\n                            while (((x >= start1) && (y >= start2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                                int[][i] = x--;\n                                y--;\n                            }\n                            if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n                                if ((int[][i]) <= (int[][(i + delta)])) {\n                                    return buildSnake(int[][i], ((k + start1) - start2), end1, end2);\n                                } \n                            } \n                        }\n                    }\n                    throw new java.lang.RuntimeException(\"Internal Error\");\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"start1","end2":"end1","end1":"start1","start2":"start2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"8eb0caf5-2e9e-11e6-b47a-35f5946da520","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (index < 0) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            return new org.apache.commons.collections4.list.SetUniqueList.SetListListIterator<E>(super.listIterator(index) , java.util.Set<E>);\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[84,85,87,88,89,92,130,131,133,134,135,138,140,143,144],"tindex":"8eb0caf6-2e9e-11e6-b47a-e17d38c3df42","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1484","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupKey(obj)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[],"tindex":"8eb0f207-2e9e-11e6-b47a-8b579c9a3807","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:169","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake getMiddleSnake(final int start1, final int end1, final int start2, final int end2) {\n    if ((start2 - end1) > (start1 - start2)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((start1 - start1) > (end1 - start2)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final int int = end1 - start1;\n                    final int int = end2 - start2;\n                    if ((m == 0) || (n == 0)) {\n                        return null;\n                    } \n                    final int int = m - n;\n                    final int int = n + m;\n                    final int int = ((sum % 2) == 0 ? sum : sum + 1) / 2;\n                    int[][(1 + offset)] = start1;\n                    int[][(1 + offset)] = end1 + 1;\n                    for (int int = 0 ; d <= offset ; ++d) {\n                        for (int int = -d ; k <= d ; k += 2) {\n                            final int int = k + offset;\n                            if ((k == (-d)) || ((k != d) && ((int[][(i - 1)]) < (int[][(i + 1)])))) {\n                                int[][i] = int[][(i + 1)];\n                            } else {\n                                int[][i] = (int[][(i - 1)]) + 1;\n                            }\n                            int int = int[][i];\n                            int int = ((x - start1) + start2) - k;\n                            while (((x < end1) && (y < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                                int[][i] = ++x;\n                                ++y;\n                            }\n                            if ((((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))) {\n                                if ((int[][(i - delta)]) <= (int[][i])) {\n                                    return buildSnake(int[][(i - delta)], ((k + start1) - start2), end1, end2);\n                                } \n                            } \n                        }\n                        for (int int = delta - d ; k <= (delta + d) ; k += 2) {\n                            final int int = (k + offset) - delta;\n                            if ((k == (delta - d)) || ((k != (delta + d)) && ((int[][(i + 1)]) <= (int[][(i - 1)])))) {\n                                int[][i] = (int[][(i + 1)]) - 1;\n                            } else {\n                                int[][i] = int[][(i - 1)];\n                            }\n                            int int = (int[][i]) - 1;\n                            int int = ((x - start1) + start2) - k;\n                            while (((x >= start1) && (y >= start2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                                int[][i] = x--;\n                                y--;\n                            }\n                            if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n                                if ((int[][i]) <= (int[][(i + delta)])) {\n                                    return buildSnake(int[][i], ((k + start1) - start2), end1, end2);\n                                } \n                            } \n                        }\n                    }\n                    throw new java.lang.RuntimeException(\"Internal Error\");\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"end1","end2":"start1","end1":"start2","start2":"start2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[487],"tindex":"8eb11918-2e9e-11e6-b47a-152b8c01b282","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[488,489,490],"tindex":"8eb11919-2e9e-11e6-b47a-d5087570661e","method":{"position":"org.apache.commons.collections4.PredicateUtils:321","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"8eb1191a-2e9e-11e6-b47a-1d9ebd5403f1","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        {\n            if (!(coll.isEmpty())) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n                        {\n                            for (final E E : coll) {\n                                validate(item);\n                            }\n                            return decorated().addAll(coll);\n                        }\n                    } else {\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[166],"tindex":"8eb1402b-2e9e-11e6-b47a-d7d43f90c530","method":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, java.lang.Boolean> predicateTransformer(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.PredicateTransformer<T>(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"tindex":"8eb1402c-2e9e-11e6-b47a-e55a29d7d61d","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:194","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> addEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> entry, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) >= (entry.int)) || ((current.int) <= (path.int))) {\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    if (!(isBitSet(entry.K, entry.int, lengthInBits))) {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                    } else {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = path;\n                    if ((current.int) >= (entry.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((current.int) <= (path.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((path == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!(isBitSet(entry.K, path.int, lengthInBits)))) {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } else {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    return entry;\n                } \n                path = current;\n                if (!(isBitSet(entry.K, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtBinaryOperatorImpl","sourcecode":"(collection.size()) > 0"},"failures":[],"tindex":"8eb1673d-2e9e-11e6-b47a-1b9ab68da854","method":{"position":"org.apache.commons.collections4.ListUtils:352","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if ((collection.size()) > 0) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : collection) {\n                if (!(remove.contains(obj))) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[367,491,437,492],"tindex":"8eb18e4e-2e9e-11e6-b47a-47da056041e3","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[493,494],"tindex":"8eb18e4f-2e9e-11e6-b47a-a990eb911e83","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512],"tindex":"8eb18e50-2e9e-11e6-b47a-87f60f902115","method":{"position":"org.apache.commons.collections4.CollectionUtils:438","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Map<O, java.lang.Integer> getCardinalityMap(final java.lang.Iterable<? extends O> coll) {\n    if (coll instanceof java.util.Set<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Map<O, java.lang.Integer> java.util.Map<O, java.lang.Integer> = new java.util.HashMap<O, java.lang.Integer>();\n            for (final O O : coll) {\n                final java.lang.Integer java.lang.Integer = count.get(obj);\n                if (c == null) {\n                    count.put(obj, java.lang.Integer.valueOf(1));\n                } else {\n                    count.put(obj, java.lang.Integer.valueOf(((c.intValue()) + 1)));\n                }\n            }\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[513,514],"tindex":"8eb1b461-2e9e-11e6-b47a-99f083c51111","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:199","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[],"tindex":"8eb1b462-2e9e-11e6-b47a-ef86cfb3feb0","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        {\n            if (!(coll.isEmpty())) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n                        {\n                            for (final E E : coll) {\n                                validate(item);\n                            }\n                            return decorated().addAll(coll);\n                        }\n                    } else {\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"8eb1db73-2e9e-11e6-b47a-3bd0d0f93c53","method":{"position":"org.apache.commons.collections4.PredicateUtils:289","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AllPredicate.allPredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[498,499,500,505,509,515,516,517,518,519],"tindex":"8eb1db74-2e9e-11e6-b47a-511370cd193f","method":{"position":"org.apache.commons.collections4.CollectionUtils:155","type":"CtMethodImpl","sourcecode":"public void setCardinality(final O obj, final int count) {\n    if (count == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = 0 ; i < count ; i++) {\n                java.util.List<O>.add(obj);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"8eb1db75-2e9e-11e6-b47a-0395d349118a","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1020","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index < 0) {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.set((index + (int)), obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"8eb1db76-2e9e-11e6-b47a-8fb14a7886bf","method":{"position":"org.apache.commons.collections4.MapUtils:1542","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.PredicatedSortedMap.predicatedSortedMap(map, keyPred, valuePred);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[],"tindex":"8eb20287-2e9e-11e6-b47a-653f2d041bcb","method":{"position":"org.apache.commons.collections4.IteratorUtils:431","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start, final int end) {\n    if (start == start) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start , end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start","end":"start"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"8eb20288-2e9e-11e6-b47a-bb55fd105dff","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"8eb20289-2e9e-11e6-b47a-d7eb17c6f98c","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (index < 0) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            return new org.apache.commons.collections4.list.SetUniqueList.SetListListIterator<E>(super.listIterator(index) , java.util.Set<E>);\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[520],"tindex":"8eb2028a-2e9e-11e6-b47a-93245ffce3c8","method":{"position":"org.apache.commons.collections4.functors.NotPredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NotPredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[521],"tindex":"8eb2299b-2e9e-11e6-b47a-7bf0783ead8c","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.List<E> java.util.List<E> = ((java.util.List<E>)(list));\n                return tmpList;\n            } \n            return new org.apache.commons.collections4.list.UnmodifiableList<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LazyMap:125","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[522],"tindex":"8eb2299c-2e9e-11e6-b47a-37dfa70d1303","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:91","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if (factory == null) {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"8eb2299d-2e9e-11e6-b47a-2beece18e1e1","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:77","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[338],"tindex":"8eb2299e-2e9e-11e6-b47a-3d92b42dd9c2","method":{"position":"org.apache.commons.collections4.list.PredicatedList:98","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            return decorated().indexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[523],"tindex":"8eb2299f-2e9e-11e6-b47a-dd5c69da2c72","method":{"position":"org.apache.commons.collections4.map.LinkedMap:154","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntry(index).getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[524],"tindex":"8eb250b0-2e9e-11e6-b47a-f5f80bae7c70","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:714","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((multi.size()) >= 1) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[525,526,527,528,529],"tindex":"8eb250b1-2e9e-11e6-b47a-ebca0a3af0e1","method":{"position":"org.apache.commons.collections4.CollectionUtils:1194","type":"CtMethodImpl","sourcecode":"private static void checkIndexBounds(final int index) {\n    if (index > 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + index));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555],"tindex":"8eb250b2-2e9e-11e6-b47a-334ebfe64230","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:221","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return java.util.Map<V, K>.get(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[556,557,558],"tindex":"8eb250b3-2e9e-11e6-b47a-bd11ee165f56","method":{"position":"org.apache.commons.collections4.list.GrowthList:181","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E element) {\n    if (index < 0) {\n        {\n            final int int = decorated().size();\n            if (index >= size) {\n                decorated().addAll(java.util.Collections.<E>nCopies(((index - size) + 1), null));\n            } \n            return decorated().set(index, element);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}