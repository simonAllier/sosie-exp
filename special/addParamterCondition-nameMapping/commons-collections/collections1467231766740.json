{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":28,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":725,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":414,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":726,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":179,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":358,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":11,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":327,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastValues":158,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastEntrySet":156,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":522,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx4":713,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":36,"org.apache.commons.collections4.CollectionUtilsTest.collect":465,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":312,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":578,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":471,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":4,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":73,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":114,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":551,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":388,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":727,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":333,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":83,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":463,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":485,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":456,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":567,"org.apache.commons.collections4.map.PredicatedMapTest.testMapHashCode":731,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":69,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":91,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":32,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":126,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":162,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSimpleSerialization":595,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectEqualsSelf":762,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":63,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":214,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":61,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveAll":754,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":709,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":674,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":714,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":159,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":394,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":443,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":59,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":539,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":149,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":155,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKey":527,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":458,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":315,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":379,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":362,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":112,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":687,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":115,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":758,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":605,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":434,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":313,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":45,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":556,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":343,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":37,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":344,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":665,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":345,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":77,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":211,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":258,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":326,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":480,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":192,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":29,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":646,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":81,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":542,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":675,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":364,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":621,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":218,"org.apache.commons.collections4.map.PredicatedMapTest.testCanonicalEmptyCollectionExists":765,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":412,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":6,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":538,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":140,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":661,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":403,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":585,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":361,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":300,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":307,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":301,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":302,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKey":491,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":404,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":127,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":248,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSimpleSerialization":241,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":684,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":641,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":125,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":124,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":121,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":217,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":283,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":395,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":643,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":101,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":493,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":56,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":236,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":2,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":514,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":378,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":644,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":613,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":648,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":188,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":399,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":320,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":10,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":199,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":529,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":651,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":682,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullValue":740,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":694,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":296,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":97,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":270,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":44,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":673,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":251,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":15,"org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie":604,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":375,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":186,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":564,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":742,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":208,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":130,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":450,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCanonicalFullCollectionExists":238,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":222,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":254,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":561,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":167,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":76,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":411,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsSelfHashCode":243,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":65,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":715,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":161,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":353,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":505,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":359,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking2":669,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":439,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":719,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":117,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":737,"org.apache.commons.collections4.map.PredicatedMapTest.testFullMapCompatibility":749,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":25,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":580,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":94,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":219,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":576,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":511,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":509,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":92,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":34,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":298,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":27,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testEqualsNull":592,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":526,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":546,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":197,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":128,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":550,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastValues":146,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":181,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":316,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":681,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":235,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":22,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":374,"org.apache.commons.collections4.functors.AllPredicateTest.nullCollectionToGetInstance":710,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":122,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":113,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":387,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":196,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":309,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":123,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":311,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":617,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":560,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":520,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":602,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":662,"org.apache.commons.collections4.ListUtilsTest.testPartition":721,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":275,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":154,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":228,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":143,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":413,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":103,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":653,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":446,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":666,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":151,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":116,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":230,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":473,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":266,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":753,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":351,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":288,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":470,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":769,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":755,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":332,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":407,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":475,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":728,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":706,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":466,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":325,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":462,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":110,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":176,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":268,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":524,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":111,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":650,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":565,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":660,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":18,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":637,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":504,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":582,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":82,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":141,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":260,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":289,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":79,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":282,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastEntrySet":144,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsContract":594,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":297,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":366,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":544,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":261,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":516,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":590,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesClearChangesMap":761,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":581,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":160,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAllCollections426":536,"org.apache.commons.collections4.SetUtilsTest.testHashCode":571,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":487,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":372,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":612,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":321,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":187,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":354,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":552,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetHashCode":579,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":182,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":472,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":587,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":453,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":72,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":632,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":631,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":628,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":627,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":630,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":629,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":624,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":626,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":625,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":397,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":80,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":449,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":402,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":357,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":19,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":657,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":658,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":294,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":659,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":705,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":317,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":96,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":338,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":531,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":153,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":455,"org.apache.commons.collections4.SetUtilsTest.testEquals":572,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":334,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testDecorateFactory":575,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":100,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":87,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":386,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCanonicalFullCollectionExists":597,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCanonicalEmptyCollectionExists":596,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":120,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":680,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":90,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":89,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":88,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":252,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":720,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":389,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":691,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":377,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":204,"org.apache.commons.collections4.map.PredicatedMapTest.testMakeMap":744,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":98,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testComparator":577,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":224,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":136,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":274,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":221,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":422,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":639,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":134,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":0,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":532,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":165,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":135,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEqualsNull":444,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":350,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":262,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":365,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":392,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":484,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":486,"org.apache.commons.collections4.map.LRUMapTest.testLRU":540,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":242,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":421,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":638,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":636,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":562,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":488,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":335,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":132,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":723,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":534,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":502,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":250,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":469,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":417,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":671,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":194,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":118,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRetainAll":760,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":195,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":482,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":30,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":324,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCanonicalEmptyCollectionExists":240,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":425,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":17,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":699,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":545,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":1,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":215,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":75,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":249,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":701,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":525,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":280,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":299,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":553,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKeyInverse":492,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":476,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":416,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":352,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":598,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":40,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":692,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":306,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":633,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":349,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":507,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":184,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":346,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":557,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":672,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEqualsNull":442,"org.apache.commons.collections4.map.PredicatedMapTest.testEmptyMapCompatibility":747,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":568,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":756,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":48,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastKeySet":145,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":152,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":447,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":732,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":42,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":734,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":733,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":43,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":664,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":269,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":757,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":433,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":109,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":190,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiKeySetValuesOrder":495,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":398,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":519,"org.apache.commons.collections4.TransformerUtilsTest.testInstantiateTransformerNull":570,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":70,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":137,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":647,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":319,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":246,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":200,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":424,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":741,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":400,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":51,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":310,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":52,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":178,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":50,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":234,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":503,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":330,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":277,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":478,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":369,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":640,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":5,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":255,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":189,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":180,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":391,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":510,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":537,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":559,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":207,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":26,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetClearChangesMap":739,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":718,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":620,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":247,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":322,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":201,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":695,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":24,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":303,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":102,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":133,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":253,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":305,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":304,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":566,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsContract":767,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":276,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":356,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":497,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":13,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":496,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":233,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":370,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":231,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":716,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":736,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":451,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiKeySetValuesOrder":521,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":49,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":198,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":281,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":396,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":599,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":41,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":748,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":46,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":678,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":506,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":177,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":420,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":500,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":33,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":448,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":436,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":649,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":256,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEqualsNull":440,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullKey":746,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":623,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":336,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":295,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":685,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":278,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":677,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":55,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":171,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":54,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":53,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetClearChangesMap":735,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":619,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":459,"org.apache.commons.collections4.map.LRUMapTest.testClone":457,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":223,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":479,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":331,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":150,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":376,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":483,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":419,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":663,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsSelfHashCode":593,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":203,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":193,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":347,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKey":517,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":205,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":683,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":272,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":147,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":39,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":759,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":523,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":279,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":163,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":707,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":212,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":558,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":751,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":229,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":432,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":603,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":490,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":401,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":467,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":722,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":175,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":329,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":481,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":494,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":12,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":168,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":642,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":67,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":58,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":583,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":610,"org.apache.commons.collections4.map.PredicatedMapTest.testSimpleSerialization":766,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":515,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":609,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":429,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":418,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":574,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":654,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":667,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":216,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":38,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKey":501,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":328,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":655,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":606,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":264,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":139,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":292,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking":427,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":106,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsSelfHashCode":768,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":423,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":170,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":213,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":528,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":244,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":318,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":21,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":174,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEqualsNull":438,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":265,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":508,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":690,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":108,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":84,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":308,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":291,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":393,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":530,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":533,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":634,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":239,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":428,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":226,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":142,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":355,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":437,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":383,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":384,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":611,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":385,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":618,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":314,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":287,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":548,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":696,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":601,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveAll":743,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":738,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":191,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":656,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":693,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":14,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectEqualsSelf":591,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":670,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":131,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":686,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":460,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":290,"org.apache.commons.collections4.map.PredicatedMapTest.testCanonicalFullCollectionExists":763,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":461,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":209,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":702,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":185,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":405,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":337,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":489,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":60,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":367,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":232,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray2":588,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":220,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToString":589,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":210,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":703,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":554,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":71,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":445,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":409,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":164,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":543,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":607,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":512,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":729,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":99,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":408,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":64,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":263,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":368,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":679,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":426,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":535,"org.apache.commons.collections4.CollectionUtilsTest.isFull":622,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":245,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":348,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":431,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking":668,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":8,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":173,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRetainAll":730,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":518,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":284,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":323,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":406,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":3,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":555,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":608,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":452,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":477,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectEqualsSelf":237,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":635,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":704,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":74,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":293,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":93,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":86,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx4":712,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":468,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":148,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":415,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":66,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":129,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet":724,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":614,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":697,"org.apache.commons.collections4.map.PredicatedMapTest.testEqualsNull":764,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":616,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":227,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":615,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":390,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":750,"org.apache.commons.collections4.SetUtilsTest.testEmptyIfNull":573,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":676,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":95,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":202,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":474,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":166,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":57,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":20,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastKeySet":157,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":107,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":257,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":172,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":381,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":382,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":498,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":380,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":652,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":339,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":688,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":569,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":47,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":259,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":373,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":225,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":285,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":9,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":745,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":340,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":341,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":35,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":410,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":68,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":689,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":62,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":286,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":363,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":183,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":430,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":360,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":371,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":711,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":271,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":105,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":541,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":708,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":752,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":435,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":549,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":78,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiRemove":454,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":169,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":645,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":499,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":138,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":513,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":547,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":464,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":563,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":717,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":441,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":342,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":267,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":698,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":273,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":700,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":600,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":206,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionSize":586,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":119,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIsEmpty":584},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"3e1cb1ed-3e37-11e6-a97d-239ce942d75c","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[0],"tindex":"3e1d000e-3e37-11e6-a97d-fb1a957727b2","method":{"position":"org.apache.commons.collections4.CollectionUtils:705","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (collection != null) && (closure != null) ? org.apache.commons.collections4.CollectionUtils.forAllButLastDo(collection.iterator(), closure) : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[1,2,3],"tindex":"3e1d000f-3e37-11e6-a97d-b92d3efa984d","method":{"position":"org.apache.commons.collections4.CollectionUtils:279","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> disjunction(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (a == null)) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, ((helper.max(obj)) - (helper.min(obj))));\n            }\n            return helper.list();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) == null"},"failures":[4,5],"tindex":"3e1d2720-3e37-11e6-a97d-71936e88db2d","method":{"position":"org.apache.commons.collections4.IteratorUtils:695","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> filteredIterator(final java.util.Iterator<? extends E> iterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterIterator<E>(iterator , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"3e1d2721-3e37-11e6-a97d-7bb09b013315","method":{"position":"org.apache.commons.collections4.MapUtils:318","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Double) {\n                return ((java.lang.Double)(answer));\n            } \n            return java.lang.Double.valueOf(answer.doubleValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"3e1d2722-3e37-11e6-a97d-716e0191a838","method":{"position":"org.apache.commons.collections4.SplitMapUtils:79","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[6,7,8,9,10,11,12,13,14,15],"tindex":"3e1d2723-3e37-11e6-a97d-75bc4cf0fe6c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:755","type":"CtMethodImpl","sourcecode":"private static void makeRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            if (node != null) {\n                node.setRed(dataElement);\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,6,44,45,46,7,47,48,49,50,51,52,53,54,55,8,56,57,9,10,58,59,11,12,13,14,15,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"tindex":"3e1d4e34-3e37-11e6-a97d-3d36a78723c0","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1243","type":"CtMethodImpl","sourcecode":"private static void checkKeyAndValue(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[103,104,105],"tindex":"3e1d4e35-3e37-11e6-a97d-2fb10f9016f1","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:255","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if (coll.contains(it.next())) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133],"tindex":"3e1d4e36-3e37-11e6-a97d-d54e6fd7db15","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:281","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                return null;\n            } \n            purgeBeforeWrite();\n            return super.remove(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[134],"tindex":"3e1d7547-3e37-11e6-a97d-11e9c5a712e6","method":{"position":"org.apache.commons.collections4.CollectionUtils:552","type":"CtMethodImpl","sourcecode":"public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n    if (input == null) {\n        {\n            return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188],"tindex":"3e1d7548-3e37-11e6-a97d-d13c3a258eb9","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:113","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258],"tindex":"3e1d7549-3e37-11e6-a97d-89cb7896c236","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> collectionSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.CollectionSortedBag<E>(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"3e1d9c5a-3e37-11e6-a97d-cf08bb8e979e","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:701","type":"CtMethodImpl","sourcecode":"public void atomic(final java.lang.Runnable r) {\n    if (r == null) {\n        {\n            if (r == null) {\n                throw new java.lang.NullPointerException();\n            } \n            atomic(r, 0);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[259],"tindex":"3e1d9c5b-3e37-11e6-a97d-a31df11f4b28","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                {\n                    if (coll != null) {\n                        boolean boolean = false;\n                        final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                        while (e.hasNext()) {\n                            if (!(coll.contains(e.next()))) {\n                                e.remove();\n                                modified = true;\n                            } \n                        }\n                        return modified;\n                    } else {\n                        return decorated().retainAll(null);\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398],"tindex":"3e1d9c5c-3e37-11e6-a97d-27ac656bd0e3","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:548","type":"CtMethodImpl","sourcecode":"protected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if ((entry.getValue()) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:62","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>"},"failures":[],"tindex":"3e1d9c5d-3e37-11e6-a97d-096e516cfe4a","method":{"position":"org.apache.commons.collections4.IteratorUtils:1017","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator, final int estimatedSize) {\n    if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (estimatedSize < 1) {\n                throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(estimatedSize);\n            while (iterator.hasNext()) {\n                list.add(iterator.next());\n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,245,246,247,248,249,250,251,252,253,254,255,256,257,258,421,422],"tindex":"3e1dc36e-3e37-11e6-a97d-25c571b2e42d","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            return decorated().addAll(transform(coll));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[423,424,425],"tindex":"3e1dc36f-3e37-11e6-a97d-9db2ee6e1598","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:86","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[426],"tindex":"3e1dc370-3e37-11e6-a97d-0b48519c5441","method":{"position":"org.apache.commons.collections4.TransformerUtils:149","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> asTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            return org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(closure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:207","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"3e1dc371-3e37-11e6-a97d-2d2fbe5de72a","method":{"position":"org.apache.commons.collections4.IteratorUtils:824","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator instanceof java.util.ListIterator) {\n                {\n                    return org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(iterator);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[427,428],"tindex":"3e1dc372-3e37-11e6-a97d-bdbf10050011","method":{"position":"org.apache.commons.collections4.list.PredicatedList:132","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validate(object);\n            return decorated().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[429,430,431,432],"tindex":"3e1dc373-3e37-11e6-a97d-9da1a8bed66a","method":{"position":"org.apache.commons.collections4.list.TreeList:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index < 0) {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index);\n            final E E = node.E;\n            node.setValue(obj);\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[433,434,435,436,437,438,439,440,441,442,443,444],"tindex":"3e1dea84-3e37-11e6-a97d-7fde9e753928","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        {\n            return java.util.Map<K, V>.equals(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[46],"tindex":"3e1dea85-3e37-11e6-a97d-911730f8f353","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:238","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(e.getKey(), e.getValue());\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[429,445,446,447,448,449,450,451,452],"tindex":"3e1dea86-3e37-11e6-a97d-01ce98c57f72","method":{"position":"org.apache.commons.collections4.list.TreeList:430","type":"CtMethodImpl","sourcecode":"int indexOf(final java.lang.Object object, final int index) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            if ((getLeftSubTree()) != null) {\n                final int int = org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n                if (result != (-1)) {\n                    return result;\n                } \n            } \n            if ((E) == null ? (E) == object : E.equals(object)) {\n                return index;\n            } \n            if ((getRightSubTree()) != null) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n            return -1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[453],"tindex":"3e1dea87-3e37-11e6-a97d-13d52da3cff6","method":{"position":"org.apache.commons.collections4.map.LazyMap:81","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map != null) {\n        {\n            return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[454],"tindex":"3e1e1198-3e37-11e6-a97d-f5a95f520db0","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"3e1e1199-3e37-11e6-a97d-77c84d1f1add","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == (org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.this)) {\n                return true;\n            } \n            return java.util.Map.Entry<K, V>.equals(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"3e1e119a-3e37-11e6-a97d-79d8210e323c","method":{"position":"org.apache.commons.collections4.MapUtils:364","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<K, V> map, final K key, final V defaultValue) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final V V = map.get(key);\n                if (answer != null) {\n                    return answer;\n                } \n            } \n            return defaultValue;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[455,456,457,458,459,460],"tindex":"3e1e119b-3e37-11e6-a97d-d3da67acb37e","method":{"position":"org.apache.commons.collections4.map.LRUMap:175","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            moveToMRU(entry);\n            return entry.getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[461],"tindex":"3e1e119c-3e37-11e6-a97d-01a15a7d8896","method":{"position":"org.apache.commons.collections4.CollectionUtils:946","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection != null) && (predicate != null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[462,463],"tindex":"3e1e38ad-3e37-11e6-a97d-ad5ade659cef","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[464],"tindex":"3e1e38ae-3e37-11e6-a97d-33ca4e8c7f80","method":{"position":"org.apache.commons.collections4.PredicateUtils:437","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"3e1e38af-3e37-11e6-a97d-0b3325c13779","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:418","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"(inputIterator != null) && (transformer != null)"},"failures":[465],"tindex":"3e1e38b0-3e37-11e6-a97d-476ffabb0035","method":{"position":"org.apache.commons.collections4.CollectionUtils:1063","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.util.Iterator<? extends I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if ((inputIterator != null) && (transformer != null)) {\n        {\n            if ((inputIterator != null) && (transformer != null)) {\n                while (inputIterator.hasNext()) {\n                    final I I = inputIterator.next();\n                    final O O = transformer.transform(item);\n                    outputCollection.add(value);\n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputIterator":"inputIterator","transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[],"tindex":"3e1e38b1-3e37-11e6-a97d-c12b45127392","method":{"position":"org.apache.commons.collections4.IteratorUtils:744","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> loopingIterator(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingIterator<E>(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535],"tindex":"3e1e5fc2-3e37-11e6-a97d-0f70c69335c2","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:134","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return java.util.Map<K, V>.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"3e1e5fc3-3e37-11e6-a97d-31c941dfd2b5","method":{"position":"org.apache.commons.collections4.IteratorUtils:588","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Collection<java.util.Iterator<? extends E>> iterators) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"3e1e5fc4-3e37-11e6-a97d-2315c80ed1f5","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:129","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().containsAll(coll);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"3e1e5fc5-3e37-11e6-a97d-87e1d2f3a857","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2014","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            return (node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[],"tindex":"3e1e5fc6-3e37-11e6-a97d-81b0e60fb732","method":{"position":"org.apache.commons.collections4.map.LinkedMap:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"3e1e5fc7-3e37-11e6-a97d-b9d7af24ff19","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:79","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal K castKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((K)(key));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[536,537,538,539],"tindex":"3e1e86d8-3e37-11e6-a97d-e3299334f64f","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:229","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (decorated().contains(next)) {\n                    collectionRetainAll.add(next);\n                } \n            }\n            if ((collectionRetainAll.size()) == (decorated().size())) {\n                return false;\n            } \n            if ((collectionRetainAll.size()) == 0) {\n                clear();\n            } else {\n                for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                    if (!(collectionRetainAll.contains(it.next()))) {\n                        it.remove();\n                    } \n                }\n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[540,541,542,456,543,544,545,546,547],"tindex":"3e1e86d9-3e37-11e6-a97d-63b9e6e3a594","method":{"position":"org.apache.commons.collections4.map.LRUMap:296","type":"CtMethodImpl","sourcecode":"protected void reuseMapping(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if (entry == null) {\n        {\n            try {\n                final int int = hashIndex(entry.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = tmp[removeIndex];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n                while ((loop != entry) && (loop != null)) {\n                    previous = loop;\n                    loop = loop.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                }\n                if (loop == null) {\n                    throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][removeIndex])) + \" previous=\") + previous) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                } \n                (int)++;\n                removeEntry(entry, removeIndex, previous);\n                reuseEntry(entry, hashIndex, hashCode, key, value);\n                addEntry(entry, hashIndex);\n            } catch (final java.lang.NullPointerException ex) {\n                throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + entry) + \" entryIsHeader=\") + (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569],"tindex":"3e1e86da-3e37-11e6-a97d-399be26ed851","method":{"position":"org.apache.commons.collections4.set.CompositeSet:425","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        {\n            if (obj instanceof java.util.Set) {\n                final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(obj));\n                return ((set.size()) == (org.apache.commons.collections4.set.CompositeSet.this.size())) && (set.containsAll(org.apache.commons.collections4.set.CompositeSet.this));\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[570],"tindex":"3e1eadeb-3e37-11e6-a97d-49ca938ea1e8","method":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:109","type":"CtMethodImpl","sourcecode":"public T transform(final java.lang.Class<? extends T> input) {\n    if (input == null) {\n        {\n            try {\n                if (input == null) {\n                    throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Input object was not an instanceof Class, it was a null object\");\n                } \n                final java.lang.reflect.Constructor<? extends T> java.lang.reflect.Constructor<? extends T> = input.getConstructor(java.lang.Class<?>[]);\n                return con.newInstance(java.lang.Object[]);\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: The constructor must exist and be public \");\n            } catch (final java.lang.InstantiationException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: InstantiationException\" , ex);\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor must be public\" , ex);\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor threw an exception\" , ex);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597],"tindex":"3e1eadec-3e37-11e6-a97d-95583f6d67f8","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> unmodifiableSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                        return set;\n                    } \n                    return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(set);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[598],"tindex":"3e1eaded-3e37-11e6-a97d-d549af0a2de5","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:154","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[599,600],"tindex":"3e1eadee-3e37-11e6-a97d-77236d63ffc3","method":{"position":"org.apache.commons.collections4.set.TransformedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set == null) {\n        {\n            final org.apache.commons.collections4.set.TransformedSet<E> org.apache.commons.collections4.set.TransformedSet<E> = new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"3e1ed4ff-3e37-11e6-a97d-7348b0721e34","method":{"position":"org.apache.commons.collections4.IteratorUtils:824","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator instanceof java.util.ListIterator) {\n                {\n                    return org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(iterator);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[601,598,602,603],"tindex":"3e1ed500-3e37-11e6-a97d-d9d384540985","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:692","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((((multi.size()) == 5) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))))) && ((key5 == (multi.getKey(4))) || ((key5 != null) && (key5.equals(multi.getKey(4)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getLeft(dataElement)) == node"},"failures":[16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,6,44,45,46,7,47,48,49,50,51,52,53,54,55,8,56,57,9,10,58,59,11,12,13,14,15,61,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"tindex":"3e1ed501-3e37-11e6-a97d-59c628bd8ae7","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:802","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getRightChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n        {\n            return node == null ? null : node.getRight(dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"3e1ed502-3e37-11e6-a97d-bb730d15914e","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(object, 1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:55","type":"CtBinaryOperatorImpl","sourcecode":"trie instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[604],"tindex":"3e1efc13-3e37-11e6-a97d-2d88beea3cc7","method":{"position":"org.apache.commons.collections4.TrieUtils:44","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(trie);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[605,606],"tindex":"3e1efc14-3e37-11e6-a97d-abe23ae25522","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:239","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final E E = super.remove(index);\n            java.util.Set<E>.remove(result);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[607,608],"tindex":"3e1efc15-3e37-11e6-a97d-e996e447b33d","method":{"position":"org.apache.commons.collections4.PredicateUtils:174","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceofPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        {\n            return org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(type);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"3e1efc16-3e37-11e6-a97d-0fd1205581be","method":{"position":"org.apache.commons.collections4.MapUtils:566","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key, final java.util.Map<?, ?> defaultValue) {\n    if (defaultValue == null) {\n        {\n            java.util.Map<?, ?> java.util.Map<?, ?> = org.apache.commons.collections4.MapUtils.getMap(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"defaultValue"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"3e1efc17-3e37-11e6-a97d-839afc2956a3","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[609,610,611,612,613,614,615,616,617,618,619,554,620,621,563],"tindex":"3e1efc18-3e37-11e6-a97d-8f86f5002d31","method":{"position":"org.apache.commons.collections4.map.CompositeMap:198","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[622,623,624,625,626,627,628,629,630,631,632,633,634,635],"tindex":"3e1f2329-3e37-11e6-a97d-0f2288c99864","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:339","type":"CtMethodImpl","sourcecode":"private int decrement(int index) {\n    if (index < 0) {\n        {\n            index--;\n            if (index < 0) {\n                index = (int) - 1;\n            } \n            return index;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[0,636],"tindex":"3e1f232a-3e37-11e6-a97d-79e2164136b1","method":{"position":"org.apache.commons.collections4.CollectionUtils:722","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    final T T = iterator.next();\n                    if (iterator.hasNext()) {\n                        closure.execute(element);\n                    } else {\n                        return element;\n                    }\n                }\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[601,598,602,603],"tindex":"3e1f232b-3e37-11e6-a97d-7d9cc39fae6b","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:532","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((((multi.size()) == 4) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[],"tindex":"3e1f232c-3e37-11e6-a97d-2b0b03903563","method":{"position":"org.apache.commons.collections4.CollectionUtils:968","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if ((inputCollection != null) && (predicate != null)) {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (!(predicate.evaluate(item))) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[637,638,639,640,641,642,643,213,644,645,646,647,648,649,650,651],"tindex":"3e1f232d-3e37-11e6-a97d-b7caffe4cc10","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:105","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            return decorated().getCount(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:58","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"3e1f232e-3e37-11e6-a97d-fdf1b0a43648","method":{"position":"org.apache.commons.collections4.ListUtils:477","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.LazyList.lazyList(list, factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"3e1f4a3f-3e37-11e6-a97d-75187252dda4","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:105","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"3e1f4a40-3e37-11e6-a97d-df612f62fdce","method":{"position":"org.apache.commons.collections4.ListUtils:400","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:871","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"3e1f4a41-3e37-11e6-a97d-d5661054a420","method":{"position":"org.apache.commons.collections4.IteratorUtils:853","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[652,653,654,106,107,108,655,656,109,657,658,659,110,111,660,112,113,114,115,116,117,118,119,661,662,663,664,665,666,667],"tindex":"3e1f4a42-3e37-11e6-a97d-79d53ec91906","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:204","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key2 = isKeyType(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<?>)(key2)).get();\n            return key1 == key2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[668,669],"tindex":"3e1f4a43-3e37-11e6-a97d-bdc087b6120b","method":{"position":"org.apache.commons.collections4.list.TransformedList:119","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getList().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693],"tindex":"3e1f4a44-3e37-11e6-a97d-5f787e4882bc","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            return getEntrySet().containsAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693],"tindex":"3e1f7155-3e37-11e6-a97d-8dd75339a3e9","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:568","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.KeySetView.this.org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object>.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[601,598],"tindex":"3e1f7156-3e37-11e6-a97d-b98f2b04688f","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:384","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((multi.size()) == 3) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[694,695,696,697,698,699,700,701,702,703],"tindex":"3e1f7157-3e37-11e6-a97d-392a7d345002","method":{"position":"org.apache.commons.collections4.MapUtils:968","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\nprivate static void verbosePrintInternal(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map, final org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>> lineage, final boolean debug) {\n    if (label != null) {\n        {\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            if (map == null) {\n                if (label != null) {\n                    out.print(label);\n                    out.print(\" = \");\n                } \n                out.println(\"null\");\n                return ;\n            } \n            if (label != null) {\n                out.print(label);\n                out.println(\" = \");\n            } \n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println(\"{\");\n            lineage.push(map);\n            for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : map.entrySet()) {\n                final java.lang.Object java.lang.Object = entry.getKey();\n                final java.lang.Object java.lang.Object = entry.getValue();\n                if ((childValue instanceof java.util.Map) && (!(lineage.contains(childValue)))) {\n                    org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, (childKey == null ? \"null\" : childKey), ((java.util.Map<?, ?>)(childValue)), lineage, debug);\n                } else {\n                    org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n                    out.print(childKey);\n                    out.print(\" = \");\n                    final int int = lineage.indexOf(childValue);\n                    if (lineageIndex == (-1)) {\n                        out.print(childValue);\n                    } else if (((lineage.size()) - 1) == lineageIndex) {\n                        out.print(\"(this Map)\");\n                    } else {\n                        out.print(((\"(ancestor[\" + ((((lineage.size()) - 1) - lineageIndex) - 1)) + \"] Map)\"));\n                    }\n                    if (debug && (childValue != null)) {\n                        out.print(' ');\n                        out.println(childValue.getClass().getName());\n                    } else {\n                        out.println();\n                    }\n                }\n            }\n            lineage.pop();\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println((debug ? \"} \" + (map.getClass().getName()) : \"}\"));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"label"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"3e1f7158-3e37-11e6-a97d-47e77eabbb23","method":{"position":"org.apache.commons.collections4.MapUtils:1247","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> synchronizedMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        {\n            return java.util.Collections.synchronizedMap(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[],"tindex":"3e1f9869-3e37-11e6-a97d-3b34ae2068e1","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:108","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.containsKey(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:151","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[],"tindex":"3e1f986a-3e37-11e6-a97d-d3c3d477efff","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K>(normalMap , reverseMap , inverseMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"3e1f986b-3e37-11e6-a97d-977310cfbd2a","method":{"position":"org.apache.commons.collections4.SetUtils:192","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[704],"tindex":"3e1f986c-3e37-11e6-a97d-c111c2fb0033","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1729","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"3e1f986d-3e37-11e6-a97d-1d056c2cf48d","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                {\n                    if (coll != null) {\n                        boolean boolean = false;\n                        final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                        while (e.hasNext()) {\n                            if (!(coll.contains(e.next()))) {\n                                e.remove();\n                                modified = true;\n                            } \n                        }\n                        return modified;\n                    } else {\n                        return decorated().retainAll(null);\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"3e1f986e-3e37-11e6-a97d-ad16691af7e3","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> unmodifiableSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                        return set;\n                    } \n                    return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(set);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[705],"tindex":"3e1fbf7f-3e37-11e6-a97d-b11edfdc56f0","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:738","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((multi.size()) >= 2) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1603","type":"CtVariableReadImpl","sourcecode":"includeDuplicates"},"failures":[],"tindex":"3e1fbf80-3e37-11e6-a97d-5144aa6db5b2","method":{"position":"org.apache.commons.collections4.CollectionUtils:1547","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final boolean includeDuplicates) {\n    if (includeDuplicates) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), includeDuplicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"includeDuplicates":"includeDuplicates"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"3e1fbf81-3e37-11e6-a97d-5f30a34cc2cd","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[706,707],"tindex":"3e1fbf82-3e37-11e6-a97d-c9ab6a37f795","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:60","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedBag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedBag<E>(bag , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[162,163,165,167,170,171,172],"tindex":"3e1fbf83-3e37-11e6-a97d-6ba118485008","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:458","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Map<java.lang.Object, java.lang.Long>.remove(key);\n            return super.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"3e1fbf84-3e37-11e6-a97d-5178c5c843cb","method":{"position":"org.apache.commons.collections4.IteratorUtils:649","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> objectGraphIterator(final E root, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectGraphIterator<E>(root , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtBinaryOperatorImpl","sourcecode":"from == null"},"failures":[],"tindex":"3e1fe695-3e37-11e6-a97d-9f057d730135","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:716","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> from, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> to, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (from == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (to != null) {\n                if (from == null) {\n                    to.setBlack(dataElement);\n                } else {\n                    to.copyColor(from, dataElement);\n                }\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"from"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[708,563,565],"tindex":"3e1fe696-3e37-11e6-a97d-871e5c9ccf03","method":{"position":"org.apache.commons.collections4.map.CompositeMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsValue(value)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[709],"tindex":"3e1fe697-3e37-11e6-a97d-919ffd497eaf","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[710,711,464,712,713],"tindex":"3e1fe698-3e37-11e6-a97d-9326a18f2733","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:96","type":"CtMethodImpl","sourcecode":"static <T>org.apache.commons.collections4.Predicate<T>[] validate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = new org.apache.commons.collections4.Predicate[predicates.size()];\n            int int = 0;\n            for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : predicates) {\n                preds[i] = predicate;\n                if ((preds[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n                i++;\n            }\n            return preds;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[714],"tindex":"3e200da9-3e37-11e6-a97d-b15fc6ec80e2","method":{"position":"org.apache.commons.collections4.CollectionUtils:366","type":"CtMethodImpl","sourcecode":"public static boolean containsAll(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if (coll1.isEmpty()) {\n        {\n            if (coll2.isEmpty()) {\n                return true;\n            } else {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll1.iterator();\n                final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (elementsAlreadySeen.contains(nextElement)) {\n                        continue;\n                    } \n                    boolean boolean = false;\n                    while (it.hasNext()) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        elementsAlreadySeen.add(p);\n                        if (nextElement == null ? p == null : nextElement.equals(p)) {\n                            foundCurrentElement = true;\n                            break;\n                        } \n                    }\n                    if (foundCurrentElement) {\n                        continue;\n                    } else {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[375],"tindex":"3e200daa-3e37-11e6-a97d-43b1ee191d24","method":{"position":"org.apache.commons.collections4.map.Flat3Map:374","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = map.size();\n            if (size == 0) {\n                return ;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n                return ;\n            } \n            if (size < 4) {\n                for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            } else {\n                convertToMap();\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtBinaryOperatorImpl","sourcecode":"(collection.size()) > 0"},"failures":[715],"tindex":"3e200dab-3e37-11e6-a97d-2b31446a145a","method":{"position":"org.apache.commons.collections4.CollectionUtils:1689","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if ((collection.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.removeAll(collection, remove);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[716,259,717,412,718,719],"tindex":"3e200dac-3e37-11e6-a97d-5db57735e66d","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            return remove(object, 1);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[720],"tindex":"3e200dad-3e37-11e6-a97d-91a6af462d95","method":{"position":"org.apache.commons.collections4.list.TransformedList:127","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getList().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[70],"tindex":"3e200dae-3e37-11e6-a97d-0178b78ae1a7","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:147","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[721],"tindex":"3e2034bf-3e37-11e6-a97d-b7fbc645c225","method":{"position":"org.apache.commons.collections4.ListUtils:654","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<java.util.List<T>> partition(final java.util.List<T> list, final int size) {\n    if (size > 0) {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (size <= 0) {\n                throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n            } \n            return new org.apache.commons.collections4.ListUtils.Partition<T>(list , size);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[722,723,724,156,157,158,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,159,759,760,761,762,763,764,765,766,767,768,769],"tindex":"3e2034c0-3e37-11e6-a97d-075a0a86bf29","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:78","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        {\n            return new org.apache.commons.collections4.map.PredicatedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228782316/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}