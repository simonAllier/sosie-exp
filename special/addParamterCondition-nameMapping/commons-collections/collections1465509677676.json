{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":111,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":461,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":148,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":603,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":508,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":626,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":334,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":270,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":288,"org.apache.commons.collections4.map.StaticBucketMapTest.testEqualsNull":300,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":230,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":615,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":514,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":158,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":208,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":614,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":157,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":618,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":361,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":453,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullValue":506,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":205,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":119,"org.apache.commons.collections4.CollectionUtilsTest.collect":19,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":290,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":340,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":487,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":480,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":133,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":443,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":562,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":125,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":126,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":477,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":81,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":550,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":169,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionClear":265,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":0,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":631,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":68,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":224,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":275,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":88,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":548,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":247,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":115,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":585,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":62,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":305,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":381,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":594,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":60,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":459,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":629,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":620,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":527,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":387,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":575,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":584,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":632,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":633,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":483,"org.apache.commons.collections4.CollectionUtilsTest.transform2":17,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":14,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":284,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullValue":568,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":21,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":147,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":291,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":250,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapHashCode":502,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":523,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":590,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToString":260,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":403,"org.apache.commons.collections4.ListUtilsTest.testEquals":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":234,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":343,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":397,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":181,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":46,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":193,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":597,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":136,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking":206,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":225,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":338,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":137,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapClear":574,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":135,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":431,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":582,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":341,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":129,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":464,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":191,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":588,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":346,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":612,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":412,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":120,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking2":363,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":488,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":75,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":386,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":378,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":415,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":355,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":576,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":389,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":112,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":359,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":172,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":202,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":374,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":109,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":295,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":627,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":79,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":478,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":622,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":524,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":404,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":536,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":398,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":636,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":107,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":199,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":237,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":331,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":385,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":179,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":99,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":365,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":127,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":267,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":410,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":555,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":253,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":333,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":332,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":472,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":583,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":525,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":328,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":335,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":329,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":330,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":297,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":165,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":299,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":106,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":150,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":605,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":183,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":564,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":176,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":430,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":220,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":232,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":405,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSimpleSerialization":438,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":556,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":223,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":428,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":12,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":311,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":384,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":98,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":33,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":462,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":572,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":471,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":447,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":36,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":142,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":433,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":302,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":457,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":134,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":9,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":395,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":196,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":309,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":13,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":579,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":124,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":274,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":298,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":130,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":203,"org.apache.commons.collections4.list.TreeListTest.testRemove":441,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":625,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":563,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":145,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":396,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":465,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":448,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":591,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":485,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":450,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":116,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":547,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":263,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":24,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":466,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":153,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":413,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":489,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":167,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":324,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetIteratorRemoveChangesMap":567,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":241,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":262,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":25,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":552,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":323,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":510,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":595,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":94,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":578,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":128,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":445,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":619,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":306,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":350,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":408,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":624,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":140,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":138,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":152,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":238,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":278,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":517,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":420,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":348,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":200,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":215,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":45,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":375,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":251,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCanonicalFullCollectionExists":435,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":400,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":482,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":390,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":411,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":419,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":561,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":372,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":509,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":549,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":249,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":252,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":74,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":358,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":177,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsSelfHashCode":440,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":484,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":64,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":122,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":586,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":493,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":307,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":475,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":379,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":570,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":259,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":257,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":535,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":497,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":498,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":592,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":426,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":496,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":108,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":544,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":192,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":91,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":416,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":353,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":368,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":117,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":44,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullKey":511,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":149,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":43,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":326,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":110,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":168,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":211,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":226,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":370,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":557,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":394,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":161,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":360,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":164,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":456,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":551,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":201,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":577,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":609,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":146,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":344,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":254,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":546,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":180,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":463,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":239,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":159,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":432,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":476,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":545,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate":449,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":105,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":490,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":245,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":479,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":495,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":610,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":393,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":6,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":337,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":7,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":5,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":383,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":121,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":446,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":537,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":339,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":320,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":55,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking":362,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":528,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":256,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":380,"org.apache.commons.collections4.ListUtilsTest.testIntersectNonEmptyWithEmptyList":154,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":401,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":425,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":104,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":31,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":50,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":369,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":51,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":287,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":581,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":231,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":49,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":156,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":519,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":601,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":427,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":82,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":163,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":336,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":319,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":294,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":492,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":283,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":316,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":460,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":436,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":423,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":473,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":357,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":279,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":280,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":240,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":281,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":635,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":286,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":342,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":315,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":580,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":57,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":474,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking2":210,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":102,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":173,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":388,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":604,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":613,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":566,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":151,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":616,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":80,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":596,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":317,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":77,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":310,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":455,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":318,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":212,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":325,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":376,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionClear":248,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":630,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":529,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":531,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":530,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":160,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":269,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":59,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":429,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":628,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":494,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":417,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":273,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":377,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":242,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":69,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":277,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":233,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":444,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":114,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":15,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":222,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":481,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":96,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":70,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":364,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":63,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":178,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":214,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":11,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":541,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":451,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":174,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":16,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":402,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":285,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":560,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":301,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":141,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":207,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":78,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":271,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":47,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":534,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":532,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":30,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":558,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":607,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":559,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapClear":512,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":312,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":467,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":296,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":54,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":351,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":103,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":322,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetIteratorRemoveChangesMap":505,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":190,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":345,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":600,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectEqualsSelf":434,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":606,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":621,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":93,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":272,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":356,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":216,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":500,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":52,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":53,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":72,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":32,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":321,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":90,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetIndexed":221,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":171,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":515,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":84,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":166,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":97,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":244,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":516,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":491,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":40,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":65,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":218,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":424,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":442,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":504,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":554,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":197,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":347,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":503,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":195,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":2,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":499,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":282,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":1,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":258,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":565,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":27,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":41,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":543,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":623,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":87,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":86,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":213,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":85,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":458,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":92,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":399,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":175,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":518,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":182,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":292,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":303,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":409,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToString":243,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":266,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":143,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":131,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":602,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":522,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":198,"org.apache.commons.collections4.CollectionUtilsTest.find":39,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":371,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":542,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":414,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":507,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":611,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":170,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":95,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":246,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":20,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":421,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":204,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":634,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":162,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":418,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":189,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":454,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":188,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":219,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":37,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":187,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":304,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":598,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":18,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":540,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":184,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":293,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":185,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":186,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullKey":573,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":349,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":132,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPut":521,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":23,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":422,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":313,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":637,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":236,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":144,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":209,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":194,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":354,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":264,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":118,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":276,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":67,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":599,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":439,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":587,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":61,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":352,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":539,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":29,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":314,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":261,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":526,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":217,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":468,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":469,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":571,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":470,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":486,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":268,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":407,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":289,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":452,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":366,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":367,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory":56,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":227,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":520,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":593,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":617,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":76,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":391,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":533,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":235,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":392,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":113,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":589,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCanonicalEmptyCollectionExists":437,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":101,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":28,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":48,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":382,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":83,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":73,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":538,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":228,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":513,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":406,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":501,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":229,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":373,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":569,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":308,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":327,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":608,"org.apache.commons.collections4.ListUtilsTest.testIntersectionOrderInsensitivity":155,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":255,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":553},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"b10d6416-2e8d-11e6-a5bc-4b45bec13cf7","method":{"position":"org.apache.commons.collections4.map.Flat3Map:126","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(key);\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                    case 2 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                    case 1 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b10e4e77-2e8d-11e6-a5bc-3bfbdf276ecf","method":{"position":"org.apache.commons.collections4.MapUtils:297","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Float) {\n                return ((java.lang.Float)(answer));\n            } \n            return java.lang.Float.valueOf(answer.floatValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"b10e4e78-2e8d-11e6-a5bc-43e659ff78fe","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[14,15,16],"tindex":"b10e7589-2e8d-11e6-a5bc-a77613b11cc7","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[],"tindex":"b10e758a-2e8d-11e6-a5bc-f7d03f55ae22","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"(inputIterator != null) && (transformer != null)"},"failures":[17,18,19],"tindex":"b10e9c9b-2e8d-11e6-a5bc-1b019bfd0c6f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1063","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.util.Iterator<? extends I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if ((inputIterator != null) && (transformer != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((inputIterator != null) && (transformer != null)) {\n                while (inputIterator.hasNext()) {\n                    final I I = inputIterator.next();\n                    final O O = transformer.transform(item);\n                    outputCollection.add(value);\n                }\n            } \n            return outputCollection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputIterator":"inputIterator","transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"b10ec3ac-2e8d-11e6-a5bc-73623fbe00d9","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[20],"tindex":"b10ec3ad-2e8d-11e6-a5bc-c78be067d92e","method":{"position":"org.apache.commons.collections4.TransformerUtils:399","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, null, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"b10eeabe-2e8d-11e6-a5bc-4b52d187f0f8","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:109","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (count != null) {\n                return count.int;\n            } \n            return 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[21,22],"tindex":"b10f11cf-2e8d-11e6-a5bc-fd4a4924af12","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[23],"tindex":"b10f11d0-2e8d-11e6-a5bc-e56d92799922","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[24,25],"tindex":"b10f38e1-2e8d-11e6-a5bc-df5053a844eb","method":{"position":"org.apache.commons.collections4.list.TreeList:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index).getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[26],"tindex":"b10f38e2-2e8d-11e6-a5bc-3f970549c15d","method":{"position":"org.apache.commons.collections4.list.TransformedList:142","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            coll = transform(coll);\n            return getList().addAll(index, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[27,28,29,30,31,32,33,34,35],"tindex":"b10f5ff3-2e8d-11e6-a5bc-8147387b8367","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:488","type":"CtMethodImpl","sourcecode":"private void removeIfExpired(final java.lang.Object key, final long now) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Long java.lang.Long = java.util.Map<java.lang.Object, java.lang.Long>.get(key);\n            if (isExpired(now, expirationTimeObject)) {\n                remove(key);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[36],"tindex":"b10f5ff4-2e8d-11e6-a5bc-e3eeea2d3c90","method":{"position":"org.apache.commons.collections4.PredicateUtils:402","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> neitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate2 == null)) {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(predicate1, predicate2);\n            return nonePredicate;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[37,38],"tindex":"b10f8705-2e8d-11e6-a5bc-9d0cac251d5c","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:92","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count == 1) {\n        {\n            validate(object);\n            return decorated().add(object, count);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[39],"tindex":"b10fae16-2e8d-11e6-a5bc-0f92b2580ac0","method":{"position":"org.apache.commons.collections4.CollectionUtils:641","type":"CtMethodImpl","sourcecode":"public static <T>T find(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if ((collection != null) && (predicate != null)) {\n                for (final T T : collection) {\n                    if (predicate.evaluate(item)) {\n                        return item;\n                    } \n                }\n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"tindex":"b10fae17-2e8d-11e6-a5bc-e741f8be5907","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:462","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.Node.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((K) == null ? (e2.getKey()) == null : K.equals(e2.getKey())) && ((V) == null ? (e2.getValue()) == null : V.equals(e2.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[56],"tindex":"b10fd528-2e8d-11e6-a5bc-717e0392b42e","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(final org.apache.commons.collections4.BoundedCollection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BoundedCollection<E> org.apache.commons.collections4.BoundedCollection<E> = ((org.apache.commons.collections4.BoundedCollection<E>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"b10ffc39-2e8d-11e6-a5bc-49aea1dbecdc","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1490","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (doRemoveKey(o)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"b10ffc3a-2e8d-11e6-a5bc-b71bea91c7e4","method":{"position":"org.apache.commons.collections4.map.LinkedMap:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K get(final int index) {\n    if (index > 0) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[57],"tindex":"b110234b-2e8d-11e6-a5bc-7dcc5efc620c","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:264","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"b1104a5c-2e8d-11e6-a5bc-695a5f46baf9","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1020","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index < 0) {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.set((index + (int)), obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[],"tindex":"b110716d-2e8d-11e6-a5bc-fdd5f1a582bf","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        {\n            return java.util.Map<K, V>.equals(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtBinaryOperatorImpl","sourcecode":"((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))"},"failures":[58],"tindex":"b110716e-2e8d-11e6-a5bc-23fc4194483b","method":{"position":"org.apache.commons.collections4.ListUtils:244","type":"CtMethodImpl","sourcecode":"public static boolean isEqualList(final java.util.Collection<?> list1, final java.util.Collection<?> list2) {\n    if (((list2 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list1 == list2) {\n                return true;\n            } \n            if (((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))) {\n                return false;\n            } \n            final java.util.Iterator<?> java.util.Iterator<?> = list1.iterator();\n            final java.util.Iterator<?> java.util.Iterator<?> = list2.iterator();\n            java.lang.Object java.lang.Object = null;\n            java.lang.Object java.lang.Object = null;\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                obj1 = it1.next();\n                obj2 = it2.next();\n                if (!(obj1 == null ? obj2 == null : obj1.equals(obj2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"b110987f-2e8d-11e6-a5bc-492ff8d52c26","method":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:109","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.ReverseComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.ReverseComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.ReverseComparator<?> org.apache.commons.collections4.comparators.ReverseComparator<?> = ((org.apache.commons.collections4.comparators.ReverseComparator<?>)(object));\n                return java.util.Comparator<E>.equals(thatrc.java.util.Comparator<?>);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[59,60,61,62,63,64,65,66,67,68,21,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,22,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152],"tindex":"b1109880-2e8d-11e6-a5bc-850be3057da0","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:802","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getRightChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        {\n            return node == null ? null : node.getRight(dataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b110bf91-2e8d-11e6-a5bc-37e4a62f7a14","method":{"position":"org.apache.commons.collections4.MapUtils:623","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return 0;\n            } \n            return shortObject.shortValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[153],"tindex":"b110bf92-2e8d-11e6-a5bc-17a69b4526b1","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"b110bf93-2e8d-11e6-a5bc-3d6889f1e038","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1043","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this, index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"b110e6a4-2e8d-11e6-a5bc-950c4119f6f4","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:77","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index > 0) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[154,155],"tindex":"b110e6a5-2e8d-11e6-a5bc-4f173717b432","method":{"position":"org.apache.commons.collections4.ListUtils:89","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> intersection(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list1.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            java.util.List<? extends E> java.util.List<? extends E> = list1;\n            java.util.List<? extends E> java.util.List<? extends E> = list2;\n            if ((list1.size()) > (list2.size())) {\n                smaller = list2;\n                larger = list1;\n            } \n            final java.util.HashSet<E> java.util.HashSet<E> = new java.util.HashSet<E>(smaller);\n            for (final E E : larger) {\n                if (hashSet.contains(e)) {\n                    result.add(e);\n                    hashSet.remove(e);\n                } \n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1027","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201],"tindex":"b110e6a6-2e8d-11e6-a5bc-99c659f120e3","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:57","type":"CtMethodImpl","sourcecode":"static boolean isOutOfBoundsIndex(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219],"tindex":"b1110db7-2e8d-11e6-a5bc-75f48a30b43f","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[127,131,141,145,149],"tindex":"b1110db8-2e8d-11e6-a5bc-433a7e8def6a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:851","type":"CtMethodImpl","sourcecode":"private void rotateRight(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getLeft(dataElement);\n            node.setLeft(leftChild.getRight(dataElement), dataElement);\n            if ((leftChild.getRight(dataElement)) != null) {\n                leftChild.getRight(dataElement).setParent(node, dataElement);\n            } \n            leftChild.setParent(node.getParent(dataElement), dataElement);\n            if ((node.getParent(dataElement)) == null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = leftChild;\n            } else if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n                node.getParent(dataElement).setRight(leftChild, dataElement);\n            } else {\n                node.getParent(dataElement).setLeft(leftChild, dataElement);\n            }\n            leftChild.setRight(node, dataElement);\n            node.setParent(leftChild, dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"b11134c9-2e8d-11e6-a5bc-b1e89fc73ec5","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[220],"tindex":"b11134ca-2e8d-11e6-a5bc-bbf93bfae954","method":{"position":"org.apache.commons.collections4.MapUtils:1756","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> iterableMap(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            if ((map.size()) > 0) {\n                {\n                    if (map == null) {\n                        throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n                    } \n                    return map instanceof org.apache.commons.collections4.IterableMap ? ((org.apache.commons.collections4.IterableMap<K, V>)(map)) : new org.apache.commons.collections4.map.AbstractMapDecorator<K, V>(map) {                    };\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[221],"tindex":"b11134cb-2e8d-11e6-a5bc-fb2a5d590399","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:195","type":"CtMethodImpl","sourcecode":"public K getKey(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return K[][index];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237],"tindex":"b1115bdc-2e8d-11e6-a5bc-cf1931295b6a","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:154","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return (indexOf(value)) != (-1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"b1115bdd-2e8d-11e6-a5bc-d15083bfcafb","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:121","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271],"tindex":"b1115bde-2e8d-11e6-a5bc-09fc10fdf80d","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:202","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            boolean boolean = false;\n            for (final E E : coll) {\n                result |= add(e);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"b11182ef-2e8d-11e6-a5bc-f7cdb8ed9013","method":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (classToInstantiate == null) {\n                throw new java.lang.IllegalArgumentException(\"Class to instantiate must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate);\n            } \n            return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate , paramTypes , args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[272,273],"tindex":"b11182f0-2e8d-11e6-a5bc-c1f5999bb156","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:400","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return get(java.util.List<K>.get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"b11182f1-2e8d-11e6-a5bc-b1d2d5895ddb","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:122","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            for (final E E : coll) {\n                java.util.Map<E, ? super V>.put(e, V);\n            }\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b111aa02-2e8d-11e6-a5bc-b3752d0fe07e","method":{"position":"org.apache.commons.collections4.MapUtils:255","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Integer) {\n                return ((java.lang.Integer)(answer));\n            } \n            return java.lang.Integer.valueOf(answer.intValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[274],"tindex":"b111aa03-2e8d-11e6-a5bc-1148f5d7984b","method":{"position":"org.apache.commons.collections4.SplitMapUtils:184","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[0,275,1,2,3,4,5,6,7,8,9,10,276,277,278,279,280,281,282,283,284,12,13,285],"tindex":"b111aa04-2e8d-11e6-a5bc-4983eeeed551","method":{"position":"org.apache.commons.collections4.map.Flat3Map:197","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                        return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(key);\n                    } \n                    if (key == null) {\n                        switch (int) {\n                            case 3 :\n                                if ((K) == null) {\n                                    return true;\n                                } \n                            case 2 :\n                                if ((K) == null) {\n                                    return true;\n                                } \n                            case 1 :\n                                if ((K) == null) {\n                                    return true;\n                                } \n                        }\n                    } else {\n                        if ((int) > 0) {\n                            final int int = key.hashCode();\n                            switch (int) {\n                                case 3 :\n                                    if (((int) == hashCode) && (key.equals(K))) {\n                                        return true;\n                                    } \n                                case 2 :\n                                    if (((int) == hashCode) && (key.equals(K))) {\n                                        return true;\n                                    } \n                                case 1 :\n                                    if (((int) == hashCode) && (key.equals(K))) {\n                                        return true;\n                                    } \n                            }\n                        } \n                    }\n                    return false;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"b111d115-2e8d-11e6-a5bc-53d5233874e4","method":{"position":"org.apache.commons.collections4.SetUtils:306","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.PredicatedSortedSet.predicatedSortedSet(set, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[],"tindex":"b111f826-2e8d-11e6-a5bc-95faa756e7c8","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:215","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(int, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"b111f827-2e8d-11e6-a5bc-013046803cf8","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:121","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[218],"tindex":"b111f828-2e8d-11e6-a5bc-171729106d0b","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[286],"tindex":"b111f829-2e8d-11e6-a5bc-dbad110d7921","method":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.List) == false) {\n                {\n                    if ((obj instanceof java.util.Map) == false) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            if (obj == (org.apache.commons.collections4.functors.ConstantTransformer.this)) {\n                                return true;\n                            } \n                            if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                                return false;\n                            } \n                            final java.lang.Object java.lang.Object = ((org.apache.commons.collections4.functors.ConstantTransformer<?, ?>)(obj)).getConstant();\n                            return (otherConstant == (getConstant())) || ((otherConstant != null) && (otherConstant.equals(getConstant())));\n                        }\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[287,288,289,290,291,292,293,294,295,296,297,298,299],"tindex":"b1121f3a-2e8d-11e6-a5bc-67d34e1bab32","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:132","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"b1121f3b-2e8d-11e6-a5bc-09cc0cd4b1b9","method":{"position":"org.apache.commons.collections4.MapUtils:1506","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> synchronizedSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            return java.util.Collections.synchronizedSortedMap(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[],"tindex":"b1121f3c-2e8d-11e6-a5bc-8f4aed176b91","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:111","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().addAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1083","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"b112464d-2e8d-11e6-a5bc-ed3f13629de1","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isBitSet(final java.lang.String key, final int bitIndex, final int lengthInBits) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(lengthInBits)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((key == null) || (bitIndex >= lengthInBits)) {\n                return false;\n            } \n            final int int = bitIndex / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = bitIndex % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            return ((key.charAt(index)) & (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(bit))) != 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"lengthInBits"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:921","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"b112464e-2e8d-11e6-a5bc-8db519afca29","method":{"position":"org.apache.commons.collections4.IteratorUtils:976","type":"CtMethodImpl","sourcecode":"public static <E>E[] toArray(final java.util.Iterator<? extends E> iterator, final java.lang.Class<E> arrayClass) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (arrayClass == null) {\n                throw new java.lang.NullPointerException(\"Array class must not be null\");\n            } \n            final java.util.List<E> java.util.List<E> = org.apache.commons.collections4.IteratorUtils.toList(iterator, 100);\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final E[] E[] = ((E[])(java.lang.reflect.Array.newInstance(arrayClass, list.size())));\n            return list.toArray(array);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"b1126d5f-2e8d-11e6-a5bc-8d526c237196","method":{"position":"org.apache.commons.collections4.MapUtils:546","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key, final java.lang.Double defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"b1126d60-2e8d-11e6-a5bc-796485b8bf7d","method":{"position":"org.apache.commons.collections4.MapUtils:1623","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"b1126d61-2e8d-11e6-a5bc-7fc138682601","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:93","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().remove(object, count);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"b1126d62-2e8d-11e6-a5bc-b124461e49b0","method":{"position":"org.apache.commons.collections4.ListUtils:147","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> sum(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list1.size()) > (list2.size())) {\n        {\n            return org.apache.commons.collections4.ListUtils.subtract(org.apache.commons.collections4.ListUtils.union(list1, list2), org.apache.commons.collections4.ListUtils.intersection(list1, list2));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list2"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[44,300],"tindex":"b1129473-2e8d-11e6-a5bc-510336071198","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            return entrySet().equals(other.entrySet());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"b1129474-2e8d-11e6-a5bc-e739d35d7423","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[301,302,303],"tindex":"b1129475-2e8d-11e6-a5bc-2d4b5eb41f3d","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:143","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object value) {\n    if (value == null) {\n        {\n            int int = (int) - 1;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i--;\n            }\n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345],"tindex":"b112bb86-2e8d-11e6-a5bc-8f22d998a16d","method":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key != null) {\n                final char[] char[] = key.toString().toCharArray();\n                for (int int = (chars.int) - 1 ; i >= 0 ; i--) {\n                    chars[i] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(chars[i]));\n                }\n                return new java.lang.String(chars);\n            } \n            return org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"b112bb87-2e8d-11e6-a5bc-7589e96d9891","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[108,110,111],"tindex":"b112e298-2e8d-11e6-a5bc-c9efd0a7c1a1","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2065","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsValue(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"b112e299-2e8d-11e6-a5bc-f162d551de22","method":{"position":"org.apache.commons.collections4.ClosureUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"b112e29a-2e8d-11e6-a5bc-0b216a8b3102","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:105","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[346,347,348,349,350,351,352],"tindex":"b112e29b-2e8d-11e6-a5bc-97fb8a3af064","method":{"position":"org.apache.commons.collections4.functors.TransformerClosure:48","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> transformerClosure(final org.apache.commons.collections4.Transformer<? super E, ?> transformer) {\n    if (transformer == null) {\n        {\n            if (transformer == null) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            return new org.apache.commons.collections4.functors.TransformerClosure<E>(transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"b11309ac-2e8d-11e6-a5bc-6d2f630b932f","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:538","type":"CtMethodImpl","sourcecode":"private V doRemoveKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[],"tindex":"b11309ad-2e8d-11e6-a5bc-33be058eb55d","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:475","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key4 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key4"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[],"tindex":"b11330be-2e8d-11e6-a5bc-b97e023e8771","method":{"position":"org.apache.commons.collections4.IteratorUtils:781","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.NodeList nodeList) {\n    if (nodeList == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (nodeList == null) {\n                throw new java.lang.NullPointerException(\"NodeList must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(nodeList);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"nodeList"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[353],"tindex":"b11330bf-2e8d-11e6-a5bc-53f40d3e3089","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b11330c0-2e8d-11e6-a5bc-e9f75d3ede8b","method":{"position":"org.apache.commons.collections4.MapUtils:406","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key, final java.lang.Boolean defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"b11330c1-2e8d-11e6-a5bc-3fd94f8050d0","method":{"position":"org.apache.commons.collections4.MapUtils:1756","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> iterableMap(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            if ((map.size()) > 0) {\n                {\n                    if (map == null) {\n                        throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n                    } \n                    return map instanceof org.apache.commons.collections4.IterableMap ? ((org.apache.commons.collections4.IterableMap<K, V>)(map)) : new org.apache.commons.collections4.map.AbstractMapDecorator<K, V>(map) {                    };\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"b11357d2-2e8d-11e6-a5bc-0312fc121938","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:726","type":"CtMethodImpl","sourcecode":"protected K entryKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[48,354,355,356,357,55,358,359,360],"tindex":"b11357d3-2e8d-11e6-a5bc-891077ec9efe","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:316","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        if (null == prev) {\n                            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        } else {\n                            prev.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        }\n                        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash].int)--;\n                        return n.V;\n                    } \n                    prev = n;\n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtBinaryOperatorImpl","sourcecode":"(collection.size()) > 0"},"failures":[361],"tindex":"b1137ee4-2e8d-11e6-a5bc-4f1244711b4c","method":{"position":"org.apache.commons.collections4.CollectionUtils:1783","type":"CtMethodImpl","sourcecode":"public static <E>E extractSingleton(final java.util.Collection<E> collection) {\n    if ((collection.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection == null) || ((collection.size()) != 1)) {\n                throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n            } \n            return collection.iterator().next();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[362,209,363],"tindex":"b1137ee5-2e8d-11e6-a5bc-d19da1cf929a","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:147","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index > 0) {\n        {\n            return decorated().set(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[364],"tindex":"b1137ee6-2e8d-11e6-a5bc-bb4432135b26","method":{"position":"org.apache.commons.collections4.BagUtils:180","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedSortedBag.synchronizedSortedBag(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[],"tindex":"b113a5f7-2e8d-11e6-a5bc-7d14fa3ead59","method":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.List) == false) {\n                {\n                    if ((obj instanceof java.util.Map) == false) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            if (obj == (org.apache.commons.collections4.functors.ConstantTransformer.this)) {\n                                return true;\n                            } \n                            if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                                return false;\n                            } \n                            final java.lang.Object java.lang.Object = ((org.apache.commons.collections4.functors.ConstantTransformer<?, ?>)(obj)).getConstant();\n                            return (otherConstant == (getConstant())) || ((otherConstant != null) && (otherConstant.equals(getConstant())));\n                        }\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201],"tindex":"b113a5f8-2e8d-11e6-a5bc-0be4dbde808c","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:456","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getNearestEntryForKey(final K key, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    return current;\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false"},"failures":[],"tindex":"b113cd09-2e8d-11e6-a5bc-cbbd8436189d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1574","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            return (node != null) && (node.getKey().equals(value));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[365],"tindex":"b113cd0a-2e8d-11e6-a5bc-9b4549f3b10d","method":{"position":"org.apache.commons.collections4.functors.MapTransformer:49","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            return new org.apache.commons.collections4.functors.MapTransformer<I, O>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[366,367,368],"tindex":"b113cd0b-2e8d-11e6-a5bc-f575bd5ae003","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[369,370],"tindex":"b113f41c-2e8d-11e6-a5bc-2761eff64039","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:429","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.Iterator<? extends java.util.Map.Entry<K, V>> nextIterator(int count) {\n    if (count > 3) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(keyIterator.hasNext())) {\n                return null;\n            } \n            final K K = keyIterator.next();\n            final org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>>() {\n                public java.util.Map.Entry<K, V> transform(final V input) {\n                    return new java.util.Map.Entry<K, V>() {\n                        public K getKey() {\n                            return key;\n                        }\n\n                        public V getValue() {\n                            return input;\n                        }\n\n                        public V setValue(V value) {\n                            throw new java.lang.UnsupportedOperationException();\n                        }\n                    };\n                }\n            };\n            return new org.apache.commons.collections4.iterators.TransformIterator<V, java.util.Map.Entry<K, V>>(new ValuesIterator(key) , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"b1141b2d-2e8d-11e6-a5bc-1d0edbe1f295","method":{"position":"org.apache.commons.collections4.map.Flat3Map:197","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                        return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(key);\n                    } \n                    if (key == null) {\n                        switch (int) {\n                            case 3 :\n                                if ((K) == null) {\n                                    return true;\n                                } \n                            case 2 :\n                                if ((K) == null) {\n                                    return true;\n                                } \n                            case 1 :\n                                if ((K) == null) {\n                                    return true;\n                                } \n                        }\n                    } else {\n                        if ((int) > 0) {\n                            final int int = key.hashCode();\n                            switch (int) {\n                                case 3 :\n                                    if (((int) == hashCode) && (key.equals(K))) {\n                                        return true;\n                                    } \n                                case 2 :\n                                    if (((int) == hashCode) && (key.equals(K))) {\n                                        return true;\n                                    } \n                                case 1 :\n                                    if (((int) == hashCode) && (key.equals(K))) {\n                                        return true;\n                                    } \n                            }\n                        } \n                    }\n                    return false;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440],"tindex":"b1141b2e-2e8d-11e6-a5bc-414f1a620aad","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> collectionSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.CollectionSortedBag<E>(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[441,442,443,444,445,446,447,448],"tindex":"b114423f-2e8d-11e6-a5bc-0d7f24153d69","method":{"position":"org.apache.commons.collections4.list.TreeList:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index > 0) {\n        {\n            (int)++;\n            checkInterval(index, 0, ((size()) - 1));\n            final E E = get(index);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(index);\n            (int)--;\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"b1144240-2e8d-11e6-a5bc-39f53b611984","method":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.List) == false) {\n                {\n                    if ((obj instanceof java.util.Map) == false) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            if (obj == (org.apache.commons.collections4.functors.ConstantTransformer.this)) {\n                                return true;\n                            } \n                            if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                                return false;\n                            } \n                            final java.lang.Object java.lang.Object = ((org.apache.commons.collections4.functors.ConstantTransformer<?, ?>)(obj)).getConstant();\n                            return (otherConstant == (getConstant())) || ((otherConstant != null) && (otherConstant.equals(getConstant())));\n                        }\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[],"tindex":"b1146951-2e8d-11e6-a5bc-69250adef132","method":{"position":"org.apache.commons.collections4.CollectionUtils:107","type":"CtMethodImpl","sourcecode":"public int freqB(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtBinaryOperatorImpl","sourcecode":"(node.getRight(dataElement)) != null"},"failures":[127,131,141,144,145,148,149,150,151,152],"tindex":"b1146952-2e8d-11e6-a5bc-7d77bcb6df87","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1908","type":"CtMethodImpl","sourcecode":"private void swapColors(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getRight(dataElement)) != null) {\n        {\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n            node.boolean[][dataElement.ordinal()] ^= boolean[][dataElement.ordinal()];\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[449],"tindex":"b1146953-2e8d-11e6-a5bc-8796a27cfca7","method":{"position":"org.apache.commons.collections4.functors.OrPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate2 == null)) {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.OrPredicate<T>(predicate1 , predicate2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:55","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[61,62,63,64,69,70,72,73,74,75,76,77,78,79,80,450,82,83,84,22,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586],"tindex":"b1149064-2e8d-11e6-a5bc-019186adfaf8","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:54","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Set<java.util.Map.Entry<K, V>> unmodifiableEntrySet(final java.util.Set<java.util.Map.Entry<K, V>> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                return set;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableEntrySet<K, V>(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[587,588,380,589,590,591],"tindex":"b1149065-2e8d-11e6-a5bc-b77eb9aa6d40","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:97","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (count == 1) {\n        {\n            return decorated().remove(object, count);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b1149066-2e8d-11e6-a5bc-9bb529714d17","method":{"position":"org.apache.commons.collections4.MapUtils:782","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key, final int defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return defaultValue;\n            } \n            return integerObject.intValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[452,460,480,481,592,593,594,272,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,273,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,534,537,541,543,546,547,548,549,550,553,556,16,633,634,28,33,34,566,577,582,635,636,637],"tindex":"b114b777-2e8d-11e6-a5bc-6f74e4074984","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:93","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return decorated().get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"b114b778-2e8d-11e6-a5bc-61b7ff3316ca","method":{"position":"org.apache.commons.collections4.SplitMapUtils:59","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[614],"tindex":"b114b779-2e8d-11e6-a5bc-bf0243000efe","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:542","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V set(final int index, final V value) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.setValue(index, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}