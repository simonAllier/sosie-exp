{"failureDictionary":{"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContainsAll":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":70,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":356,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":560,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":107,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":425,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicateEx":0,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":320,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":537,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":266,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":517,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":518,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":178,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":422,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":398,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSerializeDeserializeThenCompare":207,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":253,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionSize":11,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":176,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":547,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":80,"org.apache.commons.collections4.CollectionUtilsTest.collect":282,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithEmptyCollection":448,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":1,"org.apache.commons.collections4.collection.TransformedCollectionTest.testSerializeDeserializeThenCompare":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":92,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":49,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":350,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":127,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectEqualsSelf":25,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":550,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":76,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":47,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":53,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":171,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":462,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":126,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":213,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":354,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":546,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":121,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking":456,"org.apache.commons.collections4.ListUtilsTest.testLazyList":4,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":143,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIsEmpty":205,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":402,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":370,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":74,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":115,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":300,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":39,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionSize":201,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":113,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":166,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":5,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":318,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSimpleSerialization":327,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":374,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":46,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":486,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":122,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":234,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":106,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":491,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":582,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":41,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":424,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIteratorSet":386,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":482,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":552,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":95,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":96,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnmodifiable":237,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":94,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":492,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":516,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":210,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":88,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":536,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream":589,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":407,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":454,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":440,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":577,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":590,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":81,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking2":182,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":366,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIsEmpty":16,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":131,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":309,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNonEmptyCollection":447,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListCompatibility":457,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":580,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":432,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":342,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":341,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":340,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":539,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":353,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":71,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":163,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":473,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":414,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":173,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":68,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":252,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastValues":277,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":134,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":273,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueCompatibility":238,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":583,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":296,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSimpleSerialization":258,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":66,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToString":484,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":225,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":154,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":558,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":592,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":86,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCanonicalEmptyCollectionExists":257,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":227,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":575,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":250,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":367,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":524,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":160,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSerializeDeserializeThenCompare":251,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":553,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":271,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":272,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":45,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":588,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":162,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testRemove":387,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":554,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsContract":259,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":109,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":32,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":170,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":584,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testCanonicalFullCollectionExists":391,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnmodifiable":198,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":362,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":363,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":361,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":51,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":153,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":346,"org.apache.commons.collections4.collection.TransformedCollectionTest.testEqualsNull":27,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testCanonicalEmptyCollectionExists":393,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":408,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":292,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":513,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":101,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":305,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":93,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionSize":188,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":84,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":507,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToString":202,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":229,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":599,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":597,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":23,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":304,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":89,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":174,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":270,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":222,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":104,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":359,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":358,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":570,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking":467,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":77,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":480,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":360,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemove":21,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":55,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":206,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":578,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":299,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":185,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCanonicalFullCollectionExists":255,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":460,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueSerialization":242,"org.apache.commons.collections4.list.TransformedListTest.testCanonicalFullCollectionExists":497,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":149,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":306,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastEntrySet":275,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":87,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEqualsNull":392,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":321,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":444,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":573,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":231,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":287,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":409,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":416,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":99,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":336,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":97,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":172,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":111,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsSelfHashCode":502,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionClear":17,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":215,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":528,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastEntrySet":267,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRetainAll":19,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEqualsNull":256,"org.apache.commons.collections4.collection.TransformedCollectionTest.testSimpleSerialization":29,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":442,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":478,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":569,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":453,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":190,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":544,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":369,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionSize":245,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":156,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":428,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":523,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":364,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectHashCodeEqualsContract":395,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueElement":239,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":576,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":541,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":334,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":130,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":557,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":54,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":117,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":75,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsContract":501,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":317,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":307,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":313,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":534,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":332,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking2":468,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray2":10,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":316,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":538,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":314,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":487,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":158,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":303,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":67,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":466,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":146,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIteratorRemove":13,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":505,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testSerializeDeserializeThenCompare":397,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":452,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectHashCodeEqualsSelfHashCode":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":144,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":78,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":521,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":591,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":265,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":108,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":437,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":69,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":183,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":56,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":294,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":232,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":423,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":119,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":302,"org.apache.commons.collections4.map.SingletonMapTest.testClone":283,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":471,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":401,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":105,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":42,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":8,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testDecorateFactory":236,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":233,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsSelfHashCode":323,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":64,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":284,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullIterator":389,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":435,"org.apache.commons.collections4.map.SingletonMapTest.testValuesRemoveChangesMap":286,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":564,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":199,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":285,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":455,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCanonicalEmptyCollectionExists":28,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":522,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":220,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":262,"org.apache.commons.collections4.QueueUtilsTest.testEmptyQueue":263,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":371,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":82,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":357,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":289,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":43,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":372,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":165,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":526,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":540,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":230,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":248,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":434,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":421,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":463,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastKeySet":268,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking2":475,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":429,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":368,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":506,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":335,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":587,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":20,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":488,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":559,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":63,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":344,"org.apache.commons.collections4.list.TransformedListTest.testCollectionSize":483,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":169,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":596,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":365,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":420,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray2":244,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":381,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueCompatibility":241,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":136,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":458,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":40,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":406,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":301,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":44,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":567,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":464,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":476,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":155,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":531,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":261,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":549,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":529,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":378,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":3,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":291,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIterator":383,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":379,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking2":180,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":380,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":545,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":60,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":278,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":373,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":110,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":135,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":419,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":459,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":465,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":125,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":157,"org.apache.commons.collections4.list.TransformedListTest.testObjectEqualsSelf":496,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":37,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToString":189,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":293,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":396,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":433,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":527,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":430,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":184,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":427,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":221,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":33,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":159,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":565,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":224,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastKeySet":276,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":112,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":495,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":532,"org.apache.commons.collections4.SetUtilsTest.testHashCode":57,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":24,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":204,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":535,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":415,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":123,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":214,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":226,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":598,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":351,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":555,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":264,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":73,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":308,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":413,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":311,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":315,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCanonicalEmptyCollectionExists":328,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":412,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":405,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":151,"org.apache.commons.collections4.list.TransformedListTest.testCanonicalEmptyCollectionExists":499,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":212,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":568,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":124,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":203,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":116,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":187,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListSerialization":479,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":50,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":411,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithEmptyCollection":451,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":385,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":581,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking":461,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":399,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":100,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":177,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":133,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":489,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":352,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":418,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testSimpleSerialization":394,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":343,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":223,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":594,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":36,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":195,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":445,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":61,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":566,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":322,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":375,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":376,"org.apache.commons.collections4.list.TransformedListTest.testEqualsNull":498,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":288,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":377,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":310,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":331,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":493,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":6,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":148,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":533,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":191,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":593,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":128,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":494,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectHashCodeEqualsContract":30,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":330,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":345,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":145,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":403,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":530,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":138,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":348,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":514,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":280,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":515,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":152,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory":382,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":561,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":35,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":312,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCanonicalFullCollectionExists":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":118,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":297,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToString":12,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":193,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":410,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":290,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":279,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":139,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":426,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":441,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray2":200,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyMapIterator":384,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueRemove":235,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":436,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":337,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":319,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":142,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":141,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":186,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":140,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":147,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":574,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":477,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":90,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":208,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":349,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":62,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":450,"org.apache.commons.collections4.CollectionUtilsTest.find":595,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":194,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":274,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":579,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectEqualsSelf":390,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNonEmptyCollection":449,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":150,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsContract":326,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":520,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":324,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":400,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyIterator":388,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":175,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":217,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking2":474,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":586,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":167,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":196,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":161,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":38,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":548,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIsEmpty":249,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":443,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":91,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToString":246,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":333,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":439,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":355,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":103,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectEqualsSelf":325,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":179,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectEqualsSelf":254,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCanonicalFullCollectionExists":329,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":438,"org.apache.commons.collections4.list.TransformedListTest.testFullListSerialization":469,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":79,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":7,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":556,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":120,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking2":472,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":585,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":114,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":446,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":339,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":485,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":209,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":298,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":542,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsSelfHashCode":260,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":417,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":192,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":481,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":34,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":247,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":431,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":572,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":243,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":509,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":228,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":510,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":504,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory":197,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":503,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":563,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":218,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":132,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":219,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":211,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":519,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":404,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":72,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":295,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":164,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":511,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":59,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":338,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":512,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":543,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":137,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":168,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":129,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":525,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":15,"org.apache.commons.collections4.list.TransformedListTest.testSimpleSerialization":500,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":571,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListSerialization":181,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":347,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":490,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":14,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking":470,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":551,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":508,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueSerialization":240,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":269,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":281,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":562,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":216},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[0],"tindex":"f90769f3-2ec0-11e6-88b2-0f89f9e2a47a","method":{"position":"org.apache.commons.collections4.PredicateUtils:256","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate2 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AndPredicate.<T>andPredicate(predicate1, predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[],"tindex":"f9082d44-2ec0-11e6-88b2-bbbe6649d550","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:589","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(n.getKey());\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"f9087b65-2ec0-11e6-88b2-fd624e70427d","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:235","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Set<java.util.Map.Entry<K, java.lang.Object>> java.util.Set<java.util.Map.Entry<K, java.lang.Object>> = decorated().entrySet();\n            if (pairs != null) {\n                for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : pairs) {\n                    if (((java.util.Collection<V>)(entry.getValue())).contains(value)) {\n                        return true;\n                    } \n                }\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[1],"tindex":"f908a276-2ec0-11e6-88b2-3dcfd6b138d4","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"f908a277-2ec0-11e6-88b2-2deb26e2296f","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1517","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (doRemoveValue(o)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[2,3],"tindex":"f908c988-2ec0-11e6-88b2-71446d323f27","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:357","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:167","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[4],"tindex":"f908c989-2ec0-11e6-88b2-f9b1963b47ab","method":{"position":"org.apache.commons.collections4.list.LazyList:78","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.LazyList<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.LazyList<E>(list , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[5],"tindex":"f908f09a-2ec0-11e6-88b2-dfbff1448dee","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f908f09b-2ec0-11e6-88b2-af9a54154d50","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:104","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map != null) {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[6,7],"tindex":"f90917ac-2ec0-11e6-88b2-43788c3d23fd","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:67","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f9093ebd-2ec0-11e6-88b2-6f55a7a5fba9","method":{"position":"org.apache.commons.collections4.MapUtils:623","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return 0;\n            } \n            return shortObject.shortValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"f9093ebe-2ec0-11e6-88b2-cf99cdb64f85","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:61","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.collection.TransformedCollection<E> transformingCollection(final java.util.Collection<E> coll, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.collection.TransformedCollection<E>(coll , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtBinaryOperatorImpl","sourcecode":"bound < 0"},"failures":[34,35,36,37],"tindex":"f90965cf-2ec0-11e6-88b2-6d1146fd4de8","method":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:112","type":"CtMethodImpl","sourcecode":"protected void checkBound(final int bound, final int len, final java.lang.String type) {\n    if (bound < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bound > len) {\n                throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s beyond the end of the array. \"));\n            } \n            if (bound < 0) {\n                throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s before the start of the array. \"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bound":"bound"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:137","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.map.CompositeMap.this.mutator) == null"},"failures":[],"tindex":"f9098ce0-2ec0-11e6-88b2-7901b469f2a4","method":{"position":"org.apache.commons.collections4.map.CompositeMap:121","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> mutator) {\n    if (mutator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> = mutator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"f9098ce1-2ec0-11e6-88b2-7ddfd47b5b00","method":{"position":"org.apache.commons.collections4.MapUtils:1588","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            if ((map.size()) > 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(map);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"f909b3f2-2ec0-11e6-88b2-2f9cb034b3bb","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:147","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.MultiMap<K, C>.containsKey(org.apache.commons.collections4.Transformer<C, K>.transform(((C)(object))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"tindex":"f909b3f3-2ec0-11e6-88b2-37a97355836f","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:179","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[53,54,55,56],"tindex":"f909db04-2ec0-11e6-88b2-dfa2f7e0d528","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:336","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return false;\n            } \n            return coll.contains(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[],"tindex":"f90a0215-2ec0-11e6-88b2-b15905f107f3","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:140","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 1) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"f90a0216-2ec0-11e6-88b2-93d2c10a6225","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1054","type":"CtMethodImpl","sourcecode":"protected void rangeCheck(final int index, final int beyond) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < 0) || (index >= beyond)) {\n                throw new java.lang.IndexOutOfBoundsException(((((\"Index '\" + index) + \"' out of bounds for size '\") + (int)) + \"'\"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f90a2927-2ec0-11e6-88b2-3bfbacc8d8b4","method":{"position":"org.apache.commons.collections4.MapUtils:722","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key, final boolean defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (booleanObject == null) {\n                return defaultValue;\n            } \n            return booleanObject.booleanValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"f90a2928-2ec0-11e6-88b2-6981b5d83af7","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:331","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Set<E> createSetBasedOnList(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Set<E> java.util.Set<E>;\n            if (set.getClass().equals(java.util.HashSet.java.util.HashSet.java.lang.Class)) {\n                subSet = new java.util.HashSet<E>(list.size());\n            } else {\n                try {\n                    subSet = set.getClass().newInstance();\n                } catch (final java.lang.InstantiationException ie) {\n                    subSet = new java.util.HashSet<E>();\n                } catch (final java.lang.IllegalAccessException iae) {\n                    subSet = new java.util.HashSet<E>();\n                }\n            }\n            subSet.addAll(list);\n            return subSet;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:141","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[57],"tindex":"f90a5039-2ec0-11e6-88b2-9b05203eea27","method":{"position":"org.apache.commons.collections4.SetUtils:140","type":"CtMethodImpl","sourcecode":"public static <T>int hashCodeForSet(final java.util.Collection<T> set) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set == null) {\n                return 0;\n            } \n            int int = 0;\n            for (final T T : set) {\n                if (obj != null) {\n                    hashCode += obj.hashCode();\n                } \n            }\n            return hashCode;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"f90a774a-2ec0-11e6-88b2-536906e32253","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:92","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count > 3) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validate(object);\n            return decorated().add(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getLeft(dataElement)) == node"},"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154],"tindex":"f90a774b-2ec0-11e6-88b2-a7835abc023b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1874","type":"CtMethodImpl","sourcecode":"private void setRight(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"f90a9e5c-2ec0-11e6-88b2-65c183df189c","method":{"position":"org.apache.commons.collections4.MapUtils:1588","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            if ((map.size()) > 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(map);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,14],"tindex":"f90ac56d-2ec0-11e6-88b2-eb830e15500b","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:139","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            return decorated().removeAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209],"tindex":"f90ac56e-2ec0-11e6-88b2-b755e113980c","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:55","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.FixedSizeList<E> fixedSizeList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            return new org.apache.commons.collections4.list.FixedSizeList<E>(list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[210],"tindex":"f90aec7f-2ec0-11e6-88b2-c3c0ec1492e3","method":{"position":"org.apache.commons.collections4.PredicateUtils:352","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> eitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate2 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>onePredicate(predicate1, predicate2);\n            return onePredicate;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:117","type":"CtBinaryOperatorImpl","sourcecode":"set1 == set2"},"failures":[],"tindex":"f90aec80-2ec0-11e6-88b2-af890dfa4d5e","method":{"position":"org.apache.commons.collections4.SetUtils:116","type":"CtMethodImpl","sourcecode":"public static boolean isEqualSet(final java.util.Collection<?> set1, final java.util.Collection<?> set2) {\n    if (set2 == set2) {\n        {\n            if (set1 == set2) {\n                return true;\n            } \n            if (((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))) {\n                return false;\n            } \n            return set1.containsAll(set2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"set2","set1":"set2"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:175","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"f90aec81-2ec0-11e6-88b2-29e88ad8653a","method":{"position":"org.apache.commons.collections4.IteratorUtils:938","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> toListIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[211],"tindex":"f90b1392-2ec0-11e6-88b2-0f5542aa41ae","method":{"position":"org.apache.commons.collections4.ListUtils:546","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b, final org.apache.commons.collections4.Equator<? super E> equator) {\n    if ((b == null) || (a == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n            } \n            final org.apache.commons.collections4.sequence.SequencesComparator<E> org.apache.commons.collections4.sequence.SequencesComparator<E> = new org.apache.commons.collections4.sequence.SequencesComparator<E>(a , b , equator);\n            final org.apache.commons.collections4.sequence.EditScript<E> org.apache.commons.collections4.sequence.EditScript<E> = comparator.getScript();\n            final org.apache.commons.collections4.ListUtils.LcsVisitor<E> org.apache.commons.collections4.ListUtils.LcsVisitor<E> = new org.apache.commons.collections4.ListUtils.LcsVisitor<E>();\n            script.visit(visitor);\n            return visitor.getSubSequence();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[212,213],"tindex":"f90b1393-2ec0-11e6-88b2-89d6f9119aa0","method":{"position":"org.apache.commons.collections4.map.LazyMap:96","type":"CtMethodImpl","sourcecode":"public static <V, K>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if (map == null) {\n        {\n            return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[214,215],"tindex":"f90b3aa4-2ec0-11e6-88b2-29c2d9f69239","method":{"position":"org.apache.commons.collections4.map.Flat3Map:977","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[216],"tindex":"f90b3aa5-2ec0-11e6-88b2-3d0bfc04d402","method":{"position":"org.apache.commons.collections4.IteratorUtils:781","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.NodeList nodeList) {\n    if (nodeList == null) {\n        {\n            if (nodeList == null) {\n                throw new java.lang.NullPointerException(\"NodeList must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(nodeList);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"nodeList"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndTransformers == null"},"failures":[217],"tindex":"f90b3aa6-2ec0-11e6-88b2-6f40911aa728","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (objectsAndTransformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n            final int int = objectsAndTransformers.size();\n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                trs[(i++)] = entry.getValue();\n            }\n            return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154],"tindex":"f90b61b7-2ec0-11e6-88b2-81ad07a80088","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:195","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            return node == null ? null : node.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234],"tindex":"f90b61b8-2ec0-11e6-88b2-d984dbd87536","method":{"position":"org.apache.commons.collections4.set.CompositeSet:265","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            if ((org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeSet without a SetMutator strategy\");\n            } \n            return org.apache.commons.collections4.set.CompositeSet.SetMutator<E>.addAll(org.apache.commons.collections4.set.CompositeSet.this, java.util.List<java.util.Set<E>>, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264],"tindex":"f90b88c9-2ec0-11e6-88b2-37c2194f09ca","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Queue<E> java.util.Queue<E> = ((java.util.Queue<E>)(queue));\n                return tmpQueue;\n            } \n            return new org.apache.commons.collections4.queue.UnmodifiableQueue<E>(queue);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"f90b88ca-2ec0-11e6-88b2-21a56a0069a3","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"f90b88cb-2ec0-11e6-88b2-f1ad442c8dd8","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:76","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281],"tindex":"f90bafdc-2ec0-11e6-88b2-c9719fd8dd95","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:266","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            V V = null;\n            if (decorated().containsKey(key)) {\n                result = decorated().remove(key);\n                java.util.List<K>.remove(key);\n            } \n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1039","type":"CtBinaryOperatorImpl","sourcecode":"inputCollection != null"},"failures":[282],"tindex":"f90bafdd-2ec0-11e6-88b2-e56e41462d19","method":{"position":"org.apache.commons.collections4.CollectionUtils:1037","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.lang.Iterable<? extends I> inputCollection, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if (inputCollection != null) {\n        {\n            if (inputCollection != null) {\n                return org.apache.commons.collections4.CollectionUtils.collect(inputCollection.iterator(), transformer, outputCollection);\n            } \n            return outputCollection;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputCollection":"inputCollection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:207","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"f90bafde-2ec0-11e6-88b2-6560d769e451","method":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PeekingIterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PeekingIterator<E> org.apache.commons.collections4.iterators.PeekingIterator<E> = ((org.apache.commons.collections4.iterators.PeekingIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PeekingIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[283,284,285,286],"tindex":"f90bd6ef-2ec0-11e6-88b2-472de4a2fa66","method":{"position":"org.apache.commons.collections4.map.SingletonMap:231","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return isEqualValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"f90bd6f0-2ec0-11e6-88b2-23430accbbc7","method":{"position":"org.apache.commons.collections4.MapUtils:1570","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.TransformedSortedMap.transformingSortedMap(map, keyTransformer, valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"f90bd6f1-2ec0-11e6-88b2-f1342b7712a9","method":{"position":"org.apache.commons.collections4.list.PredicatedList:98","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330],"tindex":"f90bfe02-2ec0-11e6-88b2-01afd5ff2605","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedBag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.SynchronizedBag<E>(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"f90bfe03-2ec0-11e6-88b2-694c708e3090","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:701","type":"CtMethodImpl","sourcecode":"public void atomic(final java.lang.Runnable r) {\n    if (r == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (r == null) {\n                throw new java.lang.NullPointerException();\n            } \n            atomic(r, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"f90bfe04-2ec0-11e6-88b2-c3c56a2cbf94","method":{"position":"org.apache.commons.collections4.IteratorUtils:544","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E> iterator1, final java.util.Iterator<? extends E> iterator2) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterator1 , iterator2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[331],"tindex":"f90c2515-2ec0-11e6-88b2-a7d9de52a800","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:738","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((multi.size()) >= 2) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[],"tindex":"f90c2516-2ec0-11e6-88b2-87282464e54d","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:713","type":"CtMethodImpl","sourcecode":"protected int entryHashCode(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348],"tindex":"f90c2517-2ec0-11e6-88b2-fbee0b98fd9b","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:488","type":"CtMethodImpl","sourcecode":"private void removeIfExpired(final java.lang.Object key, final long now) {\n    if (key == null) {\n        {\n            final java.lang.Long java.lang.Long = java.util.Map<java.lang.Object, java.lang.Long>.get(key);\n            if (isExpired(now, expirationTimeObject)) {\n                remove(key);\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381],"tindex":"f90c4c28-2ec0-11e6-88b2-436e73d2d623","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:664","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            final java.lang.Object java.lang.Object = entry.getValue();\n            if ((entryKey == null) || (entryValue == null)) {\n                return false;\n            } \n            return (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualKey(entryKey, java.lang.Object)) && (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualValue(entryValue, getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:47","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,6,398],"tindex":"f90c7339-2ec0-11e6-88b2-d9994601af2f","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:45","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<? extends K, ? extends V> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                {\n                    if (iterator == null) {\n                        throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n                    } \n                    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(iterator));\n                        return tmpIterator;\n                    } \n                    return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(iterator);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[399,400],"tindex":"f90c733a-2ec0-11e6-88b2-91bfd7e37582","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:199","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[401,402,403,404,153,405],"tindex":"f90c9a4b-2ec0-11e6-88b2-9dd113841970","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439],"tindex":"f90c9a4c-2ec0-11e6-88b2-addd57fe6649","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:70","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            decorated().add(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[176],"tindex":"f90c9a4d-2ec0-11e6-88b2-1bfa598ed53a","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new FixedSizeListIterator(decorated().listIterator(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[],"tindex":"f90d368e-2ec0-11e6-88b2-9f1dca0600e4","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2014","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            return (node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,76,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,112,114,115,116,117,118,119,120,121,122,123,124,126,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154],"tindex":"f90d5d9f-2ec0-11e6-88b2-b7821b12a9c8","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:813","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getLeftChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            return node == null ? null : node.getLeft(dataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"f90d84b0-2ec0-11e6-88b2-f9a78f556f29","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:536","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.list.AbstractLinkedList.Node<E> getNode(final int index, final boolean endMarkerAllowed) throws java.lang.IndexOutOfBoundsException {\n    if (index < 0) {\n        throw new java.lang.IndexOutOfBoundsException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") less than zero.\"));\n            } \n            if ((!endMarkerAllowed) && (index == (int))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") is the size of the list.\"));\n            } \n            if (index > (int)) {\n                throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn't get the node: \" + \"index (\") + index) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n            } \n            org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            if (index < ((int) / 2)) {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            } else {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            }\n            return node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:47","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"f90d84b1-2ec0-11e6-88b2-f9a266ae7cc6","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:45","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<? extends K, ? extends V> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                {\n                    if (iterator == null) {\n                        throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n                    } \n                    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(iterator));\n                        return tmpIterator;\n                    } \n                    return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(iterator);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"f90dabc2-2ec0-11e6-88b2-dfe0b23072ca","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:112","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"f90dabc3-2ec0-11e6-88b2-a791d6296368","method":{"position":"org.apache.commons.collections4.SplitMapUtils:138","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[440,441,442,443,444,445,446],"tindex":"f90dabc4-2ec0-11e6-88b2-9dcfd2fc6bdb","method":{"position":"org.apache.commons.collections4.ClosureUtils:97","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> asClosure(final org.apache.commons.collections4.Transformer<? super E, ?> transformer) {\n    if (transformer == null) {\n        {\n            return org.apache.commons.collections4.functors.TransformerClosure.transformerClosure(transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[193],"tindex":"f90dd2d5-2ec0-11e6-88b2-65c8b184dc63","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:142","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[447,448,449,450,451],"tindex":"f90dd2d6-2ec0-11e6-88b2-2fffc8a15c99","method":{"position":"org.apache.commons.collections4.CollectionUtils:1414","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (coll == null) || (coll.isEmpty());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,171,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502],"tindex":"f90dd2d7-2ec0-11e6-88b2-91252cb88139","method":{"position":"org.apache.commons.collections4.list.TransformedList:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformingList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list == null) {\n        {\n            return new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"f90df9e8-2ec0-11e6-88b2-dbe9f041ee90","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:255","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if (coll.contains(it.next())) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtBinaryOperatorImpl","sourcecode":"(node.getRight(dataElement)) != null"},"failures":[58,59,60,61,65,66,67,68,69,70,71,63,64,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,75,76,112,113,114,115,116,117,120,121,122,123,124,118,119,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,125,126],"tindex":"f90df9e9-2ec0-11e6-88b2-4717902cfa8d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:791","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getRight(dataElement)) != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? null : node.getParent(dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[503,504,505,506],"tindex":"f90e20fa-2ec0-11e6-88b2-2bb920ea4c8c","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:76","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((preds.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(preds[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(preds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"f90e20fb-2ec0-11e6-88b2-df4038a3144b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2065","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsValue(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:108","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[507,410,508],"tindex":"f90e20fc-2ec0-11e6-88b2-a150bb19e72b","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:71","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.SetUniqueList<E> setUniqueList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (list.isEmpty()) {\n                return new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(list);\n            list.clear();\n            final org.apache.commons.collections4.list.SetUniqueList<E> org.apache.commons.collections4.list.SetUniqueList<E> = new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            sl.addAll(temp);\n            return sl;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[],"tindex":"f90e480d-2ec0-11e6-88b2-4942f2f6541f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1086","type":"CtMethodImpl","sourcecode":"public static <T>boolean addIgnoreNull(final java.util.Collection<T> collection, final T object) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (collection == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            return (object != null) && (collection.add(object));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[509,510,511,512,210,513,514,515,505,516,517,518,519,520,521,522,523,524,525,525,526,527,527,528,529,530,217,531],"tindex":"f90e480e-2ec0-11e6-88b2-eb938e8504e0","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:78","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Predicate<?>... predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n            } \n            for (int int = 0 ; i < (predicates.int) ; i++) {\n                if ((predicates[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"f90e6f1f-2ec0-11e6-88b2-7f4e99f132a7","method":{"position":"org.apache.commons.collections4.map.SingletonMap:287","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[531],"tindex":"f90e6f20-2ec0-11e6-88b2-33b011b5bd78","method":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == (org.apache.commons.collections4.functors.ConstantTransformer.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                return false;\n            } \n            final java.lang.Object java.lang.Object = ((org.apache.commons.collections4.functors.ConstantTransformer<?, ?>)(obj)).getConstant();\n            return (otherConstant == (getConstant())) || ((otherConstant != null) && (otherConstant.equals(getConstant())));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[],"tindex":"f90e6f21-2ec0-11e6-88b2-23972751f475","method":{"position":"org.apache.commons.collections4.CollectionUtils:510","type":"CtMethodImpl","sourcecode":"public static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((a.size()) != (a.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n            if ((helper.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (helper.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n                return false;\n            } \n            for (final java.lang.Object java.lang.Object : helper.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n                if ((helper.freqA(obj)) != (helper.freqB(obj))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[532,533],"tindex":"f90e9632-2ec0-11e6-88b2-6971609ddd61","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:400","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return get(java.util.List<K>.get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[534],"tindex":"f90e9633-2ec0-11e6-88b2-a12450f0930e","method":{"position":"org.apache.commons.collections4.TransformerUtils:192","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[],"tindex":"f90e9634-2ec0-11e6-88b2-ef62d350030d","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"f90ebd45-2ec0-11e6-88b2-d5b0ffd8b1f1","method":{"position":"org.apache.commons.collections4.map.Flat3Map:374","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        {\n            final int int = map.size();\n            if (size == 0) {\n                return ;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n                return ;\n            } \n            if (size < 4) {\n                for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            } else {\n                convertToMap();\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f90ebd46-2ec0-11e6-88b2-433b607e1601","method":{"position":"org.apache.commons.collections4.MapUtils:695","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return 0.0;\n            } \n            return doubleObject.doubleValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,220,232,550,551],"tindex":"f90ebd47-2ec0-11e6-88b2-6f209d2ad97c","method":{"position":"org.apache.commons.collections4.set.CompositeSet:245","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,452,489,18],"tindex":"f90ee458-2ec0-11e6-88b2-adb1d6d6ef27","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:136","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<E> transform(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(coll.size());\n            for (final E E : coll) {\n                list.add(transform(item));\n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[587],"tindex":"f90ee459-2ec0-11e6-88b2-090ad43786c8","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(decorated().listIterator(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[588,589,590,591],"tindex":"f90ee45a-2ec0-11e6-88b2-9b6ba142f1b4","method":{"position":"org.apache.commons.collections4.MapUtils:915","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void verbosePrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (label != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"label"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[89],"tindex":"f90f0b6b-2ec0-11e6-88b2-5395a6cce923","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:238","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(e.getKey(), e.getValue());\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[592],"tindex":"f90f0b6c-2ec0-11e6-88b2-533f249c5ce6","method":{"position":"org.apache.commons.collections4.TransformerUtils:379","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.MapTransformer.mapTransformer(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[],"tindex":"f90f0b6d-2ec0-11e6-88b2-71a7a26f9829","method":{"position":"org.apache.commons.collections4.CollectionUtils:1307","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map.Entry<K, V> get(final java.util.Map<K, V> map, final int index) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            return org.apache.commons.collections4.CollectionUtils.get(map.entrySet(), index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[],"tindex":"f90f0b6e-2ec0-11e6-88b2-1b4fb0b92579","method":{"position":"org.apache.commons.collections4.map.LinkedMap:238","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"f90f327f-2ec0-11e6-88b2-4beec6435398","method":{"position":"org.apache.commons.collections4.iterators.TransformIterator:109","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends I> iterator) {\n    if (iterator == null) {\n        {\n            org.apache.commons.collections4.iterators.TransformIterator.this.java.util.Iterator<? extends I> = iterator;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[593,594],"tindex":"f90f3280-2ec0-11e6-88b2-59ea4941a183","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:851","type":"CtMethodImpl","sourcecode":"private java.util.SortedMap<K, V> getPrefixMapByBits(final K key, final int offsetInBits, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        {\n            final int int = offsetInBits + lengthInBits;\n            if (offsetLength > (lengthInBits(key))) {\n                throw new java.lang.IllegalArgumentException(((((offsetInBits + \" + \") + lengthInBits) + \" > \") + (lengthInBits(key))));\n            } \n            if (offsetLength == 0) {\n                return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this;\n            } \n            return new PrefixRangeMap(key , offsetInBits , lengthInBits);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"f90f3281-2ec0-11e6-88b2-c5294d54cea7","method":{"position":"org.apache.commons.collections4.IteratorUtils:1052","type":"CtMethodImpl","sourcecode":"public static java.util.Iterator<?> getIterator(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == null) {\n                return org.apache.commons.collections4.IteratorUtils.emptyIterator();\n            } \n            if (obj instanceof java.util.Iterator) {\n                return ((java.util.Iterator<?>)(obj));\n            } \n            if (obj instanceof java.util.Collection) {\n                return ((java.util.Collection<?>)(obj)).iterator();\n            } \n            if (obj instanceof java.lang.Object[]) {\n                return new org.apache.commons.collections4.iterators.ObjectArrayIterator<java.lang.Object>(((java.lang.Object[])(obj)));\n            } \n            if (obj instanceof java.util.Enumeration) {\n                return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Enumeration<?>)(obj)));\n            } \n            if (obj instanceof java.util.Map) {\n                return ((java.util.Map<?, ?>)(obj)).values().iterator();\n            } \n            if (obj instanceof org.w3c.dom.NodeList) {\n                return new org.apache.commons.collections4.iterators.NodeListIterator(((org.w3c.dom.NodeList)(obj)));\n            } \n            if (obj instanceof org.w3c.dom.Node) {\n                return new org.apache.commons.collections4.iterators.NodeListIterator(((org.w3c.dom.Node)(obj)));\n            } \n            if (obj instanceof java.util.Dictionary) {\n                return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Dictionary<?, ?>)(obj)).elements());\n            } else if (obj.getClass().isArray()) {\n                return new org.apache.commons.collections4.iterators.ArrayIterator<java.lang.Object>(obj);\n            } \n            try {\n                final java.lang.reflect.Method java.lang.reflect.Method = obj.getClass().getMethod(\"iterator\", ((java.lang.Class[])(null)));\n                if (java.util.Iterator.java.util.Iterator.java.lang.Class.isAssignableFrom(method.getReturnType())) {\n                    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(method.invoke(obj, ((java.lang.Object[])(null)))));\n                    if (it != null) {\n                        return it;\n                    } \n                } \n            } catch (final java.lang.RuntimeException e) {\n            } catch (final java.lang.NoSuchMethodException e) {\n            } catch (final java.lang.IllegalAccessException e) {\n            } catch (final java.lang.reflect.InvocationTargetException e) {\n            }\n            return org.apache.commons.collections4.IteratorUtils.singletonIterator(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"f90f5992-2ec0-11e6-88b2-9743a7dc1f78","method":{"position":"org.apache.commons.collections4.MapUtils:1542","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.PredicatedSortedMap.predicatedSortedMap(map, keyPred, valuePred);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[595],"tindex":"f90f5993-2ec0-11e6-88b2-cf1b07f660e6","method":{"position":"org.apache.commons.collections4.CollectionUtils:641","type":"CtMethodImpl","sourcecode":"public static <T>T find(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if ((collection != null) && (predicate != null)) {\n                for (final T T : collection) {\n                    if (predicate.evaluate(item)) {\n                        return item;\n                    } \n                }\n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[289,293,296,596],"tindex":"f90f5994-2ec0-11e6-88b2-f34ebe4929df","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:168","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().remove(object);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[597,598],"tindex":"f90f80a5-2ec0-11e6-88b2-f3a035d15c78","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:285","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return java.util.List<E>.indexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[599],"tindex":"f90f80a6-2ec0-11e6-88b2-1f783c3fa183","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:183","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends J, ? extends U> map) {\n    if (map.isEmpty()) {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}