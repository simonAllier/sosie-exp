{"failureDictionary":{"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":433,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":814,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":434,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":1082,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":19,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":147,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":93,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":985,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":1036,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":272,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":923,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicateEx":55,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":401,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":515,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":586,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":754,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":511,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":749,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":276,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":823,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":504,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":629,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":535,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testSerializeDeserializeThenCompare":871,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":932,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":758,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":134,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":174,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":123,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":330,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":792,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":435,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicate":239,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":989,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":480,"org.apache.commons.collections4.map.Flat3MapTest.testObjectEqualsSelf":854,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":795,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":1067,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":364,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":567,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionClear":650,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":915,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":625,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":1083,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":787,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":217,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":406,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":637,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":182,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":820,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":731,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":1046,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":783,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":537,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":608,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":26,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSimpleSerialization":684,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":157,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":303,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":840,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":165,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":483,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":639,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":1007,"org.apache.commons.collections4.ListUtilsTest.testEquals":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":42,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":201,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":284,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":843,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":121,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":175,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":757,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":376,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":581,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":598,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":76,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":124,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":349,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":325,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":199,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":827,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":498,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":226,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":1070,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testObjectHashCodeEqualsContract":595,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":104,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":105,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":117,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":724,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":995,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":396,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":713,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":64,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":300,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":984,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":761,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":277,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":320,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":815,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":748,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":690,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":246,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":351,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":716,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":624,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":609,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":845,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":557,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":66,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":862,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":573,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":88,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":651,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":244,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":240,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":293,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":286,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":421,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":1060,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":1061,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":1062,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":696,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":183,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":472,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":40,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":380,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":617,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":338,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":181,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":180,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":158,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":177,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":941,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":1050,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":15,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":719,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":141,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":363,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":837,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":16,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":275,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":220,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":885,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":1027,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":669,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":1017,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":385,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":743,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":735,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":387,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":548,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":211,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":1047,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":1071,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":524,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":668,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":522,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToString":773,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":1088,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":92,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":11,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":1000,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":282,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":393,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":496,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":615,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":313,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEmptyMapCompatibility":870,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":193,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":1037,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":805,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":958,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":826,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":1084,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":607,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":760,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":1085,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":677,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":1086,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":79,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":229,"org.apache.commons.collections4.functors.AllPredicateTest.emptyCollectionToGetInstance":861,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":532,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":528,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":97,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":902,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":1028,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":502,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":630,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":852,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":894,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":249,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":999,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":227,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":209,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":584,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":384,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":478,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":707,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":934,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":935,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":342,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":767,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":936,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":186,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":971,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":640,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":1073,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":736,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":769,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":386,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":501,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":793,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiClear":13,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":1005,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":732,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":400,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":109,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":672,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":18,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":148,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":139,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":704,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":646,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":674,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":644,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":126,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":937,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":812,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":909,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":292,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":802,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":882,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":880,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":921,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":800,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":722,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":1032,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetIteratorRemoveChangesMap":898,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testObjectEqualsSelf":593,"org.apache.commons.collections4.functors.AllPredicateTest.singletonCollectionToGetInstance":863,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":813,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":9,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":132,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":60,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":1016,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":138,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":137,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":184,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":530,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":660,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":564,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEmptyMapCompatibility":867,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":756,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":390,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":202,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":294,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":507,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":614,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":574,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":1030,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":631,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":362,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":260,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":1090,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":818,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":1020,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":163,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":910,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":178,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":1092,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":122,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastEntrySet":253,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":859,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":59,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":197,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":173,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":179,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":85,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":140,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":1069,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":552,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":688,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":509,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":776,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":34,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":365,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove3":893,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove2":892,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":643,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove1":891,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":963,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":853,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":413,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":523,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":372,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":415,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":414,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":470,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":972,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":39,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":466,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":125,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":360,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":899,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":77,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":563,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":955,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":14,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":500,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":388,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":1054,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":7,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":988,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":369,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":901,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":335,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":701,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":632,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":983,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":119,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":956,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":658,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":222,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":120,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":519,"org.apache.commons.collections4.map.HashedMapTest.testClone":980,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":279,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":570,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":720,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":336,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":285,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":694,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":1081,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":717,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":538,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":375,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":949,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":715,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":1049,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":775,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":172,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":3,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":238,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":730,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":847,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":402,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":491,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":591,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":130,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":950,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":561,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":288,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":420,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":485,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":634,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":525,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":917,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":851,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":409,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":348,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":471,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":1041,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":1040,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":547,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":1042,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":819,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":162,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":110,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":210,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":395,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":397,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":46,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":221,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":258,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":933,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":287,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":789,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":232,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":431,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":432,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":307,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":430,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":171,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":860,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":69,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":928,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":1026,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":160,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":444,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":477,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":794,"org.apache.commons.collections4.map.LinkedMapTest.testClone":1025,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":482,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":442,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":443,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testSimpleSerialization":876,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":495,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":204,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":113,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":1080,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":230,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":734,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":1089,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":1058,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":671,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":207,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":206,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":135,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":205,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":203,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":236,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":804,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":746,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":484,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":997,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":56,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":218,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":21,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":990,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testDecorateFactory":627,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":269,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":565,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":718,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":398,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":465,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":1074,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":657,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":153,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":582,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":799,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":645,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":176,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":613,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":405,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":404,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":5,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":403,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":80,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":241,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToString":635,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":154,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":513,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":602,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":339,"org.apache.commons.collections4.CollectionUtilsTest.find":628,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":568,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":806,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":281,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":559,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":680,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":256,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":542,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":962,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":357,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":306,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":2,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":580,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":488,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":579,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":578,"org.apache.commons.collections4.MapUtilsTest.testPopulateMap":588,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastEntrySet":248,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":539,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testCollections364":866,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":24,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":228,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastEntrySet":265,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains1":450,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEmptyMapCompatibility":877,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains3":452,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains2":451,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":255,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":334,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":67,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":874,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":108,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":706,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":951,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCanonicalFullCollectionExists":686,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":164,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":779,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":846,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":914,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":759,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":916,"org.apache.commons.collections4.map.LRUMapTest.testLRU":626,"org.apache.commons.collections4.map.ListOrderedMapTest.testPreviousKey":739,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":61,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":270,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":231,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":514,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":663,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":58,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":918,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":991,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":188,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":426,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":225,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":427,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":692,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":428,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":621,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":652,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":328,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":381,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":394,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":771,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":973,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":74,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":73,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":259,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":63,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":605,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":43,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":322,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":904,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":821,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":733,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":131,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":938,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":297,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":797,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":712,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":492,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":520,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":136,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":17,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":192,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":373,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":219,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":619,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":967,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":33,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":168,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testSerializeDeserializeThenCompare":878,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":233,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":824,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastEntrySet":261,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":1006,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":196,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":908,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":107,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":316,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":911,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":106,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":944,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":606,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":301,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":366,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":237,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":829,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":540,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":214,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":356,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":72,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":252,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":728,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":825,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":1034,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":841,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":1035,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":48,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":842,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":975,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":890,"org.apache.commons.collections4.CollectionUtilsTest.addAllForElements":534,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":664,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":529,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":957,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":283,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":6,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":1075,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":675,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":245,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":499,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":118,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":319,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":947,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":1065,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":481,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":742,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":392,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":329,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":703,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains3":412,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains2":411,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":788,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains1":410,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":257,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":298,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":83,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToString":647,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":101,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":408,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":505,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":49,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":198,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":832,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":833,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":280,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":831,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":516,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":693,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":987,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":965,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":142,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":271,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":62,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":234,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":318,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":1093,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":774,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSimpleSerialization":869,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":1033,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":590,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":881,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":449,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":341,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":250,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":510,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":721,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":556,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":379,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":464,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySet":536,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":981,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":87,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":324,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":811,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":583,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":194,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":808,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":708,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":939,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":189,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":382,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":247,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":856,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":1063,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":195,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":494,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":979,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":964,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":740,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":887,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testSerializeDeserializeThenCompare":592,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":1076,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":112,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":968,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":1001,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":930,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":810,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":95,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":905,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":906,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":907,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":296,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":572,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":689,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":850,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":948,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":1078,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveChangesMap":896,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":747,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":47,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":8,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":429,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":1066,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":355,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":659,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":4,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":493,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":37,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":161,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":830,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":864,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":1068,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":323,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":337,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":159,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":266,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":310,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":727,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains1":436,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains2":437,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":729,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains3":438,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":611,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":705,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":327,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":691,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":822,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":263,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":57,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":78,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":383,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testEqualsNull":594,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":566,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":1087,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":213,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":654,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":1038,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":212,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":633,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":468,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":312,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":741,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":103,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":1059,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":596,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":670,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":750,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":190,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":655,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":235,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains1":423,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":809,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":836,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains3":425,"org.apache.commons.collections4.map.ListOrderedMap2Test.testPreviousKey":737,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":835,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains2":424,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":834,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":490,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":527,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":554,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":144,"org.apache.commons.collections4.map.LRUMapTest.testClone":996,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":169,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":702,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeThenCompare":868,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":150,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":913,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":448,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":446,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":133,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":447,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":216,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":321,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":340,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":616,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":170,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":291,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":641,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":960,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":332,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":417,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":726,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":418,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":419,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":679,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":897,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":191,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":354,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":65,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":350,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":391,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":399,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":454,"org.apache.commons.collections4.map.Flat3MapTest.testObjectHashCodeEqualsContract":855,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":81,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":455,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":667,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":416,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":453,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":367,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testSimpleSerialization":872,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":35,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":28,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":479,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":0,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":311,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":700,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":143,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":1077,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":903,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":922,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":94,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains2":458,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains3":459,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains1":457,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":50,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":666,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":791,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":585,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":781,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":476,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":839,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":518,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":545,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":544,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":886,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":475,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsSelfHashCode":683,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":777,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":912,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":289,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":441,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":440,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":439,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":146,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":302,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":1004,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":345,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":725,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":986,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":268,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":765,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":953,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":243,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":1056,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":974,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":753,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove1":924,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove2":925,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":114,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove3":926,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":347,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":469,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":768,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":970,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":344,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":10,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":377,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":497,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":945,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":817,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":517,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":1043,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":167,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":622,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":954,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":166,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":215,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":587,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":1039,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":223,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":601,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":116,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":796,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":156,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":699,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":12,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":940,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":966,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":75,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":358,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":665,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":111,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":278,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":1003,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":946,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":151,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":152,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":546,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":1024,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":553,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":53,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":200,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeCheckComparator":865,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":1053,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":32,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":969,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":603,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":96,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":604,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEmptyMapCompatibility":873,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":187,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":597,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":86,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":1010,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":145,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":772,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":68,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":888,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":1055,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":766,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":503,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionClear":638,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":208,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":368,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":461,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":267,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":463,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":462,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":653,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":407,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":919,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":1029,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":326,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":84,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":784,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":848,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":361,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":343,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":512,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":555,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":262,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":422,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":710,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":41,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":38,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":697,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":533,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":27,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":129,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":374,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":489,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":673,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCanonicalEmptyCollectionExists":685,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":978,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":883,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":807,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":370,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":889,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":976,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":1079,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":709,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":762,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":952,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":927,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":612,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":849,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":389,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":1044,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":541,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":98,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":54,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":543,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":571,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":942,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":620,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":378,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":1012,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":333,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":560,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":90,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testSimpleSerialization":879,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":317,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":755,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":22,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":352,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":487,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":982,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":678,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":656,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":274,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":931,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":920,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":486,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":763,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":99,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":711,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":687,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":1057,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":801,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":858,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":569,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":798,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx5":857,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":1,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":636,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":71,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":185,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":662,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":790,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":31,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":549,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":744,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":308,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":551,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":359,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":550,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":764,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":1002,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":456,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":305,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":506,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":1018,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":155,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":251,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":778,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":445,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":531,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":618,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":676,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":610,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":295,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":803,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":900,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":314,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":838,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":89,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":25,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveChangesMap":929,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":816,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":115,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":752,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":943,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":290,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsContract":682,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":1011,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":1091,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":473,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":273,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":562,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":1022,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":1023,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":224,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":309,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":1021,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":599,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":1045,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":575,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":526,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":576,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":770,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":577,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":828,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":780,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":1019,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":474,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":1051,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":44,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":782,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":91,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectEqualsSelf":681,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":992,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":649,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":993,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":723,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":1064,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":299,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":371,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":1009,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":895,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":786,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":600,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiClear":695,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":785,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":1052,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":70,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":751,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":844,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":648,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testSerializeDeserializeThenCompare":875,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":460,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":738,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":149,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":959,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":51,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":623,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":714,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":1015,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":467,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":82,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":661,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":254,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":698,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":1048,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":242,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":884,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":36,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":1013,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":1014,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":331,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":558,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":994,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":315,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":1031,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":589,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":1072,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":508,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":52,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":346,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":521,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":961,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":304,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":998,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":264,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":745,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":128,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":353,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":977,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":642,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":1008},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtBinaryOperatorImpl","sourcecode":"(inverseBidiMap) == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"fce6ff80-3e58-11e6-92c2-5d29d4fb86de","method":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:86","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (normalMap == null) {\n        {\n            return new org.apache.commons.collections4.bidimap.DualHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inverseBidiMap":"normalMap"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl","sourcecode":"list1 == list2"},"failures":[29],"tindex":"fce74da1-3e58-11e6-92c2-a768711644c6","method":{"position":"org.apache.commons.collections4.ListUtils:244","type":"CtMethodImpl","sourcecode":"public static boolean isEqualList(final java.util.Collection<?> list1, final java.util.Collection<?> list2) {\n    if (list2 == list1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list1 == list2) {\n                return true;\n            } \n            if (((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))) {\n                return false;\n            } \n            final java.util.Iterator<?> java.util.Iterator<?> = list1.iterator();\n            final java.util.Iterator<?> java.util.Iterator<?> = list2.iterator();\n            java.lang.Object java.lang.Object = null;\n            java.lang.Object java.lang.Object = null;\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                obj1 = it1.next();\n                obj2 = it2.next();\n                if (!(obj1 == null ? obj2 == null : obj1.equals(obj2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[30],"tindex":"fce74da2-3e58-11e6-92c2-152f1d00fc6a","method":{"position":"org.apache.commons.collections4.set.CompositeSet:425","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Set) {\n                final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(obj));\n                return ((set.size()) == (org.apache.commons.collections4.set.CompositeSet.this.size())) && (set.containsAll(org.apache.commons.collections4.set.CompositeSet.this));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[31],"tindex":"fce74da3-3e58-11e6-92c2-d59b830db106","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:142","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"fce774b4-3e58-11e6-92c2-43eac3cd48ae","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:128","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[32,33,34,35,36],"tindex":"fce774b5-3e58-11e6-92c2-912f69e13dd3","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:223","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[32,33,34,35],"tindex":"fce774b6-3e58-11e6-92c2-d3d01568f5a6","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:501","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key3 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key3"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[37,38],"tindex":"fce79bc7-3e58-11e6-92c2-d99c247e5298","method":{"position":"org.apache.commons.collections4.list.PredicatedList:117","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        {\n            for (final E E : coll) {\n                validate(aColl);\n            }\n            return decorated().addAll(index, coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"fce79bc8-3e58-11e6-92c2-e7a1a1191c2a","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:708","type":"CtMethodImpl","sourcecode":"private void atomic(final java.lang.Runnable r, final int bucket) {\n    if (r == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bucket >= (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int)) {\n                r.run();\n                return ;\n            } \n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][bucket]) {\n                atomic(r, (bucket + 1));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52],"tindex":"fce79bc9-3e58-11e6-92c2-13608616dd74","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:154","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (indexOf(value)) != (-1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[53],"tindex":"fce7c2da-3e58-11e6-92c2-953633a02f73","method":{"position":"org.apache.commons.collections4.TransformerUtils:250","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers) {\n    if (transformers == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[54],"tindex":"fce7c2db-3e58-11e6-92c2-ff9526bdf0f6","method":{"position":"org.apache.commons.collections4.TransformerUtils:149","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> asTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"fce7c2dc-3e58-11e6-92c2-cf6231173c38","method":{"position":"org.apache.commons.collections4.SetUtils:288","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> unmodifiableSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.UnmodifiableSortedSet.unmodifiableSortedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[],"tindex":"fce7c2dd-3e58-11e6-92c2-1d5c3af15c9d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map<?, ?>) == false) {\n                {\n                    if ((obj instanceof java.util.Map.Entry) == false) {\n                        return false;\n                    } \n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n                    final java.lang.Object java.lang.Object = entry.getValue();\n                    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n                    if ((node != null) && (node.getKey().equals(value))) {\n                        doRedBlackDelete(node);\n                        return true;\n                    } \n                    return false;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[55],"tindex":"fce7e9ee-3e58-11e6-92c2-7183eb609b7d","method":{"position":"org.apache.commons.collections4.PredicateUtils:256","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate2 == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AndPredicate.<T>andPredicate(predicate1, predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87],"tindex":"fce7e9ef-3e58-11e6-92c2-fdaceddb623b","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:298","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            (int)++;\n            java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n            int -= mut.int;\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtInvocationImpl","sourcecode":"c.isEmpty()"},"failures":[],"tindex":"fce7e9f0-3e58-11e6-92c2-2feb24be32fc","method":{"position":"org.apache.commons.collections4.list.TreeList:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> c) {\n    if (c.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (c.isEmpty()) {\n                return false;\n            } \n            int += c.size();\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(c);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = (org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null ? cTree : org.apache.commons.collections4.list.TreeList.AVLNode<E>.addAll(cTree, int);\n            int += c.size();\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"fce81101-3e58-11e6-92c2-4df09cfb2efe","method":{"position":"org.apache.commons.collections4.ListUtils:386","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> synchronizedList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            return java.util.Collections.synchronizedList(list);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"fce81102-3e58-11e6-92c2-5558d2997c01","method":{"position":"org.apache.commons.collections4.MapUtils:426","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key, final java.lang.Number defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtBinaryOperatorImpl","sourcecode":"to != null"},"failures":[],"tindex":"fce81103-3e58-11e6-92c2-59bb34f9499d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:716","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> from, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> to, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (to != null) {\n        {\n            if (to != null) {\n                if (from == null) {\n                    to.setBlack(dataElement);\n                } else {\n                    to.copyColor(from, dataElement);\n                }\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"to":"to"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtBinaryOperatorImpl","sourcecode":"(node.getRight(dataElement)) != null"},"failures":[88,89,90,91,92,93,94,95,96,97],"tindex":"fce81104-3e58-11e6-92c2-d9e47f9dd51a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1908","type":"CtMethodImpl","sourcecode":"private void swapColors(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getRight(dataElement)) != null) {\n        {\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n            node.boolean[][dataElement.ordinal()] ^= boolean[][dataElement.ordinal()];\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"fce83815-3e58-11e6-92c2-f734d4a3b6ff","method":{"position":"org.apache.commons.collections4.list.TreeList:173","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (indexOf(object)) >= 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[],"tindex":"fce83816-3e58-11e6-92c2-49acd9cfe5ec","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:589","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(n.getKey());\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[98],"tindex":"fce85f27-3e58-11e6-92c2-75dca2588bbc","method":{"position":"org.apache.commons.collections4.BagUtils:214","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.bag.PredicatedSortedBag.predicatedSortedBag(bag, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[99],"tindex":"fce85f28-3e58-11e6-92c2-55b733431e5c","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1720","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                {\n                    if (!(inRange(castKey(key)))) {\n                        return null;\n                    } \n                    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(key);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,35,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221],"tindex":"fce85f29-3e58-11e6-92c2-c53ba09ca9c8","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:598","type":"CtMethodImpl","sourcecode":"protected void destroyEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            entry.java.lang.Object = null;\n            entry.java.lang.Object = null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[222,223,224,225],"tindex":"fce85f2a-3e58-11e6-92c2-c5459d3dea60","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            if (object == (org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.this)) {\n                return true;\n            } \n            return java.util.Map.Entry<K, V>.equals(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"fce8d45b-3e58-11e6-92c2-d7ebef7b42c6","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:169","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[226,227,228,229,230,231],"tindex":"fce8d45c-3e58-11e6-92c2-d3b0baeec0a7","method":{"position":"org.apache.commons.collections4.ClosureUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[232],"tindex":"fce8d45d-3e58-11e6-92c2-9d67172ada12","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[233,234,235],"tindex":"fce8fb6e-3e58-11e6-92c2-17270b4b20b7","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:231","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"fce8fb6f-3e58-11e6-92c2-abc2981519ee","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:73","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().removeValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[236,237],"tindex":"fce8fb70-3e58-11e6-92c2-6de9c2fa9b0c","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1515","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<V> java.util.Iterator<V> = iterator() ; it.hasNext() ; ) {\n                final V V = it.next();\n                if (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(value, o)) {\n                    it.remove();\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[238],"tindex":"fce8fb71-3e58-11e6-92c2-abc700d303e2","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Set<E>.containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[239,240,241],"tindex":"fce8fb72-3e58-11e6-92c2-13532662bafc","method":{"position":"org.apache.commons.collections4.functors.NotPredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NotPredicate<T>(predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[31],"tindex":"fce92283-3e58-11e6-92c2-ad659cb4689e","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"fce92284-3e58-11e6-92c2-b73a1dcf1e4d","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:76","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,14,263,264,265,28],"tindex":"fce92285-3e58-11e6-92c2-5d3e262ca327","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:186","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            V V = null;\n            if (java.util.Map<K, V>.containsKey(key)) {\n                value = java.util.Map<K, V>.remove(key);\n                java.util.Map<V, K>.remove(value);\n            } \n            return value;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,69,70,364,365,366,367,368,369,370,371,372,373,74,75,374,375,376,377,378,379,380,381,382,383,384,81,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,37,465,38,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533],"tindex":"fce92286-3e58-11e6-92c2-c148d171b332","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            return decorated().contains(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[534],"tindex":"fce92287-3e58-11e6-92c2-b539dbd86847","method":{"position":"org.apache.commons.collections4.CollectionUtils:1154","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final C[] elements) {\n    if (collection instanceof java.util.List<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final C C : elements) {\n                changed |= collection.add(element);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"fce94998-3e58-11e6-92c2-d9aa3c9d021c","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1043","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this, index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[535],"tindex":"fce94999-3e58-11e6-92c2-3ffcb3ba74a2","method":{"position":"org.apache.commons.collections4.CollectionUtils:409","type":"CtMethodImpl","sourcecode":"public static boolean containsAny(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if (coll1.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll1.size()) < (coll2.size())) {\n                for (final java.lang.Object java.lang.Object : coll1) {\n                    if (coll2.contains(aColl1)) {\n                        return true;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (coll1.contains(aColl2)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[536],"tindex":"fce9499a-3e58-11e6-92c2-a1a51f9e6f30","method":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:66","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedSortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[537,538,539,540,541,542,543],"tindex":"fce9499b-3e58-11e6-92c2-837be9d7c666","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:147","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            return org.apache.commons.collections4.MultiMap<K, C>.containsKey(org.apache.commons.collections4.Transformer<C, K>.transform(((C)(object))));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[544,545,546,547,548,549,550,551,552,553,554,555,556,557,558],"tindex":"fce970ac-3e58-11e6-92c2-e52e88771098","method":{"position":"org.apache.commons.collections4.map.CompositeMap:198","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[559,560],"tindex":"fce970ad-3e58-11e6-92c2-ebefa1254096","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:199","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[],"tindex":"fce970ae-3e58-11e6-92c2-11844b7bfaf2","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:767","type":"CtMethodImpl","sourcecode":"private static void makeBlack(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            if (node != null) {\n                node.setBlack(dataElement);\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[],"tindex":"fce970af-3e58-11e6-92c2-4b4ee84cd09c","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:110","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,236,581,582,583,584,585,586,587],"tindex":"fce970b0-3e58-11e6-92c2-654f412ff6b7","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:610","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, null);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:109","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"fce997c1-3e58-11e6-92c2-b3d53cb0564b","method":{"position":"org.apache.commons.collections4.MapUtils:108","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<? super K, V> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                return map.get(key);\n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"fce997c2-3e58-11e6-92c2-a9968da06344","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1720","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                {\n                    if (!(inRange(castKey(key)))) {\n                        return null;\n                    } \n                    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(key);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[588],"tindex":"fce997c3-3e58-11e6-92c2-1d995b8966d8","method":{"position":"org.apache.commons.collections4.MapUtils:1680","type":"CtMethodImpl","sourcecode":"public static <K, V>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends V> elements, final org.apache.commons.collections4.Transformer<V, K> keyTransformer) {\n    if ((map.size()) > 0) {\n        {\n            org.apache.commons.collections4.MapUtils.populateMap(map, elements, keyTransformer, org.apache.commons.collections4.TransformerUtils.<V>nopTransformer());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[589,590,108,141,155,170,198],"tindex":"fce997c4-3e58-11e6-92c2-6b38ee0582e9","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:951","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.remove(key);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"fce9bed5-3e58-11e6-92c2-535f30b99723","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[591,592,593,594,595],"tindex":"fce9bed6-3e58-11e6-92c2-f3543a8c1f9e","method":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:109","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            if ((org.apache.commons.collections4.comparators.ReverseComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.ReverseComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.ReverseComparator<?> org.apache.commons.collections4.comparators.ReverseComparator<?> = ((org.apache.commons.collections4.comparators.ReverseComparator<?>)(object));\n                return java.util.Comparator<E>.equals(thatrc.java.util.Comparator<?>);\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[596,597,598,599,600,601,602,233,603,604,605,606,607,608,609,610,235,611,612,613,614,615,616,617],"tindex":"fce9bed7-3e58-11e6-92c2-f3945278e505","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:568","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.KeySetView.this.org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object>.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"fce9bed8-3e58-11e6-92c2-173f266a9325","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[618],"tindex":"fce9bed9-3e58-11e6-92c2-a5606d523f33","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.SetUniqueList.SetListListIterator<E>(super.listIterator(index) , java.util.Set<E>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[619,620,590,621,622,623,624,625,129,130,131,132,626,134,135,133,136,137,138,139,140,141,142,143,144,145,146,161,163,164,162,165,166,167,168,169,170,171,172,173,174,175,36],"tindex":"fce9e5ea-3e58-11e6-92c2-ab998d45acaa","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:298","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if ((previous.getValue()) == null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null;\n            super.removeEntry(entry, hashIndex, previous);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"previous"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[627],"tindex":"fcea0cfb-3e58-11e6-92c2-a906e5d08674","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> unmodifiableSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                return set;\n            } \n            return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[],"tindex":"fcea0cfc-3e58-11e6-92c2-2b0dedaef48a","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:110","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"fcea0cfd-3e58-11e6-92c2-47930e1a7d4a","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.set.TransformedSortedSet<E> org.apache.commons.collections4.set.TransformedSortedSet<E> = new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[628],"tindex":"fcea0cfe-3e58-11e6-92c2-315d4d008117","method":{"position":"org.apache.commons.collections4.CollectionUtils:641","type":"CtMethodImpl","sourcecode":"public static <T>T find(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if ((collection != null) && (predicate != null)) {\n                for (final T T : collection) {\n                    if (predicate.evaluate(item)) {\n                        return item;\n                    } \n                }\n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[629],"tindex":"fcea0cff-3e58-11e6-92c2-bd82be9313ad","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:62","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[630,631,632,633,634,635,636,289,290,637,638,291,639,640,641,293,294,642,643,644,645,646,647,648,312,313,649,650,314,651,652,653,316,317],"tindex":"fcea0d00-3e58-11e6-92c2-9f2764fe5bf0","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:202","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            if (coll == null) {\n                {\n                    boolean boolean = false;\n                    for (final E E : coll) {\n                        result |= add(e);\n                    }\n                    return result;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[],"tindex":"fcea3411-3e58-11e6-92c2-a5ecdaac0a6a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map<?, ?>) == false) {\n                {\n                    if ((obj instanceof java.util.Map.Entry) == false) {\n                        return false;\n                    } \n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n                    final java.lang.Object java.lang.Object = entry.getValue();\n                    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n                    if ((node != null) && (node.getKey().equals(value))) {\n                        doRedBlackDelete(node);\n                        return true;\n                    } \n                    return false;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[654,655,656,85,657,658,659,86,660,661,87,662,663,664,665,666,667,668,669,670,395,396,671,397,398,672,399,673,674,400,675,676,401,677,678,679,680,681,682,683,684,685,686,687],"tindex":"fcea3412-3e58-11e6-92c2-1baecc80ea4c","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedBag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.SynchronizedBag<E>(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[60,688,65,689,80],"tindex":"fcea3413-3e58-11e6-92c2-0fc3ee14018c","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            return remove(object, 1);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[657,690],"tindex":"fcea3414-3e58-11e6-92c2-e9163b956f8a","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:174","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().removeAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[691,692,693,694,695,250,696,697,698,699,700,701,702,703,704,705,706,707,708,254],"tindex":"fcea5b25-3e58-11e6-92c2-1f9bfe1a66bf","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        {\n            return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[228,231],"tindex":"fcea5b26-3e58-11e6-92c2-83337b9dc509","method":{"position":"org.apache.commons.collections4.CollectionUtils:722","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    final T T = iterator.next();\n                    if (iterator.hasNext()) {\n                        closure.execute(element);\n                    } else {\n                        return element;\n                    }\n                }\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,88,729,89,90,91,92,93,94,95,96,97],"tindex":"fcea5b27-3e58-11e6-92c2-57a55c87a958","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:597","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextGreater(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getRight(dataElement)) != null) {\n                rval = leastNode(node.getRight(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getRight(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[730],"tindex":"fcea5b28-3e58-11e6-92c2-b52fa7bbbf29","method":{"position":"org.apache.commons.collections4.PredicateUtils:517","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:79","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (bag != null)) && ((bag.size()) > 0)"},"failures":[],"tindex":"fcea5b29-3e58-11e6-92c2-cbed2b22be02","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:75","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.TransformedSortedBag<E> org.apache.commons.collections4.bag.TransformedSortedBag<E> = new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[731,732,733,734],"tindex":"fcea823a-3e58-11e6-92c2-6302ec8400a0","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:698","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> greatestNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getRight(dataElement)) != null) {\n                    rval = rval.getRight(dataElement);\n                }\n            } \n            return rval;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[735,736],"tindex":"fcea823b-3e58-11e6-92c2-cb13a6fab364","method":{"position":"org.apache.commons.collections4.map.CompositeMap:381","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"No mutator specified\");\n            } \n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.putAll(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:87","type":"CtBinaryOperatorImpl","sourcecode":"(iterator.hasNext()) == false"},"failures":[],"tindex":"fceaa94c-3e58-11e6-92c2-1ff53fb496ea","method":{"position":"org.apache.commons.collections4.IteratorUtils:938","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> toListIterator(final java.util.Iterator<? extends E> iterator) {\n    if ((iterator.hasNext()) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[737,738,739,740],"tindex":"fceaa94d-3e58-11e6-92c2-e54442cb795b","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:208","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.util.List<K>.indexOf(key);\n            if (index > 0) {\n                return java.util.List<K>.get((index - 1));\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:216","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"fceaa94e-3e58-11e6-92c2-e72520b68be5","method":{"position":"org.apache.commons.collections4.ComparatorUtils:152","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullLowComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[741,742],"tindex":"fceaa94f-3e58-11e6-92c2-3b20e57e551e","method":{"position":"org.apache.commons.collections4.list.TreeList:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            checkInterval(index, 0, size());\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(index , obj , null , null);\n            } else {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(index, obj);\n            }\n            (int)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,618,758,759,760,761,762,763,764,765,766,767,768,769,770,238,771,772,773,774,775,776,777,778,779,780,781,782],"tindex":"fceaa950-3e58-11e6-92c2-0fb91033fc85","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        {\n            return addAll(size(), coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[783,784,785,731,709,732,786,787,788,710,789,790,791,711,712,792,793,713,714,715,794,716,717,795,796,797,798,799,403,404,405,406,800,801,802,803,804,805,806,807,718,719,808,809,733,720,734,810,811,812,721,813,814,815,816,817,818,819,820,821,722,723,822,823,724,725,726,824,727,728,825,88,826,827,729,89,828,829,830,831,832,833,834,835,836,90,837,838,91,92,839,840,93,94,95,96,97],"tindex":"fcead061-3e58-11e6-92c2-b7e85746a6b4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:195","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            return node == null ? null : node.getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.TransformedSet:78","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (set != null)) && ((set.size()) > 0)"},"failures":[266,304],"tindex":"fcead062-3e58-11e6-92c2-f719a78ced9d","method":{"position":"org.apache.commons.collections4.set.TransformedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.set.TransformedSet<E> org.apache.commons.collections4.set.TransformedSet<E> = new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[841,842,843,844,845,846,847,848,849,850,851,852,150,853,854,855],"tindex":"fcead063-3e58-11e6-92c2-99da85a1b06c","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.Flat3Map.this)) {\n                return true;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(obj);\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((int) != (other.size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                java.lang.Object java.lang.Object = null;\n                switch (int) {\n                    case 3 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 2 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 1 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                }\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[856],"tindex":"fcead064-3e58-11e6-92c2-b7493c13c2e1","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[857,858,859,860,860,861,862,862,863,864],"tindex":"fcead065-3e58-11e6-92c2-29e35c14bb75","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:79","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((preds.int) == 1) {\n                return preds[0];\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(preds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[865,866,867,591,868,869,870,708,871,872,873,874,875,876,877,27,878,879],"tindex":"fceaf776-3e58-11e6-92c2-a7a44e25f89f","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:180","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[54],"tindex":"fceaf777-3e58-11e6-92c2-03f09e0b4e9c","method":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> closureTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.ClosureTransformer<T>(closure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[880,881,242,407,882,883,243,408,884,885,244,409,886,245,887,888,889,890,891,892,893,894,895,896,897,222,898,899,900,901,902,903,904,698,250,696,697,702,707,905,906,907,908,909,910,911,223,912,913,914,255,420,915,916,256,421,917,918,257,422,919,258,920,921,922,923,924,925,926,927,928,929,930,224,931,4,932,933,17,14,15,16,21,26,934,935,936,937,938,939,940,225,941,942],"tindex":"fceaf778-3e58-11e6-92c2-75d53581fad8","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:146","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<K, V>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[943,944],"tindex":"fceaf779-3e58-11e6-92c2-c35bd4d31629","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:423","type":"CtMethodImpl","sourcecode":"public V setValue(final int index, final V value) {\n    if (index < 0) {\n        {\n            final K K = java.util.List<K>.get(index);\n            return put(key, value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[945],"tindex":"fceaf77a-3e58-11e6-92c2-ab0ac614bc99","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(decorated().listIterator(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[946],"tindex":"fceaf77b-3e58-11e6-92c2-91e162263d89","method":{"position":"org.apache.commons.collections4.PredicateUtils:535","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(transformer, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[947],"tindex":"fceb1e8c-3e58-11e6-92c2-65fe1100917e","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[948],"tindex":"fceb1e8d-3e58-11e6-92c2-170d15e671a7","method":{"position":"org.apache.commons.collections4.BagUtils:194","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[55],"tindex":"fceb1e8e-3e58-11e6-92c2-a59a1b269fec","method":{"position":"org.apache.commons.collections4.functors.AndPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate2 == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.AndPredicate<T>(predicate1 , predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[949,950,951,952,953,954,955,589,956,957,958,959,960,961,962,963,964,965,619,966,967,968,969,970,971,620,590,972,973,974,975,621,976,622,977,978,979,980,101,102,100,981,982,983,984,985,986,987,988,989,990,991,103,992,993,994,104,105,995,106,107,108,109,110,111,112,113,996,626,997,623,998,999,624,625,1000,129,130,131,132,559,1001,134,135,133,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,136,1013,1014,1015,137,138,1016,139,140,141,142,143,144,145,146,1017,1018,148,149,147,843,844,846,847,848,849,850,851,1019,1020,852,150,1021,1022,1023,151,152,1024,153,154,155,156,157,158,159,160,1025,161,1026,1027,560,1028,163,164,162,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,165,1040,1041,1042,166,167,1043,168,169,170,171,172,173,174,175,1044,1045,1046,1047,1048,191,192,190,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,193,1060,1061,1062,194,195,1063,196,197,198,199,200,201,202,203,1064,1065,32,33,34,35,204,205,206,207,209,210,208,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,211,1081,1082,1083,1084,1085,1086,212,213,1087,214,1088,1089,215,216,1090,1091,217,218,219,220,221],"tindex":"fceb1e8f-3e58-11e6-92c2-0b504319af9d","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:412","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"fceb45a0-3e58-11e6-92c2-e7429654b93b","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:202","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            if (coll == null) {\n                {\n                    boolean boolean = false;\n                    for (final E E : coll) {\n                        result |= add(e);\n                    }\n                    return result;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[236,237],"tindex":"fceb45a1-3e58-11e6-92c2-a3f685d13ac2","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1505","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return containsValue(o);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"fceb45a2-3e58-11e6-92c2-f1a63e014eea","method":{"position":"org.apache.commons.collections4.MapUtils:822","type":"CtMethodImpl","sourcecode":"public static <K>float getFloatValue(final java.util.Map<? super K, ?> map, final K key, final float defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            final java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (floatObject == null) {\n                return defaultValue;\n            } \n            return floatObject.floatValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[1092,1093],"tindex":"fceb45a3-3e58-11e6-92c2-db837cd83d53","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return false;\n            } \n            return (entry.getValue()) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}