{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":310,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":439,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":440,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx5":67,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":37,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":68,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":216,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":323,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":346,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":683,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":689,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":549,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":699,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":197,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":207,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":572,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":206,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":484,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":29,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":650,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":80,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":78,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":154,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":444,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":565,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":721,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":50,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":287,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIteratorRemove":264,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":285,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":586,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":293,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":320,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":185,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":294,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIsEmpty":262,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":295,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":489,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":741,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueRemove":173,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testEqualsNull":272,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":332,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":727,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":222,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":743,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":146,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":366,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":468,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":518,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":325,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":441,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":315,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":19,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":53,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":630,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":364,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":487,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":93,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":360,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":688,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":397,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":4,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":130,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":314,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":284,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":354,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":667,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":645,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":266,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":352,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":5,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray2":180,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":455,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":141,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":509,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":214,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":631,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":528,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":467,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":238,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":291,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":551,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains3":602,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":361,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains2":601,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains1":600,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":345,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":215,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":562,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":633,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":202,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":269,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":406,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":700,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":144,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":103,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":223,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":156,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":115,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":535,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":188,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":598,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":199,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":335,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":398,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":336,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":258,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":334,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":651,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":147,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":459,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":463,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":66,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":680,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":157,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":200,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testGetSet":252,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":228,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":328,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":742,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":296,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":113,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":548,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":454,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":321,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":370,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":508,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":665,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":38,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":164,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":564,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":679,"org.apache.commons.collections4.queue.TransformedQueueTest.testFullQueueSerialization":178,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":691,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":0,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":247,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":730,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":251,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":510,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":311,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":421,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":720,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":95,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":475,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":308,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":443,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":33,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":461,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":373,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":13,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":425,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":538,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":676,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":514,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":306,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":74,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":121,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":409,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":101,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":392,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":326,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":137,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":541,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":579,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":450,"org.apache.commons.collections4.queue.TransformedQueueTest.testSerializeDeserializeThenCompare":191,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":582,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":604,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":10,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove3":12,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":11,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":212,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":711,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":89,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testDecorateFactory":56,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":131,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":305,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":348,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":105,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":98,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":560,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":704,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":623,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":404,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":719,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":539,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":396,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":472,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":129,"org.apache.commons.collections4.queue.TransformedQueueTest.testFullQueueCompatibility":174,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":128,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":125,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":239,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":669,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":391,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":612,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":517,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":227,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":340,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":507,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":449,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":585,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":614,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":333,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":471,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":513,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":118,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":289,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":240,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":543,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":521,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":558,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":324,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":715,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":523,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":662,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains1":436,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":746,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":329,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains2":437,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":660,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains3":438,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToString":737,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":343,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":279,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":465,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":36,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":263,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":452,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":529,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":317,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":569,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCanonicalEmptyCollectionExists":275,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":21,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":542,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":91,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":196,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":619,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":568,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":205,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":674,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":387,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":722,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":327,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":729,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":48,"org.apache.commons.collections4.functors.AllPredicateTest.emptyCollectionToGetInstance":73,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains1":606,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":298,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":339,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":648,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":338,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains3":608,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":337,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains2":607,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":644,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":350,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":636,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":643,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":447,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":230,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":217,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":175,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":233,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":47,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":394,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":420,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":46,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":122,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":418,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":419,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":520,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":628,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":160,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":476,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":134,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":511,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":41,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":474,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":734,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":522,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":218,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":577,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":244,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":446,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToString":182,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":369,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":39,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":99,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":20,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":497,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":695,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":356,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":316,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":594,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":483,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":595,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":209,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":596,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetByIndex":30,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":54,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":225,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":516,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":460,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":527,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":433,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":482,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":149,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsContract":273,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":434,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":519,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":590,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":432,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":307,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":490,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":114,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":384,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":578,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":9,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":629,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":567,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":382,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":318,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":229,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":687,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":347,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains2":411,"org.apache.commons.collections4.functors.AllPredicateTest.singletonCollectionToGetInstance":75,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":168,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains3":412,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains1":410,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":309,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":92,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray2":270,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":282,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":399,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":83,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":132,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":646,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":86,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":288,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":155,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":1,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":358,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":123,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":740,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":344,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":626,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":526,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":203,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":192,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":580,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":656,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":102,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":685,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":286,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":81,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":506,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":625,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate":195,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":304,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":738,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":575,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":428,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":126,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":427,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":426,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":706,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":145,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":747,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":232,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":566,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":18,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":70,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":694,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":198,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":58,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":221,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":281,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":479,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":127,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":322,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":226,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":159,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":545,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":673,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":442,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":166,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":153,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":138,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIteratorRemove":183,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":457,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":488,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":620,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":161,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSimpleSerialization":274,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":71,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":267,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":478,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":709,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSerializeDeserializeThenCompare":256,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":536,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":453,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":587,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":661,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":495,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":303,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":589,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":588,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":621,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":652,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":403,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":249,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":617,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":79,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":148,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":690,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":504,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":140,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":375,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":85,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":242,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":280,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":52,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":445,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":237,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":524,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":710,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":77,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":502,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":532,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":211,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":681,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":253,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":492,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":693,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":500,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":55,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":201,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":675,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionSize":268,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":190,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":678,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":35,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":142,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":143,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":657,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":257,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":300,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":470,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":349,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":581,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":374,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":135,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":534,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":707,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":365,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":668,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":231,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":165,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":736,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":220,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":162,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":672,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":402,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":703,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":733,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":184,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":637,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":664,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":491,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":422,"org.apache.commons.collections4.IteratorUtilsTest.testToArray2":2,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetHashCode":255,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":544,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":424,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":423,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":82,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":597,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":684,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":464,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":351,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":574,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":705,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":603,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":505,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":635,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":477,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":653,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":663,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectEqualsSelf":278,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":605,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":362,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":405,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":599,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":458,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":622,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":194,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":616,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":265,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":313,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionSize":181,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":649,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":533,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":24,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":210,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":613,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":480,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":395,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":389,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":583,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":290,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":493,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":363,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":100,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":355,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":731,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":592,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":593,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":393,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":525,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":555,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":591,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":219,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":72,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":97,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":485,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":246,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":537,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":698,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":241,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":416,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":498,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":3,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":42,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":627,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":372,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":573,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionClear":187,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionClear":259,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":725,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":632,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":34,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":723,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":414,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":415,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":462,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":451,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":713,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":640,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":213,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":677,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":301,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":584,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":112,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":204,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":386,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":718,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":639,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":732,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":745,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":292,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":367,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":634,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":45,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":172,"org.apache.commons.collections4.SetUtilsTest.testEquals":44,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":383,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetIndexed":748,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":65,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":87,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":297,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":377,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx5":64,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsSelfHashCode":277,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove3":16,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":90,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":546,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":390,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIsEmpty":186,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":481,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":133,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":357,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":615,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":40,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":716,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":556,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":23,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":503,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":119,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":158,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":234,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":378,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":692,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":435,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":117,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":448,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":553,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":236,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":124,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":167,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":417,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":647,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":726,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":381,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":380,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":559,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":379,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":385,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":88,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":104,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":714,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":570,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":341,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":235,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":330,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":654,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":302,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":120,"org.apache.commons.collections4.CollectionUtilsTest.find":43,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":473,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":31,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRetainAll":189,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":139,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":724,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":94,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":388,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":576,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":69,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":260,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":49,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":624,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":550,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":6,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":245,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":84,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":501,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":554,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":111,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":557,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":110,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":641,"org.apache.commons.collections4.MapUtilsTest.testPopulateMap":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":109,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":177,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":666,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":106,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":107,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":261,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":642,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":735,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":108,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":331,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":739,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains1":429,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":171,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":179,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains3":431,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":670,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains2":430,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":408,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":170,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":499,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":342,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":208,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":708,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":116,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":169,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":319,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":702,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":283,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":563,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":728,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":494,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":697,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":359,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":547,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":254,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":353,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":655,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":671,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":152,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":486,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCanonicalFullCollectionExists":276,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":701,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":682,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":136,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testComparator":250,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":609,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":610,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":413,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":611,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":248,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToString":271,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":163,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":466,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":530,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":540,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":32,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":7,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":59,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":57,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":8,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":531,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":61,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":60,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":400,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":371,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":744,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":150,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":618,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":407,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":512,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":312,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":299,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":469,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":63,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx5":62,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":376,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":561,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":368,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":571,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":686,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":243,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":193,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":401,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":456,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":659,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":552,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":638,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":658,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":224,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePoll":176,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":717,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":151,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":515,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":712,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":17,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":496,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":696},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[0,1],"tindex":"36a7c3f5-2e7e-11e6-b488-490d7c54be6f","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set == null) {\n                throw new java.lang.IllegalArgumentException(\"Set must not be null\");\n            } \n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (((set.size()) > 0) || ((list.size()) > 0)) {\n                throw new java.lang.IllegalArgumentException(\"Set and List must be empty\");\n            } \n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"36a86036-2e7e-11e6-b488-f13bbd199f53","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:206","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = super.remove(object);\n            if (removed) {\n                removeFromIndex(((C)(object)));\n            } \n            return removed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof org.apache.commons.collections4.ResettableIterator"},"failures":[2],"tindex":"36a88747-2e7e-11e6-b488-0b8ac96047d5","method":{"position":"org.apache.commons.collections4.IteratorUtils:976","type":"CtMethodImpl","sourcecode":"public static <E>E[] toArray(final java.util.Iterator<? extends E> iterator, final java.lang.Class<E> arrayClass) {\n    if (iterator instanceof org.apache.commons.collections4.ResettableIterator) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (arrayClass == null) {\n                throw new java.lang.NullPointerException(\"Array class must not be null\");\n            } \n            final java.util.List<E> java.util.List<E> = org.apache.commons.collections4.IteratorUtils.toList(iterator, 100);\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final E[] E[] = ((E[])(java.lang.reflect.Array.newInstance(arrayClass, list.size())));\n            return list.toArray(array);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[3,4],"tindex":"36a8ae58-2e7e-11e6-b488-370856f05dd0","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1511","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupValue(obj)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:71","type":"CtBinaryOperatorImpl","sourcecode":"(closures.size()) == 0"},"failures":[5],"tindex":"36a8ae59-2e7e-11e6-b488-6d0205ae530a","method":{"position":"org.apache.commons.collections4.ClosureUtils:218","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if ((closures.size()) == 0) {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"36a8d56a-2e7e-11e6-b488-0be4a09bda2b","method":{"position":"org.apache.commons.collections4.MapUtils:822","type":"CtMethodImpl","sourcecode":"public static <K>float getFloatValue(final java.util.Map<? super K, ?> map, final K key, final float defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (floatObject == null) {\n                return defaultValue;\n            } \n            return floatObject.floatValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[],"tindex":"36a8d56b-2e7e-11e6-b488-31b9fb619370","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:767","type":"CtMethodImpl","sourcecode":"private static void makeBlack(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (node != null) {\n                        {\n                            if (node != null) {\n                                node.setBlack(dataElement);\n                            } \n                        }\n                    } else {\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndTransformers == null"},"failures":[6],"tindex":"36a8fc7c-2e7e-11e6-b488-ff77115a6186","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        {\n            if (objectsAndTransformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n            final int int = objectsAndTransformers.size();\n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                trs[(i++)] = entry.getValue();\n            }\n            return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[7,8,9],"tindex":"36a9238d-2e7e-11e6-b488-8dd76d01006c","method":{"position":"org.apache.commons.collections4.PredicateUtils:321","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[10,11,12,13,14,15,16,17],"tindex":"36a94a9e-2e7e-11e6-b488-5f8eb30bd1e4","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:627","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if (getEntrySet().contains(obj)) {\n                final java.lang.Object java.lang.Object = ((java.util.Map.Entry<K, V>)(obj)).getKey();\n                org.apache.commons.collections4.map.ListOrderedMap<K, V>.remove(key);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1265","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[18],"tindex":"36a94a9f-2e7e-11e6-b488-8d18f52059c7","method":{"position":"org.apache.commons.collections4.list.PredicatedList:128","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new PredicatedListIterator(decorated().listIterator(i));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"36a971b0-2e7e-11e6-b488-379287705389","method":{"position":"org.apache.commons.collections4.functors.IfClosure:70","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if ((trueClosure == null) || (falseClosure == null)) {\n                throw new java.lang.IllegalArgumentException(\"Closures must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.IfClosure<E>(predicate , trueClosure , falseClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[19,20,21,22],"tindex":"36a971b1-2e7e-11e6-b488-ffe8ad46c70a","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:336","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return false;\n            } \n            return coll.contains(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:197","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"36a998c2-2e7e-11e6-b488-8ff8eedbb162","method":{"position":"org.apache.commons.collections4.ComparatorUtils:194","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>java.util.Comparator<I> transformedComparator(java.util.Comparator<O> comparator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.TransformingComparator<I, O>(transformer , comparator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[23,24,25],"tindex":"36a998c3-2e7e-11e6-b488-df801ad10e20","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:87","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().add(object, count);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[],"tindex":"36a9bfd4-2e7e-11e6-b488-6787bee8b2bc","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:451","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"36a9e6e5-2e7e-11e6-b488-f538ad475eed","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:538","type":"CtMethodImpl","sourcecode":"private V doRemoveKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[],"tindex":"36a9e6e6-2e7e-11e6-b488-91568013933f","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:767","type":"CtMethodImpl","sourcecode":"private static void makeBlack(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (node != null) {\n                        {\n                            if (node != null) {\n                                node.setBlack(dataElement);\n                            } \n                        }\n                    } else {\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[26,27,28,29,30,31],"tindex":"36aa0df7-2e7e-11e6-b488-0d8476ed0d50","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:389","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index < 0) {\n        {\n            return java.util.List<K>.get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"36aa0df8-2e7e-11e6-b488-0f0e7ff83c65","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:362","type":"CtMethodImpl","sourcecode":"public int size(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return 0;\n            } \n            return coll.size();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[32,33],"tindex":"36aa3509-2e7e-11e6-b488-bbe98df435d5","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:254","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[34,35,36,37,38],"tindex":"36aa350a-2e7e-11e6-b488-3fe808b799b5","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:210","type":"CtMethodImpl","sourcecode":"public boolean removeMapping(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (valuesForKey == null) {\n                return false;\n            } \n            final boolean boolean = valuesForKey.remove(value);\n            if (removed == false) {\n                return false;\n            } \n            if (valuesForKey.isEmpty()) {\n                remove(key);\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[39],"tindex":"36aa5c1b-2e7e-11e6-b488-054122be21e1","method":{"position":"org.apache.commons.collections4.CollectionUtils:1547","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final boolean includeDuplicates) {\n    if ((a == null) || (b == null)) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), includeDuplicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[40],"tindex":"36aa5c1c-2e7e-11e6-b488-11cc3eeda088","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:142","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"36aa832d-2e7e-11e6-b488-fd90f266d8df","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1415","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if ((contains(obj)) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(entry.getKey());\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[41],"tindex":"36aa832e-2e7e-11e6-b488-edde46fdc02a","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.BidiMap<K, V> unmodifiableBidiMap(final org.apache.commons.collections4.BidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BidiMap<K, V> org.apache.commons.collections4.BidiMap<K, V> = ((org.apache.commons.collections4.BidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[42],"tindex":"36aaaa3f-2e7e-11e6-b488-d9ce52b7194a","method":{"position":"org.apache.commons.collections4.CollectionUtils:871","type":"CtMethodImpl","sourcecode":"public static <C>boolean matchesAll(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (input != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                {\n                    if (predicate == null) {\n                        return false;\n                    } \n                    if (input != null) {\n                        for (final C C : input) {\n                            if (!(predicate.evaluate(o))) {\n                                return false;\n                            } \n                        }\n                    } \n                    return true;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"36aaaa40-2e7e-11e6-b488-a96da9a1a39d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:238","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(e.getKey(), e.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"36aad151-2e7e-11e6-b488-9db72be6ab79","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:701","type":"CtMethodImpl","sourcecode":"public void atomic(final java.lang.Runnable r) {\n    if (r == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (r == null) {\n                throw new java.lang.NullPointerException();\n            } \n            atomic(r, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[43],"tindex":"36aad152-2e7e-11e6-b488-bd18cd6cfe0a","method":{"position":"org.apache.commons.collections4.CollectionUtils:641","type":"CtMethodImpl","sourcecode":"public static <T>T find(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection != null) && (predicate != null)) {\n                for (final T T : collection) {\n                    if (predicate.evaluate(item)) {\n                        return item;\n                    } \n                }\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"36aad153-2e7e-11e6-b488-8bc752cbb594","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2031","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            if ((node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()))) {\n                removeEntry(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtBinaryOperatorImpl","sourcecode":"((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))"},"failures":[44],"tindex":"36aaf864-2e7e-11e6-b488-b1517cc9cddc","method":{"position":"org.apache.commons.collections4.SetUtils:116","type":"CtMethodImpl","sourcecode":"public static boolean isEqualSet(final java.util.Collection<?> set1, final java.util.Collection<?> set2) {\n    if (((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))) {\n        {\n            if (set1 == set2) {\n                return true;\n            } \n            if (((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))) {\n                return false;\n            } \n            return set1.containsAll(set2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"set2","set1":"set1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[45,46,47,48,49,50],"tindex":"36aaf865-2e7e-11e6-b488-33ee1321ae0e","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic O transform(final java.lang.Object input) {\n    if (input == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (input == null) {\n                return null;\n            } \n            try {\n                final java.lang.Class<?> java.lang.Class<?> = input.getClass();\n                final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(java.lang.String, java.lang.Class<?>[]);\n                return ((O)(method.invoke(input, java.lang.Object[])));\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' does not exist\"));\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' cannot be accessed\"));\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' threw an exception\") , ex);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[51],"tindex":"36ab1f76-2e7e-11e6-b488-5f256e83c53c","method":{"position":"org.apache.commons.collections4.MapUtils:1698","type":"CtMethodImpl","sourcecode":"public static <K, V, E>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends E> elements, final org.apache.commons.collections4.Transformer<E, K> keyTransformer, final org.apache.commons.collections4.Transformer<E, V> valueTransformer) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = elements.iterator();\n            while (iter.hasNext()) {\n                final E E = iter.next();\n                map.put(keyTransformer.transform(temp), valueTransformer.transform(temp));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:871","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[52],"tindex":"36ab1f77-2e7e-11e6-b488-871978070b4d","method":{"position":"org.apache.commons.collections4.EnumerationUtils:50","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[],"tindex":"36ab1f78-2e7e-11e6-b488-a9fd2f165851","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1004","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, ((int) + 1));\n            final int int = coll.size();\n            if (cSize == 0) {\n                return false;\n            } \n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.addAll(((int) + index), coll);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            int += cSize;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"36ab4689-2e7e-11e6-b488-fbc0727882d7","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"36ab468a-2e7e-11e6-b488-21c27eccf961","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:792","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key3 != null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((((multi.size()) >= 4) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) && (key4 == null ? (multi.getKey(3)) == null : key4.equals(multi.getKey(3)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key3"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[53],"tindex":"36ab6d9b-2e7e-11e6-b488-4f33709157e8","method":{"position":"org.apache.commons.collections4.CollectionUtils:510","type":"CtMethodImpl","sourcecode":"public static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((b.size()) != (a.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n            if ((helper.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (helper.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n                return false;\n            } \n            for (final java.lang.Object java.lang.Object : helper.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n                if ((helper.freqA(obj)) != (helper.freqB(obj))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[54,6,55],"tindex":"36ab6d9c-2e7e-11e6-b488-6dee9c04aad9","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:180","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Transformer<?, ?>... transformers) {\n    if (transformers == null) {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n            } \n            for (int int = 0 ; i < (transformers.int) ; i++) {\n                if ((transformers[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[56],"tindex":"36ab94ad-2e7e-11e6-b488-894717699d02","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = ((java.util.SortedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableSortedMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[57],"tindex":"36ab94ae-2e7e-11e6-b488-65c912bc224b","method":{"position":"org.apache.commons.collections4.PredicateUtils:337","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:52","type":"CtBinaryOperatorImpl","sourcecode":"(count <= 0) || (closure == null)"},"failures":[58],"tindex":"36ab94af-2e7e-11e6-b488-bd02d7f075ad","method":{"position":"org.apache.commons.collections4.functors.ForClosure:51","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (count > 3) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((count <= 0) || (closure == null)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((count <= 0) || (closure == null)) {\n                        return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n                    } \n                    if (count == 1) {\n                        return ((org.apache.commons.collections4.Closure<E>)(closure));\n                    } \n                    return new org.apache.commons.collections4.functors.ForClosure<E>(count , closure);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count","closure":"closure"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[59],"tindex":"36abbbc0-2e7e-11e6-b488-6f69d4f05e6e","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n                    if ((predicates.int) == 0) {\n                        return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n                    } \n                    if ((predicates.int) == 1) {\n                        return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n                    } \n                    return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"36abbbc1-2e7e-11e6-b488-93ed40811afa","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:586","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<V>lookup(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[60,61,62,63,64,65,9,66,67,68,69,70,71,72,72,73,74,74,75,76],"tindex":"36abbbc2-2e7e-11e6-b488-0f0e1e5550bb","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:96","type":"CtMethodImpl","sourcecode":"static <T>org.apache.commons.collections4.Predicate<T>[] validate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = new org.apache.commons.collections4.Predicate[predicates.size()];\n            int int = 0;\n            for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : predicates) {\n                preds[i] = predicate;\n                if ((preds[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n                i++;\n            }\n            return preds;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[],"tindex":"36abe2d3-2e7e-11e6-b488-0155f45aaffc","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:767","type":"CtMethodImpl","sourcecode":"private static void makeBlack(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (node != null) {\n                        {\n                            if (node != null) {\n                                node.setBlack(dataElement);\n                            } \n                        }\n                    } else {\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[77],"tindex":"36abe2d4-2e7e-11e6-b488-0db96bdd034d","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123],"tindex":"36ac09e5-2e7e-11e6-b488-679013907787","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:56","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int bitIndex(final java.lang.String key, final int offsetInBits, final int lengthInBits, final java.lang.String other, final int otherOffsetInBits, final int otherLengthInBits) {\n    if (lengthInBits == 0) {\n        {\n            boolean boolean = true;\n            if (((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n            } \n            final int int = offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = otherOffsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = beginIndex1 + (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = beginIndex2 + (otherLengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = java.lang.Math.max(endIndex1, endIndex2);\n            char char = 0;\n            char char = 0;\n            for (int int = 0 ; i < length ; i++) {\n                final int int = beginIndex1 + i;\n                final int int = beginIndex2 + i;\n                if (index1 >= endIndex1) {\n                    k = 0;\n                } else {\n                    k = key.charAt(index1);\n                }\n                if ((other == null) || (index2 >= endIndex2)) {\n                    f = 0;\n                } else {\n                    f = other.charAt(index2);\n                }\n                if (k != f) {\n                    final int int = k ^ f;\n                    return ((i * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(x))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                } \n                if (k != 0) {\n                    allNull = false;\n                } \n            }\n            if (allNull) {\n                return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:876","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[],"tindex":"36ac09e6-2e7e-11e6-b488-ffd0441bc243","method":{"position":"org.apache.commons.collections4.CollectionUtils:871","type":"CtMethodImpl","sourcecode":"public static <C>boolean matchesAll(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (input != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                {\n                    if (predicate == null) {\n                        return false;\n                    } \n                    if (input != null) {\n                        for (final C C : input) {\n                            if (!(predicate.evaluate(o))) {\n                                return false;\n                            } \n                        }\n                    } \n                    return true;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":0},{"exception":"java.util.EmptyStackException","condition":{"position":"org.apache.commons.collections4.ArrayStack:89","type":"CtBinaryOperatorImpl","sourcecode":"n <= 0"},"failures":[],"tindex":"36ac30f7-2e7e-11e6-b488-41fec5b01eac","method":{"position":"org.apache.commons.collections4.ArrayStack:105","type":"CtMethodImpl","sourcecode":"public E peek(final int n) throws java.util.EmptyStackException {\n    if (n <= 0) {\n        throw new java.util.EmptyStackException();\n    } else {\n        {\n            final int int = ((size()) - n) - 1;\n            if (m < 0) {\n                throw new java.util.EmptyStackException();\n            } else {\n                return get(m);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151],"tindex":"36ac30f8-2e7e-11e6-b488-175a33d8c3e3","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:281","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                return null;\n            } \n            purgeBeforeWrite();\n            return super.remove(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[],"tindex":"36ac30f9-2e7e-11e6-b488-3926395ffc54","method":{"position":"org.apache.commons.collections4.map.LinkedMap:238","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof org.apache.commons.collections4.KeyValue) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170],"tindex":"36ac580a-2e7e-11e6-b488-318381f6ee8b","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:239","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final E E = super.remove(index);\n            java.util.Set<E>.remove(result);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"36ac580b-2e7e-11e6-b488-23b57a644fd6","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2014","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            return (node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[171],"tindex":"36ac580c-2e7e-11e6-b488-7dbbe7e4e508","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:99","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            return decorated().addAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[172],"tindex":"36ac7f1d-2e7e-11e6-b488-a7417c402c16","method":{"position":"org.apache.commons.collections4.BagUtils:84","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedBag.synchronizedBag(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.TransformedQueue:77","type":"CtBinaryOperatorImpl","sourcecode":"(queue.size()) > 0"},"failures":[173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194],"tindex":"36ac7f1e-2e7e-11e6-b488-f5106b63e859","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if ((queue.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[195],"tindex":"36aca62f-2e7e-11e6-b488-515d38029bcf","method":{"position":"org.apache.commons.collections4.functors.OrPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate2 == null)) {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.OrPredicate<T>(predicate1 , predicate2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[],"tindex":"36aca630-2e7e-11e6-b488-29e778612e2a","method":{"position":"org.apache.commons.collections4.IteratorUtils:431","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start, final int end) {\n    if (end == start) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start","end":"end"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249],"tindex":"36aca631-2e7e-11e6-b488-050d2f47c0d6","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:337","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            final int int = hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    final V V = entry.getValue();\n                    removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278],"tindex":"36accd42-2e7e-11e6-b488-835145658fda","method":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(set , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[279,280,281,282,283,284,285,286,287,288,39,289],"tindex":"36accd43-2e7e-11e6-b488-0795fd01128e","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:329","type":"CtMethodImpl","sourcecode":"private void clear(final int i) {\n    if (i == (-1)) {\n        {\n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.DefaultedMap:105","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[290],"tindex":"36accd44-2e7e-11e6-b488-c9b505533d45","method":{"position":"org.apache.commons.collections4.MapUtils:1363","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (factory == null) {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[],"tindex":"36acf455-2e7e-11e6-b488-8b860d17879c","method":{"position":"org.apache.commons.collections4.map.LinkedMap:238","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof org.apache.commons.collections4.KeyValue) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[291],"tindex":"36acf456-2e7e-11e6-b488-7f361c88bad5","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:143","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[292,293,294,295,296,297,84,85,86,102,109,110,116,120],"tindex":"36acf457-2e7e-11e6-b488-13d8f3a3c2b7","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:419","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object k) {\n    if (k == null) {\n        {\n            if (k == null) {\n                return null;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    if ((!(current.isEmpty())) && (compareKeys(key, current.K))) {\n                        return removeEntry(current);\n                    } else {\n                        return null;\n                    }\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[],"tindex":"36ad1b68-2e7e-11e6-b488-499d22dac87b","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == (org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.this)) {\n                return true;\n            } \n            return java.util.Map.Entry<K, V>.equals(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,3,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,4,382,383,384,385,386,387,388,389,390,391,392],"tindex":"36ad1b69-2e7e-11e6-b488-ed17b9834eb9","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1229","type":"CtMethodImpl","sourcecode":"private static void checkValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"36ad427a-2e7e-11e6-b488-df6e3bd4cd0b","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"36ad427b-2e7e-11e6-b488-c9ad354f6fd8","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:456","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getNearestEntryForKey(final K key, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    return current;\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[393],"tindex":"36ad698c-2e7e-11e6-b488-a9d9563300f6","method":{"position":"org.apache.commons.collections4.CollectionUtils:1668","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> retainAll(final java.util.Collection<C> collection, final java.util.Collection<?> retain) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            return org.apache.commons.collections4.ListUtils.retainAll(collection, retain);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:190","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"36ad698d-2e7e-11e6-b488-6310d4df2f00","method":{"position":"org.apache.commons.collections4.IteratorUtils:1017","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator, final int estimatedSize) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (estimatedSize < 1) {\n                throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(estimatedSize);\n            while (iterator.hasNext()) {\n                list.add(iterator.next());\n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409],"tindex":"36ad698e-2e7e-11e6-b488-e10a960ebdaa","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:132","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i++;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[395,396,397,398,399,400,401,403,404,405,406,407,408,409],"tindex":"36ad909f-2e7e-11e6-b488-371c1d93ac16","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:154","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (indexOf(value)) != (-1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:764","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"36ad90a0-2e7e-11e6-b488-4790c2e1e72c","method":{"position":"org.apache.commons.collections4.list.GrowthList:69","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.GrowthList<E> growthList(final java.util.List<E> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.GrowthList<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"36ad90a1-2e7e-11e6-b488-a3f09111d036","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n                    if ((predicates.int) == 0) {\n                        return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n                    } \n                    if ((predicates.int) == 1) {\n                        return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n                    } \n                    return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:871","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"36ad90a2-2e7e-11e6-b488-9b8580f254d7","method":{"position":"org.apache.commons.collections4.IteratorUtils:869","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration, final java.util.Collection<? super E> removeCollection) {\n    if (enumeration == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            if (removeCollection == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration , removeCollection);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[302,304,305,358,359],"tindex":"36adb7b3-2e7e-11e6-b488-fb1b716b7303","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2057","type":"CtMethodImpl","sourcecode":"public K get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.getKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"36adb7b4-2e7e-11e6-b488-91a720bf0d72","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(object, 1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.TransformedQueue:77","type":"CtBinaryOperatorImpl","sourcecode":"(queue.size()) > 0"},"failures":[194],"tindex":"36adb7b5-2e7e-11e6-b488-734d03cf9b06","method":{"position":"org.apache.commons.collections4.QueueUtils:93","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if ((queue.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.queue.TransformedQueue.transformingQueue(queue, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,184,185,188,448,192,193,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,24,25,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,251,253,257,258,260,263,266,269,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,379,380,381,4,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,171,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664],"tindex":"36addec6-2e7e-11e6-b488-6d2c8138c60e","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            return decorated().contains(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"36addec7-2e7e-11e6-b488-2fe78751dd9d","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[309,343],"tindex":"36addec8-2e7e-11e6-b488-07918bbf374b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1490","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            return (doRemoveKey(o)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[665,666,667,668,669,670,671,672,673,674,196,675,676,677,678,679,680,681,682,205,683,214,684,685,686,687,688,689,690,215,691,692,693,694,695,696,697,698,224,699,700,701,702,703,704,233,705,706,707,708,709,710,711,712],"tindex":"36ae05d9-2e7e-11e6-b488-29e0636c07fc","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:946","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"36ae05da-2e7e-11e6-b488-1317d9d413a9","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n        {\n            if (transformer == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final org.apache.commons.collections4.set.TransformedSortedSet<E> org.apache.commons.collections4.set.TransformedSortedSet<E> = new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n                    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final E[] E[] = ((E[])(set.toArray()));\n                        set.clear();\n                        for (final E E : values) {\n                            decorated.decorated().add(transformer.transform(value));\n                        }\n                    } \n                    return decorated;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[713],"tindex":"36ae05db-2e7e-11e6-b488-b570570ec887","method":{"position":"org.apache.commons.collections4.IteratorUtils:297","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start) {\n    if (start < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[714],"tindex":"36ae05dc-2e7e-11e6-b488-a1367d4aee02","method":{"position":"org.apache.commons.collections4.CollectionUtils:774","type":"CtMethodImpl","sourcecode":"public static <T>boolean filterInverse(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.filter(collection, (predicate == null ? null : org.apache.commons.collections4.PredicateUtils.notPredicate(predicate)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"36ae2ced-2e7e-11e6-b488-addbe61d1f5a","method":{"position":"org.apache.commons.collections4.CollectionUtils:1307","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map.Entry<K, V> get(final java.util.Map<K, V> map, final int index) {\n    if (map != null) {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            return org.apache.commons.collections4.CollectionUtils.get(map.entrySet(), index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[78,79,80,84,85,86,87,90,91,93,94,96,97,98,101,102,106,107,108,109,110,111,112,115,119,121,122,123],"tindex":"36ae2cee-2e7e-11e6-b488-8185431188b0","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:758","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        {\n            while (true) {\n                org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (child.isEmpty()) {\n                    child = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((child.int) <= (node.int)) {\n                    return child;\n                } \n                node = child;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"36ae2cef-2e7e-11e6-b488-7b7abdc3939e","method":{"position":"org.apache.commons.collections4.map.LinkedMap:248","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K remove(final int index) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[715,716,717,718,719,720,721,722,152,723,724,153,154,725,155,156,726,727,728,729,730,731,732,158,159,733,160,161,734,735,162,163,736,737,164,165,166,738,167,169,739,740,170],"tindex":"36ae5400-2e7e-11e6-b488-8b5674108993","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:74","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            return decorated().addAll(index, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"36ae5401-2e7e-11e6-b488-3f56a0c72f17","method":{"position":"org.apache.commons.collections4.functors.ForClosure:51","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (count > 3) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((count <= 0) || (closure == null)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((count <= 0) || (closure == null)) {\n                        return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n                    } \n                    if (count == 1) {\n                        return ((org.apache.commons.collections4.Closure<E>)(closure));\n                    } \n                    return new org.apache.commons.collections4.functors.ForClosure<E>(count , closure);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.NullPointerException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"36ae5402-2e7e-11e6-b488-a36ee860c0f9","method":{"position":"org.apache.commons.collections4.MapUtils:1089","type":"CtMethodImpl","sourcecode":"public static <K>void safeAddToMap(final java.util.Map<? super K, java.lang.Object> map, final K key, final java.lang.Object value) throws java.lang.NullPointerException {\n    if (value == null) {\n        throw new java.lang.NullPointerException();\n    } else {\n        {\n            map.put(key, (value == null ? \"\" : value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[301,356],"tindex":"36ae7b13-2e7e-11e6-b488-85cc35847303","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:631","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextSmaller(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getLeft(dataElement)) != null) {\n                rval = greatestNode(node.getLeft(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getLeft(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (set != null)) && ((set.size()) > 0)"},"failures":[],"tindex":"36ae7b14-2e7e-11e6-b488-c93f59d85d88","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n        {\n            if (transformer == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final org.apache.commons.collections4.set.TransformedSortedSet<E> org.apache.commons.collections4.set.TransformedSortedSet<E> = new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n                    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final E[] E[] = ((E[])(set.toArray()));\n                        set.clear();\n                        for (final E E : values) {\n                            decorated.decorated().add(transformer.transform(value));\n                        }\n                    } \n                    return decorated;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"36aea225-2e7e-11e6-b488-bb13474019f3","method":{"position":"org.apache.commons.collections4.IteratorUtils:718","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> filteredListIterator(final java.util.ListIterator<? extends E> listIterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (listIterator == null) {\n                throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterListIterator<E>(listIterator , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[741,742],"tindex":"36aea226-2e7e-11e6-b488-2394391e5941","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:101","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[743,744,745,746,389,747],"tindex":"36aea227-2e7e-11e6-b488-7f71aa54f1f8","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[748],"tindex":"36aea228-2e7e-11e6-b488-1da00d37ba34","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:195","type":"CtMethodImpl","sourcecode":"public K getKey(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return K[][index];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}