{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":364,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":475,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContainsAll":700,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":119,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":64,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx5":406,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":592,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":407,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testSerializeDeserializeThenCompare":207,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":288,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":376,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":401,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":421,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":551,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":668,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":265,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":634,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":66,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":581,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":622,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":171,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":530,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":550,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":671,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":120,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":164,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":659,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":508,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":447,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":116,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":182,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":722,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":372,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":650,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":117,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testSerializeDeserializeThenCompare":199,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":386,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":229,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":241,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":466,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":323,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":100,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":691,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":378,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":379,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":460,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":461,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":333,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":131,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":473,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex":527,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":180,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":258,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":287,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":319,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":108,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":625,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":112,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":341,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":435,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":368,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":552,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":641,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":313,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":575,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":414,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":709,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":539,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":608,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":310,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":503,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":587,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":599,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":441,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":29,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":637,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":433,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":646,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":219,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":3,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":566,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":222,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":545,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":610,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":96,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":320,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":596,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":218,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":400,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":290,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":661,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":674,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":266,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":80,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":451,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":143,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":155,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":643,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":109,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":389,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":711,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":390,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":388,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":21,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":609,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":677,"org.apache.commons.collections4.list.TreeListTest.testFullListSerialization":239,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":423,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":640,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":382,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":170,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":153,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":529,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":499,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":373,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":436,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":651,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":327,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":695,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":420,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":477,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSimpleSerialization":196,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":286,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":638,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":0,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":173,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":666,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":559,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":470,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":365,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":718,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":362,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":331,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":12,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":509,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":6,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":187,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":416,"org.apache.commons.collections4.map.CompositeMapTest.testGet":185,"org.apache.commons.collections4.list.TreeListTest.testSerializeDeserializeThenCompare":255,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicateEx1":216,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":360,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":546,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":664,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":161,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":514,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":141,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":352,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":198,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsContract":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":380,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":531,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":495,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":518,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":716,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":431,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":427,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":232,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":478,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":74,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":468,"org.apache.commons.collections4.map.HashedMapTest.testEqualsNull":428,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":35,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":260,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":679,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":129,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":712,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":93,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":359,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":403,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":145,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":579,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":138,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEqualsNull":493,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":456,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":492,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":443,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":78,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":413,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":689,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":107,"org.apache.commons.collections4.bag.HashBagTest.testObjectHashCodeEqualsContract":26,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":482,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":18,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":351,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":84,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":542,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":589,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":636,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":496,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":249,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":395,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":585,"org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testEqualsAndHashCode":512,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":53,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":724,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":50,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":544,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":387,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":497,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull":510,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":704,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":158,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":520,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":377,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":210,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":580,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":300,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":506,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":603,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":500,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":236,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":383,"org.apache.commons.collections4.list.TreeListTest.testRemove":298,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":226,"org.apache.commons.collections4.list.TreeListTest.testFullListCompatibility":240,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":568,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":398,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":705,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":574,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":250,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":243,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":369,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":715,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":43,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":101,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":686,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEmptyMapCompatibility":197,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":303,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":652,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":128,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":44,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":213,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":491,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":540,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":730,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":224,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":426,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":490,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":669,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":97,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":51,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":347,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":639,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":381,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":247,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":614,"org.apache.commons.collections4.bag.TreeBagTest.testObjectHashCodeEqualsContract":8,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":217,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":353,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":393,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":676,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":392,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":391,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":405,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":556,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":281,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":644,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":465,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":458,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":278,"org.apache.commons.collections4.map.LRUMapTest.testClone":256,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeThenCompare":195,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":565,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":553,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":658,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":459,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":41,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":94,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":211,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":681,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":162,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":446,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":178,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":434,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":570,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":601,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":411,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":615,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":246,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":660,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":713,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":409,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsContract":14,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":502,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":717,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":76,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":175,"org.apache.commons.collections4.CollectionUtilsTest.collateException2":519,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":687,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":62,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":90,"org.apache.commons.collections4.list.TreeListTest.testListEquals":221,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":326,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":633,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":139,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":264,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":315,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":375,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetByIndex":525,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":577,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":611,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":430,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":115,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":591,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":635,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":567,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":538,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":172,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":605,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":49,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":560,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":228,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":361,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsContract":47,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testSimpleSerialization":200,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":154,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":517,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":344,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":699,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":30,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":600,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":342,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":370,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":563,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":277,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":285,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":504,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":528,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":576,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":402,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":616,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":363,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":75,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":130,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":111,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":480,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":88,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":276,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":537,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":275,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":123,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":274,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":16,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":721,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":126,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":15,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":11,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":507,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEmptyMapCompatibility":193,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":1,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectEqualsSelf":188,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":48,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":317,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":163,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":707,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsContract":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":399,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":534,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":685,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":142,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":543,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":283,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":121,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":358,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":653,"org.apache.commons.collections4.functors.AllPredicateTest.nullCollectionToGetInstance":56,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":728,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":729,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":698,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":37,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":612,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":263,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":302,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":438,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":103,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":554,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":374,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":476,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":248,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":422,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":439,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":498,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":237,"org.apache.commons.collections4.list.TreeListTest.testCollectionSize":251,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":186,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":72,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":489,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":242,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":524,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":619,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":642,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":516,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":92,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":432,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":708,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":215,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":555,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":357,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":77,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":296,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":295,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":624,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":294,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":71,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":304,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":437,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":165,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":289,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":45,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":306,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":220,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":334,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":125,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":655,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":562,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":606,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":39,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":487,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":588,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":238,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":448,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":442,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":607,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":723,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":424,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":623,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":262,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":578,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":564,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":535,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":91,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeCheckComparator":191,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":486,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":87,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":33,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":419,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":118,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":548,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":305,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":46,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":532,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":179,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":135,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":355,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":440,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":665,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":404,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":662,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":332,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":479,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEmptyMapCompatibility":201,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":329,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":464,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":649,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSerializeDeserializeThenCompare":190,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":481,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":279,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":297,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":584,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":488,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":67,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":630,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":9,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":454,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":682,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectEqualsSelf":494,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":194,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":122,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":557,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":572,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":282,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":311,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":627,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":455,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":34,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":656,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":31,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":110,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":169,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":235,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":104,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":223,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":582,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":321,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":457,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":79,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":245,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":225,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":292,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":291,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":467,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":694,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":54,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":293,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":13,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":230,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":367,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":663,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":206,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":106,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":719,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":349,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":462,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":701,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":322,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":657,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":547,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":140,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":314,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":253,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":683,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":209,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":703,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":184,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":231,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":680,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":136,"org.apache.commons.collections4.CollectionUtilsTest.isFull":166,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":444,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":227,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":269,"org.apache.commons.collections4.list.TreeListTest.testBug35258":301,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":410,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":95,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":280,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":394,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testSimpleSerialization":208,"org.apache.commons.collections4.bag.HashBagTest.testObjectEqualsSelf":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":330,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":105,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":463,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":244,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":469,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":626,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":595,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":254,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":710,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":541,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testSimpleSerialization":204,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":309,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":483,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":299,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":417,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":505,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":10,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":17,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":523,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":356,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":573,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":99,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":620,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":152,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":252,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":22,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":445,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":346,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":415,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":521,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":522,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":324,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":257,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":113,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetIndexed":212,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":343,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":702,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":133,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx4":55,"org.apache.commons.collections4.IteratorUtilsTest.testAsIterable":57,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":336,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":594,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":102,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":648,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":127,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":350,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":672,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":654,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":316,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":720,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":513,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":159,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":337,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":261,"org.apache.commons.collections4.bag.TreeBagTest.testEmptyBagCompatibility":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":157,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":604,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":621,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":536,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":684,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":38,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":340,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":40,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":339,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":693,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":338,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":586,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":345,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":137,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":144,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":617,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":68,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":632,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":726,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":396,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":384,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":472,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":598,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":471,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":449,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":727,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":160,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":511,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":526,"org.apache.commons.collections4.bag.HashBagTest.testEmptyBagCompatibility":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":132,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":348,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsContract":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":60,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":408,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":259,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":647,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":725,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":124,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":412,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":151,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":307,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":583,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":150,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":149,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":706,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":146,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":147,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":533,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":148,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":183,"org.apache.commons.collections4.map.CompositeMapTest.testEqualsNull":181,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":678,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testCollections364":192,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":597,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":385,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEmptyMapCompatibility":205,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":696,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":484,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":631,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":85,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":474,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":397,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":202,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":450,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":629,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":569,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":156,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":602,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":371,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":593,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":453,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":98,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsContract":189,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":645,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":268,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":318,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":32,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":234,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":312,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":485,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":176,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":452,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":667,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":690,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":425,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":692,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":308,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testSerializeDeserializeThenCompare":203,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":613,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":697,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":168,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":114,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":628,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":673,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":558,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":328,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":167,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":618,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":83,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":273,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":366,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":675,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":418,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":571,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":561,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":714,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":20,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":214,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":271,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":272,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":354,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":177,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":549,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":335,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":284,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":325,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":501,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":233,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":515,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":670,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":270,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":590,"org.apache.commons.collections4.bag.TreeBagTest.testObjectEqualsSelf":7,"org.apache.commons.collections4.map.HashedMapTest.testObjectEqualsSelf":429,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":267,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":59,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":688},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:83","type":"CtBinaryOperatorImpl","sourcecode":"((set.size()) > 0) || ((list.size()) > 0)"},"failures":[0,1],"tindex":"c3208c11-3e4e-11e6-a1a6-5bc7f8011a91","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (((set.size()) > 0) || ((list.size()) > 0)) {\n        {\n            if (set == null) {\n                throw new java.lang.IllegalArgumentException(\"Set must not be null\");\n            } \n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (((set.size()) > 0) || ((list.size()) > 0)) {\n                throw new java.lang.IllegalArgumentException(\"Set and List must be empty\");\n            } \n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"tindex":"c3212852-3e4e-11e6-a1a6-b3a28592b44c","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:538","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        {\n            if (object == (org.apache.commons.collections4.bag.AbstractMapBag.this)) {\n                return true;\n            } \n            if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.Bag<?> org.apache.commons.collections4.Bag<?> = ((org.apache.commons.collections4.Bag<?>)(object));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n                if ((other.getCount(element)) != (getCount(element))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[53,54],"tindex":"c3212853-3e4e-11e6-a1a6-7305b0906988","method":{"position":"org.apache.commons.collections4.list.PredicatedList:117","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            for (final E E : coll) {\n                validate(aColl);\n            }\n            return decorated().addAll(index, coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"c3214f64-3e4e-11e6-a1a6-75f80c32aa64","method":{"position":"org.apache.commons.collections4.map.LinkedMap:248","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K remove(final int index) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[55,56],"tindex":"c3214f65-3e4e-11e6-a1a6-47f5d416ac73","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:79","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((preds.int) == 1) {\n                return preds[0];\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:977","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[57,58,59],"tindex":"c3214f66-3e4e-11e6-a1a6-59c1ccce1d86","method":{"position":"org.apache.commons.collections4.IteratorUtils:904","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116],"tindex":"c3217677-3e4e-11e6-a1a6-69023129c149","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:111","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index > 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            return node.getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"c3217678-3e4e-11e6-a1a6-ff80a32d3bed","method":{"position":"org.apache.commons.collections4.list.LazyList:111","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final int int = decorated().size();\n                    if (index < size) {\n                        E E = decorated().get(index);\n                        if (object == null) {\n                            object = org.apache.commons.collections4.Factory<? extends E>.create();\n                            decorated().set(index, object);\n                            return object;\n                        } \n                        return object;\n                    } \n                    for (int int = size ; i < index ; i++) {\n                        decorated().add(null);\n                    }\n                    final E E = org.apache.commons.collections4.Factory<? extends E>.create();\n                    decorated().add(object);\n                    return object;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl","sourcecode":"(coll1.size()) < (coll2.size())"},"failures":[117],"tindex":"c3217679-3e4e-11e6-a1a6-55290c09ed5d","method":{"position":"org.apache.commons.collections4.CollectionUtils:409","type":"CtMethodImpl","sourcecode":"public static boolean containsAny(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if ((coll2.size()) < (coll1.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll1.size()) < (coll2.size())) {\n                for (final java.lang.Object java.lang.Object : coll1) {\n                    if (coll2.contains(aColl1)) {\n                        return true;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (coll1.contains(aColl2)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll1","coll1":"coll2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (set != null)) && ((set.size()) > 0)"},"failures":[],"tindex":"c3219d8a-3e4e-11e6-a1a6-f1431afbb11c","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.set.TransformedSortedSet<E> org.apache.commons.collections4.set.TransformedSortedSet<E> = new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"c3219d8b-3e4e-11e6-a1a6-259a5d071a81","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:978","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.add((index + (int)), obj);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)++;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:120","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"c321c49c-3e4e-11e6-a1a6-899fdced16fd","method":{"position":"org.apache.commons.collections4.IteratorUtils:763","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> loopingListIterator(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (list == null) {\n                throw new java.lang.NullPointerException(\"List must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingListIterator<E>(list);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[118,119],"tindex":"c321c49d-3e4e-11e6-a1a6-a3d9303ef800","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:657","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key1 != null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            if (key5 != null) {\n                h ^= key5.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:165","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165],"tindex":"c321c49e-3e4e-11e6-a1a6-691ecc1a3085","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:110","type":"CtMethodImpl","sourcecode":"final boolean isBitSet(final K key, final int bitIndex, final int lengthInBits) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)) {\n        {\n            if (key == null) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer<? super K>.isBitSet(key, bitIndex, lengthInBits);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"c321ebaf-3e4e-11e6-a1a6-c3468057609d","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1498","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[166],"tindex":"c321ebb0-3e4e-11e6-a1a6-f1659418ab21","method":{"position":"org.apache.commons.collections4.CollectionUtils:1466","type":"CtMethodImpl","sourcecode":"public static boolean isFull(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll == null) {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).isFull();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.isFull();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return false;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"c321ebb1-3e4e-11e6-a1a6-c3ada7c4ef56","method":{"position":"org.apache.commons.collections4.CollectionUtils:1176","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.util.Iterator<T> iterator, final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    int int = index;\n                    org.apache.commons.collections4.CollectionUtils.checkIndexBounds(i);\n                    while (iterator.hasNext()) {\n                        i--;\n                        if (i == (-1)) {\n                            return iterator.next();\n                        } \n                        iterator.next();\n                    }\n                    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"c32212c2-3e4e-11e6-a1a6-0f0efb425c7e","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[167,168],"tindex":"c32212c3-3e4e-11e6-a1a6-99b7c99740c4","method":{"position":"org.apache.commons.collections4.ListUtils:531","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b) {\n    if ((b == null) || (b == null)) {\n        {\n            return org.apache.commons.collections4.ListUtils.longestCommonSubsequence(a, b, org.apache.commons.collections4.functors.DefaultEquator.defaultEquator());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[169,170,171,172,173,174,175,176,177,178,179,180,181,182,183],"tindex":"c32212c4-3e4e-11e6-a1a6-053c69308e8d","method":{"position":"org.apache.commons.collections4.map.CompositeMap:465","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Map) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                return org.apache.commons.collections4.map.CompositeMap.this.entrySet().equals(map.entrySet());\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[184],"tindex":"c32212c5-3e4e-11e6-a1a6-2f0296047537","method":{"position":"org.apache.commons.collections4.CollectionUtils:1668","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> retainAll(final java.util.Collection<C> collection, final java.util.Collection<?> retain) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            return org.apache.commons.collections4.ListUtils.retainAll(collection, retain);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[118,119],"tindex":"c32212c6-3e4e-11e6-a1a6-4d3cea272d1b","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:501","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key4 != null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key4"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[185,186,187,176],"tindex":"c32239d7-3e4e-11e6-a1a6-57409f3d7f87","method":{"position":"org.apache.commons.collections4.map.CompositeMap:281","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].get(key);\n                } \n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[],"tindex":"c32239d8-3e4e-11e6-a1a6-5dc5d5cacc46","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:629","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key2 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key2"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[188,189,190],"tindex":"c32239d9-3e4e-11e6-a1a6-d30d78c99cd3","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:332","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if ((org.apache.commons.collections4.comparators.ComparatorChain.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.ComparatorChain.this.getClass())) {\n                final org.apache.commons.collections4.comparators.ComparatorChain<?> org.apache.commons.collections4.comparators.ComparatorChain<?> = ((org.apache.commons.collections4.comparators.ComparatorChain<?>)(object));\n                return (null == (java.util.BitSet) ? null == (chain.java.util.BitSet) : java.util.BitSet.equals(chain.java.util.BitSet)) && (null == (java.util.List<java.util.Comparator<E>>) ? null == (chain.java.util.List<java.util.Comparator<?>>) : java.util.List<java.util.Comparator<E>>.equals(chain.java.util.List<java.util.Comparator<?>>));\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1784","type":"CtBinaryOperatorImpl","sourcecode":"(collection == null) || ((collection.size()) != 1)"},"failures":[],"tindex":"c32260ea-3e4e-11e6-a1a6-8fa8163f46df","method":{"position":"org.apache.commons.collections4.ListUtils:318","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> retainAll(final java.util.Collection<E> collection, final java.util.Collection<?> retain) {\n    if ((collection == null) || ((collection.size()) != 1)) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(java.lang.Math.min(collection.size(), retain.size()));\n            for (final E E : collection) {\n                if (retain.contains(obj)) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208],"tindex":"c32260eb-3e4e-11e6-a1a6-5386632b3dd8","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:180","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[],"tindex":"c32260ec-3e4e-11e6-a1a6-31401b9c56bc","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<K, V>.equals(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"c32260ed-3e4e-11e6-a1a6-4506d6b2aa0b","method":{"position":"org.apache.commons.collections4.FactoryUtils:120","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate) {\n    if (classToInstantiate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"c32260ee-3e4e-11e6-a1a6-fdfb2202c906","method":{"position":"org.apache.commons.collections4.MapUtils:276","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Long) {\n                return ((java.lang.Long)(answer));\n            } \n            return java.lang.Long.valueOf(answer.longValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"c32287ff-3e4e-11e6-a1a6-e768c2c9d190","method":{"position":"org.apache.commons.collections4.MapUtils:406","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key, final java.lang.Boolean defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[209],"tindex":"c3228800-3e4e-11e6-a1a6-55459ca030a3","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:57","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.SortedBidiMap<K, V> unmodifiableSortedBidiMap(final org.apache.commons.collections4.SortedBidiMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.SortedBidiMap<K, V> org.apache.commons.collections4.SortedBidiMap<K, V> = ((org.apache.commons.collections4.SortedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"c3228801-3e4e-11e6-a1a6-1d39414d22ae","method":{"position":"org.apache.commons.collections4.MapUtils:340","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                {\n                    if (map != null) {\n                        final java.lang.Object java.lang.Object = map.get(key);\n                        if ((answer != null) && (answer instanceof java.util.Map)) {\n                            return ((java.util.Map<?, ?>)(answer));\n                        } \n                    } \n                    return null;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[210],"tindex":"c3228802-3e4e-11e6-a1a6-f583971ac570","method":{"position":"org.apache.commons.collections4.SplitMapUtils:158","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[211],"tindex":"c3228803-3e4e-11e6-a1a6-73a4ecc4ed60","method":{"position":"org.apache.commons.collections4.CollectionUtils:684","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    closure.execute(iterator.next());\n                }\n            } \n            return closure;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"c322af14-3e4e-11e6-a1a6-99bb1c57e0f9","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:851","type":"CtMethodImpl","sourcecode":"private void rotateRight(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n        {\n            if (node == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getLeft(dataElement);\n                    node.setLeft(leftChild.getRight(dataElement), dataElement);\n                    if ((leftChild.getRight(dataElement)) != null) {\n                        leftChild.getRight(dataElement).setParent(node, dataElement);\n                    } \n                    leftChild.setParent(node.getParent(dataElement), dataElement);\n                    if ((node.getParent(dataElement)) == null) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = leftChild;\n                    } else if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n                        node.getParent(dataElement).setRight(leftChild, dataElement);\n                    } else {\n                        node.getParent(dataElement).setLeft(leftChild, dataElement);\n                    }\n                    leftChild.setRight(node, dataElement);\n                    node.setParent(leftChild, dataElement);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"c322af15-3e4e-11e6-a1a6-e792a4e7cf6e","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isPrefix(final java.lang.String prefix, final int offsetInBits, final int lengthInBits, final java.lang.String key) {\n    if (offsetInBits == 0) {\n        {\n            if (((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n            } \n            final java.lang.String java.lang.String = prefix.substring((offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)), (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)));\n            return key.startsWith(s1);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"offsetInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[],"tindex":"c322af16-3e4e-11e6-a1a6-174566f26e19","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:462","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.Node.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((K) == null ? (e2.getKey()) == null : K.equals(e2.getKey())) && ((V) == null ? (e2.getValue()) == null : V.equals(e2.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[212],"tindex":"c322af17-3e4e-11e6-a1a6-7b806c028d0d","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:195","type":"CtMethodImpl","sourcecode":"public K getKey(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return K[][index];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[166,213],"tindex":"c322d628-3e4e-11e6-a1a6-1ded7421cdbe","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:80","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n            } \n            for (int int = 0 ; i < 1000 ; i++) {\n                if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                    break;\n                } \n                if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n                    coll = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(coll)).decorated();\n                } else if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n                    coll = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(coll)).decorated();\n                } \n            }\n            if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(((org.apache.commons.collections4.BoundedCollection<E>)(coll)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"c322d629-3e4e-11e6-a1a6-1d25a4facfd8","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:125","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            if (object instanceof java.util.Collection<?>) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.containsKey(object);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[119],"tindex":"c322d62a-3e4e-11e6-a1a6-ebd3f6231b51","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:154","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"c322d62b-3e4e-11e6-a1a6-3b00438f3d28","method":{"position":"org.apache.commons.collections4.MapUtils:1311","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.TransformedMap.transformingMap(map, keyTransformer, valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:99","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[214],"tindex":"c322fd3c-3e4e-11e6-a1a6-57a024de1438","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:95","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.MultiKeyMap<K, V> multiKeyMap(final org.apache.commons.collections4.map.AbstractHashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> map) {\n    if ((map.size()) > 0) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            if ((map.size()) > 0) {\n                throw new java.lang.IllegalArgumentException(\"Map must be empty\");\n            } \n            return new org.apache.commons.collections4.map.MultiKeyMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"c322fd3d-3e4e-11e6-a1a6-b35a2d6f498b","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:99","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[215],"tindex":"c322fd3e-3e4e-11e6-a1a6-195185fe9abe","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(decorated().listIterator(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[216],"tindex":"c322fd3f-3e4e-11e6-a1a6-a39ec7e95d41","method":{"position":"org.apache.commons.collections4.PredicateUtils:487","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsExceptionPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NullIsExceptionPredicate.nullIsExceptionPredicate(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl","sourcecode":"timeUnit == null"},"failures":[217],"tindex":"c322fd40-3e4e-11e6-a1a6-0ff76e3dd9bf","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:194","type":"CtMethodImpl","sourcecode":"private static long validateAndConvertToMillis(final long timeToLive, final java.util.concurrent.TimeUnit timeUnit) {\n    if (timeUnit == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (timeUnit == null) {\n                {\n                    if (timeUnit == null) {\n                        throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n                    } \n                    return java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.convert(timeToLive, timeUnit);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"timeUnit"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtInvocationImpl","sourcecode":"c.isEmpty()"},"failures":[218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"tindex":"c3232451-3e4e-11e6-a1a6-b79df043c331","method":{"position":"org.apache.commons.collections4.list.TreeList:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> c) {\n    if (c.isEmpty()) {\n        {\n            if (c.isEmpty()) {\n                return false;\n            } \n            int += c.size();\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(c);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = (org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null ? cTree : org.apache.commons.collections4.list.TreeList.AVLNode<E>.addAll(cTree, int);\n            int += c.size();\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297],"tindex":"c3232452-3e4e-11e6-a1a6-e3c0196e93ff","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:205","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(super.getEntry(key)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[298,299,300,301,302,220,221,222,223,303,224,225,226,228,230,231,232,233,234,235,236,237,238,304,241,243,244,245,246,247,248,249,250,253],"tindex":"c3232453-3e4e-11e6-a1a6-7fff8a477180","method":{"position":"org.apache.commons.collections4.list.TreeList:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index).getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[305,306,307,308],"tindex":"c3232454-3e4e-11e6-a1a6-2945a05d0ce2","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:368","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) {\n                return false;\n            } \n            if (coll.isEmpty()) {\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.clear();\n                return true;\n            } \n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"c3234b65-3e4e-11e6-a1a6-e36227ab4750","method":{"position":"org.apache.commons.collections4.SetUtils:274","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> synchronizedSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedSortedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[309],"tindex":"c3234b66-3e4e-11e6-a1a6-8581f9407bfe","method":{"position":"org.apache.commons.collections4.IteratorUtils:335","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start, final int end) {\n    if (end < start) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (end < 0) {\n                {\n                    return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start , end);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405],"tindex":"c3234b67-3e4e-11e6-a1a6-4d5fdcb6485f","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:813","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getLeftChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? null : node.getLeft(dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[406,407,408],"tindex":"c3234b68-3e4e-11e6-a1a6-61c0a8d59183","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:72","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            return new org.apache.commons.collections4.functors.OnePredicate<T>(preds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[409,410,411,412,413],"tindex":"c3234b69-3e4e-11e6-a1a6-6d6d068d377d","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"c323727a-3e4e-11e6-a1a6-155fec8f3cef","method":{"position":"org.apache.commons.collections4.set.TransformedSet:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSet<E> transformingSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"c323727b-3e4e-11e6-a1a6-c1dc82926697","method":{"position":"org.apache.commons.collections4.iterators.TransformIterator:109","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends I> iterator) {\n    if (iterator == null) {\n        {\n            org.apache.commons.collections4.iterators.TransformIterator.this.java.util.Iterator<? extends I> = iterator;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtBinaryOperatorImpl","sourcecode":"(end) < (start)"},"failures":[],"tindex":"c323727c-3e4e-11e6-a1a6-b11ffc70274c","method":{"position":"org.apache.commons.collections4.IteratorUtils:335","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start, final int end) {\n    if (end < start) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (end < 0) {\n                {\n                    return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start , end);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start","end":"end"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[414,415],"tindex":"c323727d-3e4e-11e6-a1a6-b7a98aca3cc6","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:102","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"c323727e-3e4e-11e6-a1a6-994bb6e94440","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:125","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            if (object instanceof java.util.Collection<?>) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.containsKey(object);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,261,262,446,263,264,265,266,267,268,269,270,447,448,449,450,451,452,453,454,455,456,457,458,459,282,283,460,284,285,286,461,287,288,289,290,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509],"tindex":"c323998f-3e4e-11e6-a1a6-5b5ce4f9641b","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1309","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((map.size()) != (size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = mapIterator();\n            try {\n                while (it.hasNext()) {\n                    final java.lang.Object java.lang.Object = it.next();\n                    final java.lang.Object java.lang.Object = it.getValue();\n                    if (value == null) {\n                        if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n                            return false;\n                        } \n                    } else {\n                        if ((value.equals(map.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                }\n            } catch (final java.lang.ClassCastException ignored) {\n                return false;\n            } catch (final java.lang.NullPointerException ignored) {\n                return false;\n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"c3239990-3e4e-11e6-a1a6-cf1bace76e98","method":{"position":"org.apache.commons.collections4.MapUtils:1542","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.PredicatedSortedMap.predicatedSortedMap(map, keyPred, valuePred);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"c3240ec1-3e4e-11e6-a1a6-25cc3e401b44","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[510,511],"tindex":"c3240ec2-3e4e-11e6-a1a6-714fca25122f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1427","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return !(org.apache.commons.collections4.CollectionUtils.isEmpty(coll));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl","sourcecode":"timeUnit == null"},"failures":[],"tindex":"c3240ec3-3e4e-11e6-a1a6-e90aad60abbb","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:194","type":"CtMethodImpl","sourcecode":"private static long validateAndConvertToMillis(final long timeToLive, final java.util.concurrent.TimeUnit timeUnit) {\n    if (timeUnit == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (timeUnit == null) {\n                {\n                    if (timeUnit == null) {\n                        throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n                    } \n                    return java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.convert(timeToLive, timeUnit);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"timeUnit"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[512],"tindex":"c3240ec4-3e4e-11e6-a1a6-ebbf727f67ba","method":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.DefaultKeyValue.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> = ((org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:117","type":"CtBinaryOperatorImpl","sourcecode":"set1 == set2"},"failures":[],"tindex":"c32435d5-3e4e-11e6-a1a6-8ff4fa72794e","method":{"position":"org.apache.commons.collections4.SetUtils:116","type":"CtMethodImpl","sourcecode":"public static boolean isEqualSet(final java.util.Collection<?> set1, final java.util.Collection<?> set2) {\n    if (set1 == set1) {\n        {\n            if (set1 == set2) {\n                return true;\n            } \n            if (((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))) {\n                return false;\n            } \n            return set1.containsAll(set2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"set1","set1":"set1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[513],"tindex":"c32435d6-3e4e-11e6-a1a6-e7ae477db808","method":{"position":"org.apache.commons.collections4.list.GrowthList:150","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        {\n            final int int = decorated().size();\n            boolean boolean = false;\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n                result = true;\n            } \n            return (decorated().addAll(index, coll)) | result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"c32435d7-3e4e-11e6-a1a6-1bdb1ff5b1b2","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:279","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.FixedOrderComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.FixedOrderComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(object));\n                return null == (java.util.Map<T, java.lang.Integer>) ? null == (comp.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(comp.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (comp.int))) && ((boolean) == (comp.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"c32435d8-3e4e-11e6-a1a6-cf4b20d97496","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:121","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[67,77,78,79,80,82,85,514,94,106,107,108,109,111,114,515],"tindex":"c3245ce9-3e4e-11e6-a1a6-15ffaed22c0b","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:132","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i++;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[119,516,517],"tindex":"c32483fa-3e4e-11e6-a1a6-a183ae3cc7c5","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:577","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"c32483fb-3e4e-11e6-a1a6-61f4de248ef0","method":{"position":"org.apache.commons.collections4.MapUtils:340","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                {\n                    if (map != null) {\n                        final java.lang.Object java.lang.Object = map.get(key);\n                        if ((answer != null) && (answer instanceof java.util.Map)) {\n                            return ((java.util.Map<?, ?>)(answer));\n                        } \n                    } \n                    return null;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[518],"tindex":"c32483fc-3e4e-11e6-a1a6-cd0a826aaf20","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:120","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"c32483fd-3e4e-11e6-a1a6-516d7a1f93f1","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:331","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Set<E> createSetBasedOnList(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Set<E> java.util.Set<E>;\n            if (set.getClass().equals(java.util.HashSet.java.util.HashSet.java.lang.Class)) {\n                subSet = new java.util.HashSet<E>(list.size());\n            } else {\n                try {\n                    subSet = set.getClass().newInstance();\n                } catch (final java.lang.InstantiationException ie) {\n                    subSet = new java.util.HashSet<E>();\n                } catch (final java.lang.IllegalAccessException iae) {\n                    subSet = new java.util.HashSet<E>();\n                }\n            }\n            subSet.addAll(list);\n            return subSet;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[519,520],"tindex":"c324ab0e-3e4e-11e6-a1a6-7fb57aa87835","method":{"position":"org.apache.commons.collections4.CollectionUtils:1567","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c) {\n    if ((b == null) || (a == null)) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, c, true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[521,522,523,524],"tindex":"c324ab0f-3e4e-11e6-a1a6-b19748f41a8b","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:589","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(n.getKey());\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[525,526,527,528,529,530],"tindex":"c324ab10-3e4e-11e6-a1a6-4db4d8ed680f","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:389","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index < 0) {\n        {\n            return java.util.List<K>.get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[531,532,533,534,535,536,537,538,539,540,541,542,324,325,327,328,329,330,332,543,544,545,546,547,548,549,550,551,552,194,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,198,571,572,573,574,575,576,577,578,579,580,581,202,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,206,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701],"tindex":"c324ab11-3e4e-11e6-a1a6-e1579e183df0","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721],"tindex":"c324d222-3e4e-11e6-a1a6-592abc526bc6","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:342","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            if (coll != null) {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final boolean boolean = remove(i.next(), 1);\n                    result = result || changed;\n                }\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) == null"},"failures":[],"tindex":"c324d223-3e4e-11e6-a1a6-1513c92c8ed1","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:186","type":"CtMethodImpl","sourcecode":"public void setListIterator(final java.util.ListIterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.FilterListIterator.this.java.util.ListIterator<? extends E> = iterator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"c324d224-3e4e-11e6-a1a6-b7c0cebab265","method":{"position":"org.apache.commons.collections4.list.LazyList:111","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final int int = decorated().size();\n                    if (index < size) {\n                        E E = decorated().get(index);\n                        if (object == null) {\n                            object = org.apache.commons.collections4.Factory<? extends E>.create();\n                            decorated().set(index, object);\n                            return object;\n                        } \n                        return object;\n                    } \n                    for (int int = size ; i < index ; i++) {\n                        decorated().add(null);\n                    }\n                    final E E = org.apache.commons.collections4.Factory<? extends E>.create();\n                    decorated().add(object);\n                    return object;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[310,311,312,313,314,315,319,320,321,322,316,317,318,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,360,361,362,363,364,365,357,358,359,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405],"tindex":"c324f935-3e4e-11e6-a1a6-838afd6ea62a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:802","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getRightChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        {\n            return node == null ? null : node.getRight(dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[722],"tindex":"c324f936-3e4e-11e6-a1a6-b9284c102827","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            return new FixedSizeListIterator(decorated().listIterator(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[723],"tindex":"c324f937-3e4e-11e6-a1a6-ebb0a5dc1298","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[724],"tindex":"c324f938-3e4e-11e6-a1a6-59e4a8b7c954","method":{"position":"org.apache.commons.collections4.map.LinkedMap:183","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndTransformers == null"},"failures":[725],"tindex":"c324f939-3e4e-11e6-a1a6-27cc20340c98","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (objectsAndTransformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n            final int int = objectsAndTransformers.size();\n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                trs[(i++)] = entry.getValue();\n            }\n            return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:551","type":"CtBinaryOperatorImpl","sourcecode":"equator == null"},"failures":[],"tindex":"c325204a-3e4e-11e6-a1a6-433781c5ebf3","method":{"position":"org.apache.commons.collections4.ListUtils:546","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b, final org.apache.commons.collections4.Equator<? super E> equator) {\n    if (equator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n            } \n            final org.apache.commons.collections4.sequence.SequencesComparator<E> org.apache.commons.collections4.sequence.SequencesComparator<E> = new org.apache.commons.collections4.sequence.SequencesComparator<E>(a , b , equator);\n            final org.apache.commons.collections4.sequence.EditScript<E> org.apache.commons.collections4.sequence.EditScript<E> = comparator.getScript();\n            final org.apache.commons.collections4.ListUtils.LcsVisitor<E> org.apache.commons.collections4.ListUtils.LcsVisitor<E> = new org.apache.commons.collections4.ListUtils.LcsVisitor<E>();\n            script.visit(visitor);\n            return visitor.getSubSequence();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:97","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"c325204b-3e4e-11e6-a1a6-4da3fd91e19f","method":{"position":"org.apache.commons.collections4.iterators.IteratorEnumeration:91","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            org.apache.commons.collections4.iterators.IteratorEnumeration.this.java.util.Iterator<? extends E> = iterator;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[726],"tindex":"c325204c-3e4e-11e6-a1a6-e322377fad28","method":{"position":"org.apache.commons.collections4.list.TransformedList:127","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            return getList().lastIndexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[310,311,312,313,314,315,319,320,321,322,316,317,318,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,360,361,362,363,364,365,727,357,358,359,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405],"tindex":"c325204d-3e4e-11e6-a1a6-4375c748e6e1","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1217","type":"CtMethodImpl","sourcecode":"private static void checkKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:109","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"c325475e-3e4e-11e6-a1a6-d95533c4caa7","method":{"position":"org.apache.commons.collections4.MapUtils:108","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<? super K, V> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                return map.get(key);\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getLeft(dataElement)) == node"},"failures":[],"tindex":"c325475f-3e4e-11e6-a1a6-3593982f54ec","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:851","type":"CtMethodImpl","sourcecode":"private void rotateRight(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n        {\n            if (node == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getLeft(dataElement);\n                    node.setLeft(leftChild.getRight(dataElement), dataElement);\n                    if ((leftChild.getRight(dataElement)) != null) {\n                        leftChild.getRight(dataElement).setParent(node, dataElement);\n                    } \n                    leftChild.setParent(node.getParent(dataElement), dataElement);\n                    if ((node.getParent(dataElement)) == null) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = leftChild;\n                    } else if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n                        node.getParent(dataElement).setRight(leftChild, dataElement);\n                    } else {\n                        node.getParent(dataElement).setLeft(leftChild, dataElement);\n                    }\n                    leftChild.setRight(node, dataElement);\n                    node.setParent(leftChild, dataElement);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:59","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"c3254760-3e4e-11e6-a1a6-e932da79d292","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:171","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"c3254761-3e4e-11e6-a1a6-7d3c4be077bf","method":{"position":"org.apache.commons.collections4.CollectionUtils:1176","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.util.Iterator<T> iterator, final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    int int = index;\n                    org.apache.commons.collections4.CollectionUtils.checkIndexBounds(i);\n                    while (iterator.hasNext()) {\n                        i--;\n                        if (i == (-1)) {\n                            return iterator.next();\n                        } \n                        iterator.next();\n                    }\n                    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[728],"tindex":"c3254762-3e4e-11e6-a1a6-837cf99e1ef1","method":{"position":"org.apache.commons.collections4.CollectionUtils:823","type":"CtMethodImpl","sourcecode":"public static <C>int countMatches(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (predicate == null) {\n        {\n            int int = 0;\n            if ((input != null) && (predicate != null)) {\n                for (final C C : input) {\n                    if (predicate.evaluate(o)) {\n                        count++;\n                    } \n                }\n            } \n            return count;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtBinaryOperatorImpl","sourcecode":"key5 != null"},"failures":[118,119,516,517],"tindex":"c3256e73-3e4e-11e6-a1a6-1d407bbf72e8","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:692","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key4 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((((multi.size()) == 5) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))))) && ((key5 == (multi.getKey(4))) || ((key5 != null) && (key5.equals(multi.getKey(4)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key5":"key4"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[729,730],"tindex":"c3256e74-3e4e-11e6-a1a6-1b27d68cf6ec","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                result |= remove(name);\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}