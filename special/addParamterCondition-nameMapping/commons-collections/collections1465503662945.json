{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":219,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":384,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":385,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":8,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":571,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":226,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":246,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":613,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":290,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":305,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":599,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":479,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":337,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":48,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":361,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":298,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSortOrder":603,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":280,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":225,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":366,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":414,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":231,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":120,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":527,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":186,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":488,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":441,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":621,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":34,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":386,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":228,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":525,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":312,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":190,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":412,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":56,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":155,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":182,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":198,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":540,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":223,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":614,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":178,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":351,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":175,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":261,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":95,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":562,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":377,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":576,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":545,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":463,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiKeySetValuesOrder":589,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":313,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":436,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":487,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":625,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":103,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":609,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":263,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains3":506,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreater":516,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":183,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains2":505,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains1":504,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreaterOrEqual":515,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":574,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":245,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":161,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":130,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":295,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":315,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":262,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":550,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":72,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":446,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":170,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":367,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":234,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":235,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":258,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":233,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":338,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":471,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":484,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":229,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLess":513,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":289,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":376,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":31,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":541,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":25,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":462,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":475,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":6,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":17,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":297,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":47,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":164,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":256,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":464,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":220,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":409,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":59,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":458,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":606,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":217,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":360,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":143,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":189,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":565,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":88,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":393,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":449,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":467,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":215,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":142,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":74,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":63,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":87,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":209,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":511,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":629,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":35,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":173,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":137,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":276,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":607,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":537,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":4,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":372,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":112,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":158,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":282,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":522,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":214,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":248,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":62,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":293,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":38,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":318,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":450,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":90,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":455,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":535,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":208,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":563,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":493,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":127,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":440,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":41,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiKeySetValuesOrder":604,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":240,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":426,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":560,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":371,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":279,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":172,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":531,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":327,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":524,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":533,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":608,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":232,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":141,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":454,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":252,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":284,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":536,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":270,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":429,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":227,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":45,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":431,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":598,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":99,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":547,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":346,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains1":381,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":36,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":116,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":344,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains2":382,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains3":383,"org.apache.commons.collections4.list.TreeListTest.testRemove":98,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":108,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":243,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":485,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":594,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":128,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":260,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":135,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":374,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":121,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":224,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":302,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":568,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":105,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":452,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":553,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":54,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":332,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":301,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":106,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":204,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":147,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":86,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":125,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains1":501,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":210,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":238,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":354,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":237,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains3":503,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":236,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":350,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains2":502,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":250,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":583,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":324,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":349,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":364,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":580,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":624,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":616,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":151,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":408,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":75,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":406,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":407,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":539,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":310,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":427,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":628,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":459,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":124,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":556,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":465,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":529,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":457,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":430,"org.apache.commons.collections4.CollectionUtilsTest.collateException1":251,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":274,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":363,"org.apache.commons.collections4.list.TreeListTest.testListEquals":102,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":187,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":480,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":33,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":507,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":145,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":508,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":509,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":596,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":618,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":570,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":439,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":626,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":472,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":91,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":435,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":403,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":478,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":404,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":428,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":500,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":402,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":586,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":109,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":216,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":415,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":631,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":10,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":201,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":275,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":167,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":578,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":311,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":300,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":163,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":199,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":29,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":43,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":623,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":595,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":247,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains2":395,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":19,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains3":396,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains1":394,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":218,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":55,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":588,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":352,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":51,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":180,"org.apache.commons.collections4.map.SingletonMapTest.testClone":552,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":76,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":244,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":322,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":434,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":551,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":277,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":340,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":369,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":64,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":605,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":425,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":321,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":592,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":213,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":272,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":380,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":379,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":378,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":554,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":299,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":587,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":96,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":542,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":22,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":581,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":526,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":461,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":32,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":144,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":126,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":520,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":543,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":117,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":286,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":94,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":169,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":359,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":9,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":469,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":333,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":413,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":538,"org.apache.commons.collections4.ListUtilsTest.testPartition":254,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":139,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":447,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":7,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":375,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":582,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":345,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":497,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":132,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":212,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":499,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":334,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":498,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":339,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":330,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":16,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":119,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":81,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":423,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":79,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":101,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":148,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":191,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":50,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":362,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":622,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":432,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":549,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":118,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":2,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":133,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":442,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":521,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":0,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":150,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":255,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":417,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":510,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":483,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":597,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":93,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":611,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":341,"org.apache.commons.collections4.map.HashedMapTest.testClone":519,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":257,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":84,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":544,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":453,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":249,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":281,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":28,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":445,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":27,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":632,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":18,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":559,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":325,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":336,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":365,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":615,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":416,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":390,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":285,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":392,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":391,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":49,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":584,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":166,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":590,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":146,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":176,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":271,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":154,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":424,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":317,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":460,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":115,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":347,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":356,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":104,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":159,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":162,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":601,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":184,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":123,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":174,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":107,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":335,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":470,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLessOrEqual":514,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":329,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":110,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":222,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":355,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":80,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":444,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":577,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":13,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":474,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":476,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":168,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":77,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":206,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":283,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":418,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":185,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":610,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":82,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":129,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":495,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":534,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":496,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":433,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":546,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":267,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":494,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":555,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":111,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":61,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":411,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":602,"org.apache.commons.collections4.list.TreeListTest.testBug35258":100,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":448,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":400,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":481,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals":512,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":239,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":323,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":188,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":306,"org.apache.commons.collections4.map.LinkedMapTest.testClone":523,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":122,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":314,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":573,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":398,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":399,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":473,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":373,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":308,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":518,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":97,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":564,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":85,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":593,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":278,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":71,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":44,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":203,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":307,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":566,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":23,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":316,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":140,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":200,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":58,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":193,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":572,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":53,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":287,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":207,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":131,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":477,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":179,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":328,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":12,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":268,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":422,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":73,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":194,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":405,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":265,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":368,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":532,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":620,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":401,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":353,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":253,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":197,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":5,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":196,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":292,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":195,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":561,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":202,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":149,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":303,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":241,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":37,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":357,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":575,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":456,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":57,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":205,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":273,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":259,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":319,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":291,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":157,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":52,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":421,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":266,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":70,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":269,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":558,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":69,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":309,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":68,"org.apache.commons.collections4.functors.ComparatorPredicateTest.predicateSanityTests":517,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":65,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":66,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":348,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":67,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":230,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":1,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":89,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains1":387,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":320,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains3":389,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains2":388,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":153,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":21,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":482,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":242,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":600,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":627,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":30,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":528,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":152,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":296,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":156,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":419,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":617,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":181,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":114,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":138,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":288,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":177,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":358,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":15,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":410,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":160,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":490,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":491,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":397,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":492,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":437,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":451,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":486,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":557,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":443,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":591,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":3,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":585,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":26,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":331,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":466,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":221,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":134,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":630,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":548,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":619,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":165,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":171,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":11,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":211,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":489,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":40,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":92,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":579,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":612,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":192,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":294,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":24,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":304,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":46,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":370,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":113,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":343,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":468,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":264,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":326,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":342,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":567,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":569,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":438,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":420,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":530},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:784","type":"CtBinaryOperatorImpl","sourcecode":"integerObject == null"},"failures":[],"tindex":"affe46a8-2e7f-11e6-ae2d-ed9a7202b1a2","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"integerObject":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"afff09f9-2e7f-11e6-ae2d-6fb61b87feb7","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1511","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Enumeration<?>) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                    return (lookupValue(obj)) != null;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtBinaryOperatorImpl","sourcecode":"(nodeCount) > 0"},"failures":[],"tindex":"afff310a-2e7f-11e6-ae2d-c74312c877a6","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isPrefix(final java.lang.String prefix, final int offsetInBits, final int lengthInBits, final java.lang.String key) {\n    if (lengthInBits == offsetInBits) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (offsetInBits > 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                        throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n                    } \n                    final java.lang.String java.lang.String = prefix.substring((offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)), (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)));\n                    return key.startsWith(s1);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"offsetInBits"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtBinaryOperatorImpl","sourcecode":"(((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))"},"failures":[],"tindex":"afff581b-2e7f-11e6-ae2d-2f5e16fdd6e6","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:70","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if ((((index % 2) != 0) && ((delta - index) <= index)) && (k <= (delta + d))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d":"index","delta":"index","k":"index"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[0,1,2,3,4,5,6,7],"tindex":"afff7f2c-2e7f-11e6-ae2d-bd5f854ff2e6","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:99","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength resolve(final int value) {\n    if (value == 1) {\n        {\n            switch (value) {\n                case 0 :\n                    return org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength;\n                case 1 :\n                    return org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength;\n                case 2 :\n                    return org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength;\n                default :\n                    throw new java.lang.IllegalArgumentException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:643","type":"CtBinaryOperatorImpl","sourcecode":"integerObject == null"},"failures":[8,9,10,11],"tindex":"afffa63d-2e7f-11e6-ae2d-2d473c65c7bf","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:154","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 == null) {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"integerObject":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry"},"failures":[12,13,14,15,16,17,18,19,20,21],"tindex":"afffcd4e-2e7f-11e6-ae2d-3319eaceed55","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:284","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Map.Entry) {\n        {\n            return java.util.Set<E>.contains(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[22],"tindex":"affff45f-2e7f-11e6-ae2d-036f79f2f14b","method":{"position":"org.apache.commons.collections4.ClosureUtils:113","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (count == count) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ForClosure.forClosure(count, closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"count","end":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"affff460-2e7f-11e6-ae2d-d9a80cc03ced","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1484","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupKey(obj)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:128","type":"CtBinaryOperatorImpl","sourcecode":"answer != null"},"failures":[],"tindex":"b0001b71-2e7f-11e6-ae2d-67c9d6589021","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1511","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Enumeration<?>) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                    return (lookupValue(obj)) != null;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[38],"tindex":"b0004282-2e7f-11e6-ae2d-f1946d125af5","method":{"position":"org.apache.commons.collections4.BagUtils:194","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"b0004283-2e7f-11e6-ae2d-17821a48676a","method":{"position":"org.apache.commons.collections4.MapUtils:183","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Number) {\n                        return ((java.lang.Number)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        try {\n                            final java.lang.String java.lang.String = ((java.lang.String)(answer));\n                            return java.text.NumberFormat.getInstance().parse(text);\n                        } catch (final java.text.ParseException e) {\n                        }\n                    } \n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[39,40,41,42,43],"tindex":"b0006994-2e7f-11e6-ae2d-63613d2fb4a1","method":{"position":"org.apache.commons.collections4.PredicateUtils:421","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:261","type":"CtUnaryOperatorImpl","sourcecode":"!(obj1 == null ? obj2 == null : obj1.equals(obj2))"},"failures":[],"tindex":"b00090a5-2e7f-11e6-ae2d-3552fe08639b","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:237","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (!(obj == null ? obj == null : obj1.equals(obj2))) {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"remove() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.remove(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj2":"obj","obj1":"obj"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:661","type":"CtBinaryOperatorImpl","sourcecode":"longObject == null"},"failures":[44,45],"tindex":"b000b7b6-2e7f-11e6-ae2d-9324dc28b735","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object == (org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longObject":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[46,47],"tindex":"b000b7b7-2e7f-11e6-ae2d-83d078d3a874","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:136","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            return java.util.Map<E, ? super V>.keySet().removeAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:186","type":"CtBinaryOperatorImpl","sourcecode":"answer != null"},"failures":[8,9,10],"tindex":"b000dec8-2e7f-11e6-ae2d-1b3595c30e53","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:426","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1078","type":"CtUnaryOperatorImpl","sourcecode":"!(root.isEmpty())"},"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81],"tindex":"b00105d9-2e7f-11e6-ae2d-7f554ddd8776","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:610","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (!(node.isEmpty())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:368","type":"CtVariableReadImpl","sourcecode":"first"},"failures":[],"tindex":"b0012cea-2e7f-11e6-ae2d-1dcc9ddc1671","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2207","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean inFromRange(final K key, final boolean forceInclusive) {\n    if (forceInclusive) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getKeyAnalyzer().isPrefix(K, int, int, key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"first":"forceInclusive"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"b0012ceb-2e7f-11e6-ae2d-43178340b15d","method":{"position":"org.apache.commons.collections4.iterators.TransformIterator:109","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends I> iterator) {\n    if (iterator == null) {\n        {\n            org.apache.commons.collections4.iterators.TransformIterator.this.java.util.Iterator<? extends I> = iterator;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"b00153fc-2e7f-11e6-ae2d-cb46981dce6d","method":{"position":"org.apache.commons.collections4.SetUtils:306","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.set.PredicatedSortedSet.predicatedSortedSet(set, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[82,83,84,85,86],"tindex":"b00153fd-2e7f-11e6-ae2d-c524ef427ddf","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1217","type":"CtMethodImpl","sourcecode":"private static void checkKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:165","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"b00153fe-2e7f-11e6-ae2d-f5c9e4cafb98","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:188","type":"CtMethodImpl","sourcecode":"public void setIterator(final int index, final java.util.Iterator<? extends E> iterator) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(index)) {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.set(index, iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:616","type":"CtBinaryOperatorImpl","sourcecode":"element == null"},"failures":[],"tindex":"b0017b0f-2e7f-11e6-ae2d-8b699704b82e","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:475","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key4 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"key4"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:278","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[87,88,89,90,91,92],"tindex":"b0017b10-2e7f-11e6-ae2d-d9dc52504ab3","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(object, 1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"b001a221-2e7f-11e6-ae2d-253229f4d2fe","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:168","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if ((object instanceof java.util.Map) == false) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().remove(object);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b001a222-2e7f-11e6-ae2d-c1979476d073","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void putAll(final java.util.Map<? extends K, ?> map) {\n    if (map != null) {\n        {\n            if (map != null) {\n                {\n                    if (map instanceof org.apache.commons.collections4.MultiMap) {\n                        for (final java.util.Map.Entry<? extends K, java.lang.Object> java.util.Map.Entry<? extends K, java.lang.Object> : ((org.apache.commons.collections4.MultiMap<? extends K, V>)(map)).entrySet()) {\n                            putAll(entry.getKey(), ((java.util.Collection<V>)(entry.getValue())));\n                        }\n                    } else {\n                        for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : map.entrySet()) {\n                            put(entry.getKey(), entry.getValue());\n                        }\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"b001c933-2e7f-11e6-ae2d-c53808e8dea4","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:337","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(java.lang.Object key) {\n    if (key instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            final int int = hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    final V V = entry.getValue();\n                    removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:154","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Boolean"},"failures":[],"tindex":"b001c934-2e7f-11e6-ae2d-2d7d384b6abc","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:259","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.lang.Object put(final K key, final java.lang.Object value) {\n    if (value instanceof java.lang.Boolean) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(1);\n                coll.add(((V)(value)));\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.add(((V)(value)));\n            }\n            return result ? value : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[93],"tindex":"b001f045-2e7f-11e6-ae2d-bfbad9b1d926","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if ((mapToCopy.size()) != 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[94],"tindex":"b001f046-2e7f-11e6-ae2d-2b2aee626bad","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:129","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[95],"tindex":"b001f047-2e7f-11e6-ae2d-cbeb2c64aa61","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:134","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Closure<?>... closures) {\n    if (closures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n            } \n            for (int int = 0 ; i < (closures.int) ; i++) {\n                if ((closures[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtInvocationImpl","sourcecode":"iteratorChain.isEmpty()"},"failures":[],"tindex":"b001f048-2e7f-11e6-ae2d-f9d28832252b","method":{"position":"org.apache.commons.collections4.IteratorUtils:521","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> chainedIterator(final java.util.Collection<java.util.Iterator<? extends E>> iterators) {\n    if (iterators.isEmpty()) {\n        {\n            return new org.apache.commons.collections4.iterators.IteratorChain<E>(iterators);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iteratorChain":"iterators"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"b0021759-2e7f-11e6-ae2d-a3824ba3c1d2","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:575","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129],"tindex":"b002175a-2e7f-11e6-ae2d-f1c3945c2df0","method":{"position":"org.apache.commons.collections4.list.TreeList:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index == 0) {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index).getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[130],"tindex":"b0023e6b-2e7f-11e6-ae2d-fbc1c84abe3a","method":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:47","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> factoryTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.FactoryTransformer<I, O>(factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:122","type":"CtBinaryOperatorImpl","sourcecode":"n <= 0"},"failures":[22],"tindex":"b0023e6c-2e7f-11e6-ae2d-d327e695d8e4","method":{"position":"org.apache.commons.collections4.functors.ForClosure:51","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (count <= 0) {\n        {\n            if ((count <= 0) || (closure == null)) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            if (count == 1) {\n                return ((org.apache.commons.collections4.Closure<E>)(closure));\n            } \n            return new org.apache.commons.collections4.functors.ForClosure<E>(count , closure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"b0023e6d-2e7f-11e6-ae2d-4b3298feb44f","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:316","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key instanceof java.util.Map) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        if (null == prev) {\n                            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        } else {\n                            prev.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        }\n                        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash].int)--;\n                        return n.V;\n                    } \n                    prev = n;\n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"b002657e-2e7f-11e6-ae2d-5913c82263b6","method":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:109","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (!(object == null ? object == null : obj1.equals(obj2))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object instanceof java.util.Collection<?>) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((org.apache.commons.collections4.comparators.ReverseComparator.this) == object) {\n                        return true;\n                    } \n                    if (null == object) {\n                        return false;\n                    } \n                    if (object.getClass().equals(org.apache.commons.collections4.comparators.ReverseComparator.this.getClass())) {\n                        final org.apache.commons.collections4.comparators.ReverseComparator<?> org.apache.commons.collections4.comparators.ReverseComparator<?> = ((org.apache.commons.collections4.comparators.ReverseComparator<?>)(object));\n                        return java.util.Comparator<E>.equals(thatrc.java.util.Comparator<?>);\n                    } \n                    return false;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtBinaryOperatorImpl","sourcecode":"bound > len"},"failures":[],"tindex":"b0028c8f-2e7f-11e6-ae2d-09d10a2f3b62","method":{"position":"org.apache.commons.collections4.list.TreeList:144","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int fromIndex) {\n    if (fromIndex > fromIndex) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkInterval(fromIndex, 0, size());\n            return new org.apache.commons.collections4.list.TreeList.TreeListIterator<E>(org.apache.commons.collections4.list.TreeList.this , fromIndex);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"fromIndex","bound":"fromIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146],"tindex":"b0028c90-2e7f-11e6-ae2d-61b48a09c153","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:316","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (nCopies == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            if (nCopies <= 0) {\n                return false;\n            } \n            (int)++;\n            if (nCopies < (mut.int)) {\n                mut.int -= nCopies;\n                int -= nCopies;\n            } else {\n                java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n                int -= mut.int;\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"nCopies"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtBinaryOperatorImpl","sourcecode":"retval > 0"},"failures":[147],"tindex":"b002b3a1-2e7f-11e6-ae2d-5d540fbae0b6","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:315","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<E> subList(final int fromIndex, final int toIndex) {\n    if (fromIndex > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = super.subList(fromIndex, toIndex);\n            final java.util.Set<E> java.util.Set<E> = createSetBasedOnList(java.util.Set<E>, superSubList);\n            return org.apache.commons.collections4.ListUtils.unmodifiableList(new org.apache.commons.collections4.list.SetUniqueList<E>(superSubList , subSet));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"retval":"fromIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtBinaryOperatorImpl","sourcecode":"nCopies <= 0"},"failures":[],"tindex":"b002b3a2-2e7f-11e6-ae2d-9bbad37f22a6","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:71","type":"CtMethodImpl","sourcecode":"static boolean isNullBitKey(final int bitIndex) {\n    if (bitIndex <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"bitIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:428","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174],"tindex":"b002b3a3-2e7f-11e6-ae2d-2b5616f5ceb9","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().java.util.Map<K, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:959","type":"CtBinaryOperatorImpl","sourcecode":"replacement != null"},"failures":[175,176,177,82,83,178,179,180,181,182,183,184,185,186,23,24,187,25,26,27,188,189,28,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,84,85,211,212,213,214,215,216,217,218,219,220,221,222,223,224,29,30,225,31,32,33,226,227,34,228,35,86,229,36,37,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250],"tindex":"b002dab4-2e7f-11e6-ae2d-a786293d85f5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:791","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? null : node.getParent(dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"replacement":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"b002dab5-2e7f-11e6-ae2d-2f7b5bf3fbb6","method":{"position":"org.apache.commons.collections4.SetUtils:274","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> synchronizedSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return java.util.Collections.synchronizedSortedSet(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"b002dab6-2e7f-11e6-ae2d-6925a523c62a","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:252","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getEntry(final java.lang.Object k) {\n    if (k instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final K K = castKey(k);\n            if (key == null) {\n                return null;\n            } \n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K)) ? entry : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"k"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[],"tindex":"b00301c7-2e7f-11e6-ae2d-b90fcf8d20ac","method":{"position":"org.apache.commons.collections4.map.Flat3Map:857","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        {\n            if (boolean) {\n                return false;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = getKey();\n            final java.lang.Object java.lang.Object = getValue();\n            return (key == null ? (other.getKey()) == null : key.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[43],"tindex":"b00301c8-2e7f-11e6-ae2d-95b5f7c3c871","method":{"position":"org.apache.commons.collections4.PredicateUtils:402","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> neitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate2 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(predicate1, predicate2);\n            return nonePredicate;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[251,252],"tindex":"b00328d9-2e7f-11e6-ae2d-e388fcf650d2","method":{"position":"org.apache.commons.collections4.CollectionUtils:1527","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(java.lang.Iterable<? extends O> a, java.lang.Iterable<? extends O> b) {\n    if (a instanceof java.util.Set<?>) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:468","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"b00328da-2e7f-11e6-ae2d-b144473d011f","method":{"position":"org.apache.commons.collections4.MapUtils:466","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key, final java.lang.Short defaultValue) {\n    if (defaultValue == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"defaultValue"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[253],"tindex":"b00328db-2e7f-11e6-ae2d-25e192981b88","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index == index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.SetUniqueList.SetListListIterator<E>(super.listIterator(index) , java.util.Set<E>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index","end":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:158","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(bitIndex))"},"failures":[],"tindex":"b0034fec-2e7f-11e6-ae2d-efb64a22bc1c","method":{"position":"org.apache.commons.collections4.list.PredicatedList:117","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(index))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final E E : coll) {\n                validate(aColl);\n            }\n            return decorated().addAll(index, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[],"tindex":"b0034fed-2e7f-11e6-ae2d-f5241879a7ae","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:381","type":"CtMethodImpl","sourcecode":"protected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key instanceof java.util.Collection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return key == null ? org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object : key;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[],"tindex":"b00376fe-2e7f-11e6-ae2d-9b21233d3054","method":{"position":"org.apache.commons.collections4.PredicateUtils:174","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceofPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(type);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtBinaryOperatorImpl","sourcecode":"estimatedSize < 1"},"failures":[254],"tindex":"b00376ff-2e7f-11e6-ae2d-0f6837620c59","method":{"position":"org.apache.commons.collections4.ListUtils:654","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<java.util.List<T>> partition(final java.util.List<T> list, final int size) {\n    if (size < 1) {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (size <= 0) {\n                throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n            } \n            return new org.apache.commons.collections4.ListUtils.Partition<T>(list , size);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"estimatedSize":"size"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,13,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,132,420,421,133,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,135,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,137,452,453,454,455,456,457,458,459,460,139,461,462,463,464,465,466,141,467,468,469,470,471,472,143,473,474,475,476,477,478,145,479,480,481,482,483,484,146,485,486,487,488,489,490,491,492,493,195,196,197,198,494,495,496,497,498,499,500,154,158,162,501,502,503,166,170,174,504,505,506,507,508,509],"tindex":"b0037700-2e7f-11e6-ae2d-29daf3bdfd40","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof org.w3c.dom.Node) {\n        {\n            return decorated().contains(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:124","type":"CtBinaryOperatorImpl","sourcecode":"largestKey == (-1)"},"failures":[],"tindex":"b0039e11-2e7f-11e6-ae2d-fdb755f3623f","method":{"position":"org.apache.commons.collections4.MapUtils:782","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key, final int defaultValue) {\n    if (defaultValue == (-1)) {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return defaultValue;\n            } \n            return integerObject.intValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"largestKey":"defaultValue"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:261","type":"CtUnaryOperatorImpl","sourcecode":"!(obj1 == null ? obj2 == null : obj1.equals(obj2))"},"failures":[],"tindex":"b0039e12-2e7f-11e6-ae2d-a3fb0f71fbed","method":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:109","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (!(object == null ? object == null : obj1.equals(obj2))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object instanceof java.util.Collection<?>) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((org.apache.commons.collections4.comparators.ReverseComparator.this) == object) {\n                        return true;\n                    } \n                    if (null == object) {\n                        return false;\n                    } \n                    if (object.getClass().equals(org.apache.commons.collections4.comparators.ReverseComparator.this.getClass())) {\n                        final org.apache.commons.collections4.comparators.ReverseComparator<?> org.apache.commons.collections4.comparators.ReverseComparator<?> = ((org.apache.commons.collections4.comparators.ReverseComparator<?>)(object));\n                        return java.util.Comparator<E>.equals(thatrc.java.util.Comparator<?>);\n                    } \n                    return false;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj2":"object","obj1":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[510,511],"tindex":"b003c523-2e7f-11e6-ae2d-bfa3172d256e","method":{"position":"org.apache.commons.collections4.functors.MapTransformer:49","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        {\n            if (map == null) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            return new org.apache.commons.collections4.functors.MapTransformer<I, O>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(y, dataElement)"},"failures":[176,175,177,178,82,83,179,180,181,182,183,184,185,186,23,24,187,25,26,27,188,189,28,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,84,85,212,213,214,215,216,217,218,219,220,221,222,223,224,29,30,225,31,32,33,226,227,34,228,35,86,229,36,37,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250],"tindex":"b003c524-2e7f-11e6-ae2d-fb34fe3d4bba","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:802","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getRightChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(node, dataElement)) {\n        {\n            return node == null ? null : node.getRight(dataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"y":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:123","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[512,513,514,515,516,517],"tindex":"b003c525-2e7f-11e6-ae2d-bb72525808a7","method":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:121","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> comparatorPredicate(final T object, final java.util.Comparator<T> comparator, final org.apache.commons.collections4.functors.ComparatorPredicate.Criterion criterion) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                throw new java.lang.IllegalArgumentException(\"Comparator must not be null.\");\n            } \n            if (criterion == null) {\n                throw new java.lang.IllegalArgumentException(\"Criterion must not be null.\");\n            } \n            return new org.apache.commons.collections4.functors.ComparatorPredicate<T>(object , comparator , criterion);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:716","type":"CtBinaryOperatorImpl","sourcecode":"current == tree"},"failures":[],"tindex":"b003ec36-2e7f-11e6-ae2d-1948e9fb8edf","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1195","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> previousEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> start) {\n    if (start == start) {\n        {\n            if ((start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                throw new java.lang.IllegalArgumentException(\"must have come from somewhere!\");\n            } \n            if ((start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == start) {\n                if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                    return start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    return followRight(start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n                }\n            } else {\n                org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                while (((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (node == (node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n                    node = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n                if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                    return null;\n                } \n                if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                    if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n                            return null;\n                        } else {\n                            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        }\n                    } else {\n                        return node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    }\n                } else {\n                    return followRight(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"current":"start","tree":"start"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl","sourcecode":"collectionFactory == null"},"failures":[],"tindex":"b0041347-2e7f-11e6-ae2d-2f13dc509552","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:120","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, ? super C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.MultiValueMap<K, V>(map , collectionFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtBinaryOperatorImpl","sourcecode":"(currentIndex) == (wrappedIteratorIndex)"},"failures":[],"tindex":"b0041348-2e7f-11e6-ae2d-0f20b8f131ec","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isPrefix(final java.lang.String prefix, final int offsetInBits, final int lengthInBits, final java.lang.String key) {\n    if (lengthInBits == offsetInBits) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (offsetInBits > 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                        throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n                    } \n                    final java.lang.String java.lang.String = prefix.substring((offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)), (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)));\n                    return key.startsWith(s1);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"wrappedIteratorIndex":"offsetInBits","currentIndex":"lengthInBits"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:208","type":"CtBinaryOperatorImpl","sourcecode":"entry == (header)"},"failures":[],"tindex":"b0043a59-2e7f-11e6-ae2d-6bacaacc12d0","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:317","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryBefore(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == entry) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","header":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtBinaryOperatorImpl","sourcecode":"bound > len"},"failures":[],"tindex":"b0043a5a-2e7f-11e6-ae2d-83400decd0c7","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:582","type":"CtMethodImpl","sourcecode":"protected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (hashIndex > hashIndex) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (previous == null) {\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } else {\n                previous.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"hashIndex","bound":"hashIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[518],"tindex":"b004616b-2e7f-11e6-ae2d-abe101434070","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:714","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1) {\n    if ((key1 instanceof java.util.Map<?, ?>) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((multi.size()) >= 1) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551],"tindex":"b004616c-2e7f-11e6-ae2d-e7f229e2babc","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:179","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"b004887d-2e7f-11e6-ae2d-91486cab3cfe","method":{"position":"org.apache.commons.collections4.BagUtils:149","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.CollectionBag.collectionBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b004887e-2e7f-11e6-ae2d-ff9a82835a98","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void putAll(final java.util.Map<? extends K, ?> map) {\n    if (map != null) {\n        {\n            if (map != null) {\n                {\n                    if (map instanceof org.apache.commons.collections4.MultiMap) {\n                        for (final java.util.Map.Entry<? extends K, java.lang.Object> java.util.Map.Entry<? extends K, java.lang.Object> : ((org.apache.commons.collections4.MultiMap<? extends K, V>)(map)).entrySet()) {\n                            putAll(entry.getKey(), ((java.util.Collection<V>)(entry.getValue())));\n                        }\n                    } else {\n                        for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : map.entrySet()) {\n                            put(entry.getKey(), entry.getValue());\n                        }\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[],"tindex":"b004887f-2e7f-11e6-ae2d-6166eca51e53","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:205","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key instanceof org.apache.commons.collections4.KeyValue) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(super.getEntry(key)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[552,553,554,555,556],"tindex":"b004af90-2e7f-11e6-ae2d-13e03f13f070","method":{"position":"org.apache.commons.collections4.map.SingletonMap:221","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if ((key instanceof java.util.Map<?, ?>) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return isEqualKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:157","type":"CtInvocationImpl","sourcecode":"it.hasNext()"},"failures":[557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,148,149,150,580,581,582,583,584,585,586,587,588,151,152,153,154,155,156,157,158,159,160,161,162,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,163,164,165,166,167,168,169,170,171,172,173,174,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631],"tindex":"b004af91-2e7f-11e6-ae2d-0d99487dccc7","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:264","type":"CtMethodImpl","sourcecode":"protected java.util.Iterator<K> createKeySetIterator(final java.util.Iterator<K> iterator) {\n    if (iterator.hasNext()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySetIterator<K>(iterator , org.apache.commons.collections4.bidimap.AbstractDualBidiMap.this);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"it":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtBinaryOperatorImpl","sourcecode":"estimatedSize < 1"},"failures":[632],"tindex":"b004af92-2e7f-11e6-ae2d-0fb035c1d1dd","method":{"position":"org.apache.commons.collections4.IteratorUtils:378","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start) {\n    if (start < 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"estimatedSize":"start"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":75,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}