{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":103,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":169,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":216,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":124,"org.apache.commons.collections4.QueueUtilsTest.testEmptyQueue":126,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":90,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":164,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":59,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":192,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":157,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":140,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":145,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":184,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectEqualsSelf":207,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":14,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":165,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":15,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":180,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":199,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":109,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":63,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":186,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":193,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":92,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":161,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray2":136,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":60,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueCompatibility":133,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":34,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":55,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":29,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":73,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":110,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":194,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":3,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testNormalIteration":203,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":154,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":176,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":195,"org.apache.commons.collections4.map.ListOrderedMap2Test.testIndexOf":16,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":120,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":160,"org.apache.commons.collections4.TransformerUtilsTest.testInstantiateTransformerNull":23,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":5,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":7,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":123,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":115,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":22,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":179,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":66,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":83,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":54,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":188,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":82,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":74,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":98,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":21,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnmodifiable":129,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":62,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":119,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testRemove":206,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":189,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectHashCodeEqualsContract":212,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":57,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":89,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":80,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":108,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":172,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":65,"org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf":12,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testDelayedPushback":201,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":25,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":125,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":37,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":144,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":58,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueCompatibility":130,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":112,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":71,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":56,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSimpleSerialization":150,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":69,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":41,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":111,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":167,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":93,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCanonicalEmptyCollectionExists":149,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":191,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":142,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":122,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNonEmptyMap":101,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSerializeDeserializeThenCompare":143,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":113,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":118,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":39,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testFullIterator":205,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":178,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":182,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":168,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsContract":151,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":24,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":64,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":72,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":159,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":94,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":18,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":158,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":36,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":162,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":31,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":1,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNull":99,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testEqualsNull":209,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":0,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":32,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":26,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":171,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testSerializeDeserializeThenCompare":214,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":170,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":50,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCanonicalFullCollectionExists":147,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueSerialization":134,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":196,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueRemove":127,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":106,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":105,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":104,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":95,"org.apache.commons.collections4.map.LRUMapTest.testClone":19,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":6,"org.apache.commons.collections4.CollectionUtilsTest.find":61,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testCanonicalFullCollectionExists":208,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEqualsNull":148,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":70,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":52,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionSize":137,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testSimpleSerialization":211,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":121,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":181,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":198,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":48,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":47,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":163,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":46,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueElement":131,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":156,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":45,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIsEmpty":141,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectHashCodeEqualsSelfHashCode":213,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":215,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":197,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToString":138,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":173,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":91,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":153,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":10,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":190,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectEqualsSelf":146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":88,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":8,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiClear":2,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsSelfHashCode":152,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap":102,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":139,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testEmptyIterator":204,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":87,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":4,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":185,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":166,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":183,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":107,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":135,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":116,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":33,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":76,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":75,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":67,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":30,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":11,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testCanonicalEmptyCollectionExists":210,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":155,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":53,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testMultiplePushback":200,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testImmediatePushback":202,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":79,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":114,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":42,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":77,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":117,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":100,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testDecorateFactory":128,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":187,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueSerialization":132,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":174,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":175,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":177},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"f4db9957-2eb1-11e6-a8be-3f2db590fabe","method":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(set , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:117","type":"CtBinaryOperatorImpl","sourcecode":"set1 == set2"},"failures":[0],"tindex":"f4dc83b8-2eb1-11e6-a8be-017a0d821fa7","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:146","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"f4dcaac9-2eb1-11e6-a8be-7537f0662f9b","method":{"position":"org.apache.commons.collections4.list.PredicatedList:137","type":"CtMethodImpl","sourcecode":"public java.util.List<E> subList(final int fromIndex, final int toIndex) {\n    if (toIndex < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = decorated().subList(fromIndex, toIndex);\n            return new org.apache.commons.collections4.list.PredicatedList<E>(sub , org.apache.commons.collections4.Predicate<? super E>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"toIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:172","type":"CtInvocationImpl","sourcecode":"hm.isEmpty()"},"failures":[1,2,3,4,5,6,7,8,9,10,11],"tindex":"f4dcaaca-2eb1-11e6-a8be-138b901d56fa","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap != null) {\n        {\n            if (reverseMap.isEmpty()) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"hm":"reverseMap"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:153","type":"CtBinaryOperatorImpl","sourcecode":"answer != null"},"failures":[12,13,14,15,16],"tindex":"f4dde34b-2eb1-11e6-a8be-3139717ff3a6","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:410","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<K>.indexOf(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[17,18,19,20,21,22],"tindex":"f4de0a5c-2eb1-11e6-a8be-a301ea005301","method":{"position":"org.apache.commons.collections4.map.LRUMap:175","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            moveToMRU(entry);\n            return entry.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f4de0a5d-2eb1-11e6-a8be-89814835d4df","method":{"position":"org.apache.commons.collections4.MapUtils:297","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Float) {\n                return ((java.lang.Float)(answer));\n            } \n            return java.lang.Float.valueOf(answer.floatValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[23],"tindex":"f4de316e-2eb1-11e6-a8be-efe6047551ec","method":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:109","type":"CtMethodImpl","sourcecode":"public T transform(final java.lang.Class<? extends T> input) {\n    if (input == null) {\n        {\n            try {\n                if (input == null) {\n                    throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Input object was not an instanceof Class, it was a null object\");\n                } \n                final java.lang.reflect.Constructor<? extends T> java.lang.reflect.Constructor<? extends T> = input.getConstructor(java.lang.Class<?>[]);\n                return con.newInstance(java.lang.Object[]);\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: The constructor must exist and be public \");\n            } catch (final java.lang.InstantiationException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: InstantiationException\" , ex);\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor must be public\" , ex);\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor threw an exception\" , ex);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:62","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>"},"failures":[],"tindex":"f4de316f-2eb1-11e6-a8be-71b63a08a4cc","method":{"position":"org.apache.commons.collections4.IteratorUtils:824","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n        {\n            return org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[24],"tindex":"f4de3170-2eb1-11e6-a8be-83a4a505f615","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:61","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.collection.TransformedCollection<E> transformingCollection(final java.util.Collection<E> coll, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.collection.TransformedCollection<E>(coll , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:323","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Double"},"failures":[],"tindex":"f4de5781-2eb1-11e6-a8be-43a16039fce0","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:413","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Double) {\n        {\n            if ((obj instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n                return false;\n            } \n            return (((org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger)(obj)).int) == (int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[],"tindex":"f4de5782-2eb1-11e6-a8be-8b9a505c630e","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:73","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value instanceof org.w3c.dom.Node) {\n        {\n            return decorated().removeValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof org.apache.commons.collections4.ResettableIterator"},"failures":[],"tindex":"f4de5783-2eb1-11e6-a8be-198a0610bf3d","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:47","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.ResettableIterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"f4de7e94-2eb1-11e6-a8be-e52f7a4a630b","method":{"position":"org.apache.commons.collections4.IteratorUtils:744","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> loopingIterator(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingIterator<E>(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[25,26],"tindex":"f4de7e95-2eb1-11e6-a8be-576e56a69b34","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:174","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().removeAll(coll);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:532","type":"CtBinaryOperatorImpl","sourcecode":"h == (root)"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"tindex":"f4dea5a6-2eb1-11e6-a8be-adfeb2b40036","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:610","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"node","h":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[61],"tindex":"f4dea5a7-2eb1-11e6-a8be-b91502f489f4","method":{"position":"org.apache.commons.collections4.CollectionUtils:641","type":"CtMethodImpl","sourcecode":"public static <T>T find(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if ((collection != null) && (predicate != null)) {\n                for (final T T : collection) {\n                    if (predicate.evaluate(item)) {\n                        return item;\n                    } \n                }\n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:697","type":"CtBinaryOperatorImpl","sourcecode":"doubleObject == null"},"failures":[],"tindex":"f4deccb8-2eb1-11e6-a8be-2f2d7eebfdd1","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:714","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1) {\n    if (key1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((multi.size()) >= 1) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"doubleObject":"key1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:408","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],"tindex":"f4deccb9-2eb1-11e6-a8be-e962cf05db39","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:132","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i++;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98],"tindex":"f4def3ca-2eb1-11e6-a8be-c9581e24643f","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1533","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            return (node != null) && (node.getValue().equals(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:215","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"f4e02c4b-2eb1-11e6-a8be-217c10a2e9b4","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:121","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"f4e0535c-2eb1-11e6-a8be-690517ec2d97","method":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:134","type":"CtMethodImpl","sourcecode":"public void setEnumeration(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.EnumerationIterator.this.java.util.Enumeration<? extends E> = enumeration;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtBinaryOperatorImpl","sourcecode":"(other.size()) != 1"},"failures":[99,100,101,102],"tindex":"f4e0535d-2eb1-11e6-a8be-89b2763ea38b","method":{"position":"org.apache.commons.collections4.MapUtils:1204","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Map<?, ?> map) {\n    if ((map.size()) != 1) {\n        {\n            return (map == null) || (map.isEmpty());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[103,104,105,106,107],"tindex":"f4e07a6e-2eb1-11e6-a8be-dd5a36ae1c06","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1544","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            if ((node != null) && (node.getValue().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"f4e07a6f-2eb1-11e6-a8be-7fbc8637ac4e","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:231","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"f4e0a180-2eb1-11e6-a8be-8931c86a451b","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:224","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            final boolean boolean = super.retainAll(coll);\n            if (changed) {\n                reindex();\n            } \n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:160","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Number"},"failures":[108,109,110,111,112,113,114,115,116,117,118,119],"tindex":"f4e0a181-2eb1-11e6-a8be-d9009fdb45ad","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:108","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Number) {\n        {\n            return java.util.Map<E, ? super V>.containsKey(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[120,121,122],"tindex":"f4e0a182-2eb1-11e6-a8be-2d3f17f4da72","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:134","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Closure<?>... closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n            } \n            for (int int = 0 ; i < (closures.int) ; i++) {\n                if ((closures[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152],"tindex":"f4e0c893-2eb1-11e6-a8be-cd5ddcb421d9","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Queue<E> java.util.Queue<E> = ((java.util.Queue<E>)(queue));\n                return tmpQueue;\n            } \n            return new org.apache.commons.collections4.queue.UnmodifiableQueue<E>(queue);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:257","type":"CtBinaryOperatorImpl","sourcecode":"reuse == null"},"failures":[153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,108,109,183,184,110,185,111,186,187,112,113,188,189,190,191,192,193,194,114,115,195,196,116,197,117,198,199,118,119],"tindex":"f4e0c894-2eb1-11e6-a8be-f11bc6179d4d","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:476","type":"CtMethodImpl","sourcecode":"protected void updateEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final V newValue) {\n    if (entry == null) {\n        {\n            entry.setValue(newValue);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reuse":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"f4e0efa5-2eb1-11e6-a8be-d53f65a5bdcc","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:764","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if ((key3 instanceof java.util.Map) == false) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((((multi.size()) >= 3) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key3"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:157","type":"CtBinaryOperatorImpl","sourcecode":"((object == null) && (current == null)) || ((object != null) && (object.equals(current)))"},"failures":[],"tindex":"f4e0efa6-2eb1-11e6-a8be-21fcf754b18d","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:507","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object value) {\n    if (((value == null) && (value == null)) || ((object != null) && (object.equals(current)))) {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.remove(value);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<java.lang.Object, V>.remove(key);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"current":"value","object":"value"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[],"tindex":"f4e116b7-2eb1-11e6-a8be-db9d324276ef","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:79","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:212","type":"CtBinaryOperatorImpl","sourcecode":"(currentIterator) == null"},"failures":[200,201,202,203,204,205,206,207,208,209,210,211,212,213,214],"tindex":"f4e1da08-2eb1-11e6-a8be-cd8a33b823e2","method":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PushbackIterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PushbackIterator<E>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentIterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"f4e20119-2eb1-11e6-a8be-5dbd09ccc484","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1214","type":"CtBinaryOperatorImpl","sourcecode":"iterable instanceof java.util.List<?>"},"failures":[215],"tindex":"f4e2011a-2eb1-11e6-a8be-958fef591d40","method":{"position":"org.apache.commons.collections4.CollectionUtils:705","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (collection != null) && (closure != null) ? org.apache.commons.collections4.CollectionUtils.forAllButLastDo(collection.iterator(), closure) : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterable":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[],"tindex":"f4e2011b-2eb1-11e6-a8be-0be85f8c510b","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap != null) {\n        {\n            if (reverseMap.isEmpty()) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"reverseMap"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:112","type":"CtBinaryOperatorImpl","sourcecode":"(item.isEmpty()) == false"},"failures":[216],"tindex":"f4e2282c-2eb1-11e6-a8be-09aeded27ff9","method":{"position":"org.apache.commons.collections4.SetUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if ((set.isEmpty()) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.PredicatedSet.predicatedSet(set, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"item":"set"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":38,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}