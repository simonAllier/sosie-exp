{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":157,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":83,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":141,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":22,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":94,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":120,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":129,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":121,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":122,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":97,"org.apache.commons.collections4.map.StaticBucketMapTest.testEqualsNull":31,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":110,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":1,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":12,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":78,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":158,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":109,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":11,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":112,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testCanonicalEmptyCollectionExists":91,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":54,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":174,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":75,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":68,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":100,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":163,"org.apache.commons.collections4.CollectionUtilsTest.collect":15,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":82,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":162,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":21,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":34,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":128,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":64,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":103,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":19,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":2,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":46,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":164,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":175,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":5,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":9,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":144,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":53,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":69,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":130,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":131,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":96,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":108,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":79,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":65,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":134,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":156,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":142,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":25,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":99,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":20,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":152,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":173,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":66,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":72,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":71,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":153,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":70,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":77,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEmptyMapCompatibility":63,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":73,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":132,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":33,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":106,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":117,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":168,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":42,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":150,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":113,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":40,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testCanonicalFullCollectionExists":92,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":149,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":0,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":127,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":116,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":98,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":104,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectEqualsSelf":85,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":105,"org.apache.commons.collections4.CollectionUtilsTest.transform2":13,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":80,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":159,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":18,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":50,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":176,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":17,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":86,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":95,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":123,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":119,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":14,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":124,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":125,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":115,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":126,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":36,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":62,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":27,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":177,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":59,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":111,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":3,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":45,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":133,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":154,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":155,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":39,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testSimpleSerialization":90,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":41,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":107,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":57,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":48,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":88,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":135,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":169,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":138,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":4,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":43,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":51,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":76,"org.apache.commons.collections4.map.StaticBucketMapTest.testObjectEqualsSelf":30,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":148,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":178,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":145,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":37,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":170,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":74,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":160,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":61,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":24,"org.apache.commons.collections4.map.StaticBucketMapTest.testObjectHashCodeEqualsContract":32,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":139,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":8,"org.apache.commons.collections4.ListUtilsTest.testDefaultIfNull":16,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":81,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":52,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":58,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":84,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testSerializeDeserializeThenCompare":89,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":38,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":7,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":44,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":136,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":179,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":172,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":102,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":161,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":47,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":146,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":35,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsSelfHashCode":87,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":29,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":118,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":143,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":67,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":55,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":171,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":60,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":151,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":114,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":28,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":10,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":101,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":93,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":147,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":137,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":166,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":167,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":165,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":140,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":6},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:68","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[0],"tindex":"7d5bd0de-2e71-11e6-ba59-675f92ce8932","method":{"position":"org.apache.commons.collections4.ClosureUtils:218","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if (closures == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:231","type":"CtBinaryOperatorImpl","sourcecode":"(position1 == null) || (position2 == null)"},"failures":[1,2],"tindex":"7d5c942f-2e71-11e6-ba59-0db7286f15d2","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1505","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if ((o == null) || (o == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return containsValue(o);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"position1":"o","position2":"o"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1265","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[3],"tindex":"7d5cbb40-2e71-11e6-ba59-53b10250819d","method":{"position":"org.apache.commons.collections4.IteratorUtils:412","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end) {\n    if (start == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"start"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtBinaryOperatorImpl","sourcecode":"removeCollection == null"},"failures":[],"tindex":"7d5cbb41-2e71-11e6-ba59-71da1bb09fad","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:136","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<E> transform(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(coll.size());\n            for (final E E : coll) {\n                list.add(transform(item));\n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"removeCollection":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[4],"tindex":"7d5ce252-2e71-11e6-ba59-b588c910e175","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:246","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                result |= remove(name);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[5],"tindex":"7d5d0963-2e71-11e6-ba59-3301d83e34a9","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtBinaryOperatorImpl","sourcecode":"cmp < 0"},"failures":[],"tindex":"7d5d0964-2e71-11e6-ba59-4fc746bf12cd","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:708","type":"CtMethodImpl","sourcecode":"private void atomic(final java.lang.Runnable r, final int bucket) {\n    if (bucket < 0) {\n        {\n            if (bucket >= (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int)) {\n                r.run();\n                return ;\n            } \n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][bucket]) {\n                atomic(r, (bucket + 1));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"bucket"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtBinaryOperatorImpl","sourcecode":"(m == 0) || (n == 0)"},"failures":[6],"tindex":"7d5d3075-2e71-11e6-ba59-c3c1ee986fd7","method":{"position":"org.apache.commons.collections4.IteratorUtils:316","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end) {\n    if ((start == 0) || (end == 0)) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start , end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"start","n":"end"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"7d5d5786-2e71-11e6-ba59-1f3866aaa9b5","method":{"position":"org.apache.commons.collections4.MapUtils:677","type":"CtMethodImpl","sourcecode":"public static <K>float getFloatValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (floatObject == null) {\n                return 0.0F;\n            } \n            return floatObject.floatValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtBinaryOperatorImpl","sourcecode":"newCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY)"},"failures":[7,8,9,10,11,12],"tindex":"7d5d5787-2e71-11e6-ba59-b9583eb59369","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:169","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake getMiddleSnake(final int start1, final int end1, final int start2, final int end2) {\n    if (end2 > start2) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = end1 - start1;\n            final int int = end2 - start2;\n            if ((m == 0) || (n == 0)) {\n                return null;\n            } \n            final int int = m - n;\n            final int int = n + m;\n            final int int = ((sum % 2) == 0 ? sum : sum + 1) / 2;\n            int[][(1 + offset)] = start1;\n            int[][(1 + offset)] = end1 + 1;\n            for (int int = 0 ; d <= offset ; ++d) {\n                for (int int = -d ; k <= d ; k += 2) {\n                    final int int = k + offset;\n                    if ((k == (-d)) || ((k != d) && ((int[][(i - 1)]) < (int[][(i + 1)])))) {\n                        int[][i] = int[][(i + 1)];\n                    } else {\n                        int[][i] = (int[][(i - 1)]) + 1;\n                    }\n                    int int = int[][i];\n                    int int = ((x - start1) + start2) - k;\n                    while (((x < end1) && (y < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = ++x;\n                        ++y;\n                    }\n                    if ((((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))) {\n                        if ((int[][(i - delta)]) <= (int[][i])) {\n                            return buildSnake(int[][(i - delta)], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n                for (int int = delta - d ; k <= (delta + d) ; k += 2) {\n                    final int int = (k + offset) - delta;\n                    if ((k == (delta - d)) || ((k != (delta + d)) && ((int[][(i + 1)]) <= (int[][(i - 1)])))) {\n                        int[][i] = (int[][(i + 1)]) - 1;\n                    } else {\n                        int[][i] = int[][(i - 1)];\n                    }\n                    int int = (int[][i]) - 1;\n                    int int = ((x - start1) + start2) - k;\n                    while (((x >= start1) && (y >= start2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = x--;\n                        y--;\n                    }\n                    if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n                        if ((int[][i]) <= (int[][(i + delta)])) {\n                            return buildSnake(int[][i], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n            }\n            throw new java.lang.RuntimeException(\"Internal Error\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"start2","newCapacity":"end2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.TransformedQueue:77","type":"CtBinaryOperatorImpl","sourcecode":"(queue.size()) > 0"},"failures":[],"tindex":"7d5dccb8-2e71-11e6-ba59-1bcba5f90a08","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:379","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Collection<E> coll) {\n    if ((coll.size()) > 0) {\n        {\n            java.util.List<java.util.Collection<E>>.remove(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"7d5dccb9-2e71-11e6-ba59-fb30aaf5666e","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:206","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = super.remove(object);\n            if (removed) {\n                removeFromIndex(((C)(object)));\n            } \n            return removed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtBinaryOperatorImpl","sourcecode":"key5 != null"},"failures":[],"tindex":"7d5df3ca-2e71-11e6-ba59-03786ff1a859","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key5":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl","sourcecode":"transform == null"},"failures":[13,14,15],"tindex":"7d5df3cb-2e71-11e6-ba59-b53db27e195f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1063","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.util.Iterator<? extends I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if (transformer == null) {\n        {\n            if ((inputIterator != null) && (transformer != null)) {\n                while (inputIterator.hasNext()) {\n                    final I I = inputIterator.next();\n                    final O O = transformer.transform(item);\n                    outputCollection.add(value);\n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[16],"tindex":"7d5e1adc-2e71-11e6-ba59-49930ba95e83","method":{"position":"org.apache.commons.collections4.ListUtils:75","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> defaultIfNull(final java.util.List<T> list, final java.util.List<T> defaultList) {\n    if (defaultList == null) {\n        {\n            return list == null ? defaultList : list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"defaultList"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"7d5e41ed-2e71-11e6-ba59-ff7a42018c13","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:143","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return decorated().retainAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl","sourcecode":"transform == null"},"failures":[17,18],"tindex":"7d5e41ee-2e71-11e6-ba59-91b4ecb2e871","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:57","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (defaultTransformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((predicates.int) != (transformers.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(predicates , transformers , defaultTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"defaultTransformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:586","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[],"tindex":"7d5e68ff-2e71-11e6-ba59-3fb63d91eb97","method":{"position":"org.apache.commons.collections4.MapUtils:364","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<K, V> map, final K key, final V defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final V V = map.get(key);\n                if (answer != null) {\n                    return answer;\n                } \n            } \n            return defaultValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"7d5e9010-2e71-11e6-ba59-83e40d2549f4","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"7d5e9011-2e71-11e6-ba59-876aab7bbaa6","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if ((key instanceof java.util.Map.Entry) == false) {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.remove(key);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<java.lang.Object, K>.remove(value);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32],"tindex":"7d5eb722-2e71-11e6-ba59-0173a1c6771e","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection<?>) {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            return entrySet().equals(other.entrySet());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtBinaryOperatorImpl","sourcecode":"(currentIndex) == 0"},"failures":[33],"tindex":"7d5ede33-2e71-11e6-ba59-8f066ae14d3e","method":{"position":"org.apache.commons.collections4.map.LinkedMap:154","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntry(index).getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentIndex":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[],"tindex":"7d5ede34-2e71-11e6-ba59-2d03749c8853","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:577","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if ((key4 instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key4"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:218","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Byte"},"failures":[34,35,36],"tindex":"7d5f0545-2e71-11e6-ba59-8fec1bfb3a3e","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:86","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.lang.Byte) {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[37,38],"tindex":"7d5f0546-2e71-11e6-ba59-01f60a60be94","method":{"position":"org.apache.commons.collections4.CollectionUtils:606","type":"CtMethodImpl","sourcecode":"public static <O>int cardinality(final O obj, final java.lang.Iterable<? super O> coll) {\n    if (coll instanceof java.util.Set<?>) {\n        {\n            if (coll instanceof java.util.Set<?>) {\n                return ((java.util.Set<? super O>)(coll)).contains(obj) ? 1 : 0;\n            } \n            if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n                return ((org.apache.commons.collections4.Bag<? super O>)(coll)).getCount(obj);\n            } \n            int int = 0;\n            if (obj == null) {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (element == null) {\n                        count++;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (obj.equals(element)) {\n                        count++;\n                    } \n                }\n            }\n            return count;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:218","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Byte"},"failures":[4,39],"tindex":"7d5f0547-2e71-11e6-ba59-0d66ab6a3507","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:230","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Byte) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = java.util.Set<E>.remove(object);\n            if (result) {\n                super.remove(object);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"tindex":"7d5f2c58-2e71-11e6-ba59-192556614eac","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final org.apache.commons.collections4.OrderedBidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedBidiMap<K, V> org.apache.commons.collections4.OrderedBidiMap<K, V> = ((org.apache.commons.collections4.OrderedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[93],"tindex":"7d5f2c59-2e71-11e6-ba59-659095e3fde5","method":{"position":"org.apache.commons.collections4.MapUtils:1217","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.collections4.MapUtils.isEmpty(map));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"7d5f536a-2e71-11e6-ba59-6f11fe89d157","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll.size()) > (coll.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next(), 1);\n                changed = changed || added;\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtBinaryOperatorImpl","sourcecode":"(index < 0) || (index >= sz)"},"failures":[],"tindex":"7d5f536b-2e71-11e6-ba59-91152b8ccd7a","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:477","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<V> createCollection(final int size) {\n    if ((size < 0) || (index >= size)) {\n        {\n            return org.apache.commons.collections4.Factory<? extends java.util.Collection<V>>.create();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sz":"size","index":"size"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"7d5f536c-2e71-11e6-ba59-ebac728cd1e1","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179],"tindex":"7d5f7a7d-2e71-11e6-ba59-dd39b3c3dcf4","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:470","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V> createEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next, final int hashCode, final K key, final V value) {\n    if (hashCode == (-1)) {\n        {\n            return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>(org.apache.commons.collections4.map.AbstractReferenceMap.this , next , hashCode , key , value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"hashCode"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":32,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}