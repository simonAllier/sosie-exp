{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":432,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":746,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":504,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":457,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":559,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":690,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":124,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":31,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":25,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":237,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":364,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":802,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":317,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":105,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":36,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":602,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":582,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":200,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":398,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":531,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":696,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":401,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":730,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":110,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":591,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":747,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":394,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking":811,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":761,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":409,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":540,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":314,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":669,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":388,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":382,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":386,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":88,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":285,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":346,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":456,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":353,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":562,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":577,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":611,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":522,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":805,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":508,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":198,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":583,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":34,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":322,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":253,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":201,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":16,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":803,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":439,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":228,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":734,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":705,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":186,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":365,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":706,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":707,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":357,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":324,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":689,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":39,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":501,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":620,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":270,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":433,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":24,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":1,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":221,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":400,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":590,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":510,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":810,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":212,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":437,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":143,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":182,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":292,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":113,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":539,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":662,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":507,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":648,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":790,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":797,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":791,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":792,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":69,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":672,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":384,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":14,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":265,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":667,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":668,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":666,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":97,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":347,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":643,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":774,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":84,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":267,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":419,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":451,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":632,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":85,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":142,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":764,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":535,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":503,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":521,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":268,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":19,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":272,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":277,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":744,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":735,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":768,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":296,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToString":52,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":288,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":755,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":683,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":454,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":592,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":308,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":223,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":604,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":786,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":560,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":415,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":473,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":438,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":748,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":749,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":750,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":232,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":241,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":461,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":101,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":544,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":281,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":343,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":155,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":589,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":230,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":541,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":728,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":258,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":607,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":73,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":334,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":89,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":90,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":12,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":45,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":91,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":304,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":487,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":677,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":737,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":47,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":399,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":609,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":390,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":219,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":715,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":505,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":628,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":218,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":203,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":92,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":311,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":412,"org.apache.commons.collections4.IteratorUtilsTest.testToList":9,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":137,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":121,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":145,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":410,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":661,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":362,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":614,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":553,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetIteratorRemoveChangesMap":160,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":788,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":431,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":350,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":596,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":210,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":627,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":626,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":625,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":673,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":248,"org.apache.commons.collections4.map.LRUMapTest.testReset":584,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":33,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":806,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":249,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":550,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":759,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":427,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":518,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":546,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":79,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":245,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":644,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":199,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":530,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":597,"org.apache.commons.collections4.map.LinkedMapTest.testReset":537,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":799,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":226,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":581,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":612,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":163,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":659,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":631,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":306,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":733,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":297,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":801,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":207,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":55,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":327,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":183,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove3":154,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove2":153,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":630,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove1":152,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":478,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":213,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":168,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":490,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicateEx":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":371,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":177,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":187,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":299,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":202,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":100,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":283,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":247,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":573,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":469,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":8,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":83,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":713,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":779,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":695,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":99,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":660,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":65,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":688,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":195,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":471,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":159,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":196,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":274,"org.apache.commons.collections4.map.HashedMapTest.testClone":378,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":197,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":423,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":261,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":745,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":361,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":463,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":780,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":359,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":773,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":244,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":54,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":580,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":49,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":787,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":62,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":809,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":511,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":595,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":0,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":464,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":109,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":114,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":286,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":342,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":144,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":303,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":567,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":566,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":568,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":684,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":290,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":671,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":313,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":545,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":716,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":729,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":548,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":765,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":106,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":119,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":397,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":309,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":291,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":579,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":578,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":129,"org.apache.commons.collections4.list.TreeListTest.testBug35258":279,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":538,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":349,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":360,"org.apache.commons.collections4.map.LinkedMapTest.testClone":373,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":302,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":310,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":167,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":17,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":723,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":719,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":354,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":380,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":233,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":332,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":424,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":192,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":193,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":756,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":194,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":785,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":173,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":726,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":725,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":603,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":724,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":252,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":807,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":414,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":22,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":700,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":598,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":586,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":169,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":762,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":87,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":697,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":418,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":738,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":255,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":405,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":529,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":229,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":558,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":642,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":408,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":407,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":655,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":406,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":216,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":532,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":520,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":416,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":599,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":112,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":64,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":477,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":251,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":250,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":263,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":231,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":108,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicate":339,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":656,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":712,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":465,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":547,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":58,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":323,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":341,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":534,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":107,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":37,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":111,"org.apache.commons.collections4.map.LRUMapTest.testLRU":585,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":294,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":262,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":234,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":166,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":115,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":239,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":379,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":679,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":96,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":494,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":50,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":491,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":621,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":204,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":103,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":370,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":312,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":687,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":422,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":619,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":336,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":593,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":93,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":645,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":403,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":356,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":171,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":618,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":86,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":771,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":789,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":763,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":481,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":483,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":377,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":714,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":326,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":629,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":572,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":368,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":610,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":77,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":796,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":711,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":6,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":708,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":675,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":319,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":238,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":340,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":442,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":754,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":300,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":646,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":369,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":436,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":551,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":555,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":654,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":557,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":185,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":320,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":493,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":151,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":472,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":316,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":739,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":146,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":191,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":720,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":395,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":282,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":116,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":271,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":682,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":140,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":445,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":800,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":446,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":444,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":657,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":634,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":693,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":480,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":635,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":240,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":514,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":264,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":670,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":640,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":53,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":533,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":554,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":134,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":489,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":650,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":430,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":222,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":685,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":641,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":429,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":257,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":793,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":420,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":556,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":94,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":2,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":217,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":680,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":795,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":794,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":499,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":479,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":147,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":740,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":484,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":718,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":564,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":600,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":131,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":428,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":74,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":459,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":75,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":76,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":225,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":174,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":515,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":742,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveChangesMap":157,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":23,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":220,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":170,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":731,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":307,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":104,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":536,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":443,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":732,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":211,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":772,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":348,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":435,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":462,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":440,"org.apache.commons.collections4.list.TreeListTest.testRemove":275,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":664,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":663,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":301,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":434,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":273,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":665,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":4,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":753,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":561,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":752,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":751,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":698,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":383,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":26,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":305,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":769,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":421,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":449,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":542,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":448,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":447,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":637,"org.apache.commons.collections4.map.LRUMapTest.testClone":375,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":575,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":72,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":694,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":118,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":519,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":565,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":601,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":184,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":758,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":13,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":709,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":576,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":475,"org.apache.commons.collections4.list.TreeListTest.testListEquals":284,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":367,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":158,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":5,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":770,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":208,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":243,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":289,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":328,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":7,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":333,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":636,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":692,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":741,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":102,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":458,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":321,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":266,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":392,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":259,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":455,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":149,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":653,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":574,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":56,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":278,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":82,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":639,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":227,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":175,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":178,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":188,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":280,"org.apache.commons.collections4.ListUtilsTest.testHashCode":325,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":608,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":366,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":691,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":189,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":43,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":467,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":139,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":783,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":492,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":30,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove1":125,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove2":126,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove3":127,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":179,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":46,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":486,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":209,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":681,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":426,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":337,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":338,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":571,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":468,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":496,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":563,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":570,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":569,"org.apache.commons.collections4.functors.AllPredicateTest.nullArrayToGetInstance":351,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":757,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":374,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":81,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":181,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":674,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":402,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":798,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":782,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":345,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":95,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":298,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":482,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":224,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":717,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":606,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":162,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":526,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":527,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":528,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":804,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":778,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":722,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":485,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":808,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":190,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":460,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":678,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":616,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":638,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":51,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":148,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":781,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":44,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":727,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":699,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":122,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":136,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":549,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":214,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":633,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":385,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":512,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":295,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":117,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":396,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":287,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":647,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":70,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":594,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":498,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":138,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":417,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":150,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":495,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":743,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":40,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":389,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":466,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":128,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":513,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":381,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":63,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":260,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":161,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":488,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":376,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":710,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":11,"org.apache.commons.collections4.ListUtilsTest.testEmptyIfNull":67,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":543,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":450,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":32,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":335,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":28,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":649,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":236,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":775,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":276,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":686,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":133,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":120,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicateEx1":813,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":41,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":235,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicateEx1":18,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":355,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":500,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":784,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":411,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":242,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":404,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":172,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx1":352,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":330,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":391,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":676,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":20,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":329,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":42,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":605,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":372,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":344,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":502,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":658,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":57,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":164,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":331,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":35,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":413,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":452,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":315,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":652,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveChangesMap":130,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":651,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":425,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":256,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":180,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":29,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":617,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":760,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":246,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":524,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":525,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":132,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":176,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":523,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":701,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":766,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":441,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":59,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":206,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":517,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":776,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":453,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":254,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":702,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":703,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":363,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":721,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":615,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":156,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":393,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking2":812,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":387,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":777,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":27,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":509,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":506,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":516,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":318,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":474,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":587,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":358,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":624,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":269,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":71,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":767,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":135,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":141,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":622,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":623,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":165,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":215,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":704,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":552,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":470,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":736,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":293,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":476,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":588,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":21,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":205,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":497,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":613},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[0],"tindex":"c6b6e141-2eae-11e6-baa8-276d259f4aab","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[],"tindex":"c6b7a492-2eae-11e6-baa8-47b6302d706e","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:631","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(obj);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    final java.lang.Object java.lang.Object = n.getKey();\n                    if ((k == obj) || ((k != null) && (k.equals(obj)))) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(k);\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"c6b7cba3-2eae-11e6-baa8-fb05fd9c7921","method":{"position":"org.apache.commons.collections4.ComparatorUtils:172","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullHighComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[1],"tindex":"c6b7f2b4-2eae-11e6-baa8-9527a6a811da","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:174","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    synchronized(java.lang.Object) {\n                        return decorated().removeAll(coll);\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[2],"tindex":"c6b7f2b5-2eae-11e6-baa8-dd4c49265f33","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"c6b819c6-2eae-11e6-baa8-8fab40646081","method":{"position":"org.apache.commons.collections4.list.TransformedList:127","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getList().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[3],"tindex":"c6b819c7-2eae-11e6-baa8-214b926d7665","method":{"position":"org.apache.commons.collections4.functors.OrPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate2 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.OrPredicate<T>(predicate1 , predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"c6b840d8-2eae-11e6-baa8-4b001f6413f4","method":{"position":"org.apache.commons.collections4.MapUtils:297","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Float) {\n                return ((java.lang.Float)(answer));\n            } \n            return java.lang.Float.valueOf(answer.floatValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[4],"tindex":"c6b840d9-2eae-11e6-baa8-b5b9ecf00c42","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:146","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[5,6,7],"tindex":"c6b867ea-2eae-11e6-baa8-47f8804230f5","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:278","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"c6b867eb-2eae-11e6-baa8-433d9764195c","method":{"position":"org.apache.commons.collections4.SetUtils:246","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> orderedSet(final java.util.Set<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"c6b88efc-2eae-11e6-baa8-811bd25c2e0b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:538","type":"CtMethodImpl","sourcecode":"private V doRemoveKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:697","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[8,9,10],"tindex":"c6b88efd-2eae-11e6-baa8-711edaa0e2ff","method":{"position":"org.apache.commons.collections4.IteratorUtils:1000","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(iterator, 10);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[11,12,13,14,15],"tindex":"c6b8b60e-2eae-11e6-baa8-7f3237e995c1","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[16],"tindex":"c6b8b60f-2eae-11e6-baa8-9534475b761f","method":{"position":"org.apache.commons.collections4.PredicateUtils:352","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> eitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate1 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>onePredicate(predicate1, predicate2);\n            return onePredicate;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"c6b8dd20-2eae-11e6-baa8-5bbb821aba0b","method":{"position":"org.apache.commons.collections4.map.SingletonMap:189","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (isEqualKey(key)) {\n                return V;\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtBinaryOperatorImpl","sourcecode":"(end) < (start)"},"failures":[17],"tindex":"c6b8dd21-2eae-11e6-baa8-d11525936826","method":{"position":"org.apache.commons.collections4.IteratorUtils:335","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start, final int end) {\n    if (start < start) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start , end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start","end":"start"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[18],"tindex":"c6b90432-2eae-11e6-baa8-433bc675b02c","method":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsFalsePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (predicate == null) {\n                        throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n                    } \n                    return new org.apache.commons.collections4.functors.NullIsFalsePredicate<T>(predicate);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"c6b95253-2eae-11e6-baa8-270cbe4965fa","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1463","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return containsKey(o);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"tindex":"c6b95254-2eae-11e6-baa8-0bfb53cea72b","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:190","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : coll) {\n                if (java.util.Set<E>.add(e)) {\n                    temp.add(e);\n                } \n            }\n            return super.addAll(index, temp);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[62],"tindex":"c6b9a075-2eae-11e6-baa8-95170db6c7ba","method":{"position":"org.apache.commons.collections4.PredicateUtils:517","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"c6b9c786-2eae-11e6-baa8-e181e87da607","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:645","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Map) {\n                {\n                    if (obj == (org.apache.commons.collections4.map.ListOrderedMap.EntrySetView.this)) {\n                        return true;\n                    } \n                    return getEntrySet().equals(obj);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[63],"tindex":"c6ba15a7-2eae-11e6-baa8-6f6a1deee3c7","method":{"position":"org.apache.commons.collections4.BagUtils:214","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.bag.PredicatedSortedBag.predicatedSortedBag(bag, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndTransformers == null"},"failures":[64],"tindex":"c6ba3cb8-2eae-11e6-baa8-c5f63c47cb2a","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        {\n            if (objectsAndTransformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n            final int int = objectsAndTransformers.size();\n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                trs[(i++)] = entry.getValue();\n            }\n            return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"c6ba63c9-2eae-11e6-baa8-6f897c4221cf","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                changed |= remove(o);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[65,66],"tindex":"c6ba8ada-2eae-11e6-baa8-cf549813903a","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[67],"tindex":"c6ba8adb-2eae-11e6-baa8-c32ff8604ab3","method":{"position":"org.apache.commons.collections4.ListUtils:61","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> emptyIfNull(final java.util.List<T> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return list == null ? java.util.Collections.<T>emptyList() : list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"c6bab1ec-2eae-11e6-baa8-0d82b273cd3c","method":{"position":"org.apache.commons.collections4.MapUtils:426","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key, final java.lang.Number defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"c6bab1ed-2eae-11e6-baa8-17095b35e9e9","method":{"position":"org.apache.commons.collections4.FactoryUtils:139","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, paramTypes, args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161],"tindex":"c6bad8fe-2eae-11e6-baa8-2f770d18f948","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:146","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return java.util.Map<K, V>.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[162],"tindex":"c6bb000f-2eae-11e6-baa8-8f9dd26b1b67","method":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:51","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformedPredicate<T>(transformer , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[35,163],"tindex":"c6bb2720-2eae-11e6-baa8-6f0eb776cef1","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:94","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().listIterator(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[],"tindex":"c6bb2721-2eae-11e6-baa8-43a4a5dd5284","method":{"position":"org.apache.commons.collections4.CollectionUtils:1154","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final C[] elements) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            for (final C C : elements) {\n                changed |= collection.add(element);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[164,165,166,167,168,169,170,171,172],"tindex":"c6bb4e32-2eae-11e6-baa8-054aa492cfd0","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:488","type":"CtMethodImpl","sourcecode":"private void removeIfExpired(final java.lang.Object key, final long now) {\n    if (key != null) {\n        {\n            final java.lang.Long java.lang.Long = java.util.Map<java.lang.Object, java.lang.Long>.get(key);\n            if (isExpired(now, expirationTimeObject)) {\n                remove(key);\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[173],"tindex":"c6bb7543-2eae-11e6-baa8-01da7c260fbe","method":{"position":"org.apache.commons.collections4.CollectionUtils:1717","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> synchronizedCollection(final java.util.Collection<C> collection) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            return org.apache.commons.collections4.collection.SynchronizedCollection.synchronizedCollection(collection);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[],"tindex":"c6bb7544-2eae-11e6-baa8-4362295eedf5","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:202","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final E E : coll) {\n                result |= add(e);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[174],"tindex":"c6bb9c55-2eae-11e6-baa8-a1a5022abc33","method":{"position":"org.apache.commons.collections4.BagUtils:194","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[],"tindex":"c6bb9c56-2eae-11e6-baa8-439a83c89ce6","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:157","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Closure<T> coerce(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.Closure<T>)(closure));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[175],"tindex":"c6bbc367-2eae-11e6-baa8-59c4437052e6","method":{"position":"org.apache.commons.collections4.SetUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.set.PredicatedSet.predicatedSet(set, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205],"tindex":"c6bbc368-2eae-11e6-baa8-35c00aefc6d7","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:204","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key2 = isKeyType(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<?>)(key2)).get();\n            return key1 == key2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225],"tindex":"c6bbea79-2eae-11e6-baa8-c10e23086ab8","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:76","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            return decorated().remove(object, count);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"c6bc118a-2eae-11e6-baa8-8f825b01c97b","method":{"position":"org.apache.commons.collections4.MapUtils:526","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key, final java.lang.Float defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"c6bc118b-2eae-11e6-baa8-3989f790c00a","method":{"position":"org.apache.commons.collections4.MapUtils:641","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return 0;\n            } \n            return integerObject.intValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[226],"tindex":"c6bc389c-2eae-11e6-baa8-cf46be3a53f2","method":{"position":"org.apache.commons.collections4.functors.ForClosure:51","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (count > 3) {\n        {\n            if ((count <= 0) || (closure == null)) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            if (count == 1) {\n                return ((org.apache.commons.collections4.Closure<E>)(closure));\n            } \n            return new org.apache.commons.collections4.functors.ForClosure<E>(count , closure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"c6bc5fad-2eae-11e6-baa8-bb865080f747","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:75","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            final org.apache.commons.collections4.bag.TransformedSortedBag<E> org.apache.commons.collections4.bag.TransformedSortedBag<E> = new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[207],"tindex":"c6bc86be-2eae-11e6-baa8-7d96dfba323c","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:145","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtBinaryOperatorImpl","sourcecode":"i < 0"},"failures":[227],"tindex":"c6bcadcf-2eae-11e6-baa8-fd94ca482d8f","method":{"position":"org.apache.commons.collections4.list.PredicatedList:128","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new PredicatedListIterator(decorated().listIterator(i));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[228,229,230,231,232,233,234],"tindex":"c6bcadd0-2eae-11e6-baa8-614255dc3c24","method":{"position":"org.apache.commons.collections4.ClosureUtils:97","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> asClosure(final org.apache.commons.collections4.Transformer<? super E, ?> transformer) {\n    if (transformer == null) {\n        {\n            return org.apache.commons.collections4.functors.TransformerClosure.transformerClosure(transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:534","type":"CtUnaryOperatorImpl","sourcecode":"!(h.isInternalNode())"},"failures":[235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259],"tindex":"c6bcadd1-2eae-11e6-baa8-1f8bd1ceec08","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:480","type":"CtMethodImpl","sourcecode":"V removeEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isInternalNode())) {\n        {\n            if (h != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (h.isInternalNode()) {\n                    removeInternalEntry(h);\n                } else {\n                    removeExternalEntry(h);\n                }\n            } \n            decrementSize();\n            return h.setKeyValue(null, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[260],"tindex":"c6bcd4e2-2eae-11e6-baa8-4d5e977ab952","method":{"position":"org.apache.commons.collections4.TransformerUtils:149","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> asTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[261,262,263,264,265,266,267,209,268,269,270,271,272,273,274,223],"tindex":"c6bcd4e3-2eae-11e6-baa8-8d8bd18189cd","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:105","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            return decorated().getCount(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"c6bcd4e4-2eae-11e6-baa8-954e74cc3f1b","method":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsFalsePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (predicate == null) {\n                        throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n                    } \n                    return new org.apache.commons.collections4.functors.NullIsFalsePredicate<T>(predicate);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"c6bcd4e5-2eae-11e6-baa8-1383a01bba8d","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:412","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"c6bcfbf6-2eae-11e6-baa8-cf0be1392c59","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:186","type":"CtMethodImpl","sourcecode":"public void setListIterator(final java.util.ListIterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            org.apache.commons.collections4.iterators.FilterListIterator.this.java.util.ListIterator<? extends E> = iterator;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"c6bcfbf7-2eae-11e6-baa8-d9d8224443c0","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2111","type":"CtMethodImpl","sourcecode":"public K remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.removeValue(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310],"tindex":"c6bcfbf8-2eae-11e6-baa8-831025aa2c6f","method":{"position":"org.apache.commons.collections4.list.TreeList:413","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> get(final int index) {\n    if (index < 0) {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode.this;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = indexRelativeToMe < 0 ? getLeftSubTree() : getRightSubTree();\n            if (nextNode == null) {\n                return null;\n            } \n            return nextNode.get(indexRelativeToMe);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[311,312,313,314,315],"tindex":"c6be3479-2eae-11e6-baa8-454d839c436e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:255","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return doRemoveKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[],"tindex":"c6be347a-2eae-11e6-baa8-b1c335a22c2b","method":{"position":"org.apache.commons.collections4.set.CompositeSet:127","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[316],"tindex":"c6be347b-2eae-11e6-baa8-7b608d1fa649","method":{"position":"org.apache.commons.collections4.ClosureUtils:200","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtBinaryOperatorImpl","sourcecode":"iterable instanceof java.util.Collection<?>"},"failures":[317],"tindex":"c6be347c-2eae-11e6-baa8-69a9001a153b","method":{"position":"org.apache.commons.collections4.CollectionUtils:1104","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.lang.Iterable<? extends C> iterable) {\n    if (iterable instanceof java.util.Collection<?>) {\n        {\n            if (iterable instanceof java.util.Collection<?>) {\n                return collection.addAll(((java.util.Collection<? extends C>)(iterable)));\n            } \n            return org.apache.commons.collections4.CollectionUtils.addAll(collection, iterable.iterator());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterable":"iterable"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"c6be5b8d-2eae-11e6-baa8-752522f1b939","method":{"position":"org.apache.commons.collections4.list.TransformedList:79","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.TransformedList<E> org.apache.commons.collections4.list.TransformedList<E> = new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n            if (((transformer != null) && (list != null)) && ((list.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(list.toArray()));\n                list.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[318],"tindex":"c6be5b8e-2eae-11e6-baa8-c9c1b3d6ebe3","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:76","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((preds.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(preds[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"c6be5b8f-2eae-11e6-baa8-6d403f3ed108","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:129","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[319],"tindex":"c6be82a0-2eae-11e6-baa8-433b2f7d3aff","method":{"position":"org.apache.commons.collections4.TransformerUtils:417","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, paramTypes, args);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtBinaryOperatorImpl","sourcecode":"(collection.size()) > 0"},"failures":[],"tindex":"c6be82a1-2eae-11e6-baa8-afdd67ccf7ac","method":{"position":"org.apache.commons.collections4.ListUtils:352","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if ((collection.size()) > 0) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : collection) {\n                if (!(remove.contains(obj))) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[320,321,322,323,324],"tindex":"c6bea9b2-2eae-11e6-baa8-5d4c5af2bc46","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:246","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            for (int int = 0 ; i < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; i++) {\n                synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][i]) {\n                    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][i];\n                    while (n != null) {\n                        if (((n.V) == value) || (((n.V) != null) && (n.V.equals(value)))) {\n                            return true;\n                        } \n                        n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:58","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"c6bed0c3-2eae-11e6-baa8-895afddebf4c","method":{"position":"org.apache.commons.collections4.IteratorUtils:763","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> loopingListIterator(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (list == null) {\n                throw new java.lang.NullPointerException(\"List must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingListIterator<E>(list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[325],"tindex":"c6bed0c4-2eae-11e6-baa8-c15c3e706c77","method":{"position":"org.apache.commons.collections4.ListUtils:281","type":"CtMethodImpl","sourcecode":"public static int hashCodeForList(final java.util.Collection<?> list) {\n    if (list == null) {\n        {\n            if (list == null) {\n                return 0;\n            } \n            int int = 1;\n            final java.util.Iterator<?> java.util.Iterator<?> = list.iterator();\n            while (it.hasNext()) {\n                final java.lang.Object java.lang.Object = it.next();\n                hashCode = (31 * hashCode) + (obj == null ? 0 : obj.hashCode());\n            }\n            return hashCode;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[326,327,328],"tindex":"c6bef7d5-2eae-11e6-baa8-c91940908140","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:285","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[77,92],"tindex":"c6bf1ee6-2eae-11e6-baa8-611e25c84818","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.remove(key);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<java.lang.Object, K>.remove(value);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[329],"tindex":"c6bf1ee7-2eae-11e6-baa8-03b94493bd3f","method":{"position":"org.apache.commons.collections4.list.GrowthList:150","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        {\n            final int int = decorated().size();\n            boolean boolean = false;\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n                result = true;\n            } \n            return (decorated().addAll(index, coll)) | result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[330,331,332,321,333,334,322,335,336,337,338],"tindex":"c6bf45f8-2eae-11e6-baa8-ef8f4e17eb3a","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:575","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        {\n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"c6bf6d09-2eae-11e6-baa8-29d14889c0b4","method":{"position":"org.apache.commons.collections4.list.LazyList:111","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index > 0) {\n        {\n            final int int = decorated().size();\n            if (index < size) {\n                E E = decorated().get(index);\n                if (object == null) {\n                    object = org.apache.commons.collections4.Factory<? extends E>.create();\n                    decorated().set(index, object);\n                    return object;\n                } \n                return object;\n            } \n            for (int int = size ; i < index ; i++) {\n                decorated().add(null);\n            }\n            final E E = org.apache.commons.collections4.Factory<? extends E>.create();\n            decorated().add(object);\n            return object;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[339],"tindex":"c6bf6d0a-2eae-11e6-baa8-7f8af22db690","method":{"position":"org.apache.commons.collections4.PredicateUtils:502","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsFalsePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NullIsFalsePredicate.nullIsFalsePredicate(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:889","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[340],"tindex":"c6bf941b-2eae-11e6-baa8-aded888f2a3d","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:141","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.java.util.Iterator<? extends E> = iterator;\n            E = null;\n            boolean = false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[341,342,343,344,345,346,347,348,349],"tindex":"c6bf941c-2eae-11e6-baa8-5dd76f0e050a","method":{"position":"org.apache.commons.collections4.map.Flat3Map:197","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(key);\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                    }\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"c6bfbb2d-2eae-11e6-baa8-87533300a8b1","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[350],"tindex":"c6bfbb2e-2eae-11e6-baa8-018f5aed95ac","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            return decorated().indexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[351,352],"tindex":"c6bfe23f-2eae-11e6-baa8-a310c109e6da","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return org.apache.commons.collections4.functors.FunctorUtils.coerce(predicates[0]);\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[353,354],"tindex":"c6bfe240-2eae-11e6-baa8-9f7452146bf9","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"c6c00951-2eae-11e6-baa8-55e37ab05a66","method":{"position":"org.apache.commons.collections4.MapUtils:802","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key, final long defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return defaultValue;\n            } \n            return longObject.longValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,315,370,371],"tindex":"c6c00952-2eae-11e6-baa8-6179c2f7685a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:681","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> leastNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getLeft(dataElement)) != null) {\n                    rval = rval.getLeft(dataElement);\n                }\n            } \n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[372,343,373,374,375,376,190,377,378,379,380,381,382,383,384],"tindex":"c6c03063-2eae-11e6-baa8-ed114ee66486","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:318","type":"CtMethodImpl","sourcecode":"private void _putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        {\n            final int int = map.size();\n            if (mapSize == 0) {\n                return ;\n            } \n            final int int = ((int)((((int) + mapSize) / (float)) + 1));\n            ensureCapacity(calculateNewCapacity(newSize));\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[],"tindex":"c6c03064-2eae-11e6-baa8-f58a2fedef4e","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:128","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[385,386,387,388,389,390,391,392,393,394,395,396,397,398,355,356,399,357,358,359,360,400,361,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,311,430,431,432,433,312,313,314,434,362,363,364,365,366,367,368,435,369,436,437,438,439,440,315,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461],"tindex":"c6c05775-2eae-11e6-baa8-79a087180060","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1229","type":"CtMethodImpl","sourcecode":"private static void checkValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"c6c05776-2eae-11e6-baa8-7bb6276554ed","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next(), 1);\n                changed = changed || added;\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,372,503,504,505,506,507,508,509,510,341,511,512,513,514,515,516,342,517,518,343,519,520,521,522,523,524,525,526,527,528,529,530,531,532,344,533,534,345,346,347,348,349,535,536,537,538,539,540,373,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,374,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,375,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,376,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,377,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,378,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,379,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,326,327,328,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,380,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,381,767,768,382,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,383,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,384],"tindex":"c6c07e87-2eae-11e6-baa8-31d88be91db5","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:393","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = key.hashCode();\n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[810],"tindex":"c6c0a598-2eae-11e6-baa8-039c5fe6da10","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:55","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[],"tindex":"c6c0a599-2eae-11e6-baa8-d7caf4489350","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 1) {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:82","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"c6c0a59a-2eae-11e6-baa8-d929431f1d65","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:167","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator) throws java.lang.IndexOutOfBoundsException {\n    if (comparator == null) {\n        {\n            setComparator(index, comparator, false);\n        }\n    } else {\n        throw new java.lang.IndexOutOfBoundsException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[811,812],"tindex":"c6c0ccab-2eae-11e6-baa8-193d4e8997a9","method":{"position":"org.apache.commons.collections4.list.TransformedList:155","type":"CtMethodImpl","sourcecode":"public E set(final int index, E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            object = transform(object);\n            return getList().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[],"tindex":"c6c0ccac-2eae-11e6-baa8-83c0ed557618","method":{"position":"org.apache.commons.collections4.CollectionUtils:968","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if ((inputCollection != null) && (predicate != null)) {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (!(predicate.evaluate(item))) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[813],"tindex":"c6c0ccad-2eae-11e6-baa8-4bba7c294550","method":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"c6c0ccae-2eae-11e6-baa8-0f05049371fa","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"c6c0f3bf-2eae-11e6-baa8-fbe1150ccbac","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:145","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[372,343,373,374,375,376,190,377,378,379,380,381,383],"tindex":"c6c0f3c0-2eae-11e6-baa8-2dbad776bbf6","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:302","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            _putAll(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[212,213],"tindex":"c6c0f3c1-2eae-11e6-baa8-0128eb0dbf7b","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getBag().remove(object, nCopies);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"c6c0f3c2-2eae-11e6-baa8-a1891acbda4d","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:86","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final V defaultValue) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(defaultValue));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"c6c11ad3-2eae-11e6-baa8-6db5a0980557","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:174","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    synchronized(java.lang.Object) {\n                        return decorated().removeAll(coll);\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"c6c11ad4-2eae-11e6-baa8-13162aa87746","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:645","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Map) {\n                {\n                    if (obj == (org.apache.commons.collections4.map.ListOrderedMap.EntrySetView.this)) {\n                        return true;\n                    } \n                    return getEntrySet().equals(obj);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}