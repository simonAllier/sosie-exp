{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":116,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":185,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEqualsNull":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":128,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":153,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":232,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":262,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":327,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testEqualsNull":496,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":161,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":246,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":39,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":446,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":343,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":413,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSerializeDeserializeThenCompare":438,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":50,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEqualsNull":59,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":164,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":16,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":319,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":444,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":124,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":515,"org.apache.commons.collections4.CollectionUtilsTest.collect":649,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":519,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":521,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":520,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":526,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":56,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":311,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":138,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":204,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":614,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":75,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":419,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":130,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":131,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":575,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":84,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":534,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":178,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":353,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":71,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":231,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":92,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":368,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIsEmpty":436,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":336,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":601,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":120,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":65,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":399,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":581,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionSize":432,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":63,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":26,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":278,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":518,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":45,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":516,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":190,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":517,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":363,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":373,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":416,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":339,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":472,"org.apache.commons.collections4.CollectionUtilsTest.transform2":647,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":225,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":403,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":72,"org.apache.commons.collections4.map.TransformedMapTest.testEqualsNull":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":152,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":234,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":17,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":23,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.initializationError":562,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":632,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":628,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":652,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":212,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":615,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":316,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":323,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":141,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":559,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":626,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":650,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":142,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":349,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":140,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":320,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":406,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":263,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":495,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":498,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":596,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":27,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":627,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":134,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":617,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":276,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":525,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":270,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":125,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":271,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking2":450,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":272,"org.apache.commons.collections4.CollectionUtilsTest.testPermutationsWithNullCollection":586,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":79,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":422,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":41,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":261,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":309,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetRemoveChangesMap":329,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":230,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":391,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":58,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":599,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetIteratorRemoveChangesMap":330,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":117,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":560,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":637,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":354,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":415,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":441,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":114,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":10,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":82,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":351,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":345,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":258,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":172,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":512,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":390,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":112,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":303,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":539,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":103,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":396,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":132,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":8,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":564,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":305,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":304,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":481,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":605,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":595,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":300,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":355,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":598,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":624,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":301,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":302,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":509,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":37,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":634,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":552,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":111,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":155,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":160,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEqualsNull":29,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking2":501,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":538,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":217,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":186,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":370,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":402,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":412,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnmodifiable":429,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":292,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":608,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":360,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEqualsNull":57,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":102,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":338,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":379,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":47,"org.apache.commons.collections4.CollectionUtilsTest.union":169,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":274,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":208,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":147,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":616,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":170,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":310,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":290,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":139,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":275,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":4,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":175,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionSize":456,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":609,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":129,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":159,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToString":433,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":645,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":199,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":281,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":467,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":277,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":135,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":442,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":485,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":348,"org.apache.commons.collections4.list.TreeListTest.testRemove":465,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":477,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":150,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":400,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":411,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":491,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":11,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":121,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":205,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":555,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":25,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":52,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":474,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":437,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":287,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":533,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":286,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":299,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":571,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":285,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":527,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":570,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":196,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":453,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":475,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":266,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":298,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":187,"org.apache.commons.collections4.map.FixedSizeMapTest.testEqualsNull":55,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":321,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":98,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":418,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":133,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":282,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":489,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":283,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":344,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":284,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":168,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":635,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":36,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":347,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":145,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":144,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":143,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":157,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":34,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":308,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":503,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":618,"org.apache.commons.collections4.map.ListOrderedMapTest.testEqualsNull":46,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":218,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":167,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":166,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":458,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":317,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":511,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":631,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":563,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":207,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":553,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":401,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":646,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":524,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":369,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":611,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":174,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":409,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":183,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":78,"org.apache.commons.collections4.list.TreeListTest.testListEquals":471,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":636,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":358,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":245,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":67,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":127,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":9,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":622,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":587,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":383,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":197,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":30,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":314,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":113,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":404,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":478,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":95,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":644,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":182,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":337,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":93,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":122,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":257,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":229,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":279,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":154,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":115,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":451,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":210,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":256,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":255,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":254,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":557,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":350,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":69,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEqualsNull":44,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":384,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":549,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":332,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":151,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":188,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":629,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":367,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":540,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":584,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":227,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":110,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":568,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":361,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":430,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":620,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":643,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":177,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":333,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":565,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":244,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":469,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":613,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":126,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":490,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":573,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":486,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":364,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":499,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":398,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":297,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":372,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":577,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":424,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":198,"org.apache.commons.collections4.CollectionUtilsTest.addIgnoreNull":506,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":3,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":594,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":5,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEqualsNull":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":109,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":377,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":600,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":195,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":240,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":514,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":192,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":239,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":389,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":179,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":238,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":203,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":507,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":233,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":325,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":85,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":470,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":607,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":425,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":487,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":597,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":53,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":13,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":264,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":623,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":508,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":243,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":397,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":222,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEqualsNull":33,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":223,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":224,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":386,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":200,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":306,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":356,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":295,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":194,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":260,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":591,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":315,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking2":448,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":106,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":328,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":382,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":156,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":357,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":359,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":341,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":83,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":322,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":588,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":22,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":291,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToString":457,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":641,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":619,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":241,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":296,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":452,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":585,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":215,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":352,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":405,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":385,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":15,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":226,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":7,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":62,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":216,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":12,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":529,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":530,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":531,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":181,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":20,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":435,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":484,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":473,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":73,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":393,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":488,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":201,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":236,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":476,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":235,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":237,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":2,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":479,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":119,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":211,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":273,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":421,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":505,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":604,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":313,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":561,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":312,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":100,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":74,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":434,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":578,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":602,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":66,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":455,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":492,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":171,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":365,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":551,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":426,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":480,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":612,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":340,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":537,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":371,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":180,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":249,"org.apache.commons.collections4.list.TreeListTest.testBug35258":468,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":569,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":610,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":173,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":146,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":445,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":81,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":206,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":558,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":376,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":202,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":427,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":388,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":463,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":466,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":625,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":259,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":280,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":107,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":583,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":504,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":209,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":630,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":158,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetIteratorRemoveChangesMap":334,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":97,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":459,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":76,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":633,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":165,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":640,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":378,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":582,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":94,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":550,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":288,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":522,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":536,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":87,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":576,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":374,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":381,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":532,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":101,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":68,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":461,"org.apache.commons.collections4.map.PredicatedMapTest.testEqualsNull":31,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":556,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":162,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":88,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":394,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":242,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":51,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":523,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":528,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":606,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray2":431,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":387,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":375,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":366,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":346,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":91,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":90,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":454,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":89,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":96,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":410,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":43,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":392,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":148,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":136,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":395,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":439,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":326,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":335,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":108,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":547,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":407,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":462,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":535,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":99,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":642,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":163,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":497,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":443,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":21,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":362,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":220,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":221,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":546,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":219,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":464,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":545,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":572,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":544,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":548,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":324,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":579,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":1,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":648,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":541,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":542,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":543,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":137,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":567,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":293,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":574,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":149,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":447,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":621,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":589,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":267,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":268,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":123,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":214,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":184,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":54,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":248,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":70,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking":500,"org.apache.commons.collections4.map.LRUMapTest.testLRU":639,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":32,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":483,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":64,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":19,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":294,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":440,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":213,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":189,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":265,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":460,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":14,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicateEx":0,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":414,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":48,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":566,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":592,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory":428,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":60,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":318,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":24,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":342,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":80,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":502,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":253,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":193,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":307,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":118,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":510,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":554,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":580,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":251,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":513,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":191,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":252,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":105,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":638,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":420,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":417,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":494,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx5":493,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":86,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":269,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":77,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":228,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":49,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":590,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":482,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":423,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":593,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":380,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListSerialization":449,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":651,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":250,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":176,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":408,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":603,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":331,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":247,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":289},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[0],"tindex":"9e240525-2ece-11e6-8f43-f9b41d60291b","method":{"position":"org.apache.commons.collections4.functors.NotPredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NotPredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"9e24c876-2ece-11e6-8f43-33127d499bfb","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:68","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            return decorated().getCount(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[14,15,16,17],"tindex":"9e24ef87-2ece-11e6-8f43-7735c44daaa9","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:229","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            removeNode(node);\n            return oldValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[18,19,20,21],"tindex":"9e251698-2ece-11e6-8f43-a53d434ab410","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:357","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            removeAllExpired(now());\n            return super.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"9e251699-2ece-11e6-8f43-f3cfc105611e","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"tindex":"9e253daa-2ece-11e6-8f43-3d5ec778ed07","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            if (null == object) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (object == (org.apache.commons.collections4.map.AbstractMapDecorator.this)) {\n                        return true;\n                    } \n                    return decorated().equals(object);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,22,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157],"tindex":"9e2564bb-2ece-11e6-8f43-c915a6e9eb39","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:195","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            return node == null ? null : node.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[158,159],"tindex":"9e258bcc-2ece-11e6-8f43-930a9ad82fb8","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            if (object == (org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[],"tindex":"9e258bcd-2ece-11e6-8f43-43c2f4c438e3","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[160,161],"tindex":"9e25d9ee-2ece-11e6-8f43-0197632fbc10","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:518","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:165","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"9e26280f-2ece-11e6-8f43-a3178a7c2323","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:71","type":"CtMethodImpl","sourcecode":"static boolean isNullBitKey(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"9e264f20-2ece-11e6-8f43-357c981774c5","method":{"position":"org.apache.commons.collections4.ArrayStack:152","type":"CtMethodImpl","sourcecode":"public int search(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = (size()) - 1;\n            int int = 1;\n            while (i >= 0) {\n                final java.lang.Object java.lang.Object = get(i);\n                if (((object == null) && (current == null)) || ((object != null) && (object.equals(current)))) {\n                    return n;\n                } \n                i--;\n                n++;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtBinaryOperatorImpl","sourcecode":"i < 0"},"failures":[],"tindex":"9e267631-2ece-11e6-8f43-075bfe97c345","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:313","type":"CtMethodImpl","sourcecode":"private boolean set(final int i) {\n    if (i < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = java.util.ArrayList<java.util.Iterator<? extends E>>.get(i);\n            if (it.hasNext()) {\n                java.util.ArrayList<E>.set(i, it.next());\n                java.util.BitSet.set(i);\n                return true;\n            } \n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl","sourcecode":"collectionFactory == null"},"failures":[],"tindex":"9e267632-2ece-11e6-8f43-b7c426c15b87","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:120","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, ? super C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.MultiValueMap<K, V>(map , collectionFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"9e269d43-2ece-11e6-8f43-17d6b821aa2a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1815","type":"CtMethodImpl","sourcecode":"private java.util.Map.Entry<V, K> createEntry(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry<V, K>(node.getValue() , node.getKey());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[162],"tindex":"9e269d44-2ece-11e6-8f43-b5ae99ce1ae3","method":{"position":"org.apache.commons.collections4.list.GrowthList:150","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = decorated().size();\n            boolean boolean = false;\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n                result = true;\n            } \n            return (decorated().addAll(index, coll)) | result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[163,164,165,166,167,168],"tindex":"9e26c455-2ece-11e6-8f43-b10345306500","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic O transform(final java.lang.Object input) {\n    if (input == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (input == null) {\n                return null;\n            } \n            try {\n                final java.lang.Class<?> java.lang.Class<?> = input.getClass();\n                final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(java.lang.String, java.lang.Class<?>[]);\n                return ((O)(method.invoke(input, java.lang.Object[])));\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' does not exist\"));\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' cannot be accessed\"));\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' threw an exception\") , ex);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"9e26eb66-2ece-11e6-8f43-516ff892fb2e","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:167","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator) throws java.lang.IndexOutOfBoundsException {\n    if (index < 0) {\n        {\n            setComparator(index, comparator, false);\n        }\n    } else {\n        throw new java.lang.IndexOutOfBoundsException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[169,170],"tindex":"9e271277-2ece-11e6-8f43-4d2baa763f36","method":{"position":"org.apache.commons.collections4.CollectionUtils:155","type":"CtMethodImpl","sourcecode":"public void setCardinality(final O obj, final int count) {\n    if (count > 3) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = 0 ; i < count ; i++) {\n                java.util.List<O>.add(obj);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"9e271278-2ece-11e6-8f43-7f28d7e9bac4","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202],"tindex":"9e273989-2ece-11e6-8f43-4fad72cfcdba","method":{"position":"org.apache.commons.collections4.list.PredicatedList:128","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i == (-1)) {\n        {\n            return new PredicatedListIterator(decorated().listIterator(i));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"9e27609a-2ece-11e6-8f43-9f42d50206d4","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            if (null == object) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (object == (org.apache.commons.collections4.map.AbstractMapDecorator.this)) {\n                        return true;\n                    } \n                    return decorated().equals(object);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[203,204,205,206,207,208,209],"tindex":"9e2787ab-2ece-11e6-8f43-b5f8d0f9eff8","method":{"position":"org.apache.commons.collections4.list.TreeList:173","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            return (indexOf(object)) >= 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[210],"tindex":"9e2787ac-2ece-11e6-8f43-958493f91ed8","method":{"position":"org.apache.commons.collections4.CollectionUtils:606","type":"CtMethodImpl","sourcecode":"public static <O>int cardinality(final O obj, final java.lang.Iterable<? super O> coll) {\n    if (coll instanceof java.util.Set<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof java.util.Set<?>) {\n                return ((java.util.Set<? super O>)(coll)).contains(obj) ? 1 : 0;\n            } \n            if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n                return ((org.apache.commons.collections4.Bag<? super O>)(coll)).getCount(obj);\n            } \n            int int = 0;\n            if (obj == null) {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (element == null) {\n                        count++;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (obj.equals(element)) {\n                        count++;\n                    } \n                }\n            }\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"9e27aebd-2ece-11e6-8f43-83ad84c10964","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:169","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final java.lang.Object object) {\n    if (null == object) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:167","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[211],"tindex":"9e27d5ce-2ece-11e6-8f43-fd610a5eb4d6","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:331","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Set<E> createSetBasedOnList(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Set<E> java.util.Set<E>;\n            if (set.getClass().equals(java.util.HashSet.java.util.HashSet.java.lang.Class)) {\n                subSet = new java.util.HashSet<E>(list.size());\n            } else {\n                try {\n                    subSet = set.getClass().newInstance();\n                } catch (final java.lang.InstantiationException ie) {\n                    subSet = new java.util.HashSet<E>();\n                } catch (final java.lang.IllegalAccessException iae) {\n                    subSet = new java.util.HashSet<E>();\n                }\n            }\n            subSet.addAll(list);\n            return subSet;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"9e27fcdf-2ece-11e6-8f43-3bcb44adcde2","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:336","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return false;\n            } \n            return coll.contains(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,49,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306],"tindex":"9e27fce0-2ece-11e6-8f43-ffe5f899d98f","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[307,308],"tindex":"9e2822f1-2ece-11e6-8f43-fbe9c3daf381","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key != null) {\n                {\n                    if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                        return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(key)));\n                    } \n                    return java.util.Map<K, V>.get(key);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[],"tindex":"9e2822f2-2ece-11e6-8f43-8158fcdc9654","method":{"position":"org.apache.commons.collections4.set.CompositeSet:425","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Set) {\n                final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(obj));\n                return ((set.size()) == (org.apache.commons.collections4.set.CompositeSet.this.size())) && (set.containsAll(org.apache.commons.collections4.set.CompositeSet.this));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[309],"tindex":"9e2822f3-2ece-11e6-8f43-8f933d2d7e8f","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:246","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                result |= remove(name);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,32,325,326,327,328,329,330,331,332,333,334,335,307,336,337,338,308,339,340,341,342,343,344,45,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,52,368,369,370,371,372,373,374,375,19,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392],"tindex":"9e284a04-2ece-11e6-8f43-f15d08090b94","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:81","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[215,393,394,395],"tindex":"9e284a05-2ece-11e6-8f43-0bcd46fa4f87","method":{"position":"org.apache.commons.collections4.map.Flat3Map:244","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(value);\n            } \n            if (value == null) {\n                switch (int) {\n                    case 3 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                switch (int) {\n                    case 3 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 2 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 1 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[396,397],"tindex":"9e29d0a6-2ece-11e6-8f43-2be69e094a44","method":{"position":"org.apache.commons.collections4.functors.MapTransformer:49","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        {\n            if (map == null) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            return new org.apache.commons.collections4.functors.MapTransformer<I, O>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[398,399,400,401,402],"tindex":"9e29f7b7-2ece-11e6-8f43-cda3f7d77a0e","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[66,67,106,107,133],"tindex":"9e2a1ec8-2ece-11e6-8f43-3b909612b6cb","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1217","type":"CtMethodImpl","sourcecode":"private static void checkKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[403,404,405,6,406,407,408,409,410,7,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426],"tindex":"9e2a45d9-2ece-11e6-8f43-a9d3bd369201","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[427],"tindex":"9e2a45da-2ece-11e6-8f43-cdf17f5de0c1","method":{"position":"org.apache.commons.collections4.IteratorUtils:316","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end) {\n    if (end == end) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end","end":"end"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:75","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464],"tindex":"9e2a6ceb-2ece-11e6-8f43-1706c970f2e0","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:55","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.FixedSizeList<E> fixedSizeList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            return new org.apache.commons.collections4.list.FixedSizeList<E>(list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"9e2a6cec-2ece-11e6-8f43-399c4a40daab","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:79","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return decorated().remove(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"9e2a93fd-2ece-11e6-8f43-ad76737941e5","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:259","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.lang.Object put(final K key, final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value != null) {\n                {\n                    boolean boolean = false;\n                    java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n                    if (coll == null) {\n                        coll = createCollection(1);\n                        coll.add(((V)(value)));\n                        if ((coll.size()) > 0) {\n                            decorated().put(key, coll);\n                            result = true;\n                        } \n                    } else {\n                        result = coll.add(((V)(value)));\n                    }\n                    return result ? value : null;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,203,204,205,206,488,207,489,490,208,491,492],"tindex":"9e2a93fe-2ece-11e6-8f43-81625c562f2b","method":{"position":"org.apache.commons.collections4.list.TreeList:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index).getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[493,494,495],"tindex":"9e2abb0f-2ece-11e6-8f43-5135cb455a26","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(preds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[496,497],"tindex":"9e2ae220-2ece-11e6-8f43-5316e6e90cb5","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                if (object == (org.apache.commons.collections4.collection.SynchronizedCollection.this)) {\n                    return true;\n                } \n                return (object == (org.apache.commons.collections4.collection.SynchronizedCollection.this)) || (decorated().equals(object));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"9e2ae221-2ece-11e6-8f43-e13a415bc785","method":{"position":"org.apache.commons.collections4.MapUtils:255","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Integer) {\n                return ((java.lang.Integer)(answer));\n            } \n            return java.lang.Integer.valueOf(answer.intValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[498,499,500,501],"tindex":"9e2b0932-2ece-11e6-8f43-3dfca3f36571","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[502],"tindex":"9e2b0933-2ece-11e6-8f43-611b29f14958","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> unmodifiableOrderedMap(final org.apache.commons.collections4.OrderedMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMap<K, V> org.apache.commons.collections4.OrderedMap<K, V> = ((org.apache.commons.collections4.OrderedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableOrderedMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"9e2b3044-2ece-11e6-8f43-df9dc9870876","method":{"position":"org.apache.commons.collections4.map.LinkedMap:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[503],"tindex":"9e2b3045-2ece-11e6-8f43-05cdc32bb31e","method":{"position":"org.apache.commons.collections4.map.Flat3Map:374","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            final int int = map.size();\n            if (size == 0) {\n                return ;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n                return ;\n            } \n            if (size < 4) {\n                for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            } else {\n                convertToMap();\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[504,505],"tindex":"9e2b5756-2ece-11e6-8f43-09de5bc3be1f","method":{"position":"org.apache.commons.collections4.PredicateUtils:174","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceofPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        {\n            return org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(type);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"9e2b7e67-2ece-11e6-8f43-1f6f72e98532","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[506],"tindex":"9e2b7e68-2ece-11e6-8f43-b9d873eeb93d","method":{"position":"org.apache.commons.collections4.CollectionUtils:1086","type":"CtMethodImpl","sourcecode":"public static <T>boolean addIgnoreNull(final java.util.Collection<T> collection, final T object) {\n    if (collection == null) {\n        {\n            if (collection == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            return (object != null) && (collection.add(object));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547],"tindex":"9e2ba579-2ece-11e6-8f43-05bcbc58f3f6","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if (o == (org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.this)) {\n                return true;\n            } else if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(o));\n            if ((org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(K, other.getKey())) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(V, other.getValue()))) {\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"9e2ba57a-2ece-11e6-8f43-3b5905f735d4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:238","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                        put(e.getKey(), e.getValue());\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"9e2bcc8b-2ece-11e6-8f43-b12e96dd1662","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:764","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((((multi.size()) >= 3) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[427],"tindex":"9e2bcc8c-2ece-11e6-8f43-e75e66508753","method":{"position":"org.apache.commons.collections4.IteratorUtils:297","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start) {\n    if (start < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[548,549,3,399,550,551,4,400,552,553,554,555,8,401,556,557,558,559,560,561],"tindex":"9e2bcc8d-2ece-11e6-8f43-25b53717b013","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:342","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            if (coll != null) {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final boolean boolean = remove(i.next(), 1);\n                    result = result || changed;\n                }\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[562],"tindex":"9e2bf39e-2ece-11e6-8f43-559669fd299c","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:74","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeSortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.FixedSizeSortedMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ClosureUtils:355","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndClosures == null"},"failures":[563],"tindex":"9e2bf39f-2ece-11e6-8f43-47c23581ae4e","method":{"position":"org.apache.commons.collections4.ClosureUtils:354","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchMapClosure(final java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>> objectsAndClosures) {\n    if (objectsAndClosures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (objectsAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = objectsAndClosures.remove(null);\n            final int int = objectsAndClosures.size();\n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> : objectsAndClosures.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<E>equalPredicate(entry.getKey());\n                trs[i] = entry.getValue();\n                i++;\n            }\n            return org.apache.commons.collections4.ClosureUtils.<E>switchClosure(preds, trs, def);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndClosures":"objectsAndClosures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl","sourcecode":"predicatesAndClosures == null"},"failures":[564],"tindex":"9e2bf3a0-2ece-11e6-8f43-a93f1bd29d3a","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:89","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicatesAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = predicatesAndClosures.remove(null);\n            final int int = predicatesAndClosures.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n            } \n            final org.apache.commons.collections4.Closure<E>[] org.apache.commons.collections4.Closure<E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> : predicatesAndClosures.entrySet()) {\n                preds[i] = entry.getKey();\n                closures[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchClosure<E>(false , preds , closures , defaultClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[113,118,119,120,136],"tindex":"9e2c1ab1-2ece-11e6-8f43-efc8b6c6d053","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:255","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return doRemoveKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[565],"tindex":"9e2c1ab2-2ece-11e6-8f43-dfb8c4a45294","method":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.PredicatedQueue<E> predicatedQueue(final java.util.Queue<E> Queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.queue.PredicatedQueue<E>(Queue , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[566],"tindex":"9e2c41c3-2ece-11e6-8f43-8fda2c5334e0","method":{"position":"org.apache.commons.collections4.PredicateUtils:321","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"9e2c41c4-2ece-11e6-8f43-fda866e44828","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:238","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                        put(e.getKey(), e.getValue());\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[393,567,568,569,232,570,571,572,573,574,264,575,576,577,279,578,579,580,581,297,582,583],"tindex":"9e2c41c5-2ece-11e6-8f43-911f2f7c49c9","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:476","type":"CtMethodImpl","sourcecode":"protected void updateEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final V newValue) {\n    if ((entry.getValue()) == null) {\n        {\n            entry.setValue(newValue);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"9e2c68d6-2ece-11e6-8f43-f7022bc2809c","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key != null) {\n                {\n                    if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                        return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(key)));\n                    } \n                    return java.util.Map<K, V>.get(key);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[],"tindex":"9e2c68d7-2ece-11e6-8f43-cb644c5888cd","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:80","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                {\n                    if (coll == null) {\n                        throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n                    } \n                    for (int int = 0 ; i < 1000 ; i++) {\n                        if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                            break;\n                        } \n                        if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n                            coll = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(coll)).decorated();\n                        } else if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n                            coll = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(coll)).decorated();\n                        } \n                    }\n                    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                        throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n                    } \n                    return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(((org.apache.commons.collections4.BoundedCollection<E>)(coll)));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:60","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>"},"failures":[],"tindex":"9e2c68d8-2ece-11e6-8f43-f7b6bee50904","method":{"position":"org.apache.commons.collections4.IteratorUtils:920","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asMultipleUseIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[],"tindex":"9e2c8fe9-2ece-11e6-8f43-e1a8d5b8e577","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:80","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                {\n                    if (coll == null) {\n                        throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n                    } \n                    for (int int = 0 ; i < 1000 ; i++) {\n                        if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                            break;\n                        } \n                        if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n                            coll = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(coll)).decorated();\n                        } else if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n                            coll = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(coll)).decorated();\n                        } \n                    }\n                    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                        throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n                    } \n                    return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(((org.apache.commons.collections4.BoundedCollection<E>)(coll)));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[],"tindex":"9e2c8fea-2ece-11e6-8f43-85c84e4e338c","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:645","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.ListOrderedMap.EntrySetView.this)) {\n                return true;\n            } \n            return getEntrySet().equals(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:905","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"9e2c8feb-2ece-11e6-8f43-7dc0f64f9106","method":{"position":"org.apache.commons.collections4.IteratorUtils:976","type":"CtMethodImpl","sourcecode":"public static <E>E[] toArray(final java.util.Iterator<? extends E> iterator, final java.lang.Class<E> arrayClass) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (arrayClass == null) {\n                throw new java.lang.NullPointerException(\"Array class must not be null\");\n            } \n            final java.util.List<E> java.util.List<E> = org.apache.commons.collections4.IteratorUtils.toList(iterator, 100);\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final E[] E[] = ((E[])(java.lang.reflect.Array.newInstance(arrayClass, list.size())));\n            return list.toArray(array);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:889","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"9e2cb6fc-2ece-11e6-8f43-034095cf3b70","method":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PeekingIterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PeekingIterator<E> org.apache.commons.collections4.iterators.PeekingIterator<E> = ((org.apache.commons.collections4.iterators.PeekingIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PeekingIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"9e2cb6fd-2ece-11e6-8f43-cbca9ba5dbe1","method":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.comparators.BooleanComparator.this) == object) || ((object instanceof org.apache.commons.collections4.comparators.BooleanComparator) && ((org.apache.commons.collections4.comparators.BooleanComparator.this.boolean) == (((org.apache.commons.collections4.comparators.BooleanComparator)(object)).boolean)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[72,88],"tindex":"9e2cb6fe-2ece-11e6-8f43-f97066b3a869","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[584],"tindex":"9e2cde0f-2ece-11e6-8f43-a3e349d6b404","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:57","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[585],"tindex":"9e2cde10-2ece-11e6-8f43-e1cf8c1296cf","method":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1784","type":"CtBinaryOperatorImpl","sourcecode":"(collection == null) || ((collection.size()) != 1)"},"failures":[586,587],"tindex":"9e2cde11-2ece-11e6-8f43-bb749c788974","method":{"position":"org.apache.commons.collections4.CollectionUtils:1642","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<java.util.List<E>> permutations(final java.util.Collection<E> collection) {\n    if ((collection == null) || ((collection.size()) != 1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.iterators.PermutationIterator<E> org.apache.commons.collections4.iterators.PermutationIterator<E> = new org.apache.commons.collections4.iterators.PermutationIterator<E>(collection);\n            final java.util.Collection<java.util.List<E>> java.util.Collection<java.util.List<E>> = new java.util.LinkedList<java.util.List<E>>();\n            while (it.hasNext()) {\n                result.add(it.next());\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,212,213,214,215,216,217,393,503,218,606,607,225,608,609,610,226,227,228,229,230,231,232,233,234,611,612,241,613,614,615,242,243,244,245,246,247,248,249,250,616,617,257,618,619,620,258,259,260,261,262,263,264,265,266,621,622,273,623,624,625,363,579,581,291,292,293,294,295,296,297,298,299,626,627,306,628,629,630],"tindex":"9e2d0522-2ece-11e6-8f43-11c629987e89","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtBinaryOperatorImpl","sourcecode":"other instanceof org.apache.commons.collections4.keyvalue.MultiKey"},"failures":[631,289],"tindex":"9e2d0523-2ece-11e6-8f43-a5dc7b325c98","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object other) {\n    if (other instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n        {\n            if (other == (org.apache.commons.collections4.keyvalue.MultiKey.this)) {\n                return true;\n            } \n            if (other instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(other));\n                return java.util.Arrays.equals(K[], otherMulti.?[]);\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"other"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"9e2d2c34-2ece-11e6-8f43-71b34b352cb0","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:713","type":"CtMethodImpl","sourcecode":"protected int entryHashCode(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,22,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157],"tindex":"9e2d2c35-2ece-11e6-8f43-a33239881ecc","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1229","type":"CtMethodImpl","sourcecode":"private static void checkValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[632,618,619],"tindex":"9e2d2c36-2ece-11e6-8f43-87a888cd22aa","method":{"position":"org.apache.commons.collections4.map.LRUMap:175","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            moveToMRU(entry);\n            return entry.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[113,115,116],"tindex":"9e2d5347-2ece-11e6-8f43-ad44a9c8da5b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2065","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsValue(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[427],"tindex":"9e2d5348-2ece-11e6-8f43-7bc7e52d007c","method":{"position":"org.apache.commons.collections4.IteratorUtils:278","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start) {\n    if (start < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1278","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[],"tindex":"9e2d5349-2ece-11e6-8f43-752025a426ff","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:329","type":"CtMethodImpl","sourcecode":"private void clear(final int i) {\n    if (i == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"9e2d534a-2ece-11e6-8f43-91434cd39267","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:412","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(keyTransformer) == null"},"failures":[633],"tindex":"9e2d7a5b-2ece-11e6-8f43-c7eff10b9989","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:89","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (keyTransformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.TransformedSortedMap<K, V> org.apache.commons.collections4.map.TransformedSortedMap<K, V> = new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keyTransformer":"keyTransformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[634,635,636,637],"tindex":"9e2d7a5c-2ece-11e6-8f43-65bf054433e5","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:200","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return n.V;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[638],"tindex":"9e2da16d-2ece-11e6-8f43-573949e705e9","method":{"position":"org.apache.commons.collections4.PredicateUtils:421","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,22,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157],"tindex":"9e2da16e-2ece-11e6-8f43-09e10de51a18","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:780","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getGrandParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            return getParent(getParent(node, dataElement), dataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[639,640,248,641,642],"tindex":"9e2da16f-2ece-11e6-8f43-0b4a995a537f","method":{"position":"org.apache.commons.collections4.map.LRUMap:224","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void updateEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final V newValue) {\n    if ((entry.getValue()) == null) {\n        {\n            moveToMRU(((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry)));\n            entry.setValue(newValue);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"9e2dc880-2ece-11e6-8f43-a3e02bf6f4b9","method":{"position":"org.apache.commons.collections4.ListUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> union(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list2.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>(list1);\n            result.addAll(list2);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"9e2dc881-2ece-11e6-8f43-43754ea3013a","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:259","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.lang.Object put(final K key, final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value != null) {\n                {\n                    boolean boolean = false;\n                    java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n                    if (coll == null) {\n                        coll = createCollection(1);\n                        coll.add(((V)(value)));\n                        if ((coll.size()) > 0) {\n                            decorated().put(key, coll);\n                            result = true;\n                        } \n                    } else {\n                        result = coll.add(((V)(value)));\n                    }\n                    return result ? value : null;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[643,644],"tindex":"9e2dc882-2ece-11e6-8f43-7bceb7b30e66","method":{"position":"org.apache.commons.collections4.functors.WhileClosure:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> whileClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> closure, final boolean doLoop) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.WhileClosure<E>(predicate , closure , doLoop);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[564],"tindex":"9e2def93-2ece-11e6-8f43-df7d7718ba6e","method":{"position":"org.apache.commons.collections4.ClosureUtils:279","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures) {\n    if (closures == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"9e2def94-2ece-11e6-8f43-8b846f1367b8","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:207","type":"CtMethodImpl","sourcecode":"public void setReverseSort(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.BitSet.set(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[645,646],"tindex":"9e2def95-2ece-11e6-8f43-dbea84a75059","method":{"position":"org.apache.commons.collections4.map.CompositeMap:381","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"No mutator specified\");\n            } \n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.putAll(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"(inputIterator != null) && (transformer != null)"},"failures":[647,648,649],"tindex":"9e2def96-2ece-11e6-8f43-75443c99d01b","method":{"position":"org.apache.commons.collections4.CollectionUtils:1063","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.util.Iterator<? extends I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if ((inputIterator != null) && (transformer != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((inputIterator != null) && (transformer != null)) {\n                while (inputIterator.hasNext()) {\n                    final I I = inputIterator.next();\n                    final O O = transformer.transform(item);\n                    outputCollection.add(value);\n                }\n            } \n            return outputCollection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputIterator":"inputIterator","transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"9e2e16a7-2ece-11e6-8f43-63cbc960d64f","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:537","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.getValue(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[650,651,652],"tindex":"9e2e16a8-2ece-11e6-8f43-85ac521690e3","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:158","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}