{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":57,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":49,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":94,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":88,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":80,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":67,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":70,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":106,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":76,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":36,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":29,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":91,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":65,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":124,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectHashCodeEqualsContract":140,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":62,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":143,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":9,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":128,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":129,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":79,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":50,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":130,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectHashCodeEqualsSelfHashCode":141,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":147,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":16,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":30,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":142,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":72,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":40,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":99,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":74,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":2,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":27,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":12,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":33,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":84,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":112,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":98,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":117,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSimpleSerialization":139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":61,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":145,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":77,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":131,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":125,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":4,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":107,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":121,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":133,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":104,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":41,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":13,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":114,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":135,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":93,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":134,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":1,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":109,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":144,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":48,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":127,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":97,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":25,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":126,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":78,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":19,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":22,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":103,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":83,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":81,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":90,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":75,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":111,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":64,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEqualsNull":138,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":66,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectEqualsSelf":137,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":20,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":11,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":102,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":54,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":14,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":63,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":95,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":119,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":42,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":120,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":15,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":21,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":73,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":115,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":110,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":59,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":132,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":118,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":136,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":92,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":28,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":108,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":87,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":116,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":96,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":23,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":101,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":113,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":51},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"2e159278-2eb6-11e6-9997-4bee7fc06040","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:143","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:360","type":"CtBinaryOperatorImpl","sourcecode":"leastIndex == (-1)"},"failures":[0],"tindex":"2e167cd9-2eb6-11e6-9997-5f5da5837e7b","method":{"position":"org.apache.commons.collections4.functors.ForClosure:51","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (count == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((count <= 0) || (closure == null)) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            if (count == 1) {\n                return ((org.apache.commons.collections4.Closure<E>)(closure));\n            } \n            return new org.apache.commons.collections4.functors.ForClosure<E>(count , closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"leastIndex":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:302","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Float"},"failures":[1,2],"tindex":"2e17402a-2eb6-11e6-9997-e1a3a9bb9b6b","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object instanceof java.lang.Float) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"2e17673b-2eb6-11e6-9997-575bec09faad","method":{"position":"org.apache.commons.collections4.functors.IfClosure:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:107","type":"CtBinaryOperatorImpl","sourcecode":"m < 0"},"failures":[],"tindex":"2e17673c-2eb6-11e6-9997-cf371f036867","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1050","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<E> subList(final int fromIndexInclusive, final int toIndexExclusive) {\n    if (fromIndexInclusive < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>(org.apache.commons.collections4.list.AbstractLinkedList<E> , (fromIndexInclusive + (int)) , (toIndexExclusive + (int)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"fromIndexInclusive"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1022","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(siblingNode, dataElement)"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98],"tindex":"2e178e4d-2eb6-11e6-9997-b18e50cc9f58","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:791","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(node, dataElement)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? null : node.getParent(dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"siblingNode":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[99,100,101,102,103,104,105,106,107,108,109,110,111,112,113],"tindex":"2e17b55e-2eb6-11e6-9997-6162fd7e49a0","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:139","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().removeAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[],"tindex":"2e17b55f-2eb6-11e6-9997-f782baf50379","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1484","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupKey(obj)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:76","type":"CtBinaryOperatorImpl","sourcecode":"(trueClosure == null) || (falseClosure == null)"},"failures":[114,115],"tindex":"2e17dc70-2eb6-11e6-9997-d18fb26664a9","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:56","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures, final org.apache.commons.collections4.Closure<? super E> defaultClosure) {\n    if ((defaultClosure == null) || (defaultClosure == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(closures);\n            if ((predicates.int) != (closures.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and closure arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n            } \n            return new org.apache.commons.collections4.functors.SwitchClosure<E>(predicates , closures , defaultClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseClosure":"defaultClosure","trueClosure":"defaultClosure"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[116,117],"tindex":"2e180381-2eb6-11e6-9997-73a363798c92","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:237","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"remove() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.remove(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[118],"tindex":"2e182a92-2eb6-11e6-9997-2fe56727f661","method":{"position":"org.apache.commons.collections4.TransformerUtils:149","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> asTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            return org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(closure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtFieldReadImpl","sourcecode":"slotFilled"},"failures":[],"tindex":"2e198a23-2eb6-11e6-9997-330e41e886b6","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1802","type":"CtMethodImpl","sourcecode":"protected boolean inFromRange(final K key, final boolean forceInclusive) {\n    if (forceInclusive) {\n        {\n            final K K = getFromKey();\n            final boolean boolean = isFromInclusive();\n            final int int = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\n                return ret >= 0;\n            } else {\n                return ret > 0;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"slotFilled":"forceInclusive"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"2e19b134-2eb6-11e6-9997-7fb351848850","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:446","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : mapToCopy.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:985","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"2e19d845-2eb6-11e6-9997-3be072cd933d","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:229","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(index)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            removeNode(node);\n            return oldValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141],"tindex":"2e19d846-2eb6-11e6-9997-83a2803d12c1","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:86","type":"CtMethodImpl","sourcecode":"public static <K, C>org.apache.commons.collections4.collection.IndexedCollection<K, C> nonUniqueIndexedCollection(final java.util.Collection<C> coll, final org.apache.commons.collections4.Transformer<C, K> keyTransformer) {\n    if (coll instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.collection.IndexedCollection<K, C>(coll , keyTransformer , org.apache.commons.collections4.map.MultiValueMap.<K, C>multiValueMap(new java.util.HashMap<K, java.util.Collection<C>>()) , false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:238","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[142,143,144,117,145],"tindex":"2e19ff57-2eb6-11e6-9997-1b495cf8c718","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:340","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> mutator) {\n    if (mutator == null) {\n        {\n            org.apache.commons.collections4.collection.CompositeCollection.this.org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> = mutator;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtBinaryOperatorImpl","sourcecode":"(currentIndex) == 0"},"failures":[146,147],"tindex":"2e19ff58-2eb6-11e6-9997-73358cb54b4c","method":{"position":"org.apache.commons.collections4.list.TreeList:810","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.list.TreeList.AVLNode<E> addAll(org.apache.commons.collections4.list.TreeList.AVLNode<E> otherTree, final int currentSize) {\n    if (currentSize == 0) {\n        {\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = max();\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = otherTree.min();\n            if ((otherTree.int) > (int)) {\n                final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = removeMax();\n                final org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> = new org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>>();\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = otherTree;\n                int int = (s.int) + currentSize;\n                int int = 0;\n                while ((s != null) && ((s.int) > (getHeight(leftSubTree)))) {\n                    sParentAbsolutePosition = sAbsolutePosition;\n                    sAncestors.push(s);\n                    s = s.org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n                    if (s != null) {\n                        sAbsolutePosition += s.int;\n                    } \n                }\n                maxNode.setLeft(leftSubTree, null);\n                maxNode.setRight(s, otherTreeMin);\n                if (leftSubTree != null) {\n                    leftSubTree.max().setRight(null, maxNode);\n                    leftSubTree.int -= currentSize - 1;\n                } \n                if (s != null) {\n                    s.min().setLeft(null, maxNode);\n                    s.int = (sAbsolutePosition - currentSize) + 1;\n                } \n                maxNode.int = (currentSize - 1) - sParentAbsolutePosition;\n                otherTree.int += currentSize;\n                s = maxNode;\n                while (!(sAncestors.isEmpty())) {\n                    final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = sAncestors.pop();\n                    sAncestor.setLeft(s, null);\n                    s = sAncestor.balance();\n                }\n                return s;\n            } else {\n                otherTree = otherTree.removeMin();\n                final org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> = new org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>>();\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode.this;\n                int int = s.int;\n                int int = 0;\n                while ((s != null) && ((s.int) > (getHeight(otherTree)))) {\n                    sParentAbsolutePosition = sAbsolutePosition;\n                    sAncestors.push(s);\n                    s = s.org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n                    if (s != null) {\n                        sAbsolutePosition += s.int;\n                    } \n                }\n                otherTreeMin.setRight(otherTree, null);\n                otherTreeMin.setLeft(s, maxNode);\n                if (otherTree != null) {\n                    otherTree.min().setLeft(null, otherTreeMin);\n                    (otherTree.int)++;\n                } \n                if (s != null) {\n                    s.max().setRight(null, otherTreeMin);\n                    s.int = sAbsolutePosition - currentSize;\n                } \n                otherTreeMin.int = currentSize - sParentAbsolutePosition;\n                s = otherTreeMin;\n                while (!(sAncestors.isEmpty())) {\n                    final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = sAncestors.pop();\n                    sAncestor.setRight(s, null);\n                    s = sAncestor.balance();\n                }\n                return s;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentIndex":"currentSize"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":17,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}