{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":103,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":291,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":18,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":196,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":387,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":304,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":329,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":342,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":175,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":427,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":426,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":511,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":120,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":528,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":367,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":382,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":210,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":300,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":455,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":459,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":65,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":461,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":460,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":498,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":506,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":127,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":314,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":167,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":13,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":89,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":67,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":68,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":250,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":21,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":306,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicate":2,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":354,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":307,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":260,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":365,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":475,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":97,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":212,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":155,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":246,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":341,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":400,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":268,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":42,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":114,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":296,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":240,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":144,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":237,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":458,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":456,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":457,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":53,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":40,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIsEmpty":360,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":247,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":328,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":343,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":359,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":56,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":176,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":393,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":63,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":519,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":383,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":525,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":317,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":401,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":318,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":316,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":70,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":141,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":101,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":201,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":235,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":202,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":310,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":415,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":462,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":523,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":380,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":497,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":301,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":254,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":115,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":83,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":179,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":129,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":364,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":340,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToString":356,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":139,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":187,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":93,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":292,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":478,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":289,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":258,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":154,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":406,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":84,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":452,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":287,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":396,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":492,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalFullCollectionExists":81,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":481,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":279,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":308,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":0,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":125,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":38,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":98,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":133,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":107,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":438,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":91,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":448,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":165,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":508,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":513,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":117,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":286,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":331,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":521,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":350,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":480,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":29,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":507,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":391,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":399,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":112,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":113,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":111,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":278,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":432,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":443,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":76,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":231,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":234,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":199,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":323,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":315,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":423,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull":227,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":527,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":45,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalFullCollectionExists":132,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":305,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":28,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionSize":355,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":311,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":419,"org.apache.commons.collections4.list.TreeListTest.testRemove":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":326,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":156,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":109,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":15,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":108,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":530,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":297,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNull":23,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":110,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":474,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":169,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":499,"org.apache.commons.collections4.set.PredicatedSetTest.testSetHashCode":352,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":145,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":224,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":274,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectEqualsSelf":369,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":309,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":230,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":218,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":422,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":280,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":321,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":320,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":463,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":319,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":333,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":335,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":147,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":204,"org.apache.commons.collections4.map.LRUMapTest.testClone":148,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":388,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":153,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":397,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":172,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":493,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":166,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":41,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":450,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":122,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":363,"org.apache.commons.collections4.set.PredicatedSetTest.testSimpleSerialization":373,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectHashCodeEqualsSelfHashCode":375,"org.apache.commons.collections4.set.PredicatedSetTest.testCanonicalFullCollectionExists":370,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":440,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":496,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":408,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":253,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":386,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":517,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":417,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":435,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":242,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":303,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":225,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":195,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":465,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":72,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":288,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":524,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":271,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap":26,"org.apache.commons.collections4.set.PredicatedSetTest.testCanonicalEmptyCollectionExists":372,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalEmptyCollectionExists":80,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":106,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":269,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":444,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":180,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":298,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNull":226,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":236,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":431,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":203,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":339,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":330,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":290,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":439,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":514,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":160,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":128,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":402,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectHashCodeEqualsContract":374,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":194,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":193,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":118,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":192,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":469,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":472,"org.apache.commons.collections4.set.PredicatedSetTest.testEqualsNull":371,"org.apache.commons.collections4.map.LRUMapTest.testReset":161,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":208,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":223,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":244,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":494,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":327,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":482,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":96,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":337,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":512,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":285,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":467,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":366,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":87,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":505,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":32,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":66,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":206,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":411,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":368,"org.apache.commons.collections4.keyvalue.TiedMapEntryTest.testEqualsAndHashCode":346,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":162,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":376,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":33,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":7,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":46,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":173,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":177,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":302,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":219,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":198,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":14,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":49,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":11,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalEmptyCollectionExists":131,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":211,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIteratorRemove":357,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":347,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":34,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":19,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":39,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":500,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":197,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":407,"org.apache.commons.collections4.set.PredicatedSetTest.testGetSet":349,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":130,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":284,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":433,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicateEx":217,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":390,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":454,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":378,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":428,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":430,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":31,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":12,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":44,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":446,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":71,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":216,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":510,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":36,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":119,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":412,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":9,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":261,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":471,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":424,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":50,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":214,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":78,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":64,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":447,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":47,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":171,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":105,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":413,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":436,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":60,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":17,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":61,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":136,"org.apache.commons.collections4.map.HashedMapTest.testClone":140,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":529,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":62,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":282,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":515,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":332,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":259,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":126,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":123,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":256,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":182,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":221,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":205,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":466,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":344,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":437,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":389,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":158,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":468,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":336,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":200,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":238,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":425,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":502,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":503,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":504,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":248,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":392,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":90,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":434,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":10,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":116,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":295,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":157,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":398,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":276,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":249,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":241,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":518,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":414,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNonEmptyMap":25,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":143,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":479,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":75,"org.apache.commons.collections4.list.TreeListTest.testBug35258":6,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":184,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":334,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":322,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":418,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":257,"org.apache.commons.collections4.map.LinkedMapTest.testClone":215,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":92,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":405,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionClear":361,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":213,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":509,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":5,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":135,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":283,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":57,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":58,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":59,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":351,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":27,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":168,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":522,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":77,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":379,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":273,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":445,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":385,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":163,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":138,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":251,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":416,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":384,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":150,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":270,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":464,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":477,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":263,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":473,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":277,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":121,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":243,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":220,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":229,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":264,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":490,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":170,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":495,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":501,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":526,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":146,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":102,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":85,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":353,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":267,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":99,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":266,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":348,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":265,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":272,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":516,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":520,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":1,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":54,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains1":345,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":324,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":95,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":312,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":94,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":207,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":293,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":228,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":491,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":421,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":476,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":275,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":183,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":164,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":381,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":410,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":470,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":488,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":487,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":486,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":483,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":484,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":485,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":313,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":420,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":395,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":325,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":209,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":441,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":489,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":451,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":409,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":299,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":362,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":16,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":181,"org.apache.commons.collections4.map.LRUMapTest.testLRU":149,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":245,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":239,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":142,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":124,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":188,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":377,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":403,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":151,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":79,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":255,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":22,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":73,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":191,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":442,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":429,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":394,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":294,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":222,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":449,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":134,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":189,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":453,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":190,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":232,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":186,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":281,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":159,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":233,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":88,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":262,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":358,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":252,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":338,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":404,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":152,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":185,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":37,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":24,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":74,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":178},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[],"tindex":"68e3ce2f-2eca-11e6-ad83-d953d0100129","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:413","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        {\n            if ((obj instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n                return false;\n            } \n            return (((org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger)(obj)).int) == (int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"68e46a70-2eca-11e6-ad83-2dc007469102","method":{"position":"org.apache.commons.collections4.IteratorUtils:853","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[0,1,2],"tindex":"68e49181-2eca-11e6-ad83-1baba97b953c","method":{"position":"org.apache.commons.collections4.functors.NotPredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NotPredicate<T>(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:160","type":"CtBinaryOperatorImpl","sourcecode":"(root) == null"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15],"tindex":"68e4b892-2eca-11e6-ad83-173aa4fbd90d","method":{"position":"org.apache.commons.collections4.list.TreeList:793","type":"CtMethodImpl","sourcecode":"private void setRight(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node, final org.apache.commons.collections4.list.TreeList.AVLNode<E> next) {\n    if (next == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean = node == null;\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = boolean ? next : node;\n            recalcHeight();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"next"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:126","type":"CtBinaryOperatorImpl","sourcecode":"criterion == null"},"failures":[16],"tindex":"68e4b893-2eca-11e6-ad83-67a958675e46","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:63","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"criterion":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:62","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[17,18,19,20],"tindex":"68e4dfa4-2eca-11e6-ad83-2f284c8a608e","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:501","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 == null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:971","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"68e506b5-2eca-11e6-ad83-ad36f3a3466f","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:245","type":"CtMethodImpl","sourcecode":"public void putAll(int index, final java.util.Map<? extends K, ? extends V> map) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                final K K = entry.getKey();\n                final boolean boolean = containsKey(key);\n                put(index, entry.getKey(), entry.getValue());\n                if (!contains) {\n                    index++;\n                } else {\n                    index = (indexOf(entry.getKey())) + 1;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterIterator:98","type":"CtUnaryOperatorImpl","sourcecode":"!(nextObjectSet)"},"failures":[],"tindex":"68e52dc6-2eca-11e6-ad83-b56a3408be24","method":{"position":"org.apache.commons.collections4.map.Flat3Map:801","type":"CtMethodImpl","sourcecode":"void setRemoved(final boolean flag) {\n    if (!flag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.map.Flat3Map.FlatMapEntry.this.boolean = flag;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nextObjectSet":"flag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:124","type":"CtBinaryOperatorImpl","sourcecode":"largestKey == (-1)"},"failures":[21],"tindex":"68e52dc7-2eca-11e6-ad83-b19434a7917a","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:254","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index == (-1)) {\n        {\n            final int int = size();\n            if ((index < 0) || (index >= sz)) {\n                throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(index), java.lang.Integer.valueOf(sz)));\n            } \n            final int int = ((int) + index) % (int);\n            return E[][idx];\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"largestKey":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"68e554d8-2eca-11e6-ad83-77a84f72175b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1511","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupValue(obj)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:154","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Boolean"},"failures":[],"tindex":"68e57be9-2eca-11e6-ad83-cf2dea878da1","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:97","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.lang.Boolean) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:120","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[22],"tindex":"68e5a2fa-2eca-11e6-ad83-7d638e2e1023","method":{"position":"org.apache.commons.collections4.ListUtils:546","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b, final org.apache.commons.collections4.Equator<? super E> equator) {\n    if (b == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n            } \n            final org.apache.commons.collections4.sequence.SequencesComparator<E> org.apache.commons.collections4.sequence.SequencesComparator<E> = new org.apache.commons.collections4.sequence.SequencesComparator<E>(a , b , equator);\n            final org.apache.commons.collections4.sequence.EditScript<E> org.apache.commons.collections4.sequence.EditScript<E> = comparator.getScript();\n            final org.apache.commons.collections4.ListUtils.LcsVisitor<E> org.apache.commons.collections4.ListUtils.LcsVisitor<E> = new org.apache.commons.collections4.ListUtils.LcsVisitor<E>();\n            script.visit(visitor);\n            return visitor.getSubSequence();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"b"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[],"tindex":"68e5ca0b-2eca-11e6-ad83-e5880ae9decf","method":{"position":"org.apache.commons.collections4.CollectionUtils:80","type":"CtMethodImpl","sourcecode":"public final int max(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Math.max(freqA(obj), freqB(obj));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:269","type":"CtBinaryOperatorImpl","sourcecode":"reuse == null"},"failures":[],"tindex":"68e5ca0c-2eca-11e6-ad83-5502d5176841","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:598","type":"CtMethodImpl","sourcecode":"protected void destroyEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            entry.java.lang.Object = null;\n            entry.java.lang.Object = null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reuse":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:126","type":"CtBinaryOperatorImpl","sourcecode":"criterion == null"},"failures":[],"tindex":"68e5f11d-2eca-11e6-ad83-3f5c3251d0c4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1533","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            return (node != null) && (node.getValue().equals(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"criterion":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"68e6182e-2eca-11e6-ad83-613dec70ac33","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:518","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value instanceof java.util.Map) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtBinaryOperatorImpl","sourcecode":"(other.size()) != 1"},"failures":[23,24,25,26],"tindex":"68e6182f-2eca-11e6-ad83-4fbe58cd50f6","method":{"position":"org.apache.commons.collections4.MapUtils:1204","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Map<?, ?> map) {\n    if ((map.size()) != 1) {\n        {\n            return (map == null) || (map.isEmpty());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[27],"tindex":"68e63f40-2eca-11e6-ad83-3966770c7ba5","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:792","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 instanceof java.lang.Object[]) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((((multi.size()) >= 4) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) && (key4 == null ? (multi.getKey(3)) == null : key4.equals(multi.getKey(3)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216],"tindex":"68e66651-2eca-11e6-ad83-45f51034a0e5","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:663","type":"CtMethodImpl","sourcecode":"protected int calculateNewCapacity(final int proposedCapacity) {\n    if (proposedCapacity == 0) {\n        {\n            int int = 1;\n            if (proposedCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n                newCapacity = org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int;\n            } else {\n                while (newCapacity < proposedCapacity) {\n                    newCapacity <<= 1;\n                }\n                if (newCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n                    newCapacity = org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int;\n                } \n            }\n            return newCapacity;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"proposedCapacity"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[217],"tindex":"68e6b472-2eca-11e6-ad83-e9ce237ef00e","method":{"position":"org.apache.commons.collections4.functors.OrPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.OrPredicate<T>(predicate1 , predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[218,219,220,221,222,223,224,225],"tindex":"68e6b473-2eca-11e6-ad83-056c54092d02","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:106","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object == null) {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().getCount(object);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[226,227,228],"tindex":"68e6b474-2eca-11e6-ad83-656316c912f1","method":{"position":"org.apache.commons.collections4.CollectionUtils:1414","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (coll == null) || (coll.isEmpty());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"68e6db85-2eca-11e6-ad83-2b624e4948cc","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:99","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtBinaryOperatorImpl","sourcecode":"(nodeCount) == 0"},"failures":[3,229,10,230,14,231,15],"tindex":"68e6db86-2eca-11e6-ad83-2fca578a6812","method":{"position":"org.apache.commons.collections4.list.TreeList:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            checkInterval(index, 0, ((size()) - 1));\n            final E E = get(index);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(index);\n            (int)--;\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[232,233,234,235,236],"tindex":"68e70297-2eca-11e6-ad83-7f6307eb9e04","method":{"position":"org.apache.commons.collections4.PredicateUtils:421","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333],"tindex":"68e729a8-2eca-11e6-ad83-1db1ce7aa7ea","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:547","type":"CtMethodImpl","sourcecode":"private K doRemoveValue(final java.lang.Object value) {\n    if (value instanceof java.util.Map<?, ?>) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getKey();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"68e750b9-2eca-11e6-ad83-9b943cea2627","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:178","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value != null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            return (lookupValue(value)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[164,165,170,171,173,174,175,176,178,181,184,185,203,204,205,334,335,336,337,338,339,340,341,342,216,343,344],"tindex":"68e750ba-2eca-11e6-ad83-21f9de25b5b7","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:205","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(super.getEntry(key)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:165","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"68e777cb-2eca-11e6-ad83-877cc498383a","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:316","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(index)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : coll) {\n                if (contains(e)) {\n                    continue;\n                } \n                decorated().add(e);\n                toAdd.add(e);\n                changed = true;\n            }\n            if (changed) {\n                java.util.List<E>.addAll(index, toAdd);\n            } \n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[345,346],"tindex":"68e777cc-2eca-11e6-ad83-fbc770ded4b8","method":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.TiedMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = getValue();\n            return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[347],"tindex":"68e79edd-2eca-11e6-ad83-374652d7aefd","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[30,42,49,63,66,93,100,114,117],"tindex":"68e79ede-2eca-11e6-ad83-5d667f39eeb4","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:227","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            purgeBeforeRead();\n            if (value == null) {\n                return false;\n            } \n            return super.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376],"tindex":"68e7c5ef-2eca-11e6-ad83-299f3218dde6","method":{"position":"org.apache.commons.collections4.set.PredicatedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSet<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSet<E>(set , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"(collection.size()) == 0"},"failures":[],"tindex":"68e7c5f0-2eca-11e6-ad83-b503f1f12398","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:260","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Integer"},"failures":[],"tindex":"68e7ec01-2eca-11e6-ad83-650bff3287a4","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:105","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key instanceof java.lang.Integer) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[247,264],"tindex":"68e7ec02-2eca-11e6-ad83-c76a2aede179","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[377],"tindex":"68e7ec03-2eca-11e6-ad83-9d2f379a4517","method":{"position":"org.apache.commons.collections4.ListUtils:574","type":"CtMethodImpl","sourcecode":"public static java.lang.String longestCommonSubsequence(final java.lang.CharSequence a, final java.lang.CharSequence b) {\n    if ((b == null) || (a == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"CharSequence must not be null\");\n            } \n            final java.util.List<java.lang.Character> java.util.List<java.lang.Character> = org.apache.commons.collections4.ListUtils.longestCommonSubsequence(new org.apache.commons.collections4.ListUtils.CharSequenceAsList(a), new org.apache.commons.collections4.ListUtils.CharSequenceAsList(b));\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            for (java.lang.Character java.lang.Character : lcs) {\n                sb.append(ch);\n            }\n            return sb.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[263],"tindex":"68e81314-2eca-11e6-ad83-9523237d3999","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if ((mapToCopy.size()) != 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[378],"tindex":"68e81315-2eca-11e6-ad83-7f6096badf03","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:168","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object != null) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().remove(object);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"68e81316-2eca-11e6-ad83-09f698b85fc2","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:174","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().removeAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"68e83a27-2eca-11e6-ad83-c9b73e707b25","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[379,28],"tindex":"68e83a28-2eca-11e6-ad83-1f18571bad7c","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == (org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[380,381,382,383,384,385],"tindex":"68e83a29-2eca-11e6-ad83-c379de5b042f","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:70","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName , paramTypes , args);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1360","type":"CtBinaryOperatorImpl","sourcecode":"(nodeCount) > 0"},"failures":[],"tindex":"68e8d66a-2eca-11e6-ad83-d5a17fa7316f","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:350","type":"CtMethodImpl","sourcecode":"private boolean selectR(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h, final int bitIndex, final K key, final int lengthInBits, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.Reference<java.util.Map.Entry<K, V>> reference) {\n    if (lengthInBits > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((h.int) <= bitIndex) {\n                if (!(h.isEmpty())) {\n                    reference.set(h);\n                    return false;\n                } \n                return true;\n            } \n            if (!(isBitSet(key, h.int, lengthInBits))) {\n                if (selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference)) {\n                    return selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference);\n                } \n            } else {\n                if (selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference)) {\n                    return selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference);\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"lengthInBits"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[],"tindex":"68e8fd7b-2eca-11e6-ad83-e3442f0ab3c5","method":{"position":"org.apache.commons.collections4.list.TransformedList:119","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if ((index - index) > (index - index)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getList().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"index","end2":"index","end1":"index","start2":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:216","type":"CtBinaryOperatorImpl","sourcecode":"removed == false"},"failures":[386],"tindex":"68e8fd7c-2eca-11e6-ad83-eb0343e98d13","method":{"position":"org.apache.commons.collections4.CollectionUtils:1588","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c, final boolean includeDuplicates) {\n    if (includeDuplicates == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"The collections must not be null\");\n            } \n            if (c == null) {\n                throw new java.lang.IllegalArgumentException(\"The comparator must not be null\");\n            } \n            final int int = (a instanceof java.util.Collection<?>) && (b instanceof java.util.Collection<?>) ? java.lang.Math.max(1, ((((java.util.Collection<?>)(a)).size()) + (((java.util.Collection<?>)(b)).size()))) : 10;\n            final java.util.Iterator<O> java.util.Iterator<O> = new org.apache.commons.collections4.iterators.CollatingIterator<O>(c , a.iterator() , b.iterator());\n            if (includeDuplicates) {\n                return org.apache.commons.collections4.IteratorUtils.toList(iterator, totalSize);\n            } else {\n                final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>(totalSize);\n                O O = null;\n                while (iterator.hasNext()) {\n                    final O O = iterator.next();\n                    if ((lastItem == null) || (!(lastItem.equals(item)))) {\n                        mergedList.add(item);\n                    } \n                    lastItem = item;\n                }\n                mergedList.trimToSize();\n                return mergedList;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"removed":"includeDuplicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[174,181,195,198,339,342,387,388],"tindex":"68e94b9d-2eca-11e6-ad83-7fb589ace7d2","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if ((value instanceof org.apache.commons.collections4.Bag) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                    if ((entry.getValue()) == null) {\n                        return true;\n                    } \n                }\n            } else {\n                for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                    if (isEqualValue(value, entry.getValue())) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404],"tindex":"68e972ae-2eca-11e6-ad83-135657a6233c","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:132","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object value) {\n    if (value != null) {\n        {\n            int int = 0;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i++;\n            }\n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"68e999bf-2eca-11e6-ad83-1114ef810916","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:162","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n            E = null;\n            boolean = false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:313","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,395,444],"tindex":"68e999c0-2eca-11e6-ad83-11980556640a","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.removeNode(node);\n            broadcastNodeRemoved(node);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"68e9c0d1-2eca-11e6-ad83-bb6b9154070c","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:69","type":"CtMethodImpl","sourcecode":"public boolean evaluate(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Class<?>.isInstance(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506],"tindex":"68e9c0d2-2eca-11e6-ad83-513d9e4252c3","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:79","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal K castKey(final java.lang.Object key) {\n    if ((key instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((K)(key));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[507,508],"tindex":"68e9c0d3-2eca-11e6-ad83-f9ce08d5cdb1","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                return bag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableSortedBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:147","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[509],"tindex":"68e9e7e4-2eca-11e6-ad83-5106979f6399","method":{"position":"org.apache.commons.collections4.IteratorUtils:278","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start) {\n    if (start > 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"start"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[510,511,512,468,469,470,471,472,513,473,474,514,475,476,477,478,515,479,516,480,517,518,481,482,519,520,521,483,484,485,486,487,488,522,523,524,525,489,526,527,490,491,492,493,494,528],"tindex":"68ea0ef5-2eca-11e6-ad83-d9788b448426","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isBitSet(final java.lang.String key, final int bitIndex, final int lengthInBits) {\n    if (key == null) {\n        {\n            if ((key == null) || (bitIndex >= lengthInBits)) {\n                return false;\n            } \n            final int int = bitIndex / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = bitIndex % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            return ((key.charAt(index)) & (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(bit))) != 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[],"tindex":"68ea0ef6-2eca-11e6-ad83-a56304b5b263","method":{"position":"org.apache.commons.collections4.MapUtils:1698","type":"CtMethodImpl","sourcecode":"public static <K, V, E>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends E> elements, final org.apache.commons.collections4.Transformer<E, K> keyTransformer, final org.apache.commons.collections4.Transformer<E, V> valueTransformer) {\n    if (map != null) {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = elements.iterator();\n            while (iter.hasNext()) {\n                final E E = iter.next();\n                map.put(keyTransformer.transform(temp), valueTransformer.transform(temp));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"68ea3607-2eca-11e6-ad83-4535c7404e74","method":{"position":"org.apache.commons.collections4.IteratorUtils:869","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration, final java.util.Collection<? super E> removeCollection) {\n    if (removeCollection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            if (removeCollection == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration , removeCollection);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"removeCollection"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"68ea3608-2eca-11e6-ad83-052466bd03b8","method":{"position":"org.apache.commons.collections4.MapUtils:641","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return 0;\n            } \n            return integerObject.intValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"68ea3609-2eca-11e6-ad83-f702e1526e72","method":{"position":"org.apache.commons.collections4.MapUtils:742","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key, final byte defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return defaultValue;\n            } \n            return byteObject.byteValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:107","type":"CtBinaryOperatorImpl","sourcecode":"(collection) != null"},"failures":[],"tindex":"68ea5d1a-2eca-11e6-ad83-b3d24c61222e","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtFieldReadImpl","sourcecode":"slotFilled"},"failures":[],"tindex":"68ea5d1b-2eca-11e6-ad83-01c4a7515d57","method":{"position":"org.apache.commons.collections4.ComparatorUtils:135","type":"CtMethodImpl","sourcecode":"public static java.util.Comparator<java.lang.Boolean> booleanComparator(final boolean trueFirst) {\n    if (trueFirst) {\n        {\n            return org.apache.commons.collections4.comparators.BooleanComparator.booleanComparator(trueFirst);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"slotFilled":"trueFirst"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[529,530],"tindex":"68ea5d1c-2eca-11e6-ad83-f33da71fe116","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:105","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object != null) {\n        {\n            return decorated().getCount(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"68ea842d-2eca-11e6-ad83-5fd329173425","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"68ea842e-2eca-11e6-ad83-b76760005378","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (null == o) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n            } \n            java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:74","type":"CtBinaryOperatorImpl","sourcecode":"result == null"},"failures":[],"tindex":"68eaab3f-2eca-11e6-ad83-2334b9db3e9f","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:418","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"result":"key"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":65,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}