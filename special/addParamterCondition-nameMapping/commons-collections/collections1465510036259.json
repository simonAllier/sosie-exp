{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":60,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":835,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":786,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":559,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":775,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":297,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":97,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":362,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":498,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":648,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":213,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx4":4,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":668,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":636,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":757,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":68,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":805,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":893,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":618,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":407,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":386,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":22,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":181,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":894,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":327,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":504,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":32,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":542,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":168,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":675,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":394,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":560,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":18,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":574,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":40,"org.apache.commons.collections4.ListUtilsTest.testLazyList":734,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":342,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":64,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":476,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":14,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":751,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":138,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":581,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":11,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":741,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":147,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":333,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":96,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":366,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":381,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":718,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":783,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":416,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":318,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":621,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":301,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":824,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":387,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":842,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":184,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":691,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":128,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":191,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":897,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":619,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":78,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":697,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":851,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":546,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":810,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testObjectHashCodeEqualsContract":906,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":514,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":69,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":515,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":874,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":516,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":26,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":706,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":199,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":497,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":777,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":293,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":426,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":61,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":241,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":678,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":228,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":30,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":790,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":393,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":303,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":224,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":110,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":141,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":682,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":770,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":76,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":870,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":167,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":341,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":469,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":300,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":454,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":606,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":613,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":607,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":608,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":479,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":626,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":646,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":105,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":126,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":474,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":475,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":473,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":140,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":334,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":449,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":589,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":131,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":91,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":438,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":795,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectEqualsSelf":658,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":577,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":338,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":296,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":661,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":317,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":876,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":239,"org.apache.commons.collections4.bag.PredicatedBagTest.testCanonicalEmptyCollectionExists":729,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":233,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":557,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":547,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":580,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":568,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":491,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":94,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":156,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":395,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":244,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":857,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":237,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":409,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":602,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":645,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":812,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":363,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":171,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":46,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":265,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":77,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":561,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":562,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":214,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":563,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":860,"org.apache.commons.collections4.functors.AllPredicateTest.emptyCollectionToGetInstance":109,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":164,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":150,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":101,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":347,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":314,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":745,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":392,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":858,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":344,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":540,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":412,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":694,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":856,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":703,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":841,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":103,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":642,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":279,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":484,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":832,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsSelfHashCode":726,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":196,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":249,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":549,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":709,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":179,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":25,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":848,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":414,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":764,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":16,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":212,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":524,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":778,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":298,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":434,"org.apache.commons.collections4.bag.PredicatedBagTest.testCanonicalFullCollectionExists":730,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":899,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":10,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsContract":727,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":765,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":43,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":5,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":41,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":222,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":468,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":66,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":419,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":356,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":733,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testObjectEqualsSelf":904,"org.apache.commons.collections4.functors.AllPredicateTest.singletonCollectionToGetInstance":111,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":737,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":604,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":59,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":674,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":399,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":247,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":433,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":432,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":431,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":480,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":130,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":200,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":671,"org.apache.commons.collections4.map.LRUMapTest.testReset":388,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":125,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":884,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":124,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":716,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":782,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":622,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":683,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":353,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":880,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":252,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":148,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":572,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":8,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":313,"org.apache.commons.collections4.functors.AllPredicateTest.nullCollectionToGetInstance":0,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":349,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":450,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":815,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":825,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":115,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":326,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":402,"org.apache.commons.collections4.map.LinkedMapTest.testReset":339,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":615,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":385,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":417,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":466,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":208,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":437,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":545,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":617,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":643,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":847,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":538,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":705,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":871,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":436,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":270,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":173,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":282,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":246,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":639,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":864,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":828,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":875,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":898,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":707,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":194,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":670,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":377,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":261,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":522,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":713,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":594,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":879,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":503,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":798,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":163,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":122,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":846,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":700,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":142,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":467,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":793,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":165,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":496,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":768,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":889,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":263,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":238,"org.apache.commons.collections4.map.HashedMapTest.testClone":488,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":890,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":891,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":679,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":132,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":558,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":31,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":746,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":255,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":595,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":28,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":588,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":384,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":603,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":625,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":305,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":907,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":397,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":256,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectEqualsSelf":725,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":311,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":371,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":370,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":372,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":492,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":478,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":63,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":186,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":348,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":525,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":541,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":351,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":578,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":696,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":911,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":21,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":788,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":383,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":382,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":108,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":340,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":336,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":29,"org.apache.commons.collections4.map.LinkedMapTest.testClone":343,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":831,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":234,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":530,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":528,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":556,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":177,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":861,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":55,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":838,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":886,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":569,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":887,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":600,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":888,"org.apache.commons.collections4.MapUtilsTest.testEmptyIfNull":664,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":533,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":532,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":408,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":531,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":623,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":690,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":45,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":145,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":509,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":403,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":401,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":151,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":152,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":575,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":505,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":672,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":49,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":550,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":209,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":36,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":325,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":692,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":361,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":448,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":39,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":38,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":461,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":37,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":144,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":883,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":912,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":723,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":328,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":316,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":178,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":676,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":47,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":404,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":852,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":250,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":755,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":269,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":731,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":106,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":689,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":688,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":134,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":687,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":747,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":859,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":878,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":462,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":227,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":521,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":257,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":350,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":789,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":304,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":331,"org.apache.commons.collections4.map.LRUMapTest.testLRU":400,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":133,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":862,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":120,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":506,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":486,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":286,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":245,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":283,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":427,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":175,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":900,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":62,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":800,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":495,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":192,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":53,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":425,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":398,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":844,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":451,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":34,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":24,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":424,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":586,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":605,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":791,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":174,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":576,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":273,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":275,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":465,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":523,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":537,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":435,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":376,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":72,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":415,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":612,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":520,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":517,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":482,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":853,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":162,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":811,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":806,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":749,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":82,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":750,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":567,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":452,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":829,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":895,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":118,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":172,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":74,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":75,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":354,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":358,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":760,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":460,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":360,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":285,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":822,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":202,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":640,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":135,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":264,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":146,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":551,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":787,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":715,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":882,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":535,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":872,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":127,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":719,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":217,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":19,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":885,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":243,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":490,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapRemove":863,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":854,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":85,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":216,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":616,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":86,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":774,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":84,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":220,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":463,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":440,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":501,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":272,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":767,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":441,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":308,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":632,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":136,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":653,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":771,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":477,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":446,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":779,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":330,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":357,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":281,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":456,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":849,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":58,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":721,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":149,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":493,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":157,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":447,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":802,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":57,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":693,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":609,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":51,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":359,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":735,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":763,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":195,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":487,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":816,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":611,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":610,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":291,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":271,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testSerializeDeserializeThenCompare":903,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":552,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":276,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":527,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":799,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":368,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":405,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":170,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":99,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":681,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":309,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":554,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":758,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":242,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":543,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":833,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":235,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":210,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":644,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":652,"org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testEqualsAndHashCode":116,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":337,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":83,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":112,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":544,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":155,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":587,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":335,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":73,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":254,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":79,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":769,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":471,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":470,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":65,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":183,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":830,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":236,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":472,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":154,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":197,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":766,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testEqualsNull":905,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":566,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":673,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":742,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":364,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":565,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":564,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":119,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":507,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":601,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":223,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":206,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":629,"org.apache.commons.collections4.ArrayStackTest.testSearch":651,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":584,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":207,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":633,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":637,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":89,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":345,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":87,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":443,"org.apache.commons.collections4.map.LRUMapTest.testClone":389,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":776,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":379,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":502,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":315,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":369,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":189,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":406,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":873,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":801,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":571,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":666,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":754,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":159,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":161,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":104,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":518,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":809,"org.apache.commons.collections4.CollectionUtilsTest.collateException2":665,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":380,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":267,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":71,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":655,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":585,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":743,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":702,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":717,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":205,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":701,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":529,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":819,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":840,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":442,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":500,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":553,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":762,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":98,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":839,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":738,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":253,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":781,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":710,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":712,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":850,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":129,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":6,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":204,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":695,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":95,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":459,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":378,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":826,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":176,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectHashCodeEqualsContract":659,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":445,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":865,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":413,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":877,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":794,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":70,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":647,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":499,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":823,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":153,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":259,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":598,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":284,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking":818,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":866,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":656,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":657,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":278,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":137,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":748,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":627,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":489,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":56,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":761,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":375,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":804,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":260,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":288,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":367,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":374,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":373,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":797,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":570,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":365,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":667,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":698,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":868,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":481,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":33,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":614,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":597,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":896,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":332,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":188,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":631,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":274,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":820,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":182,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":203,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":251,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":753,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":526,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":892,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":792,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":411,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":736,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":322,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":323,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":324,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":620,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":630,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":593,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":230,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":231,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":536,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":277,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":624,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":881,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":100,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":638,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":485,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":211,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":421,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":444,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":654,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":226,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":596,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":720,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":539,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":508,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":352,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":180,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":439,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":12,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":704,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":306,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":166,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":248,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":635,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":20,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":827,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":453,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":121,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":190,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":396,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":699,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":628,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":634,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":290,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":780,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":232,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":48,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":218,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":739,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":724,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":287,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":555,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":15,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":258,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":711,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":307,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":143,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":582,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":714,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":752,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":680,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":756,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":280,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":423,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":519,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":102,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":346,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":908,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":90,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":843,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":455,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":759,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":225,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":193,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":229,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":590,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":494,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":215,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":796,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":660,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":834,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":221,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":845,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":641,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":784,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":855,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":23,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":292,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":599,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":42,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":114,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":677,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":807,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx4":3,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":35,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx5":113,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":744,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":169,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":836,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":17,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":483,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":410,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":785,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":808,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":813,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":295,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":329,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":294,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":464,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":837,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":187,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":44,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":158,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":909,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":92,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":80,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":458,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":708,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":457,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":910,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":722,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":814,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":219,"org.apache.commons.collections4.bag.PredicatedBagTest.testSimpleSerialization":728,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":732,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":198,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":867,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":422,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":573,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsContract":663,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":320,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":669,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":321,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalSet":817,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":185,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":319,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":821,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":510,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":583,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":117,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":684,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":685,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":686,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":773,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":81,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":312,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":772,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":591,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":93,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectEqualsSelf":662,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":511,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":512,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":534,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":420,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":7,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":13,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":592,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":160,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":302,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":299,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":310,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":107,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":1,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":650,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":266,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":390,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":27,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":649,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":430,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":201,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":240,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":579,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":428,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":803,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":902,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":429,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":2,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":513,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":355,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":262,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":548,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":268,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":391,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":869,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":740,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":901,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":123,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":289,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":418},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"86c8a9fc-2e8e-11e6-91ca-b742cb240d60","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1468","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final int int = size();\n                    org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(o);\n                    return size != (size());\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(keyTransformer) == null"},"failures":[],"tindex":"86c96d4d-2e8e-11e6-91ca-2f1f4561a570","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:89","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (keyTransformer == null) {\n        {\n            final org.apache.commons.collections4.map.TransformedSortedMap<K, V> org.apache.commons.collections4.map.TransformedSortedMap<K, V> = new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keyTransformer":"keyTransformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:252","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"86c96d4e-2e8e-11e6-91ca-db74faf7aa76","method":{"position":"org.apache.commons.collections4.IteratorUtils:695","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> filteredIterator(final java.util.Iterator<? extends E> iterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (iterator instanceof java.util.ListIterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterIterator<E>(iterator , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[0,1,2,3,4],"tindex":"86c9945f-2e8e-11e6-91ca-df95337fae10","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:96","type":"CtMethodImpl","sourcecode":"static <T>org.apache.commons.collections4.Predicate<T>[] validate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = new org.apache.commons.collections4.Predicate[predicates.size()];\n            int int = 0;\n            for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : predicates) {\n                preds[i] = predicate;\n                if ((preds[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n                i++;\n            }\n            return preds;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[5],"tindex":"86c9bb70-2e8e-11e6-91ca-1dd277a9355b","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[6,7,8,9,10],"tindex":"86c9bb71-2e8e-11e6-91ca-45aeb2ffdde2","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2061","type":"CtMethodImpl","sourcecode":"public V getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"86c9e282-2e8e-11e6-91ca-6f802e27f2ed","method":{"position":"org.apache.commons.collections4.SplitMapUtils:79","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Get<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"86c9e283-2e8e-11e6-91ca-755b52b633cf","method":{"position":"org.apache.commons.collections4.MapUtils:546","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key, final java.lang.Double defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getRight(dataElement)) == node"},"failures":[11,12,13,14,15,16,17,6,7,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,8,9,57,10,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"tindex":"86ca0994-2e8e-11e6-91ca-4b4b2dc9cd64","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:802","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getRightChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n        {\n            return node == null ? null : node.getRight(dataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[102,103,104,105,106],"tindex":"86ca30a5-2e8e-11e6-91ca-db4d27149709","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[107],"tindex":"86ca57b6-2e8e-11e6-91ca-e5cf32a518fe","method":{"position":"org.apache.commons.collections4.PredicateUtils:321","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[],"tindex":"86ca57b7-2e8e-11e6-91ca-d7955265997b","method":{"position":"org.apache.commons.collections4.MapUtils:1144","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> putAll(final java.util.Map<K, V> map, final java.lang.Object[] array) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            map.size();\n            if ((array == null) || ((array.int) == 0)) {\n                return map;\n            } \n            final java.lang.Object java.lang.Object = array[0];\n            if (obj instanceof java.util.Map.Entry) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(element));\n                    map.put(entry.getKey(), entry.getValue());\n                }\n            } else if (obj instanceof org.apache.commons.collections4.KeyValue) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(element));\n                    map.put(keyval.getKey(), keyval.getValue());\n                }\n            } else if (obj instanceof java.lang.Object[]) {\n                for (int int = 0 ; i < (array.int) ; i++) {\n                    final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(array[i]));\n                    if ((sub == null) || ((sub.int) < 2)) {\n                        throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + i));\n                    } \n                    map.put(((K)(sub[0])), ((V)(sub[1])));\n                }\n            } else {\n                for (int int = 0 ; i < ((array.int) - 1) ; ) {\n                    map.put(((K)(array[(i++)])), ((V)(array[(i++)])));\n                }\n            }\n            return map;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[108,108,109,110,110,111,112,113,114,115],"tindex":"86ca7ec8-2e8e-11e6-91ca-55d5f8ad5a2d","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:79","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((preds.int) == 1) {\n                return preds[0];\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(preds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getLeft(dataElement)) == node"},"failures":[11,12,13,14,15,16,17,6,7,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,8,9,57,10,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"tindex":"86caa5d9-2e8e-11e6-91ca-4ddd7b01d86b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:823","type":"CtMethodImpl","sourcecode":"private void rotateLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getRight(dataElement);\n                    node.setRight(rightChild.getLeft(dataElement), dataElement);\n                    if ((rightChild.getLeft(dataElement)) != null) {\n                        rightChild.getLeft(dataElement).setParent(node, dataElement);\n                    } \n                    rightChild.setParent(node.getParent(dataElement), dataElement);\n                    if ((node.getParent(dataElement)) == null) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = rightChild;\n                    } else if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n                        node.getParent(dataElement).setLeft(rightChild, dataElement);\n                    } else {\n                        node.getParent(dataElement).setRight(rightChild, dataElement);\n                    }\n                    rightChild.setLeft(node, dataElement);\n                    node.setParent(rightChild, dataElement);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[116],"tindex":"86caf3fa-2e8e-11e6-91ca-5dd104879761","method":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.DefaultKeyValue.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> = ((org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"86caf3fb-2e8e-11e6-91ca-27e5a9c442db","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:134","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253],"tindex":"86cb1b0c-2e8e-11e6-91ca-53fb1d6b482d","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:109","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (count != null) {\n                return count.int;\n            } \n            return 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:540","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[12,11,13,14,15,16,17,6,7,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,8,9,57,10,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"tindex":"86cb421d-2e8e-11e6-91ca-29acd3275874","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:780","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getGrandParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        {\n            if (node == null) {\n                {\n                    if (node == null) {\n                        {\n                            return getParent(getParent(node, dataElement), dataElement);\n                        }\n                    } else {\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626],"tindex":"86cb692e-2e8e-11e6-91ca-7d365968b4b8","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:393","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key) {\n    if (key == null) {\n        {\n            int int = key.hashCode();\n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[627],"tindex":"86cb903f-2e8e-11e6-91ca-3d2f07cb7b06","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(decorated().listIterator(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"86cb9040-2e8e-11e6-91ca-374109a58f38","method":{"position":"org.apache.commons.collections4.CollectionUtils:279","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> disjunction(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (b == null)) {\n        {\n            if ((b == null) || (b == null)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n                    for (final O O : helper) {\n                        helper.setCardinality(obj, ((helper.max(obj)) - (helper.min(obj))));\n                    }\n                    return helper.list();\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:72","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[628,629],"tindex":"86cbb751-2e8e-11e6-91ca-a9fd583b5737","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:331","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Set<E> createSetBasedOnList(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (list == null) {\n        {\n            java.util.Set<E> java.util.Set<E>;\n            if (set.getClass().equals(java.util.HashSet.java.util.HashSet.java.lang.Class)) {\n                subSet = new java.util.HashSet<E>(list.size());\n            } else {\n                try {\n                    subSet = set.getClass().newInstance();\n                } catch (final java.lang.InstantiationException ie) {\n                    subSet = new java.util.HashSet<E>();\n                } catch (final java.lang.IllegalAccessException iae) {\n                    subSet = new java.util.HashSet<E>();\n                }\n            }\n            subSet.addAll(list);\n            return subSet;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[536,537,538,529],"tindex":"86cbb752-2e8e-11e6-91ca-8dbe68c86a73","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:357","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry"},"failures":[630],"tindex":"86cbde63-2e8e-11e6-91ca-ab08878c2008","method":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map.Entry) {\n        {\n            if (obj == (org.apache.commons.collections4.functors.ConstantTransformer.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                return false;\n            } \n            final java.lang.Object java.lang.Object = ((org.apache.commons.collections4.functors.ConstantTransformer<?, ?>)(obj)).getConstant();\n            return (otherConstant == (getConstant())) || ((otherConstant != null) && (otherConstant.equals(getConstant())));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"86cbde64-2e8e-11e6-91ca-1d1c97a31748","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:140","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"86cbde65-2e8e-11e6-91ca-5974d4b5698a","method":{"position":"org.apache.commons.collections4.IteratorUtils:805","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.Node node) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                throw new java.lang.NullPointerException(\"Node must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(node);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[631,632,633,634,635,636,637,638,639,640,641,642,643,644],"tindex":"86cc0576-2e8e-11e6-91ca-d1b5d10c602e","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:82","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return decorated().indexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[645,646,647,648,649,650],"tindex":"86cc0577-2e8e-11e6-91ca-39b627dd3f93","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:169","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake getMiddleSnake(final int start1, final int end1, final int start2, final int end2) {\n    if ((end1 - end1) > (start1 - end2)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = end1 - start1;\n            final int int = end2 - start2;\n            if ((m == 0) || (n == 0)) {\n                return null;\n            } \n            final int int = m - n;\n            final int int = n + m;\n            final int int = ((sum % 2) == 0 ? sum : sum + 1) / 2;\n            int[][(1 + offset)] = start1;\n            int[][(1 + offset)] = end1 + 1;\n            for (int int = 0 ; d <= offset ; ++d) {\n                for (int int = -d ; k <= d ; k += 2) {\n                    final int int = k + offset;\n                    if ((k == (-d)) || ((k != d) && ((int[][(i - 1)]) < (int[][(i + 1)])))) {\n                        int[][i] = int[][(i + 1)];\n                    } else {\n                        int[][i] = (int[][(i - 1)]) + 1;\n                    }\n                    int int = int[][i];\n                    int int = ((x - start1) + start2) - k;\n                    while (((x < end1) && (y < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = ++x;\n                        ++y;\n                    }\n                    if ((((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))) {\n                        if ((int[][(i - delta)]) <= (int[][i])) {\n                            return buildSnake(int[][(i - delta)], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n                for (int int = delta - d ; k <= (delta + d) ; k += 2) {\n                    final int int = (k + offset) - delta;\n                    if ((k == (delta - d)) || ((k != (delta + d)) && ((int[][(i + 1)]) <= (int[][(i - 1)])))) {\n                        int[][i] = (int[][(i + 1)]) - 1;\n                    } else {\n                        int[][i] = int[][(i - 1)];\n                    }\n                    int int = (int[][i]) - 1;\n                    int int = ((x - start1) + start2) - k;\n                    while (((x >= start1) && (y >= start2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = x--;\n                        y--;\n                    }\n                    if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n                        if ((int[][i]) <= (int[][(i + delta)])) {\n                            return buildSnake(int[][i], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n            }\n            throw new java.lang.RuntimeException(\"Internal Error\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"end1","end2":"start1","end1":"end1","start2":"end2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[651],"tindex":"86cc7aa8-2e8e-11e6-91ca-ebf1a8dd2333","method":{"position":"org.apache.commons.collections4.ArrayStack:152","type":"CtMethodImpl","sourcecode":"public int search(final java.lang.Object object) {\n    if (null == object) {\n        {\n            int int = (size()) - 1;\n            int int = 1;\n            while (i >= 0) {\n                final java.lang.Object java.lang.Object = get(i);\n                if (((object == null) && (current == null)) || ((object != null) && (object.equals(current)))) {\n                    return n;\n                } \n                i--;\n                n++;\n            }\n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[652],"tindex":"86cc7aa9-2e8e-11e6-91ca-1ba9c80d1cb2","method":{"position":"org.apache.commons.collections4.PredicateUtils:402","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> neitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate2 == null)) {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(predicate1, predicate2);\n            return nonePredicate;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"86cca1ba-2e8e-11e6-91ca-a3b7ec565a39","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"86cca1bb-2e8e-11e6-91ca-3f1cd7103d6b","method":{"position":"org.apache.commons.collections4.MapUtils:695","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            if (map != null) {\n                {\n                    final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n                    if (doubleObject == null) {\n                        return 0.0;\n                    } \n                    return doubleObject.doubleValue();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"86ccc8cc-2e8e-11e6-91ca-1b8a3de202e3","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:59","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.MapBackedSet.mapBackedSet(map, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[533],"tindex":"86ccefdd-2e8e-11e6-91ca-41dda864a027","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:792","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key3 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key2 != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    boolean boolean = false;\n                    final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n                    while (it.hasNext()) {\n                        final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                        if ((((((multi.size()) >= 4) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) && (key4 == null ? (multi.getKey(3)) == null : key4.equals(multi.getKey(3)))) {\n                            it.remove();\n                            modified = true;\n                        } \n                    }\n                    return modified;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[653,654,655,656,657],"tindex":"86cd16ee-2e8e-11e6-91ca-a9cea78243a1","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:447","type":"CtMethodImpl","sourcecode":"public V put(int index, final K key, final V value) {\n    if (index < 0) {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = decorated();\n            if (m.containsKey(key)) {\n                final V V = m.remove(key);\n                final int int = java.util.List<K>.indexOf(key);\n                java.util.List<K>.remove(pos);\n                if (pos < index) {\n                    index--;\n                } \n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return result;\n            } else {\n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return null;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:76","type":"CtBinaryOperatorImpl","sourcecode":"(trueClosure == null) || (falseClosure == null)"},"failures":[],"tindex":"86cd16ef-2e8e-11e6-91ca-cfb9c7bffc03","method":{"position":"org.apache.commons.collections4.ClosureUtils:255","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if ((falseClosure == null) || (trueClosure == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, falseClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseClosure":"trueClosure","trueClosure":"falseClosure"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[658,659,660,204,205,661,206,662,663],"tindex":"86cd3e00-2e8e-11e6-91ca-075524182057","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        {\n            synchronized(java.lang.Object) {\n                if (object == (org.apache.commons.collections4.collection.SynchronizedCollection.this)) {\n                    return true;\n                } \n                return (object == (org.apache.commons.collections4.collection.SynchronizedCollection.this)) || (decorated().equals(object));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[664],"tindex":"86cd6511-2e8e-11e6-91ca-db24d98a59b2","method":{"position":"org.apache.commons.collections4.MapUtils:1191","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> emptyIfNull(final java.util.Map<K, V> map) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return map == null ? java.util.Collections.<K, V>emptyMap() : map;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"86cd6512-2e8e-11e6-91ca-49d5563bf623","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:133","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"86cd8c23-2e8e-11e6-91ca-e1d18d6d009e","method":{"position":"org.apache.commons.collections4.MapUtils:695","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            if (map != null) {\n                {\n                    final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n                    if (doubleObject == null) {\n                        return 0.0;\n                    } \n                    return doubleObject.doubleValue();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1594","type":"CtBinaryOperatorImpl","sourcecode":"c == null"},"failures":[665],"tindex":"86cd8c24-2e8e-11e6-91ca-a314ffaf39a0","method":{"position":"org.apache.commons.collections4.CollectionUtils:1588","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c, final boolean includeDuplicates) {\n    if (c == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (c == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((a == null) || (b == null)) {\n                        throw new java.lang.IllegalArgumentException(\"The collections must not be null\");\n                    } \n                    if (c == null) {\n                        throw new java.lang.IllegalArgumentException(\"The comparator must not be null\");\n                    } \n                    final int int = (a instanceof java.util.Collection<?>) && (b instanceof java.util.Collection<?>) ? java.lang.Math.max(1, ((((java.util.Collection<?>)(a)).size()) + (((java.util.Collection<?>)(b)).size()))) : 10;\n                    final java.util.Iterator<O> java.util.Iterator<O> = new org.apache.commons.collections4.iterators.CollatingIterator<O>(c , a.iterator() , b.iterator());\n                    if (includeDuplicates) {\n                        return org.apache.commons.collections4.IteratorUtils.toList(iterator, totalSize);\n                    } else {\n                        final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>(totalSize);\n                        O O = null;\n                        while (iterator.hasNext()) {\n                            final O O = iterator.next();\n                            if ((lastItem == null) || (!(lastItem.equals(item)))) {\n                                mergedList.add(item);\n                            } \n                            lastItem = item;\n                        }\n                        mergedList.trimToSize();\n                        return mergedList;\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[60,87,88,89,98],"tindex":"86cdb335-2e8e-11e6-91ca-b1d9e4f3cb7a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1544","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            if ((node != null) && (node.getValue().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"86ce0156-2e8e-11e6-91ca-f7566dfc7255","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ClosureUtils:355","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndClosures == null"},"failures":[666],"tindex":"86ce0157-2e8e-11e6-91ca-adcf251255c6","method":{"position":"org.apache.commons.collections4.ClosureUtils:354","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchMapClosure(final java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>> objectsAndClosures) {\n    if (objectsAndClosures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (objectsAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = objectsAndClosures.remove(null);\n            final int int = objectsAndClosures.size();\n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> : objectsAndClosures.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<E>equalPredicate(entry.getKey());\n                trs[i] = entry.getValue();\n                i++;\n            }\n            return org.apache.commons.collections4.ClosureUtils.<E>switchClosure(preds, trs, def);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndClosures":"objectsAndClosures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1594","type":"CtBinaryOperatorImpl","sourcecode":"c == null"},"failures":[],"tindex":"86ce0158-2e8e-11e6-91ca-cff207761f6c","method":{"position":"org.apache.commons.collections4.CollectionUtils:1588","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c, final boolean includeDuplicates) {\n    if (c == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (c == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((a == null) || (b == null)) {\n                        throw new java.lang.IllegalArgumentException(\"The collections must not be null\");\n                    } \n                    if (c == null) {\n                        throw new java.lang.IllegalArgumentException(\"The comparator must not be null\");\n                    } \n                    final int int = (a instanceof java.util.Collection<?>) && (b instanceof java.util.Collection<?>) ? java.lang.Math.max(1, ((((java.util.Collection<?>)(a)).size()) + (((java.util.Collection<?>)(b)).size()))) : 10;\n                    final java.util.Iterator<O> java.util.Iterator<O> = new org.apache.commons.collections4.iterators.CollatingIterator<O>(c , a.iterator() , b.iterator());\n                    if (includeDuplicates) {\n                        return org.apache.commons.collections4.IteratorUtils.toList(iterator, totalSize);\n                    } else {\n                        final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>(totalSize);\n                        O O = null;\n                        while (iterator.hasNext()) {\n                            final O O = iterator.next();\n                            if ((lastItem == null) || (!(lastItem.equals(item)))) {\n                                mergedList.add(item);\n                            } \n                            lastItem = item;\n                        }\n                        mergedList.trimToSize();\n                        return mergedList;\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699],"tindex":"86ce2869-2e8e-11e6-91ca-2bbdff839d5d","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:610","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[],"tindex":"86ce4f7a-2e8e-11e6-91ca-35857f93f8f1","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:413","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        {\n            if ((obj instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n                return false;\n            } \n            return (((org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger)(obj)).int) == (int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"86ce4f7b-2e8e-11e6-91ca-c314d2bbe910","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:780","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getGrandParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        {\n            if (node == null) {\n                {\n                    if (node == null) {\n                        {\n                            return getParent(getParent(node, dataElement), dataElement);\n                        }\n                    } else {\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[700,701,702,703,233,704,705,706,707,238,239,708,240,241,709,242,243,232,710,234,235,236,237,711,712,713,714,715,716,717,718,719,720,721,244,722,723,245,246,247,724,725,726,727,728,729,730],"tindex":"86ce4f7c-2e8e-11e6-91ca-4121f5c51d4c","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:60","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedBag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedBag<E>(bag , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[],"tindex":"86ce768d-2e8e-11e6-91ca-1de2dc0ea796","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:664","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            final java.lang.Object java.lang.Object = entry.getValue();\n            if ((entryKey == null) || (entryValue == null)) {\n                return false;\n            } \n            return (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualKey(entryKey, java.lang.Object)) && (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualValue(entryValue, getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndTransformers == null"},"failures":[731],"tindex":"86ce768e-2e8e-11e6-91ca-4f617c7f2eca","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        {\n            if (objectsAndTransformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n            final int int = objectsAndTransformers.size();\n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                trs[(i++)] = entry.getValue();\n            }\n            return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[],"tindex":"86ce9d9f-2e8e-11e6-91ca-c5835e45f625","method":{"position":"org.apache.commons.collections4.CollectionUtils:946","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection != null) && (predicate != null)) {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, answer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[732,733],"tindex":"86ce9da0-2e8e-11e6-91ca-93055bfc17bc","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:477","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[734],"tindex":"86ce9da1-2e8e-11e6-91ca-8bd37862ad78","method":{"position":"org.apache.commons.collections4.list.LazyList:111","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        {\n            final int int = decorated().size();\n            if (index < size) {\n                E E = decorated().get(index);\n                if (object == null) {\n                    object = org.apache.commons.collections4.Factory<? extends E>.create();\n                    decorated().set(index, object);\n                    return object;\n                } \n                return object;\n            } \n            for (int int = size ; i < index ; i++) {\n                decorated().add(null);\n            }\n            final E E = org.apache.commons.collections4.Factory<? extends E>.create();\n            decorated().add(object);\n            return object;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"86cec3b2-2e8e-11e6-91ca-5b37f74c0ff0","method":{"position":"org.apache.commons.collections4.MapUtils:722","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key, final boolean defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (booleanObject == null) {\n                return defaultValue;\n            } \n            return booleanObject.booleanValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[337],"tindex":"86cec3b3-2e8e-11e6-91ca-815931d59a53","method":{"position":"org.apache.commons.collections4.map.LinkedMap:183","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[135,153,171,193,210,226,242],"tindex":"86cec3b4-2e8e-11e6-91ca-2b7b76c7ec3b","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                return containsAll(((org.apache.commons.collections4.Bag<?>)(coll)));\n            } \n            return containsAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(coll));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[735,736],"tindex":"86cec3b5-2e8e-11e6-91ca-a3682beb2b3a","method":{"position":"org.apache.commons.collections4.functors.MapTransformer:49","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        {\n            if (map == null) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            return new org.apache.commons.collections4.functors.MapTransformer<I, O>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[],"tindex":"86ceeac6-2e8e-11e6-91ca-5d7aaa505b11","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:780","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getGrandParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        {\n            if (node == null) {\n                {\n                    if (node == null) {\n                        {\n                            return getParent(getParent(node, dataElement), dataElement);\n                        }\n                    } else {\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791],"tindex":"86ceeac7-2e8e-11e6-91ca-d56bdb12a3ff","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:477","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<V> createCollection(final int size) {\n    if (size == 0) {\n        {\n            return org.apache.commons.collections4.Factory<? extends java.util.Collection<V>>.create();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"86ceeac8-2e8e-11e6-91ca-81ca73f524f2","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2057","type":"CtMethodImpl","sourcecode":"public K get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.getKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[792,793,794,795,796],"tindex":"86cf11d9-2e8e-11e6-91ca-f77044ccab06","method":{"position":"org.apache.commons.collections4.CollectionUtils:326","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final org.apache.commons.collections4.Predicate<O> p) {\n    if ((a == null) || (a == null)) {\n        {\n            final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>();\n            final org.apache.commons.collections4.bag.HashBag<O> org.apache.commons.collections4.bag.HashBag<O> = new org.apache.commons.collections4.bag.HashBag<O>();\n            for (final O O : b) {\n                if (p.evaluate(element)) {\n                    bag.add(element);\n                } \n            }\n            for (final O O : a) {\n                if (!(bag.remove(element, 1))) {\n                    list.add(element);\n                } \n            }\n            return list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,672,673,675,676,677,680,681,682,683,690,814],"tindex":"86cf11da-2e8e-11e6-91ca-d922624f9b00","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:140","type":"CtMethodImpl","sourcecode":"static boolean compare(final java.lang.Object a, final java.lang.Object b) {\n    if ((a == null) || (a == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return a == null ? b == null : a.equals(b);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"86cf11db-2e8e-11e6-91ca-5b7711e0f9be","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:196","type":"CtMethodImpl","sourcecode":"public void setForwardSort(final int index) {\n    if (index < 0) {\n        {\n            checkLocked();\n            java.util.BitSet.clear(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[325,376,434,815,446,517,535,612],"tindex":"86cf38ec-2e8e-11e6-91ca-874afa2f3361","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1030","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<?, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[816],"tindex":"86cf38ed-2e8e-11e6-91ca-c1c9f2eed448","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[817,818,819,820],"tindex":"86cf38ee-2e8e-11e6-91ca-dd9344fd608a","method":{"position":"org.apache.commons.collections4.list.PredicatedList:132","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index < 0) {\n        {\n            validate(object);\n            return decorated().set(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1163","type":"CtBinaryOperatorImpl","sourcecode":"(x.getLeft(dataElement)) != null"},"failures":[76,80,90,93,94,97,98,99,100,101],"tindex":"86cf5fff-2e8e-11e6-91ca-6fa3cdb3ef89","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1098","type":"CtMethodImpl","sourcecode":"private void swapPosition(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> x, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> y, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((y.getLeft(dataElement)) != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getParent(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getLeft(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getRight(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getParent(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getLeft(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getRight(dataElement);\n            final boolean boolean = ((x.getParent(dataElement)) != null) && (x == (x.getParent(dataElement).getLeft(dataElement)));\n            final boolean boolean = ((y.getParent(dataElement)) != null) && (y == (y.getParent(dataElement).getLeft(dataElement)));\n            if (x == yFormerParent) {\n                x.setParent(y, dataElement);\n                if (yWasLeftChild) {\n                    y.setLeft(x, dataElement);\n                    y.setRight(xFormerRightChild, dataElement);\n                } else {\n                    y.setRight(x, dataElement);\n                    y.setLeft(xFormerLeftChild, dataElement);\n                }\n            } else {\n                x.setParent(yFormerParent, dataElement);\n                if (yFormerParent != null) {\n                    if (yWasLeftChild) {\n                        yFormerParent.setLeft(x, dataElement);\n                    } else {\n                        yFormerParent.setRight(x, dataElement);\n                    }\n                } \n                y.setLeft(xFormerLeftChild, dataElement);\n                y.setRight(xFormerRightChild, dataElement);\n            }\n            if (y == xFormerParent) {\n                y.setParent(x, dataElement);\n                if (xWasLeftChild) {\n                    x.setLeft(y, dataElement);\n                    x.setRight(yFormerRightChild, dataElement);\n                } else {\n                    x.setRight(y, dataElement);\n                    x.setLeft(yFormerLeftChild, dataElement);\n                }\n            } else {\n                y.setParent(xFormerParent, dataElement);\n                if (xFormerParent != null) {\n                    if (xWasLeftChild) {\n                        xFormerParent.setLeft(y, dataElement);\n                    } else {\n                        xFormerParent.setRight(y, dataElement);\n                    }\n                } \n                x.setLeft(yFormerLeftChild, dataElement);\n                x.setRight(yFormerRightChild, dataElement);\n            }\n            if ((x.getLeft(dataElement)) != null) {\n                x.getLeft(dataElement).setParent(x, dataElement);\n            } \n            if ((x.getRight(dataElement)) != null) {\n                x.getRight(dataElement).setParent(x, dataElement);\n            } \n            if ((y.getLeft(dataElement)) != null) {\n                y.getLeft(dataElement).setParent(y, dataElement);\n            } \n            if ((y.getRight(dataElement)) != null) {\n                y.getRight(dataElement).setParent(y, dataElement);\n            } \n            x.swapColors(y, dataElement);\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]) == x) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = y;\n            } else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]) == y) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = x;\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"x":"y","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"86cf8710-2e8e-11e6-91ca-85ac3853eba3","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:79","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal K castKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((K)(key));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[305,311,325,328,821,822,823,824,825,456,462,476,479,497,503,517,520,547,553,567,570,581,592,598,612,615],"tindex":"86cf8711-2e8e-11e6-91ca-e59fa1c34acc","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                    while (entry != null) {\n                        if ((entry.getValue()) == null) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            } else {\n                for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                    while (entry != null) {\n                        if (isEqualValue(value, entry.getValue())) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[826,827,828,829,830,831,832,833,834],"tindex":"86cfae22-2e8e-11e6-91ca-05edb2e24a84","method":{"position":"org.apache.commons.collections4.list.TreeList:430","type":"CtMethodImpl","sourcecode":"int indexOf(final java.lang.Object object, final int index) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((getLeftSubTree()) != null) {\n                final int int = org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n                if (result != (-1)) {\n                    return result;\n                } \n            } \n            if ((E) == null ? (E) == object : E.equals(object)) {\n                return index;\n            } \n            if ((getRightSubTree()) != null) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"86cfd533-2e8e-11e6-91ca-77dcc3edd183","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:69","type":"CtMethodImpl","sourcecode":"public boolean evaluate(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Class<?>.isInstance(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[536,537],"tindex":"86cfd534-2e8e-11e6-91ca-c530505f12d4","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:657","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key1 != null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            if (key5 != null) {\n                h ^= key5.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850],"tindex":"86cfd535-2e8e-11e6-91ca-efc191ade294","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return true;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"86cffc46-2e8e-11e6-91ca-b95bd6c3d4fe","method":{"position":"org.apache.commons.collections4.IteratorUtils:744","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> loopingIterator(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingIterator<E>(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[851,852,853,854,855,856,857,858,859,860,861,862],"tindex":"86cffc47-2e8e-11e6-91ca-a7718caf0b00","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic O transform(final java.lang.Object input) {\n    if (input == null) {\n        {\n            if (input == null) {\n                return null;\n            } \n            try {\n                final java.lang.Class<?> java.lang.Class<?> = input.getClass();\n                final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(java.lang.String, java.lang.Class<?>[]);\n                return ((O)(method.invoke(input, java.lang.Object[])));\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' does not exist\"));\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' cannot be accessed\"));\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' threw an exception\") , ex);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"86d02358-2e8e-11e6-91ca-6dbd5c8f9e95","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:792","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key3 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key2 != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    boolean boolean = false;\n                    final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n                    while (it.hasNext()) {\n                        final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                        if ((((((multi.size()) >= 4) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) && (key4 == null ? (multi.getKey(3)) == null : key4.equals(multi.getKey(3)))) {\n                            it.remove();\n                            modified = true;\n                        } \n                    }\n                    return modified;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key3"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[863],"tindex":"86d02359-2e8e-11e6-91ca-9798d4797b96","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:121","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"86d0235a-2e8e-11e6-91ca-dda6e06ad616","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:582","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<K>lookup(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"86d04a6b-2e8e-11e6-91ca-7f4e2591e2fe","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:823","type":"CtMethodImpl","sourcecode":"private void rotateLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getRight(dataElement);\n                    node.setRight(rightChild.getLeft(dataElement), dataElement);\n                    if ((rightChild.getLeft(dataElement)) != null) {\n                        rightChild.getLeft(dataElement).setParent(node, dataElement);\n                    } \n                    rightChild.setParent(node.getParent(dataElement), dataElement);\n                    if ((node.getParent(dataElement)) == null) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = rightChild;\n                    } else if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n                        node.getParent(dataElement).setLeft(rightChild, dataElement);\n                    } else {\n                        node.getParent(dataElement).setRight(rightChild, dataElement);\n                    }\n                    rightChild.setLeft(node, dataElement);\n                    node.setParent(rightChild, dataElement);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"86d04a6c-2e8e-11e6-91ca-b5633d27731c","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:72","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count > 3) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().add(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[],"tindex":"86d04a6d-2e8e-11e6-91ca-07c323577248","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,400,401,390,391,392,393,394,395,396,397,398,399,389,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,821,864,815,865,866,867,868,869,870,871,872,873,822,874,875,876,877,878,823,879,880,881,882,883,884,885,886,887,888,889,890,891,824,892,893,825,894,895,896,897,898,899,900,901,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,535,534,536,537,538,529,530,531,532,533,902,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,624,625,626],"tindex":"86d0717e-2e8e-11e6-91ca-37ac224651e4","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:381","type":"CtMethodImpl","sourcecode":"protected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return key == null ? org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object : key;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"86d0988f-2e8e-11e6-91ca-b123e8b19be1","method":{"position":"org.apache.commons.collections4.list.TransformedList:142","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            coll = transform(coll);\n            return getList().addAll(index, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"86d09890-2e8e-11e6-91ca-377ae60c7dc0","method":{"position":"org.apache.commons.collections4.MapUtils:318","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Double) {\n                return ((java.lang.Double)(answer));\n            } \n            return java.lang.Double.valueOf(answer.doubleValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[903,904,905,906,907],"tindex":"86d09891-2e8e-11e6-91ca-a947d267c778","method":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:109","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            if ((org.apache.commons.collections4.comparators.ReverseComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.ReverseComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.ReverseComparator<?> org.apache.commons.collections4.comparators.ReverseComparator<?> = ((org.apache.commons.collections4.comparators.ReverseComparator<?>)(object));\n                return java.util.Comparator<E>.equals(thatrc.java.util.Comparator<?>);\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[],"tindex":"86d09892-2e8e-11e6-91ca-c38eb4adeb69","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1468","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final int int = size();\n                    org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(o);\n                    return size != (size());\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[],"tindex":"86d0bfa3-2e8e-11e6-91ca-493978061749","method":{"position":"org.apache.commons.collections4.SplitMapUtils:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.SplitMapUtils.WrappedPut.this)) {\n                return true;\n            } \n            return (obj instanceof org.apache.commons.collections4.SplitMapUtils.WrappedPut) && (((org.apache.commons.collections4.SplitMapUtils.WrappedPut<?, ?>)(obj)).org.apache.commons.collections4.Put<?, ?>.equals(org.apache.commons.collections4.SplitMapUtils.WrappedPut.this.org.apache.commons.collections4.Put<K, V>));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[529],"tindex":"86d0bfa4-2e8e-11e6-91ca-21f7e3520f52","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:199","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[821,864,865,866,867,868,870,871,873,822,874,875,877,823,881,882,886,887,888,889,890,891,824,825,894,897,898,899,900,901],"tindex":"86d0e6b5-2e8e-11e6-91ca-131e9b5315f0","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:204","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key2 = isKeyType(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<?>)(key2)).get();\n            return key1 == key2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"86d0e6b6-2e8e-11e6-91ca-bfc6f4b44087","method":{"position":"org.apache.commons.collections4.CollectionUtils:279","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> disjunction(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (b == null)) {\n        {\n            if ((b == null) || (b == null)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n                    for (final O O : helper) {\n                        helper.setCardinality(obj, ((helper.max(obj)) - (helper.min(obj))));\n                    }\n                    return helper.list();\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"86d0e6b7-2e8e-11e6-91ca-a5d29a833abe","method":{"position":"org.apache.commons.collections4.ListUtils:442","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list.isEmpty()) {\n        {\n            return org.apache.commons.collections4.list.TransformedList.transformingList(list, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"86d10dc8-2e8e-11e6-91ca-076c8706e505","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:158","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:540","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[76,80,90,93,94,97,98,99,100,101],"tindex":"86d10dc9-2e8e-11e6-91ca-71defc4580bc","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1908","type":"CtMethodImpl","sourcecode":"private void swapColors(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n            node.boolean[][dataElement.ordinal()] ^= boolean[][dataElement.ordinal()];\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"86d10dca-2e8e-11e6-91ca-cb6d01b83c47","method":{"position":"org.apache.commons.collections4.MapUtils:1623","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[908,909],"tindex":"86d134db-2e8e-11e6-91ca-97e4e64dcc5d","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:143","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = (int) - 1;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i--;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"86d134dc-2e8e-11e6-91ca-256be5293642","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:404","type":"CtMethodImpl","sourcecode":"public java.util.Iterator<V> iterator(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(containsKey(key))) {\n                return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n            } \n            return new ValuesIterator(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[12,11,13,14,15,16,17,6,7,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,910,56,8,9,57,10,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"tindex":"86d134dd-2e8e-11e6-91ca-ed0789ce9c69","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:767","type":"CtMethodImpl","sourcecode":"private static void makeBlack(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node != null) {\n                node.setBlack(dataElement);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[911],"tindex":"86d15bee-2e8e-11e6-91ca-5ba4cda820e0","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[912],"tindex":"86d15bef-2e8e-11e6-91ca-17e24f5d3b4d","method":{"position":"org.apache.commons.collections4.CollectionUtils:774","type":"CtMethodImpl","sourcecode":"public static <T>boolean filterInverse(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.filter(collection, (predicate == null ? null : org.apache.commons.collections4.PredicateUtils.notPredicate(predicate)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}