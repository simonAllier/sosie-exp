{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":623,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":236,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":733,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":97,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":245,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":421,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":539,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":127,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":244,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":638,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":509,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":281,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":533,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":149,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":532,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":278,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":201,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":168,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":634,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":211,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToString":429,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":472,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":212,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":344,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":169,"org.apache.commons.collections4.map.LazySortedMapTest.testLastKey":295,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":480,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":648,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":555,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":460,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":591,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":251,"org.apache.commons.collections4.map.LazySortedMapTest.testMakeMap":315,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":571,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":523,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":676,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":96,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking":412,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":640,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":641,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":449,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":686,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":717,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":132,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":407,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":734,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":669,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":594,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":5,"org.apache.commons.collections4.ListUtilsTest.testLazyList":340,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":694,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSimpleSerialization":391,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":577,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":629,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":666,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":20,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":143,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":664,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetIteratorRemoveChangesMap":326,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":726,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":427,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":520,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":217,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":714,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":368,"org.apache.commons.collections4.CollectionUtilsTest.select":453,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":614,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":670,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":61,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRetainAll":302,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":661,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":567,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":39,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":529,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":115,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":513,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":521,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":321,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":572,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":280,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":159,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":24,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":511,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":651,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":652,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnmodifiable":185,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":650,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":230,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":524,"org.apache.commons.collections4.CollectionUtilsTest.intersection":458,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":710,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":512,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":345,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":559,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":644,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":73,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":171,"org.apache.commons.collections4.map.LazySortedMapTest.testMapHashCode":303,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":263,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":58,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":131,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":721,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":361,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":362,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":519,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":635,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":363,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":481,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":680,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":177,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":67,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":487,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":502,"org.apache.commons.collections4.list.PredicatedListTest.testEqualsNull":444,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":624,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":270,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":200,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":621,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":26,"org.apache.commons.collections4.map.CompositeMapTest.testPut":471,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":684,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueCompatibility":186,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":41,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":342,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":399,"org.apache.commons.collections4.map.CompositeMapTest.testGet":470,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSimpleSerialization":206,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":619,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":21,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":163,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":490,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":353,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":386,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":605,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":35,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":705,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":109,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":642,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCanonicalEmptyCollectionExists":205,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":48,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":583,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":607,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":198,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":355,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEmptyListSort":388,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":354,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSerializeDeserializeThenCompare":199,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":420,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":105,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":727,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":537,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":467,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":32,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsContract":207,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":322,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":578,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":627,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":128,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":30,"org.apache.commons.collections4.map.LazySortedMapTest.testFirstKey":296,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":729,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":112,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":422,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":25,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":229,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":378,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":379,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":377,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":547,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":574,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":134,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":704,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":119,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":146,"org.apache.commons.collections4.CollectionUtilsTest.union":457,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":718,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":259,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":264,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":148,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":709,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":232,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":558,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":657,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":3,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":596,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":394,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":563,"org.apache.commons.collections4.list.PredicatedListTest.testCanonicalFullCollectionExists":443,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":83,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":469,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":649,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":719,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":12,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":403,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":548,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":639,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":294,"org.apache.commons.collections4.map.LazySortedMapTest.testEmptyMapCompatibility":318,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":477,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":609,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":438,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":590,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":722,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":77,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":256,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":645,"org.apache.commons.collections4.list.TreeListTest.testRemove":247,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":137,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":738,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":530,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":602,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":13,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":659,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":260,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":42,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveChangesMap":312,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":494,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":46,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":135,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":631,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":9,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":261,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":482,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":383,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":382,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":491,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":508,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":381,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsSelfHashCode":392,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":145,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":233,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":435,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":531,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCanonicalFullCollectionExists":203,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":88,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":423,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueSerialization":190,"org.apache.commons.collections4.list.PredicatedListTest.testCanonicalEmptyCollectionExists":445,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":700,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":643,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":257,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":735,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":736,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":737,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":209,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":505,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":82,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":265,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":611,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":334,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":272,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":93,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":615,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":655,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":172,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":654,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":653,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":130,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":560,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":222,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":246,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":59,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEqualsNull":204,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":542,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":588,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":492,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":164,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":493,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":554,"org.apache.commons.collections4.ListUtilsTest.testSubtract":6,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionSize":193,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectEqualsSelf":332,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":385,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":713,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":593,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":284,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":380,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":34,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueElement":187,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":49,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":221,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":724,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":107,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":479,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":218,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":62,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":138,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":568,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":402,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":498,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":95,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":416,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":679,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":75,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":239,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":668,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":637,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":55,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":535,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":125,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":150,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":540,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":506,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":241,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":92,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":18,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":54,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":174,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":436,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":413,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":525,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":227,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":620,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":238,"org.apache.commons.collections4.list.PredicatedListTest.testSimpleSerialization":446,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":697,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":346,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":411,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":121,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":695,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":632,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsContract":337,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":711,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":372,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":243,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":728,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":662,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":292,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":622,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":106,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":553,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":11,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":371,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":370,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":369,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":579,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":53,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":154,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":300,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":612,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":279,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectEqualsSelf":349,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":674,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":84,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":165,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":660,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":425,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":514,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":474,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":155,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":451,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":473,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":231,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testDecorateFactory":184,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":613,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":116,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":740,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":290,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":483,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":626,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":565,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":176,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":575,"org.apache.commons.collections4.list.PredicatedListTest.testObjectEqualsSelf":442,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":522,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":66,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":486,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":562,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":216,"org.apache.commons.collections4.map.MultiKeyMapTest.testSampleMappings":716,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":405,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":600,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":181,"org.apache.commons.collections4.QueueUtilsTest.testEmptyQueue":179,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":249,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":510,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":2,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":570,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":576,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":636,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":50,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":242,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":258,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":720,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":142,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":341,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":465,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":103,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":610,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":196,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":289,"org.apache.commons.collections4.map.LazySortedMapTest.testFullMapCompatibility":320,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking":401,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":277,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":123,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":327,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":516,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":237,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":437,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":285,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":19,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove1":304,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":226,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove2":305,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove3":306,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":348,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":528,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":625,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":440,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":100,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":434,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":111,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":375,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":374,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":431,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":504,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":373,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":408,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":489,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":276,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":102,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray2":192,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":592,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":360,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueCompatibility":189,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":228,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":518,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":70,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":687,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":153,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":464,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRetainAll":330,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":496,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsSelfHashCode":338,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":546,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":85,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":262,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":417,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":29,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":450,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":536,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":488,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":365,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":366,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":475,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":367,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":71,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":133,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":214,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":356,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":439,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":180,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":433,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":122,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":468,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":1,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetIteratorRemoveChangesMap":309,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":357,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":235,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":110,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":358,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":359,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":617,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":129,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":732,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":275,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":685,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":581,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":313,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":682,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":52,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSerializeDeserializeThenCompare":352,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":175,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":561,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":288,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":144,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":376,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":286,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":98,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":283,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":459,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":601,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":551,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":587,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":604,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":478,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":308,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":452,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":27,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":663,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":90,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":328,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":485,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":219,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking":415,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":323,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":410,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":255,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":271,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorIsSerializable":390,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":606,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":671,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":114,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":441,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":182,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":397,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":476,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":252,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":628,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":564,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":455,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":550,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":269,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":364,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":589,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":268,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":597,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":40,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":702,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":672,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetClearChangesMap":307,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":730,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":463,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":667,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":72,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":124,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":398,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":10,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":569,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":267,"org.apache.commons.collections4.set.CompositeSetTest.testContains":466,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveAll":324,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":409,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":501,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":234,"org.apache.commons.collections4.list.TreeListTest.testBug35258":248,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":549,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":400,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":656,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":683,"org.apache.commons.collections4.ListUtilsTest.testSelect":462,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":274,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":350,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":461,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":22,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":147,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":603,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":166,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":447,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":584,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":538,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":57,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":731,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":210,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":618,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":4,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":739,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":86,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":495,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":586,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":556,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":585,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":158,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":515,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":699,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicateEx1":151,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":167,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains1":297,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains2":298,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":74,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":677,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains3":299,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalFullCollectionExists":333,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":7,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":696,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":8,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":173,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":384,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":689,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":419,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":703,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":31,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":484,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":329,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullValue":311,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":580,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":673,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":395,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization":712,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":266,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":725,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":51,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":225,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":250,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":161,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":282,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":543,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":690,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":545,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueRemove":183,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":291,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":573,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsSelfHashCode":448,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":139,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":693,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":692,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":691,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":698,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":99,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":319,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":658,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":544,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":646,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetClearChangesMap":310,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":162,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":517,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":81,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalEmptyCollectionExists":335,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":393,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":701,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":89,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":741,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":141,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":223,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":65,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":213,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":499,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":152,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":220,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalSet":396,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":157,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":156,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListSerialization":424,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":456,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":91,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIsEmpty":197,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking":406,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveChangesMap":301,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":647,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToString":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":78,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":224,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":120,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":293,"org.apache.commons.collections4.list.PredicatedListTest.testFullListSerialization":414,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":126,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":23,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":325,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":534,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":113,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectEqualsSelf":202,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":160,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesClearChangesMap":331,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":566,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":178,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":94,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":633,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":715,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":418,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsContract":351,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":347,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":240,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":339,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":675,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":87,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":254,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":14,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":665,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":343,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsSelfHashCode":208,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":273,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":170,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":426,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionSize":428,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":582,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":195,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":389,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":503,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":541,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":287,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":191,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":608,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":387,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":316,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":598,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":681,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":599,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":118,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiRemove":215,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":526,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":432,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":117,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":630,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":37,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":44,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":430,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":707,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":616,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":140,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":552,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":708,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":28,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":454,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":688,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":678,"org.apache.commons.collections4.map.LazySortedMapTest.testSimpleSerialization":336,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":497,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":723,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":253,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":706,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":557,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":404,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":507,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":527,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueSerialization":188,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveAll":314,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullKey":317,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":595,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":68,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":500},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"tindex":"f2eae951-3e61-11e6-ab20-992ce43b2075","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:316","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            if (nCopies <= 0) {\n                return false;\n            } \n            (int)++;\n            if (nCopies < (mut.int)) {\n                mut.int -= nCopies;\n                int -= nCopies;\n            } else {\n                java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n                int -= mut.int;\n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"f2eb5e82-3e61-11e6-ab20-797ee73b9bf9","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:180","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[56],"tindex":"f2eb5e83-3e61-11e6-ab20-718e40b0d2d1","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n            } \n            java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtBinaryOperatorImpl","sourcecode":"cursor == null"},"failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123],"tindex":"f2eb5e84-3e61-11e6-ab20-8326e780115e","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:271","type":"CtMethodImpl","sourcecode":"protected void registerCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                if ((ref.get()) == null) {\n                    it.remove();\n                } \n            }\n            java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.add(new java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>(cursor));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[],"tindex":"f2eb8595-3e61-11e6-ab20-41e10dcc861b","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:342","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            if (coll != null) {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final boolean boolean = remove(i.next(), 1);\n                    result = result || changed;\n                }\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"f2eb8596-3e61-11e6-ab20-cd7eb739a1b7","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:626","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map) == false) {\n                {\n                    return org.apache.commons.collections4.map.StaticBucketMap.this.containsKey(obj);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"f2eb8597-3e61-11e6-ab20-8bf11517ec47","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:130","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            java.util.Map<E, ? super V>.remove(obj);\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl","sourcecode":"sortedMap == null"},"failures":[124],"tindex":"f2ebaca8-3e61-11e6-ab20-753a68582fbe","method":{"position":"org.apache.commons.collections4.MapUtils:1772","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableSortedMap<K, V> iterableSortedMap(final java.util.SortedMap<K, V> sortedMap) {\n    if (sortedMap == null) {\n        {\n            if (sortedMap == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return sortedMap instanceof org.apache.commons.collections4.IterableSortedMap ? ((org.apache.commons.collections4.IterableSortedMap<K, V>)(sortedMap)) : new org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>(sortedMap) {            };\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"sortedMap"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[125],"tindex":"f2ebaca9-3e61-11e6-ab20-770f001923b7","method":{"position":"org.apache.commons.collections4.TransformerUtils:192","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[],"tindex":"f2ebacaa-3e61-11e6-ab20-1b12b4f5a959","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:626","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map) == false) {\n                {\n                    return org.apache.commons.collections4.map.StaticBucketMap.this.containsKey(obj);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"f2ebd3bb-3e61-11e6-ab20-15850738b17c","method":{"position":"org.apache.commons.collections4.IteratorUtils:649","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> objectGraphIterator(final E root, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectGraphIterator<E>(root , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[126,127,128,129,130],"tindex":"f2ebd3bc-3e61-11e6-ab20-9f7b40fbc1df","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:698","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> greatestNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getRight(dataElement)) != null) {\n                    rval = rval.getRight(dataElement);\n                }\n            } \n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[131],"tindex":"f2ebd3bd-3e61-11e6-ab20-8128390e6643","method":{"position":"org.apache.commons.collections4.ClosureUtils:182","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName, paramTypes, args));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[132,133,134,135,136,137],"tindex":"f2ebd3be-3e61-11e6-ab20-3b58bbb501b6","method":{"position":"org.apache.commons.collections4.map.LazyMap:160","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final K K = ((K)(key));\n                final V V = org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(castKey);\n                java.util.Map<K, V>.put(castKey, value);\n                return value;\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:404","type":"CtBinaryOperatorImpl","sourcecode":"expirationTimeObject != null"},"failures":[138,139,140],"tindex":"f2ebfacf-3e61-11e6-ab20-59420c9c931e","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:403","type":"CtMethodImpl","sourcecode":"private boolean isExpired(final long now, final java.lang.Long expirationTimeObject) {\n    if (expirationTimeObject != null) {\n        {\n            if (expirationTimeObject != null) {\n                final long long = expirationTimeObject.longValue();\n                return (expirationTime >= 0) && (now >= expirationTime);\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expirationTimeObject":"expirationTimeObject"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[],"tindex":"f2ebfad0-3e61-11e6-ab20-d18c8118a240","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:316","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : coll) {\n                if (contains(e)) {\n                    continue;\n                } \n                decorated().add(e);\n                toAdd.add(e);\n                changed = true;\n            }\n            if (changed) {\n                java.util.List<E>.addAll(index, toAdd);\n            } \n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[141],"tindex":"f2ebfad1-3e61-11e6-ab20-79a707059ded","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:458","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            java.util.Map<java.lang.Object, java.lang.Long>.remove(key);\n            return super.remove(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"f2ec21e2-3e61-11e6-ab20-0b09d10eec2a","method":{"position":"org.apache.commons.collections4.set.CompositeSet:388","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            if (set == null) {\n                {\n                    java.util.List<java.util.Set<E>>.remove(set);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[142,143,144,145,146,147,148],"tindex":"f2ec21e3-3e61-11e6-ab20-9fa13eac2878","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                return containsAll(((org.apache.commons.collections4.Bag<?>)(coll)));\n            } \n            return containsAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[149,121,150],"tindex":"f2ec21e4-3e61-11e6-ab20-6d63814349ba","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:278","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtBinaryOperatorImpl","sourcecode":"(inverseBidiMap) == null"},"failures":[],"tindex":"f2ec21e5-3e61-11e6-ab20-8f7b2debec81","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (normalMap == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inverseBidiMap":"normalMap"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[151],"tindex":"f2ec21e6-3e61-11e6-ab20-6dfdc2847bd8","method":{"position":"org.apache.commons.collections4.PredicateUtils:517","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtInvocationImpl","sourcecode":"h.isInternalNode()"},"failures":[152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176],"tindex":"f2ec21e7-3e61-11e6-ab20-f3e7d3310921","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:480","type":"CtMethodImpl","sourcecode":"V removeEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (h.isInternalNode()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (h.isInternalNode()) {\n                    removeInternalEntry(h);\n                } else {\n                    removeExternalEntry(h);\n                }\n            } \n            decrementSize();\n            return h.setKeyValue(null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:99","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"f2ec48f8-3e61-11e6-ab20-7d087c5ae7fc","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:95","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.MultiKeyMap<K, V> multiKeyMap(final org.apache.commons.collections4.map.AbstractHashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> map) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            if ((map.size()) > 0) {\n                throw new java.lang.IllegalArgumentException(\"Map must be empty\");\n            } \n            return new org.apache.commons.collections4.map.MultiKeyMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[177,178],"tindex":"f2ec48f9-3e61-11e6-ab20-9bf1fd251f73","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:230","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            final boolean boolean = java.util.Set<E>.remove(object);\n            if (result) {\n                super.remove(object);\n            } \n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208],"tindex":"f2ec48fa-3e61-11e6-ab20-1f3c2044cb3c","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Queue<E> java.util.Queue<E> = ((java.util.Queue<E>)(queue));\n                return tmpQueue;\n            } \n            return new org.apache.commons.collections4.queue.UnmodifiableQueue<E>(queue);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[209,210],"tindex":"f2ec48fb-3e61-11e6-ab20-b9c2ea086d1c","method":{"position":"org.apache.commons.collections4.CollectionUtils:663","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection == null) {\n        {\n            if ((collection != null) && (closure != null)) {\n                for (final T T : collection) {\n                    closure.execute(element);\n                }\n            } \n            return closure;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"f2ec700c-3e61-11e6-ab20-c3a72e1e13e8","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:64","type":"CtMethodImpl","sourcecode":"static boolean isEqualBitKey(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"f2ec700d-3e61-11e6-ab20-97276fd60d54","method":{"position":"org.apache.commons.collections4.MapUtils:1144","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> putAll(final java.util.Map<K, V> map, final java.lang.Object[] array) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            map.size();\n            if ((array == null) || ((array.int) == 0)) {\n                return map;\n            } \n            final java.lang.Object java.lang.Object = array[0];\n            if (obj instanceof java.util.Map.Entry) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(element));\n                    map.put(entry.getKey(), entry.getValue());\n                }\n            } else if (obj instanceof org.apache.commons.collections4.KeyValue) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(element));\n                    map.put(keyval.getKey(), keyval.getValue());\n                }\n            } else if (obj instanceof java.lang.Object[]) {\n                for (int int = 0 ; i < (array.int) ; i++) {\n                    final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(array[i]));\n                    if ((sub == null) || ((sub.int) < 2)) {\n                        throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + i));\n                    } \n                    map.put(((K)(sub[0])), ((V)(sub[1])));\n                }\n            } else {\n                for (int int = 0 ; i < ((array.int) - 1) ; ) {\n                    map.put(((K)(array[(i++)])), ((V)(array[(i++)])));\n                }\n            }\n            return map;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:502","type":"CtUnaryOperatorImpl","sourcecode":"!(h.isExternalNode())"},"failures":[155,158,159,160,161,162,163,164,165,167,168,211,212,169,170,171,172,173,174,175,176],"tindex":"f2ec700e-3e61-11e6-ab20-ef988b33b443","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:499","type":"CtMethodImpl","sourcecode":"private void removeExternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isExternalNode())) {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isExternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an external Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            } else {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            }\n            if ((child.int) > (parent.int)) {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            } else {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[213,214],"tindex":"f2ec971f-3e61-11e6-ab20-2b639efb9ee0","method":{"position":"org.apache.commons.collections4.TransformerUtils:273","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, defaultTransformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[215,216],"tindex":"f2ec9720-3e61-11e6-ab20-bb6d019df11f","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[217,218,219,220,221,222,223,224,29,225,226,227,228,229,30,230,231,232,233,234],"tindex":"f2ec9721-3e61-11e6-ab20-bf1ca6b19c19","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next(), 1);\n                changed = changed || added;\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[125],"tindex":"f2ec9722-3e61-11e6-ab20-4dc21a15370e","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((transformers.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(transformers);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"f2ec9723-3e61-11e6-ab20-d5c978d6e215","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"f2ecbe34-3e61-11e6-ab20-b74a1b9f2896","method":{"position":"org.apache.commons.collections4.MapUtils:1311","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.TransformedMap.transformingMap(map, keyTransformer, valueTransformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"f2ecbe35-3e61-11e6-ab20-73b46fc7ad66","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"f2ecbe36-3e61-11e6-ab20-fd3a68cb0f45","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final org.apache.commons.collections4.bag.TransformedBag<E> org.apache.commons.collections4.bag.TransformedBag<E> = new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n                    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final E[] E[] = ((E[])(bag.toArray()));\n                        bag.clear();\n                        for (final E E : values) {\n                            decorated.decorated().add(transformer.transform(value));\n                        }\n                    } \n                    return decorated;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[235,236,237,238],"tindex":"f2ecbe37-3e61-11e6-ab20-ffade5c597be","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:357","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[239,240,241,242,243,244,245,246],"tindex":"f2ecbe38-3e61-11e6-ab20-ddabe625c71c","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                    if ((entry.getValue()) == null) {\n                        return true;\n                    } \n                }\n            } else {\n                for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                    if (isEqualValue(value, entry.getValue())) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"f2ece549-3e61-11e6-ab20-0b1209984452","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:971","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                {\n                    rangeCheck(index, int);\n                    checkModCount();\n                    return org.apache.commons.collections4.list.AbstractLinkedList<E>.get((index + (int)));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:924","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"f2ece54a-3e61-11e6-ab20-5d5cb510306e","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:350","type":"CtMethodImpl","sourcecode":"private boolean selectR(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h, final int bitIndex, final K key, final int lengthInBits, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.Reference<java.util.Map.Entry<K, V>> reference) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(lengthInBits)) {\n        {\n            if ((h.int) <= bitIndex) {\n                if (!(h.isEmpty())) {\n                    reference.set(h);\n                    return false;\n                } \n                return true;\n            } \n            if (!(isBitSet(key, h.int, lengthInBits))) {\n                if (selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference)) {\n                    return selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference);\n                } \n            } else {\n                if (selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference)) {\n                    return selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference);\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"lengthInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"f2ece54b-3e61-11e6-ab20-5f36f567a00b","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:110","type":"CtMethodImpl","sourcecode":"final boolean isBitSet(final K key, final int bitIndex, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer<? super K>.isBitSet(key, bitIndex, lengthInBits);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[247,248,249,250,251,252,253,254,255,256,257,258,259,260],"tindex":"f2ece54c-3e61-11e6-ab20-bdd60f680729","method":{"position":"org.apache.commons.collections4.list.TreeList:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        {\n            (int)++;\n            checkInterval(index, 0, ((size()) - 1));\n            final E E = get(index);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(index);\n            (int)--;\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[261],"tindex":"f2ed0c5d-3e61-11e6-ab20-1d8b87786389","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedBag:78","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (bag != null)) && ((bag.size()) > 0)"},"failures":[],"tindex":"f2ed0c5e-3e61-11e6-ab20-3ddfe6f3b516","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final org.apache.commons.collections4.bag.TransformedBag<E> org.apache.commons.collections4.bag.TransformedBag<E> = new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n                    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final E[] E[] = ((E[])(bag.toArray()));\n                        bag.clear();\n                        for (final E E : values) {\n                            decorated.decorated().add(transformer.transform(value));\n                        }\n                    } \n                    return decorated;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,177,288,289,290,291,292,178,293],"tindex":"f2ed0c5f-3e61-11e6-ab20-39aa2040a8ea","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:70","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            decorated().add(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"f2ed0c60-3e61-11e6-ab20-2584876ee825","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2057","type":"CtMethodImpl","sourcecode":"public K get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.getKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"f2ed0c61-3e61-11e6-ab20-752b096aa8c3","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next(), 1);\n                changed = changed || added;\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[294],"tindex":"f2ed3372-3e61-11e6-ab20-45b2d6d81f8e","method":{"position":"org.apache.commons.collections4.SplitMapUtils:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.SplitMapUtils.WrappedPut.this)) {\n                return true;\n            } \n            return (obj instanceof org.apache.commons.collections4.SplitMapUtils.WrappedPut) && (((org.apache.commons.collections4.SplitMapUtils.WrappedPut<?, ?>)(obj)).org.apache.commons.collections4.Put<?, ?>.equals(org.apache.commons.collections4.SplitMapUtils.WrappedPut.this.org.apache.commons.collections4.Put<K, V>));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"f2ed3373-3e61-11e6-ab20-e554d44c02de","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:205","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            org.apache.commons.collections4.iterators.FilterListIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[],"tindex":"f2ed3374-3e61-11e6-ab20-fd00c53868a1","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            if ((node != null) && (node.getKey().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[235,237],"tindex":"f2ed3375-3e61-11e6-ab20-477cf6fb56ce","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:264","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key3"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[135,295,296,297,298,299,300,301,302,303,304,305,306,307,308,136,309,310,311,312,313,314,315,316,317,318,319,320,321,322,137,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339],"tindex":"f2ed5a86-3e61-11e6-ab20-a7007586fe93","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:75","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:58","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[340],"tindex":"f2ed5a87-3e61-11e6-ab20-7f889c6a5c1a","method":{"position":"org.apache.commons.collections4.list.LazyList:78","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.LazyList<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list == null) {\n        {\n            return new org.apache.commons.collections4.list.LazyList<E>(list , factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[341,342,343],"tindex":"f2ed5a88-3e61-11e6-ab20-d37c94b4e723","method":{"position":"org.apache.commons.collections4.map.CompositeMap:281","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].get(key);\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"f2ed5a89-3e61-11e6-ab20-9957a2024a9a","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:971","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                {\n                    rangeCheck(index, int);\n                    checkModCount();\n                    return org.apache.commons.collections4.list.AbstractLinkedList<E>.get((index + (int)));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"f2ed5a8a-3e61-11e6-ab20-4d02f5dc7828","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1020","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.set((index + (int)), obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[344,345],"tindex":"f2ed819b-3e61-11e6-ab20-c74311019dd5","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:101","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[346],"tindex":"f2ed819c-3e61-11e6-ab20-07277e6ead91","method":{"position":"org.apache.commons.collections4.ClosureUtils:145","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> doWhileClosure(final org.apache.commons.collections4.Closure<? super E> closure, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[347],"tindex":"f2ed819d-3e61-11e6-ab20-c756accc18f5","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:67","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"f2ed819e-3e61-11e6-ab20-55d7578a4733","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:73","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().removeValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"f2ed819f-3e61-11e6-ab20-b9c37c044484","method":{"position":"org.apache.commons.collections4.SetUtils:246","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> orderedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            return org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"f2ed81a0-3e61-11e6-ab20-c3eb52aaf1c9","method":{"position":"org.apache.commons.collections4.FactoryUtils:139","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, paramTypes, args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[348],"tindex":"f2ed81a1-3e61-11e6-ab20-db1ddb39c393","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(decorated().listIterator(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"f2eda8b2-3e61-11e6-ab20-1fdd1b7a7691","method":{"position":"org.apache.commons.collections4.map.CompositeMap:133","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized void addComposited(final java.util.Map<K, V> map) throws java.lang.IllegalArgumentException {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalArgumentException();\n    } else {\n        {\n            for (int int = (java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].keySet(), map.keySet());\n                if ((intersect.size()) != 0) {\n                    if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                        throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n                    } \n                    org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i], map, intersect);\n                } \n            }\n            final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) + 1];\n            java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int);\n            temp[((temp.int) - 1)] = map;\n            org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.EqualPredicate:109","type":"CtBinaryOperatorImpl","sourcecode":"(equator) != null"},"failures":[],"tindex":"f2eda8b3-3e61-11e6-ab20-43598463cbc4","method":{"position":"org.apache.commons.collections4.functors.EqualPredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> equalPredicate(final T object, final org.apache.commons.collections4.Equator<T> equator) {\n    if (equator != null) {\n        {\n            if (object == null) {\n                return org.apache.commons.collections4.functors.NullPredicate.nullPredicate();\n            } \n            return new org.apache.commons.collections4.functors.EqualPredicate<T>(object , equator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[90],"tindex":"f2eda8b4-3e61-11e6-ab20-e3589a4bb66f","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:988","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            final E E = org.apache.commons.collections4.list.AbstractLinkedList<E>.remove((index + (int)));\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)--;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[273],"tindex":"f2eda8b5-3e61-11e6-ab20-69490fb9f183","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:74","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(index, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:74","type":"CtBinaryOperatorImpl","sourcecode":"(transformers.size()) == 0"},"failures":[125],"tindex":"f2edcfc6-3e61-11e6-ab20-65cc5254d969","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:70","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if ((transformers.size()) == 0) {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n            } \n            if ((transformers.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<T, T>[] org.apache.commons.collections4.Transformer<T, T>[] = transformers.toArray(new org.apache.commons.collections4.Transformer[transformers.size()]);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , cmds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[349,350,351,352],"tindex":"f2edcfc7-3e61-11e6-ab20-59746e4e220c","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:332","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.ComparatorChain.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.ComparatorChain.this.getClass())) {\n                final org.apache.commons.collections4.comparators.ComparatorChain<?> org.apache.commons.collections4.comparators.ComparatorChain<?> = ((org.apache.commons.collections4.comparators.ComparatorChain<?>)(object));\n                return (null == (java.util.BitSet) ? null == (chain.java.util.BitSet) : java.util.BitSet.equals(chain.java.util.BitSet)) && (null == (java.util.List<java.util.Comparator<E>>) ? null == (chain.java.util.List<java.util.Comparator<?>>) : java.util.List<java.util.Comparator<E>>.equals(chain.java.util.List<java.util.Comparator<?>>));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"f2edcfc8-3e61-11e6-ab20-13355ae16ff7","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:104","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"f2edcfc9-3e61-11e6-ab20-d5cceb8999ef","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:701","type":"CtMethodImpl","sourcecode":"public void atomic(final java.lang.Runnable r) {\n    if (r == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (r == null) {\n                throw new java.lang.NullPointerException();\n            } \n            atomic(r, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384],"tindex":"f2edcfca-3e61-11e6-ab20-c5141748666b","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:862","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if ((contains(obj)) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(entry.getKey());\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:183","type":"CtBinaryOperatorImpl","sourcecode":"reverse == true"},"failures":[385,386,387,388,389,390,349,350,391,351,392,352],"tindex":"f2edf6db-3e61-11e6-ab20-8524eea67fdf","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:149","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (reverse == true) {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.add(comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reverse":"reverse"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448],"tindex":"f2edf6dc-3e61-11e6-ab20-9b63b54f03df","method":{"position":"org.apache.commons.collections4.list.PredicatedList:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.list.PredicatedList<T> predicatedList(final java.util.List<T> list, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.list.PredicatedList<T>(list , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[449,450,451,0,452,453,454,455,456,457,458,459,460,3,4,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477],"tindex":"f2edf6dd-3e61-11e6-ab20-d5184c75fa2e","method":{"position":"org.apache.commons.collections4.CollectionUtils:107","type":"CtMethodImpl","sourcecode":"public int freqB(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[151],"tindex":"f2edf6de-3e61-11e6-ab20-cb5432c5a180","method":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[478],"tindex":"f2edf6df-3e61-11e6-ab20-bb81787258c3","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:120","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[477,479],"tindex":"f2ee1df0-3e61-11e6-ab20-51e2ece88630","method":{"position":"org.apache.commons.collections4.map.CompositeMap:381","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"No mutator specified\");\n            } \n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.putAll(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[480,481,482,483,484,485,486],"tindex":"f2ee1df1-3e61-11e6-ab20-0d42c560aed4","method":{"position":"org.apache.commons.collections4.map.SingletonMap:534","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        {\n            if (obj == (org.apache.commons.collections4.map.SingletonMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != 1) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = other.entrySet().iterator().next();\n            return (isEqualKey(entry.getKey())) && (isEqualValue(entry.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[487],"tindex":"f2ee1df2-3e61-11e6-ab20-b7ff713fba9b","method":{"position":"org.apache.commons.collections4.functors.IfClosure:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[158,169],"tindex":"f2ee1df3-3e61-11e6-ab20-c9fb064c0c9a","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1515","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        {\n            for (final java.util.Iterator<V> java.util.Iterator<V> = iterator() ; it.hasNext() ; ) {\n                final V V = it.next();\n                if (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(value, o)) {\n                    it.remove();\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"f2ee1df4-3e61-11e6-ab20-53b3011e3e25","method":{"position":"org.apache.commons.collections4.MapUtils:1060","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<V, K> invertMap(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            final java.util.Map<V, K> java.util.Map<V, K> = new java.util.HashMap<V, K>(map.size());\n            for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n                out.put(entry.getValue(), entry.getKey());\n            }\n            return out;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[488,489,490,491],"tindex":"f2ee4505-3e61-11e6-ab20-01ebb820b704","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:290","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E value) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            updateNode(node, value);\n            return oldValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[492,493,494],"tindex":"f2ee4506-3e61-11e6-ab20-676b278f243e","method":{"position":"org.apache.commons.collections4.PredicateUtils:211","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"f2ee4507-3e61-11e6-ab20-fb22e4ca3f0f","method":{"position":"org.apache.commons.collections4.set.CompositeSet:388","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            if (set == null) {\n                {\n                    java.util.List<java.util.Set<E>>.remove(set);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[495],"tindex":"f2ee4508-3e61-11e6-ab20-49842a9d8dcc","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:792","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key4 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((((multi.size()) >= 4) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) && (key4 == null ? (multi.getKey(3)) == null : key4.equals(multi.getKey(3)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key4"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[496,497,498,499,500,501,502,503,504,505,506,507,508,353,354,509,510,511,512,356,513,514,515,516,517,518,519,520,357,358,521,522,523,524,360,525,526,527,528,529,530,531,361,362,532,533,534,535,364,536,537,538,539,540,541,542,365,366,543,544,545,546,368,547,548,549,550,551,552,553,554,555,556,557,369,370,241,242,558,559,372,560,561,562,563,564,565,566,567,373,374,245,246,568,569,376,570,571,572,573,574,575,576,377,378,577,578,579,580,380,581,582,583,238,584,585,586,495,587,588,589,590,381,382,591,592,593,594,384,595,596,597],"tindex":"f2ee4509-3e61-11e6-ab20-55688f74b271","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:598","type":"CtMethodImpl","sourcecode":"protected void destroyEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            entry.java.lang.Object = null;\n            entry.java.lang.Object = null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614],"tindex":"f2ee6c1a-3e61-11e6-ab20-93b6a630a11a","method":{"position":"org.apache.commons.collections4.set.CompositeSet:265","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        {\n            if ((org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeSet without a SetMutator strategy\");\n            } \n            return org.apache.commons.collections4.set.CompositeSet.SetMutator<E>.addAll(org.apache.commons.collections4.set.CompositeSet.this, java.util.List<java.util.Set<E>>, coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"f2ee6c1b-3e61-11e6-ab20-fb8894aff932","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:284","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Set<E>.contains(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,126,659,660,661,127,662,128,129,130,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705],"tindex":"f2ee6c1c-3e61-11e6-ab20-e1e9a2a92e13","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:851","type":"CtMethodImpl","sourcecode":"private void rotateRight(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getLeft(dataElement);\n            node.setLeft(leftChild.getRight(dataElement), dataElement);\n            if ((leftChild.getRight(dataElement)) != null) {\n                leftChild.getRight(dataElement).setParent(node, dataElement);\n            } \n            leftChild.setParent(node.getParent(dataElement), dataElement);\n            if ((node.getParent(dataElement)) == null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = leftChild;\n            } else if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n                node.getParent(dataElement).setRight(leftChild, dataElement);\n            } else {\n                node.getParent(dataElement).setLeft(leftChild, dataElement);\n            }\n            leftChild.setRight(node, dataElement);\n            node.setParent(leftChild, dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[],"tindex":"f2ee932d-3e61-11e6-ab20-dbb303760e6e","method":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.TiedMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = getValue();\n            return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:161","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"f2ee932e-3e61-11e6-ab20-97ac73f9563f","method":{"position":"org.apache.commons.collections4.IteratorUtils:938","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> toListIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[706],"tindex":"f2ee932f-3e61-11e6-ab20-0f48896ed55d","method":{"position":"org.apache.commons.collections4.PredicateUtils:469","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> asPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"f2ee9330-3e61-11e6-ab20-6f014e1cd6ac","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:122","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            for (final E E : coll) {\n                java.util.Map<E, ? super V>.put(e, V);\n            }\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[707,708,709,710,711],"tindex":"f2ee9331-3e61-11e6-ab20-ed6f210faeb8","method":{"position":"org.apache.commons.collections4.PredicateUtils:421","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"f2ee9332-3e61-11e6-ab20-0d3c5fccebe3","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1415","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if ((contains(obj)) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(entry.getKey());\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtBinaryOperatorImpl","sourcecode":"other instanceof org.apache.commons.collections4.keyvalue.MultiKey"},"failures":[712,713,714,715,235,236,237,238,584,585,586,495,587,588,589,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,590,732,733,734,735,736,737,381,382,383,591,738,739,592,593,740,741,594,384,595,596,597],"tindex":"f2eeba43-3e61-11e6-ab20-11499dc786b3","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object other) {\n    if (other instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (other == (org.apache.commons.collections4.keyvalue.MultiKey.this)) {\n                return true;\n            } \n            if (other instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(other));\n                return java.util.Arrays.equals(K[], otherMulti.?[]);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"other"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f2eeba44-3e61-11e6-ab20-3fd70f571268","method":{"position":"org.apache.commons.collections4.MapUtils:150","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247179603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Boolean) {\n                        return ((java.lang.Boolean)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        return java.lang.Boolean.valueOf(((java.lang.String)(answer)));\n                    } \n                    if (answer instanceof java.lang.Number) {\n                        final java.lang.Number java.lang.Number = ((java.lang.Number)(answer));\n                        return (n.intValue()) != 0 ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                    } \n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}