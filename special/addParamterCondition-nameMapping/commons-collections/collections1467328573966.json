{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":656,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":63,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":427,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":359,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":395,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastValues":68,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastEntrySet":66,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":236,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":592,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":786,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIllegalRemove":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":678,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectEqualsSelf":688,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":746,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":584,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":445,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":481,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":507,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":264,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":701,"org.apache.commons.collections4.CollectionUtilsTest.get":717,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":633,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":766,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":226,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":330,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":423,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":124,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":46,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":438,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectHashCodeEqualsContract":13,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":271,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":109,"org.apache.commons.collections4.bag.TransformedBagTest.testCanonicalFullCollectionExists":668,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":213,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":497,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":69,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":293,"org.apache.commons.collections4.CollectionUtilsTest.select":728,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":155,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":557,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":397,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":32,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":43,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKey":603,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":343,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":469,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":705,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":294,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":262,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":482,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":781,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":671,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":70,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":265,"org.apache.commons.collections4.CollectionUtilsTest.intersection":732,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":468,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":281,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":367,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":250,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":368,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":679,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":369,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":693,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":794,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":358,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":801,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":599,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":90,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":82,"org.apache.commons.collections4.map.CompositeMapTest.testPut":745,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":632,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":77,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":772,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":99,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":684,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":18,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":246,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":510,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":647,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":228,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":380,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":381,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":382,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKey":621,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":646,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":216,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":661,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":439,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":703,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":327,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":328,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":326,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":129,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":372,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":436,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":209,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":553,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":623,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":449,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":122,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":210,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":195,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":425,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":275,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":751,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":28,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":486,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":282,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":514,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":502,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":454,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":215,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":116,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":605,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":526,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":94,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":379,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":636,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectEqualsSelf":663,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":566,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":287,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":288,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":289,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":642,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":202,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":387,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":489,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":178,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":214,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":784,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":142,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":220,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":309,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":522,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":544,"org.apache.commons.collections4.set.MapBackedSetTest.testCanonicalEmptyCollectionExists":575,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":76,"org.apache.commons.collections4.CollectionUtilsTest.get1":718,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":49,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":177,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":576,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":655,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":798,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":341,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":44,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":88,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":458,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":235,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testRemove":7,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":616,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":428,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":447,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":87,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":267,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":699,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":639,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":191,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":791,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":188,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":233,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":676,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":392,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":443,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":602,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":114,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":353,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":352,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":329,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":351,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":86,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":763,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":719,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastValues":38,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":106,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEmpty":1,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":65,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":470,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":726,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":773,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":669,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":390,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":474,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":437,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":263,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":665,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":700,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":466,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":670,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":480,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":322,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":83,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":448,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":524,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":515,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":127,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":518,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":797,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":590,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsSelfHashCode":529,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":635,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":574,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":247,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":788,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":569,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":42,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":35,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":100,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":545,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":702,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":241,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":251,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":516,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":34,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":266,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":204,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":495,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":72,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":762,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":411,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":176,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":583,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":361,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":641,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":206,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":651,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":796,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":807,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":579,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":120,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":357,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":643,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":60,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":259,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":564,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":594,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":149,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":260,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":261,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":769,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":615,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":697,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":22,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEqualsNull":10,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":558,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":695,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":371,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastEntrySet":36,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":388,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":297,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":577,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":441,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":404,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":559,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":586,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":727,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":207,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":225,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":56,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove3":163,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":162,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":161,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":229,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":498,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":196,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":521,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":399,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":398,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":400,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":750,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":508,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":159,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":473,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":730,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":27,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":354,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":426,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":709,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":29,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":585,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":723,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":737,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":527,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":509,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":479,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":138,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":203,"org.apache.commons.collections4.list.TreeListTest.testBug35258":487,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":434,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":696,"org.apache.commons.collections4.ListUtilsTest.testSelect":736,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":520,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":735,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":528,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":416,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":461,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":286,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSerializeDeserializeThenCompare":15,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":256,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":257,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":258,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":419,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":418,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":417,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":446,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":471,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":780,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":638,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":222,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":607,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":41,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":331,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":110,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetIndexed":126,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":759,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":111,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":278,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":764,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":84,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":506,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":430,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":782,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":435,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":186,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":74,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":277,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":431,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":767,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":333,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":20,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":414,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":754,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":779,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":778,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":104,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":777,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":179,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":731,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":608,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":47,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":19,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":320,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":79,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":457,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":560,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":475,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":146,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":716,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":793,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":296,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":224,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectEqualsSelf":8,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":227,"org.apache.commons.collections4.map.LRUMapTest.testLRU":630,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":512,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":103,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":672,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":230,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":182,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":362,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":311,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":610,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":613,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":409,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":555,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSimpleSerialization":12,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":546,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":582,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":133,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":139,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsContract":530,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":659,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":140,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":645,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":268,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":601,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":706,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":690,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":141,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":71,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":534,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":442,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":792,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":729,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":692,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":535,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":347,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":211,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":276,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":464,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKeyInverse":622,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":595,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":658,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":424,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":406,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":540,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":321,"org.apache.commons.collections4.bag.TransformedBagTest.testSimpleSerialization":666,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":476,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":682,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":342,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":465,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":456,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectHashCodeEqualsSelfHashCode":14,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":618,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":756,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":24,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":455,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":760,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":556,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":752,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":637,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":803,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastKeySet":37,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":420,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":734,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":40,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":313,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":517,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":97,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":173,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":175,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":683,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":174,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":724,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":158,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectHashCodeEqualsContract":689,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":319,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":394,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":711,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":249,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":548,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":201,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":565,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":284,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":255,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiKeySetValuesOrder":625,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":589,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":494,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":219,"org.apache.commons.collections4.CollectionUtilsTest.transform1":805,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":554,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":273,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":490,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":21,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":698,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":91,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":453,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":572,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":193,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":80,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":221,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":467,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":712,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":62,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":144,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":614,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":360,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":571,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":450,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":597,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream":532,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":105,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":536,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":64,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":145,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":393,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":189,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":408,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":316,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":799,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testFullIterator":6,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":93,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":128,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":355,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":307,"org.apache.commons.collections4.map.CompositeMapTest.testGet":744,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":708,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":783,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":383,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":75,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":312,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":385,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":384,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":552,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":570,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":197,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":237,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":460,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":541,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":741,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":334,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":96,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":627,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEmptyIterator":5,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":274,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":626,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":118,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":771,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":299,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":710,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":81,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIteratorExhausted":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":758,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":187,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":279,"org.apache.commons.collections4.CollectionUtilsTest.union":483,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":525,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiKeySetValuesOrder":591,"org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testEqualsAndHashCode":538,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":472,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":280,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":743,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":115,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":130,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":152,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":147,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":685,"org.apache.commons.collections4.list.TreeListTest.testRemove":484,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":617,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemove":151,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":61,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":324,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":323,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":611,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":73,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":519,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":325,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemove":150,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":499,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":112,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":134,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":292,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":765,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":291,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":290,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":500,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":493,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":363,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":378,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":523,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":462,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":53,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":171,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":170,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":169,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":336,"org.apache.commons.collections4.map.LRUMapTest.testClone":332,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":477,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsSelfHashCode":664,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":598,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":33,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":578,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":223,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":300,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testMultiplePeek":4,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":444,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":248,"org.apache.commons.collections4.ListUtilsTest.testSubtract":125,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":422,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":98,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKey":587,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":478,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":413,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":39,"org.apache.commons.collections4.list.TreeListTest.testListEquals":496,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":681,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":593,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":463,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":45,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":806,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":107,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":135,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":208,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":505,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":648,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove3":166,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":415,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove1":164,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove2":165,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":620,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":272,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":143,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":580,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":722,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":662,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":537,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":335,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":59,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":285,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":600,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":624,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":50,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":713,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":800,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":183,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":785,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":148,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":748,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":199,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":747,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testCanonicalEmptyCollectionExists":11,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":491,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSinglePeek":3,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":675,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":660,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":634,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":451,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":242,"org.apache.commons.collections4.ListUtilsTest.testHashCode":184,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":252,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":340,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":488,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":121,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKey":612,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":680,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":253,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":562,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":739,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":17,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":377,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":547,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":243,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":52,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":543,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":108,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":604,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":452,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":58,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":403,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":402,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":410,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":563,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":401,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":421,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":396,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":787,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":619,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":245,"org.apache.commons.collections4.bag.TransformedBagTest.testCanonicalEmptyCollectionExists":667,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":738,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":433,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":606,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":492,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":609,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveChangesMap":167,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":539,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":117,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":132,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":23,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":459,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":725,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":119,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":339,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":802,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":304,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":305,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":749,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":306,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":370,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":405,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":375,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":742,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":180,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":200,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":542,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":254,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":310,"org.apache.commons.collections4.set.MapBackedSetTest.testCanonicalFullCollectionExists":573,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":85,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":337,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":198,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":376,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":733,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":531,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":25,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":649,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":153,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":168,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":190,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":234,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":389,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":101,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":136,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":157,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":298,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":644,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":513,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":673,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":231,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":704,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":501,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":314,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":653,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":721,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":270,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":217,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":54,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":440,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":239,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":551,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":192,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":172,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":92,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":652,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":549,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":561,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":131,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":113,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":770,"org.apache.commons.collections4.set.CompositeSetTest.testContains":740,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":185,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":407,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":346,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":504,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":386,"org.apache.commons.collections4.CollectionUtilsTest.getFromObjectArray":720,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":57,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":315,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":755,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":212,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":78,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":588,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":485,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":356,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":650,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":123,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":753,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":596,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":232,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":795,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":691,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":768,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":581,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":31,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":657,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":95,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":238,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":308,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":533,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":338,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":181,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testCanonicalFullCollectionExists":9,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":432,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":154,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":205,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":48,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":318,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":686,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":317,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEqualsNull":687,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastKeySet":67,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":244,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveChangesMap":160,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":55,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":674,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":302,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":761,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":303,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":628,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":240,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":301,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":774,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":775,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":776,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":640,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":373,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":707,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":364,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":365,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":677,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":654,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":345,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":374,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":137,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":295,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":30,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":503,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":429,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":804,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":567,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":790,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":789,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":714,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":631,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":694,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":350,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":757,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":89,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":218,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":16,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":194,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":348,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":629,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":349,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":102,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":366,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":391,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":283,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":412,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":511,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":568,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":715,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":156,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":269,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":550,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":344},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:175","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"tindex":"a3b82c7d-3f18-11e6-bafb-77fabef4da3c","method":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PeekingIterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PeekingIterator<E> org.apache.commons.collections4.iterators.PeekingIterator<E> = ((org.apache.commons.collections4.iterators.PeekingIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PeekingIterator<E>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"tindex":"a3b8c8be-3f18-11e6-bafb-d7b8497ebdaa","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:113","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().remove(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl"},"failures":[70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125],"tindex":"a3b8c8bf-3f18-11e6-bafb-9174ac5636d7","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:316","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            if (nCopies <= 0) {\n                return false;\n            } \n            (int)++;\n            if (nCopies < (mut.int)) {\n                mut.int -= nCopies;\n                int -= nCopies;\n            } else {\n                java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n                int -= mut.int;\n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3b8efd0-3f18-11e6-bafb-6755ef03e092","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:713","type":"CtMethodImpl","sourcecode":"protected int entryHashCode(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != null) {\n        {\n            return entry.int;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3b8efd1-3f18-11e6-bafb-6b4d451c5ce7","method":{"position":"org.apache.commons.collections4.list.TransformedList:79","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            final org.apache.commons.collections4.list.TransformedList<E> org.apache.commons.collections4.list.TransformedList<E> = new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n            if (((transformer != null) && (list != null)) && ((list.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(list.toArray()));\n                list.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[126],"tindex":"a3b916e2-3f18-11e6-bafb-e364880033b4","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:195","type":"CtMethodImpl","sourcecode":"public K getKey(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return K[][index];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl"},"failures":[127,128],"tindex":"a3b916e3-3f18-11e6-bafb-e37c516ade49","method":{"position":"org.apache.commons.collections4.set.CompositeSet:303","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    boolean boolean = false;\n                    for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                        changed |= item.retainAll(coll);\n                    }\n                    return changed;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl"},"failures":[129,130,131],"tindex":"a3b93df4-3f18-11e6-bafb-97565d0346a0","method":{"position":"org.apache.commons.collections4.map.Flat3Map:126","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(key);\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                    case 2 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                    case 1 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl"},"failures":[132,133,70,72,134,135,89,91,136,137,138,95,97,139,103,105,140,141,142,143,144,145,146,147,22,23,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183],"tindex":"a3b93df5-3f18-11e6-bafb-191f4360c490","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return decorated().remove(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3b96506-3f18-11e6-bafb-f3f794c28828","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:109","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (count != null) {\n                return count.int;\n            } \n            return 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl"},"failures":[184],"tindex":"a3b96507-3f18-11e6-bafb-71b519e5e410","method":{"position":"org.apache.commons.collections4.ListUtils:281","type":"CtMethodImpl","sourcecode":"public static int hashCodeForList(final java.util.Collection<?> list) {\n    if (list == null) {\n        {\n            if (list == null) {\n                return 0;\n            } \n            int int = 1;\n            final java.util.Iterator<?> java.util.Iterator<?> = list.iterator();\n            while (it.hasNext()) {\n                final java.lang.Object java.lang.Object = it.next();\n                hashCode = (31 * hashCode) + (obj == null ? 0 : obj.hashCode());\n            }\n            return hashCode;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl"},"failures":[185,186,187,188,189,16,190,191,192,17,193,194,195,18,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,19,225,226,227,20,228,229,230,21,231,232,233,234,235,236,237,238],"tindex":"a3b98c18-3f18-11e6-bafb-f9c8b6cc34fc","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:200","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return java.util.Map<V, K>.containsKey(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl"},"failures":[239],"tindex":"a3b98c19-3f18-11e6-bafb-91f31c71945a","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.collection.PredicatedCollection<T> predicatedCollection(final java.util.Collection<T> coll, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.collection.PredicatedCollection<T>(coll , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3b98c1a-3f18-11e6-bafb-6b1d5be8f105","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:547","type":"CtMethodImpl","sourcecode":"private K doRemoveValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl"},"failures":[240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269],"tindex":"a3b9b32b-3f18-11e6-bafb-91d062db7c1b","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:204","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key2 = isKeyType(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<?>)(key2)).get();\n            return key1 == key2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl"},"failures":[270],"tindex":"a3b9b32c-3f18-11e6-bafb-017352f988d2","method":{"position":"org.apache.commons.collections4.QueueUtils:93","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.queue.TransformedQueue.transformingQueue(queue, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3b9da3d-3f18-11e6-bafb-adbb8b5c8881","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:75","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl"},"failures":[271],"tindex":"a3b9da3e-3f18-11e6-bafb-2daed2782ce0","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:224","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = super.retainAll(coll);\n            if (changed) {\n                reindex();\n            } \n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3ba014f-3f18-11e6-bafb-3f612932025e","method":{"position":"org.apache.commons.collections4.MapUtils:802","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key, final long defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return defaultValue;\n            } \n            return longObject.longValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3ba0150-3f18-11e6-bafb-272ad08303bb","method":{"position":"org.apache.commons.collections4.set.CompositeSet:303","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    boolean boolean = false;\n                    for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                        changed |= item.retainAll(coll);\n                    }\n                    return changed;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3ba0151-3f18-11e6-bafb-3b4be63a57be","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2031","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            if ((node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()))) {\n                removeEntry(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl"},"failures":[272],"tindex":"a3ba2862-3f18-11e6-bafb-a1b5095cc3f6","method":{"position":"org.apache.commons.collections4.ClosureUtils:145","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> doWhileClosure(final org.apache.commons.collections4.Closure<? super E> closure, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3ba2863-3f18-11e6-bafb-ad8dd2826761","method":{"position":"org.apache.commons.collections4.MapUtils:1506","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> synchronizedSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedSortedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3ba2864-3f18-11e6-bafb-3164c4a4b54b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:194","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> addEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> entry, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) >= (entry.int)) || ((current.int) <= (path.int))) {\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    if (!(isBitSet(entry.K, entry.int, lengthInBits))) {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                    } else {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = path;\n                    if ((current.int) >= (entry.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((current.int) <= (path.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((path == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!(isBitSet(entry.K, path.int, lengthInBits)))) {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } else {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    return entry;\n                } \n                path = current;\n                if (!(isBitSet(entry.K, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3ba7685-3f18-11e6-bafb-0f3de56e4e31","method":{"position":"org.apache.commons.collections4.IteratorUtils:669","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Iterator<O> transformedIterator(final java.util.Iterator<? extends I> iterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transform) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (transform == null) {\n                throw new java.lang.NullPointerException(\"Transformer must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.TransformIterator<I, O>(iterator , transform);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl"},"failures":[273],"tindex":"a3ba7686-3f18-11e6-bafb-c57eb01d6482","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:91","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3ba7687-3f18-11e6-bafb-6f1fdd2ac983","method":{"position":"org.apache.commons.collections4.functors.IfClosure:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3ba9d98-3f18-11e6-bafb-41f74b424a19","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:132","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl"},"failures":[274],"tindex":"a3ba9d99-3f18-11e6-bafb-87baefe1cf25","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:61","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.collection.TransformedCollection<E> transformingCollection(final java.util.Collection<E> coll, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            return new org.apache.commons.collections4.collection.TransformedCollection<E>(coll , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3ba9d9a-3f18-11e6-bafb-a7ce1c3a288b","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:206","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = super.remove(object);\n            if (removed) {\n                removeFromIndex(((C)(object)));\n            } \n            return removed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:85","type":"CtInvocationImpl"},"failures":[275],"tindex":"a3ba9d9b-3f18-11e6-bafb-039e2ddb8a21","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:171","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator.hasNext()) {\n                {\n                    checkNotStarted();\n                    if (iterator == null) {\n                        throw new java.lang.NullPointerException(\"Iterator must not be null\");\n                    } \n                    java.util.ArrayList<java.util.Iterator<? extends E>>.add(iterator);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl"},"failures":[276],"tindex":"a3bac4ac-3f18-11e6-bafb-f7505182b81b","method":{"position":"org.apache.commons.collections4.MapUtils:1217","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.collections4.MapUtils.isEmpty(map));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl"},"failures":[277],"tindex":"a3bac4ad-3f18-11e6-bafb-b3868ad7353d","method":{"position":"org.apache.commons.collections4.TransformerUtils:163","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, java.lang.Boolean> asTransformer(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                {\n                    return org.apache.commons.collections4.functors.PredicateTransformer.predicateTransformer(predicate);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl"},"failures":[278,279,280,281,282,283,284,285,286,28,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,240,242,265,266,267,268,269,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,264,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403],"tindex":"a3bac4ae-3f18-11e6-bafb-9beb2b7f4947","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:453","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(java.lang.Object key) {\n    if (key == null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl"},"failures":[404],"tindex":"a3baebbf-3f18-11e6-bafb-bfbe0453f8e3","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl"},"failures":[405],"tindex":"a3baebc0-3f18-11e6-bafb-a7d3916884b2","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:57","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((predicates.int) != (transformers.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(predicates , transformers , defaultTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl"},"failures":[406,407,408,409,410,411,412,413,414,415,416,417,418,419,25,26,27,28,290,291,420,421,422,423,278,424,425,426,427,428,429,300,304,305,430,431,432,433,293,129,130,434,243,244,245,250,255,259,260,262,263,264,265,266,267,268,269,435,436,437,322,326,327,438,439,329,308,309,310,311,312,440,441,442,443,444,445,446,347,351,352,447,448,449,450,335,336,337,451,452,453,454,363,367,368,455,456,457,458,354,459,460,461,462,463,464,379,383,384,465,466,467,468,370,469,470,471,472,473,474,475,397,401,402,476,477,478,479,388,480,481,482],"tindex":"a3bb12d1-3f18-11e6-bafb-a5a80e7ae636","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:564","type":"CtMethodImpl","sourcecode":"protected void removeMapping(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if ((previous.getValue()) == null) {\n        {\n            (int)++;\n            removeEntry(entry, hashIndex, previous);\n            (int)--;\n            destroyEntry(entry);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"previous"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl"},"failures":[483,122,123],"tindex":"a3bb12d2-3f18-11e6-bafb-5de9dc84edd4","method":{"position":"org.apache.commons.collections4.CollectionUtils:227","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> union(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (a == null)) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, helper.max(obj));\n            }\n            return helper.list();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530],"tindex":"a3bb12d3-3f18-11e6-bafb-491e49564781","method":{"position":"org.apache.commons.collections4.list.TreeList:286","type":"CtMethodImpl","sourcecode":"private void checkInterval(final int index, final int startIndex, final int endIndex) {\n    if (index < 0) {\n        {\n            if ((index < startIndex) || (index > endIndex)) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + index) + \", size=\") + (size())));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3bb39e4-3f18-11e6-bafb-8566471bdc93","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:207","type":"CtMethodImpl","sourcecode":"public void setReverseSort(final int index) {\n    if (index > 0) {\n        {\n            checkLocked();\n            java.util.BitSet.set(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3bb39e5-3f18-11e6-bafb-47b697de0946","method":{"position":"org.apache.commons.collections4.IteratorUtils:744","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> loopingIterator(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingIterator<E>(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3bb39e6-3f18-11e6-bafb-4bdb0a8da4d0","method":{"position":"org.apache.commons.collections4.TransformerUtils:163","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, java.lang.Boolean> asTransformer(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                {\n                    return org.apache.commons.collections4.functors.PredicateTransformer.predicateTransformer(predicate);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3bb39e7-3f18-11e6-bafb-9f77a62925c2","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformingSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl"},"failures":[531,532,533,534,535,536,537],"tindex":"a3bb60f8-3f18-11e6-bafb-ddbab88d538f","method":{"position":"org.apache.commons.collections4.MapUtils:915","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void verbosePrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (map == null) {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl"},"failures":[538],"tindex":"a3bb60f9-3f18-11e6-bafb-cb3c9fca8f4a","method":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.DefaultKeyValue.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> = ((org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl"},"failures":[406,539,540,541,542,543,544,407,408,545,546,547,548,409,549,410,550,551,552,553,554,555,556,557,558,559,560,561,562,563,411,412,564,565,566,567,413,568,414,569,570,571,572,573,574,575,576,577,578],"tindex":"a3bb60fa-3f18-11e6-bafb-637922e75d8c","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:74","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map, final V dummyValue) {\n    if (map == null) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"The map must not be null\");\n            } \n            return new org.apache.commons.collections4.set.MapBackedSet<E, V>(map , dummyValue);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl"},"failures":[416],"tindex":"a3bb880b-3f18-11e6-bafb-6bf45b4e8898","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:714","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((multi.size()) >= 1) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl"},"failures":[185,579,580,581,582,583,584,585,188,189,191,192,194,195,586,587,588,589,590,591,199,592,593,594,204,205,206,595,596,597,598,599,600,601,602,603,604,605,606,607,211,608,609,610,611,612,613,614,615,616,218,617,618,619,223,224,226,227,229,230,620,621,622,623,624,625,234,626,627,628],"tindex":"a3bb880c-3f18-11e6-bafb-4fae5be78335","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:134","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return java.util.Map<K, V>.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl"},"failures":[406,407,408,409,410,411,412,413,414,415,416,417,418,629,25,26,27,28,290,291,420,421,422,423,278,424,425,426,427,428,429,300,304,305,430,431,432,433,293,129,130,434,243,244,245,250,255,259,260,262,263,264,265,266,267,268,269,435,436,437,322,326,327,438,439,329,308,309,310,311,312,630,631,632,440,441,442,443,444,445,446,347,351,352,447,448,449,450,335,336,337,451,452,453,454,363,367,368,455,456,457,458,354,459,460,461,462,463,464,379,383,384,465,466,467,468,370,469,470,471,472,473,474,475,397,401,402,476,477,478,479,388,480,481,482],"tindex":"a3bb880d-3f18-11e6-bafb-01d6a230377e","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:582","type":"CtMethodImpl","sourcecode":"protected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if ((previous.getValue()) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (previous == null) {\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } else {\n                previous.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"previous"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[138,633,634,95,96,635,636,97,98,637,139,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,99,100,656,657,658,659,660,661,662,663,664,665,666,667,668,669],"tindex":"a3bbaf1e-3f18-11e6-bafb-551af2bbe1f1","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:57","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl"},"failures":[53],"tindex":"a3bbaf1f-3f18-11e6-bafb-df34ec3c5bc7","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:194","type":"CtMethodImpl","sourcecode":"private static long validateAndConvertToMillis(final long timeToLive, final java.util.concurrent.TimeUnit timeUnit) {\n    if (timeUnit == null) {\n        {\n            if (timeUnit == null) {\n                throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n            } \n            return java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.convert(timeToLive, timeUnit);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"timeUnit"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl"},"failures":[670],"tindex":"a3bbd630-3f18-11e6-bafb-cd9c49b25e95","method":{"position":"org.apache.commons.collections4.functors.ForClosure:51","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (count == 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((count <= 0) || (closure == null)) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            if (count == 1) {\n                return ((org.apache.commons.collections4.Closure<E>)(closure));\n            } \n            return new org.apache.commons.collections4.functors.ForClosure<E>(count , closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl"},"failures":[671,672,673,674],"tindex":"a3bbd631-3f18-11e6-bafb-550e733ece5c","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:357","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            removeAllExpired(now());\n            return super.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtBinaryOperatorImpl"},"failures":[675],"tindex":"a3bbfd42-3f18-11e6-bafb-eb8791fc42dd","method":{"position":"org.apache.commons.collections4.CollectionUtils:823","type":"CtMethodImpl","sourcecode":"public static <C>int countMatches(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if ((input != null) && (predicate != null)) {\n                for (final C C : input) {\n                    if (predicate.evaluate(o)) {\n                        count++;\n                    } \n                }\n            } \n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl"},"failures":[676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699],"tindex":"a3bbfd43-3f18-11e6-bafb-81fc39c454fa","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1322","type":"CtMethodImpl","sourcecode":"private boolean doEquals(final java.lang.Object obj, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (obj instanceof java.util.Set) {\n        {\n            if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                try {\n                    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = getMapIterator(dataElement) ; it.hasNext() ; ) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        final java.lang.Object java.lang.Object = it.getValue();\n                        if ((value.equals(other.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                } catch (final java.lang.ClassCastException ex) {\n                    return false;\n                } catch (final java.lang.NullPointerException ex) {\n                    return false;\n                }\n            } \n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3bbfd44-3f18-11e6-bafb-d75bfa13f034","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1544","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            if ((node != null) && (node.getValue().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl"},"failures":[700],"tindex":"a3bc2455-3f18-11e6-bafb-d9723bfb0222","method":{"position":"org.apache.commons.collections4.ClosureUtils:129","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> whileClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3bc2456-3f18-11e6-bafb-2d5f4013f43c","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:180","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().retainAll(coll);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[701],"tindex":"a3bc2457-3f18-11e6-bafb-e327ddebcb35","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:254","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            final int int = size();\n            if ((index < 0) || (index >= sz)) {\n                throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(index), java.lang.Integer.valueOf(sz)));\n            } \n            final int int = ((int) + index) % (int);\n            return E[][idx];\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:871","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3bc2458-3f18-11e6-bafb-f1c0e4f3c26a","method":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:134","type":"CtMethodImpl","sourcecode":"public void setEnumeration(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        {\n            org.apache.commons.collections4.iterators.EnumerationIterator.this.java.util.Enumeration<? extends E> = enumeration;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3bc4b69-3f18-11e6-bafb-11e7bb310e88","method":{"position":"org.apache.commons.collections4.MapUtils:782","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key, final int defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return defaultValue;\n            } \n            return integerObject.intValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3bc4b6a-3f18-11e6-bafb-37b6ed967396","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:272","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next());\n                changed = changed || added;\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl"},"failures":[702,703,704,705,706,707,708,709,710,711,712,713,714,715],"tindex":"a3bc4b6b-3f18-11e6-bafb-550a812650aa","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:154","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (indexOf(value)) != (-1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3bc4b6c-3f18-11e6-bafb-6da3872445ef","method":{"position":"org.apache.commons.collections4.MapUtils:125","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    return answer.toString();\n                } \n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:120","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3bc727d-3f18-11e6-bafb-bd2e2912033b","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:119","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            final java.util.Set<E> java.util.Set<E> = new java.util.HashSet<E>(list);\n            list.retainAll(set);\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[716,717,718,719,720,721,722],"tindex":"a3bc727e-3f18-11e6-bafb-4db8fe66aed8","method":{"position":"org.apache.commons.collections4.CollectionUtils:1250","type":"CtMethodImpl","sourcecode":"public static java.lang.Object get(final java.lang.Object object, final int index) {\n    if (index < 0) {\n        {\n            int int = index;\n            if (i < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + i));\n            } \n            if (object instanceof java.util.Map<?, ?>) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(object));\n                final java.util.Iterator<?> java.util.Iterator<?> = map.entrySet().iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.lang.Object[]) {\n                return ((java.lang.Object[])(object))[i];\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.next();\n                    } \n                    it.next();\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object instanceof java.util.Collection<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(object)).iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.nextElement();\n                    } else {\n                        it.nextElement();\n                    }\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object == null) {\n                throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n            } else {\n                try {\n                    return java.lang.reflect.Array.get(object, i);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl"},"failures":[723],"tindex":"a3bc998f-3f18-11e6-bafb-bf2dd7d8255a","method":{"position":"org.apache.commons.collections4.map.LazyMap:81","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl"},"failures":[724,725,726,119,727,728,729,730,731,483,732,733,734,122,123,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751],"tindex":"a3bc9990-3f18-11e6-bafb-61af46b64549","method":{"position":"org.apache.commons.collections4.CollectionUtils:98","type":"CtMethodImpl","sourcecode":"public int freqA(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl"},"failures":[752],"tindex":"a3bc9991-3f18-11e6-bafb-f114bcd38508","method":{"position":"org.apache.commons.collections4.TransformerUtils:417","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, paramTypes, args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:173","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3bc9992-3f18-11e6-bafb-e9dc00ac0450","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:171","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator.hasNext()) {\n                {\n                    checkNotStarted();\n                    if (iterator == null) {\n                        throw new java.lang.NullPointerException(\"Iterator must not be null\");\n                    } \n                    java.util.ArrayList<java.util.Iterator<? extends E>>.add(iterator);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.EqualPredicate:109","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3bcc0a3-3f18-11e6-bafb-f511fc019a88","method":{"position":"org.apache.commons.collections4.functors.EqualPredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> equalPredicate(final T object, final org.apache.commons.collections4.Equator<T> equator) {\n    if (equator != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return org.apache.commons.collections4.functors.NullPredicate.nullPredicate();\n            } \n            return new org.apache.commons.collections4.functors.EqualPredicate<T>(object , equator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3bcc0a4-3f18-11e6-bafb-bf8c76219cbb","method":{"position":"org.apache.commons.collections4.map.SingletonMap:287","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3bcc0a5-3f18-11e6-bafb-83eb313cee78","method":{"position":"org.apache.commons.collections4.IteratorUtils:1052","type":"CtMethodImpl","sourcecode":"public static java.util.Iterator<?> getIterator(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == null) {\n                return org.apache.commons.collections4.IteratorUtils.emptyIterator();\n            } \n            if (obj instanceof java.util.Iterator) {\n                return ((java.util.Iterator<?>)(obj));\n            } \n            if (obj instanceof java.util.Collection) {\n                return ((java.util.Collection<?>)(obj)).iterator();\n            } \n            if (obj instanceof java.lang.Object[]) {\n                return new org.apache.commons.collections4.iterators.ObjectArrayIterator<java.lang.Object>(((java.lang.Object[])(obj)));\n            } \n            if (obj instanceof java.util.Enumeration) {\n                return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Enumeration<?>)(obj)));\n            } \n            if (obj instanceof java.util.Map) {\n                return ((java.util.Map<?, ?>)(obj)).values().iterator();\n            } \n            if (obj instanceof org.w3c.dom.NodeList) {\n                return new org.apache.commons.collections4.iterators.NodeListIterator(((org.w3c.dom.NodeList)(obj)));\n            } \n            if (obj instanceof org.w3c.dom.Node) {\n                return new org.apache.commons.collections4.iterators.NodeListIterator(((org.w3c.dom.Node)(obj)));\n            } \n            if (obj instanceof java.util.Dictionary) {\n                return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Dictionary<?, ?>)(obj)).elements());\n            } else if (obj.getClass().isArray()) {\n                return new org.apache.commons.collections4.iterators.ArrayIterator<java.lang.Object>(obj);\n            } \n            try {\n                final java.lang.reflect.Method java.lang.reflect.Method = obj.getClass().getMethod(\"iterator\", ((java.lang.Class[])(null)));\n                if (java.util.Iterator.java.util.Iterator.java.lang.Class.isAssignableFrom(method.getReturnType())) {\n                    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(method.invoke(obj, ((java.lang.Object[])(null)))));\n                    if (it != null) {\n                        return it;\n                    } \n                } \n            } catch (final java.lang.RuntimeException e) {\n            } catch (final java.lang.NoSuchMethodException e) {\n            } catch (final java.lang.IllegalAccessException e) {\n            } catch (final java.lang.reflect.InvocationTargetException e) {\n            }\n            return org.apache.commons.collections4.IteratorUtils.singletonIterator(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl"},"failures":[],"tindex":"a3bce7b6-3f18-11e6-bafb-2fb60ba466f0","method":{"position":"org.apache.commons.collections4.ListUtils:386","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> synchronizedList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3bce7b7-3f18-11e6-bafb-770544920ba8","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:140","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return java.util.Map<E, ? super V>.keySet().retainAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl"},"failures":[753],"tindex":"a3bce7b8-3f18-11e6-bafb-051c096702df","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:69","type":"CtMethodImpl","sourcecode":"public boolean evaluate(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Class<?>.isInstance(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:153","type":"CtBinaryOperatorImpl"},"failures":[275],"tindex":"a3bce7b9-3f18-11e6-bafb-f993a9de7629","method":{"position":"org.apache.commons.collections4.ComparatorUtils:119","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Comparator<E> reversedComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            return new org.apache.commons.collections4.comparators.ReverseComparator<E>(comparator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl"},"failures":[754],"tindex":"a3bce7ba-3f18-11e6-bafb-b1379db6c967","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        {\n            if (objectsAndTransformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n            final int int = objectsAndTransformers.size();\n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                trs[(i++)] = entry.getValue();\n            }\n            return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl"},"failures":[755,756,757,758,759],"tindex":"a3bd35db-3f18-11e6-bafb-6f39684966f3","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:236","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object value) {\n    if (value == null) {\n        {\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    removeNode(node);\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtBinaryOperatorImpl"},"failures":[760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787],"tindex":"a3bd5cec-3f18-11e6-bafb-8da35645e081","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:758","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        {\n            while (true) {\n                org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (child.isEmpty()) {\n                    child = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((child.int) <= (node.int)) {\n                    return child;\n                } \n                node = child;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3bd5ced-3f18-11e6-bafb-87f1c0d59218","method":{"position":"org.apache.commons.collections4.MapUtils:340","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if ((answer != null) && (answer instanceof java.util.Map)) {\n                    return ((java.util.Map<?, ?>)(answer));\n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3bd5cee-3f18-11e6-bafb-8df3cd1615db","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:147","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.MultiMap<K, C>.containsKey(org.apache.commons.collections4.Transformer<C, K>.transform(((C)(object))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl"},"failures":[275],"tindex":"a3bd83ff-3f18-11e6-bafb-f1b2ed1f023d","method":{"position":"org.apache.commons.collections4.CollectionUtils:1527","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(java.lang.Iterable<? extends O> a, java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (b == null)) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[788,789,790,791],"tindex":"a3bd8400-3f18-11e6-bafb-834a3b7c6cb5","method":{"position":"org.apache.commons.collections4.PredicateUtils:337","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl"},"failures":[145,146],"tindex":"a3bd8401-3f18-11e6-bafb-e5d9c35eb306","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:230","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = java.util.Set<E>.remove(object);\n            if (result) {\n                super.remove(object);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[792,793,794,795,796,797,798,799,800],"tindex":"a3bd8402-3f18-11e6-bafb-a3933a6dfdd4","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:316","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        if (null == prev) {\n                            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        } else {\n                            prev.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        }\n                        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash].int)--;\n                        return n.V;\n                    } \n                    prev = n;\n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl"},"failures":[801],"tindex":"a3bdab13-3f18-11e6-bafb-a3c251713b25","method":{"position":"org.apache.commons.collections4.ClosureUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:182","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3bdab14-3f18-11e6-bafb-a9cddd9b584f","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:89","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (valueTransformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.TransformedSortedMap<K, V> org.apache.commons.collections4.map.TransformedSortedMap<K, V> = new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"valueTransformer":"valueTransformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3bdd225-3f18-11e6-bafb-cb6b65d23ed9","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void putAll(final java.util.Map<? extends K, ?> map) {\n    if (map != null) {\n        {\n            if (map instanceof org.apache.commons.collections4.MultiMap) {\n                for (final java.util.Map.Entry<? extends K, java.lang.Object> java.util.Map.Entry<? extends K, java.lang.Object> : ((org.apache.commons.collections4.MultiMap<? extends K, V>)(map)).entrySet()) {\n                    putAll(entry.getKey(), ((java.util.Collection<V>)(entry.getValue())));\n                }\n            } else {\n                for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[802],"tindex":"a3bdd226-3f18-11e6-bafb-df9e556349f5","method":{"position":"org.apache.commons.collections4.CollectionUtils:1307","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map.Entry<K, V> get(final java.util.Map<K, V> map, final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            return org.apache.commons.collections4.CollectionUtils.get(map.entrySet(), index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3bdd227-3f18-11e6-bafb-d37d24202b1b","method":{"position":"org.apache.commons.collections4.BagUtils:180","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedSortedBag.synchronizedSortedBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl"},"failures":[780,803],"tindex":"a3bdd228-3f18-11e6-bafb-fb7c7676708b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1515","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            for (final java.util.Iterator<V> java.util.Iterator<V> = iterator() ; it.hasNext() ; ) {\n                final V V = it.next();\n                if (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(value, o)) {\n                    it.remove();\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl"},"failures":[804],"tindex":"a3bdf939-3f18-11e6-bafb-9b45169c3a6b","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3bdf93a-3f18-11e6-bafb-91b804c36d60","method":{"position":"org.apache.commons.collections4.set.CompositeSet:425","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if (obj instanceof java.util.Set) {\n                final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(obj));\n                return ((set.size()) == (org.apache.commons.collections4.set.CompositeSet.this.size())) && (set.containsAll(org.apache.commons.collections4.set.CompositeSet.this));\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl"},"failures":[805],"tindex":"a3bdf93b-3f18-11e6-bafb-593d356bf00a","method":{"position":"org.apache.commons.collections4.CollectionUtils:795","type":"CtMethodImpl","sourcecode":"public static <C>void transform(final java.util.Collection<C> collection, final org.apache.commons.collections4.Transformer<? super C, ? extends C> transformer) {\n    if (collection instanceof java.util.List<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection != null) && (transformer != null)) {\n                if (collection instanceof java.util.List<?>) {\n                    final java.util.List<C> java.util.List<C> = ((java.util.List<C>)(collection));\n                    for (final java.util.ListIterator<C> java.util.ListIterator<C> = list.listIterator() ; it.hasNext() ; ) {\n                        it.set(transformer.transform(it.next()));\n                    }\n                } else {\n                    final java.util.Collection<C> java.util.Collection<C> = org.apache.commons.collections4.CollectionUtils.collect(collection, transformer);\n                    collection.clear();\n                    collection.addAll(resultCollection);\n                }\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3be204c-3f18-11e6-bafb-7b335a933625","method":{"position":"org.apache.commons.collections4.PredicateUtils:289","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AllPredicate.allPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl"},"failures":[806,807],"tindex":"a3be204d-3f18-11e6-bafb-5bbd7a845ebd","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:60","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedBag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedBag<E>(bag , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3be204e-3f18-11e6-bafb-79d72bdfb4ea","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3be204f-3f18-11e6-bafb-bfb726b1fb50","method":{"position":"org.apache.commons.collections4.map.CompositeMap:133","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized void addComposited(final java.util.Map<K, V> map) throws java.lang.IllegalArgumentException {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalArgumentException();\n    } else {\n        {\n            for (int int = (java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].keySet(), map.keySet());\n                if ((intersect.size()) != 0) {\n                    if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                        throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n                    } \n                    org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i], map, intersect);\n                } \n            }\n            final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) + 1];\n            java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int);\n            temp[((temp.int) - 1)] = map;\n            org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3be4760-3f18-11e6-bafb-23ff5d533afb","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1051","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467324094359/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<?, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}