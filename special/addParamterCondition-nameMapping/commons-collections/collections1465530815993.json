{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":56,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":294,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":210,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":93,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":209,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":486,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":476,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":184,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":331,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":341,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":436,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":207,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":64,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":410,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":386,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":416,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":411,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":371,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":346,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":78,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":268,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":280,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":25,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":230,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":421,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":171,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":11,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":470,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":60,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSimpleSerialization":363,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":203,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":5,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":312,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":218,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":493,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains3":235,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":2,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains2":234,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains1":233,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":126,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":329,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":158,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSimpleSerialization":338,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":491,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":255,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":130,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":398,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":150,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":526,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":258,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":12,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":254,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":92,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":1,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":177,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":472,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":129,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":119,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":459,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":438,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":509,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":193,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":81,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":152,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":225,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":80,"org.apache.commons.collections4.CollectionUtilsTest.intersection":395,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":487,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":439,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":74,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":415,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":65,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking2":228,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":372,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":19,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":104,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":321,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":481,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":446,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":485,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableIteratorImmutability":525,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":469,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":187,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":522,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":57,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":116,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":528,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":54,"org.apache.commons.collections4.map.CompositeMapTest.testPut":385,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":23,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":132,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":401,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":482,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":308,"org.apache.commons.collections4.map.CompositeMapTest.testGet":384,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":407,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":52,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":426,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":44,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":243,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":431,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":72,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":196,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":523,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":271,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":174,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":358,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":185,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":199,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":457,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":404,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableIteratorIteration":524,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":147,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":95,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":425,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":464,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":246,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":495,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":154,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":43,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":118,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":167,"org.apache.commons.collections4.CollectionUtilsTest.union":394,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":288,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":107,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":305,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":87,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":396,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":155,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":195,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":317,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":79,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":383,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":113,"org.apache.commons.collections4.bag.PredicatedBagTest.testCanonicalEmptyCollectionExists":144,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":69,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":391,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":121,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":249,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":316,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":75,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":275,"org.apache.commons.collections4.list.TreeListTest.testRemove":247,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":263,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":160,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":90,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":220,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":289,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":133,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking":527,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":61,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":222,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":282,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":108,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":260,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":373,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":420,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":109,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":311,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":502,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":520,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":417,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":261,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":278,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":490,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":501,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":39,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":318,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":73,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":286,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":332,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":300,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":97,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":204,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":253,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":211,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":159,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":179,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":465,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":100,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":151,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":406,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsSelfHashCode":359,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":508,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":442,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":285,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsSelfHashCode":141,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":221,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":223,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":414,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":117,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":18,"org.apache.commons.collections4.list.TreeListTest.testListEquals":257,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":212,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":67,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":328,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":319,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":183,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":325,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":214,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":102,"org.apache.commons.collections4.bag.PredicatedBagTest.testCanonicalFullCollectionExists":145,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":245,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":128,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":326,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":101,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":315,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":165,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":53,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":266,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsContract":142,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":348,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":36,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":519,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":344,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":190,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":181,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":198,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":62,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":507,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":208,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":94,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":450,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":506,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":55,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testEqualsNull":361,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":138,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":105,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":123,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":224,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":437,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":9,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":314,"org.apache.commons.collections4.map.SingletonMapTest.testClone":370,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":217,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":91,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":127,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":356,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":388,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":427,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":201,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":387,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":521,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":467,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsSelfHashCode":336,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":50,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":250,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":374,"org.apache.commons.collections4.map.SingletonMapTest.testValuesRemoveChangesMap":378,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":480,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":377,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":518,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":366,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":252,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":475,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains3":238,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":66,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":302,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":215,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":287,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":276,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":441,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains2":237,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":380,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":192,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains1":236,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":400,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":500,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":281,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":448,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":517,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":435,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":232,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":103,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsSelfHashCode":292,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking":226,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":443,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":455,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":49,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":512,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":513,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":137,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":409,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":511,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":279,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":402,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":471,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":111,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":26,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":163,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":256,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":379,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":124,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":277,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":456,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":313,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":488,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":403,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":392,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":162,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":474,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":342,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":430,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":216,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":99,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":389,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":498,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":382,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":484,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicate":399,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":202,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":231,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":304,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":96,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":355,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectEqualsSelf":360,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":24,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":453,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":21,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":306,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":494,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":447,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsContract":362,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":200,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":444,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":499,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":131,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":462,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":239,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":241,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":353,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":240,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":164,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":182,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":189,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":466,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":3,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":122,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":354,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectEqualsSelf":139,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":463,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":170,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray2":351,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":376,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToString":352,"org.apache.commons.collections4.SetUtilsTest.testHashCode":368,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":274,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":175,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":178,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":259,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":13,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":197,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":284,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":262,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":390,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":148,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":269,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":59,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":320,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":323,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":327,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCanonicalEmptyCollectionExists":339,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetHashCode":347,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":191,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":120,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":41,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":350,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":229,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":14,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":140,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":6,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":110,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":290,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":219,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":125,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":270,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":424,"org.apache.commons.collections4.set.CompositeSetTest.testContains":381,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":205,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":206,"org.apache.commons.collections4.list.TreeListTest.testBug35258":251,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":265,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":478,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":297,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":22,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":98,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":283,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":157,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":291,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":106,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":248,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":483,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":516,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":48,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":505,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":333,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":397,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":301,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":322,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":428,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":180,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":153,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":432,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":38,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":146,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":514,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":515,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":16,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":299,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":35,"org.apache.commons.collections4.SetUtilsTest.testEquals":369,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":412,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":423,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":28,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testDecorateFactory":343,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":419,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":42,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":324,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":375,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":503,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":8,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":186,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":309,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":303,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":267,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":29,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":440,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":473,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":413,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":418,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCanonicalFullCollectionExists":365,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCanonicalEmptyCollectionExists":364,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":449,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":504,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":0,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":330,"org.apache.commons.collections4.SetUtilsTest.testEmptyIfNull":367,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":32,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":30,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":166,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":37,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":135,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":161,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":76,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":114,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":296,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":134,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":429,"org.apache.commons.collections4.bag.PredicatedBagTest.testSimpleSerialization":143,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":422,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":40,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsContract":337,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testComparator":345,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":298,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":335,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":173,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking2":529,"org.apache.commons.collections4.MapUtilsTest.testPopulateMap":295,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":492,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":77,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":242,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":496,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":169,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":452,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":89,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectEqualsSelf":334,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":227,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":454,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCanonicalFullCollectionExists":340,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":451,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":63,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":461,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":168,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":433,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":172,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":213,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":10,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":273,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":4,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":310,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":497,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":434,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":176,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":460,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":489,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":264,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":136,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":445,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsContract":293,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":58,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":115,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":307,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":405,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":149,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":188,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":194,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":408,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":46,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":510,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":244,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":393,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":27,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":17,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":468,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":272,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":479,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":156,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionSize":349,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIsEmpty":357,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":458,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":477},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[0],"tindex":"e87897f5-2ebe-11e6-b1c0-adf0f35a00fa","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.SetUniqueList.SetListListIterator<E>(super.listIterator(index) , java.util.Set<E>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e8795b46-2ebe-11e6-b1c0-7dca7589d159","method":{"position":"org.apache.commons.collections4.ListUtils:400","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[1],"tindex":"e8795b47-2ebe-11e6-b1c0-5b46bb1bebc2","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e8798258-2ebe-11e6-b1c0-6939500ef4e5","method":{"position":"org.apache.commons.collections4.MapUtils:276","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n                    if (answer == null) {\n                        return null;\n                    } \n                    if (answer instanceof java.lang.Long) {\n                        return ((java.lang.Long)(answer));\n                    } \n                    return java.lang.Long.valueOf(answer.longValue());\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"e8798259-2ebe-11e6-b1c0-cd4e79d9f95d","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"e879a96a-2ebe-11e6-b1c0-d9cf7da739b1","method":{"position":"org.apache.commons.collections4.list.TreeList:430","type":"CtMethodImpl","sourcecode":"int indexOf(final java.lang.Object object, final int index) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((getLeftSubTree()) != null) {\n                        final int int = org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n                        if (result != (-1)) {\n                            return result;\n                        } \n                    } \n                    if ((E) == null ? (E) == object : E.equals(object)) {\n                        return index;\n                    } \n                    if ((getRightSubTree()) != null) {\n                        return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n                    } \n                    return -1;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"e879d07b-2ebe-11e6-b1c0-ebd0400d405a","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final E E : coll) {\n                validate(item);\n            }\n            return decorated().addAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"e879f78c-2ebe-11e6-b1c0-931394e78326","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1888","type":"CtMethodImpl","sourcecode":"private void setParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[98],"tindex":"e87a1e9d-2ebe-11e6-b1c0-59ecb5796654","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:379","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[53,55,56,58,59,60,72,76,83,84,86,89,90,93,94,95,96,97],"tindex":"e87a45ae-2ebe-11e6-b1c0-bb67a95070c9","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:745","type":"CtMethodImpl","sourcecode":"private static boolean isBlack(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (node == null) || (node.isBlack(dataElement));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e87a45af-2ebe-11e6-b1c0-31f1f2074ca1","method":{"position":"org.apache.commons.collections4.SetUtils:192","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(set);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"e87a6cc0-2ebe-11e6-b1c0-1d8c40b22313","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:73","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformedQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            final org.apache.commons.collections4.queue.TransformedQueue<E> org.apache.commons.collections4.queue.TransformedQueue<E> = new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n            if ((queue.size()) > 0) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(queue.toArray()));\n                queue.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145],"tindex":"e87a93d1-2ebe-11e6-b1c0-1d10a840434e","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:60","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedBag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedBag<E>(bag , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:66","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"e87a93d2-2ebe-11e6-b1c0-c71c45a94ee1","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:89","type":"CtMethodImpl","sourcecode":"protected void setCollection(final java.util.Collection<E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.collection.AbstractCollectionDecorator.this.java.util.Collection<E> = coll;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[146],"tindex":"e87abae3-2ebe-11e6-b1c0-53235de9e397","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:631","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        {\n            final int int = getHash(obj);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    final java.lang.Object java.lang.Object = n.getKey();\n                    if ((k == obj) || ((k != null) && (k.equals(obj)))) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(k);\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206],"tindex":"e87ae1f4-2ebe-11e6-b1c0-a950e6c574b7","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:200","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return java.util.Map<V, K>.containsKey(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"e87b0905-2ebe-11e6-b1c0-0f2a959f913d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1511","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupValue(obj)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"e87b5726-2ebe-11e6-b1c0-17f0ea7c8a79","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().contains(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"e87b5727-2ebe-11e6-b1c0-dfa2b955bfc5","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                result |= remove(name);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[207],"tindex":"e87b7e38-2ebe-11e6-b1c0-c171165471c3","method":{"position":"org.apache.commons.collections4.TransformerUtils:417","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, paramTypes, args);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[208,209,210,211,212,213,214,215],"tindex":"e87ba549-2ebe-11e6-b1c0-eff3b2f62efc","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                    if ((entry.getValue()) == null) {\n                        return true;\n                    } \n                }\n            } else {\n                for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                    if (isEqualValue(value, entry.getValue())) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[216],"tindex":"e87bcc5a-2ebe-11e6-b1c0-0fb70552bd95","method":{"position":"org.apache.commons.collections4.CollectionUtils:1194","type":"CtMethodImpl","sourcecode":"private static void checkIndexBounds(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (index < 0) {\n                        throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + index));\n                    } \n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[],"tindex":"e87bf36b-2ebe-11e6-b1c0-d98d7581a289","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:351","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map<?, ?>) == false) {\n                {\n                    if (obj == (org.apache.commons.collections4.list.AbstractLinkedList.this)) {\n                        return true;\n                    } \n                    if ((obj instanceof java.util.List) == false) {\n                        return false;\n                    } \n                    final java.util.List<?> java.util.List<?> = ((java.util.List<?>)(obj));\n                    if ((other.size()) != (size())) {\n                        return false;\n                    } \n                    final java.util.ListIterator<?> java.util.ListIterator<?> = listIterator();\n                    final java.util.ListIterator<?> java.util.ListIterator<?> = other.listIterator();\n                    while ((it1.hasNext()) && (it2.hasNext())) {\n                        final java.lang.Object java.lang.Object = it1.next();\n                        final java.lang.Object java.lang.Object = it2.next();\n                        if (!(o1 == null ? o2 == null : o1.equals(o2))) {\n                            return false;\n                        } \n                    }\n                    return !((it1.hasNext()) || (it2.hasNext()));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:871","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"e87c1a7c-2ebe-11e6-b1c0-a3f05e11cd43","method":{"position":"org.apache.commons.collections4.IteratorUtils:869","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration, final java.util.Collection<? super E> removeCollection) {\n    if (enumeration == null) {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            if (removeCollection == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration , removeCollection);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"e87c418d-2ebe-11e6-b1c0-41799a0e6711","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:252","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getEntry(final java.lang.Object k) {\n    if (k == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final K K = castKey(k);\n            if (key == null) {\n                return null;\n            } \n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K)) ? entry : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtBinaryOperatorImpl","sourcecode":"nCopies > 0"},"failures":[217,218,219,220,221,222,223,224,225,120],"tindex":"e87c418e-2ebe-11e6-b1c0-c56dc8380764","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:251","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies > 0) {\n        {\n            (int)++;\n            if (nCopies > 0) {\n                final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n                int += nCopies;\n                if (mut == null) {\n                    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(object, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(nCopies));\n                    return true;\n                } \n                mut.int += nCopies;\n                return false;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"nCopies"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) == null"},"failures":[],"tindex":"e87c689f-2ebe-11e6-b1c0-3dc7cc6c10e1","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:171","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[],"tindex":"e87c8fb0-2ebe-11e6-b1c0-d5c4f9041e47","method":{"position":"org.apache.commons.collections4.map.LazyMap:81","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[226,227,228],"tindex":"e87cb6c1-2ebe-11e6-b1c0-abe24d8eedb2","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:147","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        {\n            return decorated().set(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"e87cb6c2-2ebe-11e6-b1c0-37df801a73df","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:105","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[229,230],"tindex":"e87cddd3-2ebe-11e6-b1c0-fdea3a47b060","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e87cddd4-2ebe-11e6-b1c0-ef16bad9697f","method":{"position":"org.apache.commons.collections4.MapUtils:742","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key, final byte defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return defaultValue;\n            } \n            return byteObject.byteValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:801","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[],"tindex":"e87cddd5-2ebe-11e6-b1c0-1b0571c2bc4d","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:194","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> addEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> entry, final int lengthInBits) {\n    if (entry != null) {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) >= (entry.int)) || ((current.int) <= (path.int))) {\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    if (!(isBitSet(entry.K, entry.int, lengthInBits))) {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                    } else {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = path;\n                    if ((current.int) >= (entry.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((current.int) <= (path.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((path == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!(isBitSet(entry.K, path.int, lengthInBits)))) {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } else {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    return entry;\n                } \n                path = current;\n                if (!(isBitSet(entry.K, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[231,232],"tindex":"e87d04e6-2ebe-11e6-b1c0-173fad31bc19","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:134","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"e87d2bf7-2ebe-11e6-b1c0-a398f7296e3d","method":{"position":"org.apache.commons.collections4.IteratorUtils:566","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E>... iterators) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[233,234,235,236,237,238,239,240,241],"tindex":"e87d2bf8-2ebe-11e6-b1c0-f1896672a717","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:616","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            return getEntrySet().contains(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"e87d2bf9-2ebe-11e6-b1c0-550e7a777938","method":{"position":"org.apache.commons.collections4.list.TreeList:430","type":"CtMethodImpl","sourcecode":"int indexOf(final java.lang.Object object, final int index) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((getLeftSubTree()) != null) {\n                        final int int = org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n                        if (result != (-1)) {\n                            return result;\n                        } \n                    } \n                    if ((E) == null ? (E) == object : E.equals(object)) {\n                        return index;\n                    } \n                    if ((getRightSubTree()) != null) {\n                        return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n                    } \n                    return -1;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[242,243,244,245,246,132],"tindex":"e87d530a-2ebe-11e6-b1c0-fbfcfb27f420","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            return remove(object, 1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e87d530b-2ebe-11e6-b1c0-b9d7d9319f8f","method":{"position":"org.apache.commons.collections4.MapUtils:822","type":"CtMethodImpl","sourcecode":"public static <K>float getFloatValue(final java.util.Map<? super K, ?> map, final K key, final float defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (floatObject == null) {\n                return defaultValue;\n            } \n            return floatObject.floatValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293],"tindex":"e87d7a1c-2ebe-11e6-b1c0-dfb9450c8b23","method":{"position":"org.apache.commons.collections4.list.TreeList:286","type":"CtMethodImpl","sourcecode":"private void checkInterval(final int index, final int startIndex, final int endIndex) {\n    if (index < 0) {\n        {\n            if ((index < startIndex) || (index > endIndex)) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + index) + \", size=\") + (size())));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[294,231],"tindex":"e87d7a1d-2ebe-11e6-b1c0-45e26acc3914","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:501","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 != null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[295],"tindex":"e87d7a1e-2ebe-11e6-b1c0-f5003fa9b0c6","method":{"position":"org.apache.commons.collections4.MapUtils:1698","type":"CtMethodImpl","sourcecode":"public static <K, V, E>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends E> elements, final org.apache.commons.collections4.Transformer<E, K> keyTransformer, final org.apache.commons.collections4.Transformer<E, V> valueTransformer) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = elements.iterator();\n            while (iter.hasNext()) {\n                final E E = iter.next();\n                map.put(keyTransformer.transform(temp), valueTransformer.transform(temp));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"e87da12f-2ebe-11e6-b1c0-c9c8204592c2","method":{"position":"org.apache.commons.collections4.FactoryUtils:120","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate) {\n    if (classToInstantiate == null) {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, null, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"e87da130-2ebe-11e6-b1c0-f173ed77ad0b","method":{"position":"org.apache.commons.collections4.map.CompositeMap:156","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized java.util.Map<K, V> removeComposited(final java.util.Map<K, V> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int;\n            for (int int = 0 ; i < size ; ++i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].equals(map)) {\n                    final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[size - 1];\n                    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, i);\n                    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], (i + 1), temp, i, ((size - i) - 1));\n                    org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n                    return map;\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[],"tindex":"e87da131-2ebe-11e6-b1c0-f9971b630001","method":{"position":"org.apache.commons.collections4.IteratorUtils:1052","type":"CtMethodImpl","sourcecode":"public static java.util.Iterator<?> getIterator(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == null) {\n                return org.apache.commons.collections4.IteratorUtils.emptyIterator();\n            } \n            if (obj instanceof java.util.Iterator) {\n                return ((java.util.Iterator<?>)(obj));\n            } \n            if (obj instanceof java.util.Collection) {\n                return ((java.util.Collection<?>)(obj)).iterator();\n            } \n            if (obj instanceof java.lang.Object[]) {\n                return new org.apache.commons.collections4.iterators.ObjectArrayIterator<java.lang.Object>(((java.lang.Object[])(obj)));\n            } \n            if (obj instanceof java.util.Enumeration) {\n                return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Enumeration<?>)(obj)));\n            } \n            if (obj instanceof java.util.Map) {\n                return ((java.util.Map<?, ?>)(obj)).values().iterator();\n            } \n            if (obj instanceof org.w3c.dom.NodeList) {\n                return new org.apache.commons.collections4.iterators.NodeListIterator(((org.w3c.dom.NodeList)(obj)));\n            } \n            if (obj instanceof org.w3c.dom.Node) {\n                return new org.apache.commons.collections4.iterators.NodeListIterator(((org.w3c.dom.Node)(obj)));\n            } \n            if (obj instanceof java.util.Dictionary) {\n                return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Dictionary<?, ?>)(obj)).elements());\n            } else if (obj.getClass().isArray()) {\n                return new org.apache.commons.collections4.iterators.ArrayIterator<java.lang.Object>(obj);\n            } \n            try {\n                final java.lang.reflect.Method java.lang.reflect.Method = obj.getClass().getMethod(\"iterator\", ((java.lang.Class[])(null)));\n                if (java.util.Iterator.java.util.Iterator.java.lang.Class.isAssignableFrom(method.getReturnType())) {\n                    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(method.invoke(obj, ((java.lang.Object[])(null)))));\n                    if (it != null) {\n                        return it;\n                    } \n                } \n            } catch (final java.lang.RuntimeException e) {\n            } catch (final java.lang.NoSuchMethodException e) {\n            } catch (final java.lang.IllegalAccessException e) {\n            } catch (final java.lang.reflect.InvocationTargetException e) {\n            }\n            return org.apache.commons.collections4.IteratorUtils.singletonIterator(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,296,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"e87dc842-2ebe-11e6-b1c0-3b45444a5aa8","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:767","type":"CtMethodImpl","sourcecode":"private static void makeBlack(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node != null) {\n                node.setBlack(dataElement);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"e87def53-2ebe-11e6-b1c0-cbefc9d04f05","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1051","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<?, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[297,298],"tindex":"e87def54-2ebe-11e6-b1c0-ed54ba32736f","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:199","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[299,300,301,302,303,304,305,306,224,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,245,328,329,330,331,332,333,334,335,336,337,338,339,340],"tindex":"e87def55-2ebe-11e6-b1c0-6528620bd20f","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedBag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.SynchronizedBag<E>(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"e87e1666-2ebe-11e6-b1c0-c32ed46048b1","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[341],"tindex":"e87e1667-2ebe-11e6-b1c0-31513772465d","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:542","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V set(final int index, final V value) {\n    if (index < 0) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.setValue(index, value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[342],"tindex":"e87e3d78-2ebe-11e6-b1c0-d9c4367979c4","method":{"position":"org.apache.commons.collections4.list.TransformedList:123","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            return getList().indexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"e87e3d79-2ebe-11e6-b1c0-710afea9a3dc","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:700","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entryNext(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369],"tindex":"e87e3d7a-2ebe-11e6-b1c0-496af3a705cc","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> unmodifiableSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                return set;\n            } \n            return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[370,371,372,373,374,375,376,377,378],"tindex":"e87e648b-2ebe-11e6-b1c0-65b831561a21","method":{"position":"org.apache.commons.collections4.map.SingletonMap:395","type":"CtMethodImpl","sourcecode":"protected boolean isEqualValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return value == null ? (getValue()) == null : value.equals(getValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397],"tindex":"e87e648c-2ebe-11e6-b1c0-6d6eddd60c5b","method":{"position":"org.apache.commons.collections4.CollectionUtils:155","type":"CtMethodImpl","sourcecode":"public void setCardinality(final O obj, final int count) {\n    if (count == 1) {\n        {\n            for (int int = 0 ; i < count ; i++) {\n                java.util.List<O>.add(obj);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[],"tindex":"e87e648d-2ebe-11e6-b1c0-a5b81ac3f285","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:351","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map<?, ?>) == false) {\n                {\n                    if (obj == (org.apache.commons.collections4.list.AbstractLinkedList.this)) {\n                        return true;\n                    } \n                    if ((obj instanceof java.util.List) == false) {\n                        return false;\n                    } \n                    final java.util.List<?> java.util.List<?> = ((java.util.List<?>)(obj));\n                    if ((other.size()) != (size())) {\n                        return false;\n                    } \n                    final java.util.ListIterator<?> java.util.ListIterator<?> = listIterator();\n                    final java.util.ListIterator<?> java.util.ListIterator<?> = other.listIterator();\n                    while ((it1.hasNext()) && (it2.hasNext())) {\n                        final java.lang.Object java.lang.Object = it1.next();\n                        final java.lang.Object java.lang.Object = it2.next();\n                        if (!(o1 == null ? o2 == null : o1.equals(o2))) {\n                            return false;\n                        } \n                    }\n                    return !((it1.hasNext()) || (it2.hasNext()));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"e87e8b9e-2ebe-11e6-b1c0-330f0583d6e5","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:72","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.FixedSizeMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[],"tindex":"e87e8b9f-2ebe-11e6-b1c0-d53dcd47b85b","method":{"position":"org.apache.commons.collections4.CollectionUtils:1104","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.lang.Iterable<? extends C> iterable) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterable instanceof java.util.Collection<?>) {\n                return collection.addAll(((java.util.Collection<? extends C>)(iterable)));\n            } \n            return org.apache.commons.collections4.CollectionUtils.addAll(collection, iterable.iterator());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"e87e8ba0-2ebe-11e6-b1c0-e1a5ce8b0677","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:75","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.TransformedSortedBag<E> org.apache.commons.collections4.bag.TransformedSortedBag<E> = new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[250,264,265,266],"tindex":"e87eb2b1-2ebe-11e6-b1c0-3929d59d1263","method":{"position":"org.apache.commons.collections4.list.TreeList:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index < 0) {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index);\n            final E E = node.E;\n            node.setValue(obj);\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"e87eb2b2-2ebe-11e6-b1c0-ffefb58dab91","method":{"position":"org.apache.commons.collections4.MapUtils:406","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key, final java.lang.Boolean defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[398],"tindex":"e87eb2b3-2ebe-11e6-b1c0-13b2c78c7124","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"e87eb2b4-2ebe-11e6-b1c0-f7d4a5cefc86","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:347","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.set.CompositeSet.this.mutator) == null"},"failures":[],"tindex":"e87ed9c5-2ebe-11e6-b1c0-291978fc7a20","method":{"position":"org.apache.commons.collections4.set.CompositeSet:330","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.set.CompositeSet.SetMutator<E> mutator) {\n    if (mutator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E> = mutator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[399],"tindex":"e87ed9c6-2ebe-11e6-b1c0-3306c4155f15","method":{"position":"org.apache.commons.collections4.PredicateUtils:487","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsExceptionPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NullIsExceptionPredicate.nullIsExceptionPredicate(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[294],"tindex":"e87ed9c7-2ebe-11e6-b1c0-ed04c1ec28fd","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:426","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key2 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[400,401],"tindex":"e87f00d8-2ebe-11e6-b1c0-05d6cdb2e03b","method":{"position":"org.apache.commons.collections4.set.CompositeSet:303","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429],"tindex":"e87f00d9-2ebe-11e6-b1c0-498a0e80fa66","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:140","type":"CtMethodImpl","sourcecode":"static boolean compare(final java.lang.Object a, final java.lang.Object b) {\n    if ((b == null) || (a == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return a == null ? b == null : a.equals(b);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"e87f00da-2ebe-11e6-b1c0-45aee130eaa6","method":{"position":"org.apache.commons.collections4.MapUtils:762","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key, final short defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return defaultValue;\n            } \n            return shortObject.shortValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:613","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[],"tindex":"e87f27eb-2ebe-11e6-b1c0-6323262ea84a","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:477","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<V> createCollection(final int size) {\n    if (size == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Factory<? extends java.util.Collection<V>>.create();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[72,76,86,90,94],"tindex":"e87f27ec-2ebe-11e6-b1c0-c7743a056e0b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:851","type":"CtMethodImpl","sourcecode":"private void rotateRight(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getLeft(dataElement);\n            node.setLeft(leftChild.getRight(dataElement), dataElement);\n            if ((leftChild.getRight(dataElement)) != null) {\n                leftChild.getRight(dataElement).setParent(node, dataElement);\n            } \n            leftChild.setParent(node.getParent(dataElement), dataElement);\n            if ((node.getParent(dataElement)) == null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = leftChild;\n            } else if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n                node.getParent(dataElement).setRight(leftChild, dataElement);\n            } else {\n                node.getParent(dataElement).setLeft(leftChild, dataElement);\n            }\n            leftChild.setRight(node, dataElement);\n            node.setParent(leftChild, dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[430],"tindex":"e87f27ed-2ebe-11e6-b1c0-b715ccb36f0a","method":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:51","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformedPredicate<T>(transformer , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"e87f4efe-2ebe-11e6-b1c0-9fe55b4a012f","method":{"position":"org.apache.commons.collections4.SplitMapUtils:142","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e87f4eff-2ebe-11e6-b1c0-4d35b56af93e","method":{"position":"org.apache.commons.collections4.MapUtils:340","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if ((answer != null) && (answer instanceof java.util.Map)) {\n                    return ((java.util.Map<?, ?>)(answer));\n                } \n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"e87f4f00-2ebe-11e6-b1c0-a3c6ea06f84e","method":{"position":"org.apache.commons.collections4.CollectionUtils:1194","type":"CtMethodImpl","sourcecode":"private static void checkIndexBounds(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (index < 0) {\n                        throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + index));\n                    } \n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[431],"tindex":"e87f7611-2ebe-11e6-b1c0-d1c9875d006f","method":{"position":"org.apache.commons.collections4.TransformerUtils:379","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.MapTransformer.mapTransformer(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[432,433],"tindex":"e87f7612-2ebe-11e6-b1c0-571999be8d64","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:79","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:401","type":"CtBinaryOperatorImpl","sourcecode":"previous == null"},"failures":[],"tindex":"e87f7613-2ebe-11e6-b1c0-49413ffaa78c","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:564","type":"CtMethodImpl","sourcecode":"protected void removeMapping(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (entry == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            removeEntry(entry, hashIndex, previous);\n            (int)--;\n            destroyEntry(entry);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"previous":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452],"tindex":"e87f7614-2ebe-11e6-b1c0-f7f1d5189e83","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:239","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final E E = super.remove(index);\n            java.util.Set<E>.remove(result);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"e87f9d25-2ebe-11e6-b1c0-b7e6add3ba27","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1574","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            return (node != null) && (node.getKey().equals(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e87f9d26-2ebe-11e6-b1c0-27ddc2f6255c","method":{"position":"org.apache.commons.collections4.MapUtils:426","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key, final java.lang.Number defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.util.EmptyStackException","condition":{"position":"org.apache.commons.collections4.ArrayStack:89","type":"CtBinaryOperatorImpl","sourcecode":"n <= 0"},"failures":[],"tindex":"e87f9d27-2ebe-11e6-b1c0-65c7fd1082b3","method":{"position":"org.apache.commons.collections4.ArrayStack:105","type":"CtMethodImpl","sourcecode":"public E peek(final int n) throws java.util.EmptyStackException {\n    if (n <= 0) {\n        throw new java.util.EmptyStackException();\n    } else {\n        {\n            final int int = ((size()) - n) - 1;\n            if (m < 0) {\n                throw new java.util.EmptyStackException();\n            } else {\n                return get(m);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,208,469,470,209,471,472,473,474,475,212,476,477,213,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502],"tindex":"e87fc438-2ebe-11e6-b1c0-ed7a585dd1e1","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:946","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[503,504,505,506,507,508,509,98,510,511,512,513,514,515,516,517],"tindex":"e87fc439-2ebe-11e6-b1c0-3717d52ee61d","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:462","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.Node.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((K) == null ? (e2.getKey()) == null : K.equals(e2.getKey())) && ((V) == null ? (e2.getValue()) == null : V.equals(e2.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[518,519],"tindex":"e87fc43a-2ebe-11e6-b1c0-757d792a1292","method":{"position":"org.apache.commons.collections4.functors.WhileClosure:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> whileClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> closure, final boolean doLoop) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.WhileClosure<E>(predicate , closure , doLoop);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1498","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[520],"tindex":"e87feb4b-2ebe-11e6-b1c0-2f64fc7938da","method":{"position":"org.apache.commons.collections4.CollectionUtils:1497","type":"CtMethodImpl","sourcecode":"public static int maxSize(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll == null) {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).maxSize();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.maxSize();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return -1;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[521],"tindex":"e87feb4c-2ebe-11e6-b1c0-fbfd2dac319a","method":{"position":"org.apache.commons.collections4.BagUtils:136","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return org.apache.commons.collections4.bag.TransformedBag.transformingBag(bag, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e87feb4d-2ebe-11e6-b1c0-2d7963a6ab49","method":{"position":"org.apache.commons.collections4.MapUtils:276","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n                    if (answer == null) {\n                        return null;\n                    } \n                    if (answer instanceof java.lang.Long) {\n                        return ((java.lang.Long)(answer));\n                    } \n                    return java.lang.Long.valueOf(answer.longValue());\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[231],"tindex":"e880125e-2ebe-11e6-b1c0-4d6f837b4aa4","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:404","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:76","type":"CtBinaryOperatorImpl","sourcecode":"(trueClosure == null) || (falseClosure == null)"},"failures":[522],"tindex":"e880125f-2ebe-11e6-b1c0-1d07e6034d00","method":{"position":"org.apache.commons.collections4.ClosureUtils:255","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if ((trueClosure == null) || (trueClosure == null)) {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, falseClosure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseClosure":"trueClosure","trueClosure":"trueClosure"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[523],"tindex":"e8803970-2ebe-11e6-b1c0-fd9465971397","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e8803971-2ebe-11e6-b1c0-3188322d2115","method":{"position":"org.apache.commons.collections4.SetUtils:192","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(set);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"e8803972-2ebe-11e6-b1c0-eb102aaf81ed","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:971","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.get((index + (int)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:90","type":"CtBinaryOperatorImpl","sourcecode":"(iterator.hasNext()) == false"},"failures":[524,525],"tindex":"e8803973-2ebe-11e6-b1c0-ff4bef055ad4","method":{"position":"org.apache.commons.collections4.IteratorUtils:446","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<E> iterator) {\n    if ((iterator.hasNext()) == false) {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtInvocationImpl","sourcecode":"h.isInternalNode()"},"failures":[],"tindex":"e8803974-2ebe-11e6-b1c0-7ba11257bfcc","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:350","type":"CtMethodImpl","sourcecode":"private boolean selectR(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h, final int bitIndex, final K key, final int lengthInBits, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.Reference<java.util.Map.Entry<K, V>> reference) {\n    if (h.isInternalNode()) {\n        {\n            if ((h.int) <= bitIndex) {\n                if (!(h.isEmpty())) {\n                    reference.set(h);\n                    return false;\n                } \n                return true;\n            } \n            if (!(isBitSet(key, h.int, lengthInBits))) {\n                if (selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference)) {\n                    return selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference);\n                } \n            } else {\n                if (selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference)) {\n                    return selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference);\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[526],"tindex":"e8806085-2ebe-11e6-b1c0-a5ec999470e2","method":{"position":"org.apache.commons.collections4.CollectionUtils:366","type":"CtMethodImpl","sourcecode":"public static boolean containsAll(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if (coll2.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll2.isEmpty()) {\n                return true;\n            } else {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll1.iterator();\n                final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (elementsAlreadySeen.contains(nextElement)) {\n                        continue;\n                    } \n                    boolean boolean = false;\n                    while (it.hasNext()) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        elementsAlreadySeen.add(p);\n                        if (nextElement == null ? p == null : nextElement.equals(p)) {\n                            foundCurrentElement = true;\n                            break;\n                        } \n                    }\n                    if (foundCurrentElement) {\n                        continue;\n                    } else {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e8806086-2ebe-11e6-b1c0-71de39a4c120","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:318","type":"CtMethodImpl","sourcecode":"private void _putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = map.size();\n            if (mapSize == 0) {\n                return ;\n            } \n            final int int = ((int)((((int) + mapSize) / (float)) + 1));\n            ensureCapacity(calculateNewCapacity(newSize));\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"e8808797-2ebe-11e6-b1c0-b1be7841aa20","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[527,528,529],"tindex":"e8808798-2ebe-11e6-b1c0-d50f53e66aad","method":{"position":"org.apache.commons.collections4.list.TransformedList:131","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        {\n            return getList().remove(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}