{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":453,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":232,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":1271,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":929,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":117,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":39,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":182,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":490,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":1158,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":635,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testRemove":1231,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":851,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullValue":627,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":1322,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":837,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":1321,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":461,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":801,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":290,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testEqualsNull":1040,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":1053,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":1249,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":585,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":820,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":1253,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":315,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":777,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":206,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsContract":1037,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":412,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":770,"org.apache.commons.collections4.CollectionUtilsTest.get":394,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":1257,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListCompatibility":852,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":1308,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":147,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":725,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":45,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":582,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":907,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":215,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":422,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":986,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":843,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":233,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":304,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":1202,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":408,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":247,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetClearChangesMap":1184,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testEqualsNull":1122,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":430,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":161,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":457,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":402,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":1096,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectEqualsSelf":1071,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSimpleSerialization":1221,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":254,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":400,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":1172,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":661,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":1064,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":605,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":648,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":831,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":153,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullValue":598,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":489,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":186,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":201,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":1274,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapHashCode":623,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":913,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":324,"org.apache.commons.collections4.set.ListOrderedSet2Test.testObjectEqualsSelf":1025,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":138,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":293,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":754,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":121,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":551,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":207,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveAll":1011,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":854,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":961,"org.apache.commons.collections4.list.GrowthListTest.testObjectHashCodeEqualsContract":975,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":905,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapClear":604,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":779,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":804,"org.apache.commons.collections4.list.UnmodifiableListTest.testEqualsNull":993,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":291,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":471,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":569,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":509,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":1019,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMakeMap":1214,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":1248,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":219,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":55,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":462,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":542,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":57,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":651,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectEqualsSelf":1124,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":416,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":1066,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListCompatibility":894,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":836,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":38,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":735,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullIterator":1233,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":606,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToString":727,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":209,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":334,"org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf":1148,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":454,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":900,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":420,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":583,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":1095,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":303,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":1175,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":123,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":645,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":921,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":26,"org.apache.commons.collections4.map.SingletonMapTest.testEmptyMapCompatibility":1139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":469,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":1280,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":538,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":816,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":577,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":613,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":22,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":160,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":531,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":1189,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":120,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":78,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove3":1191,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":1190,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":278,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":285,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":279,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":280,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":1089,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testRemove":705,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":103,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":949,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":594,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":391,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":834,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":809,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":963,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":751,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":690,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testCanonicalFullCollectionExists":709,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":930,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":98,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":99,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEmptyMapCompatibility":1215,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":97,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":73,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":154,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":261,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":1078,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":440,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":602,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testCanonicalEmptyCollectionExists":711,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRetainAll":1014,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":346,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":484,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":748,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":249,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":157,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":116,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":137,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":609,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":792,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionSize":726,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":230,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSerializeDeserializeThenCompare":1241,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":220,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":255,"org.apache.commons.collections4.collection.CompositeCollectionTest.testClear":693,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":874,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":241,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":593,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":487,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRetainAll":1022,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":305,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":570,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectHashCodeEqualsContract":1126,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":556,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListCompatibility":875,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalFullCollectionExists":1218,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":681,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":571,"org.apache.commons.collections4.map.MultiKeyMapTest.testEmptyMapCompatibility":829,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":274,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":317,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetIteratorRemoveChangesMap":597,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":1102,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":183,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":880,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectEqualsSelf":1091,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":686,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":631,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":364,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":436,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":608,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":470,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEqualsNull":710,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":234,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":235,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":1171,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":236,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectEqualsSelf":1118,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":1266,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectEqualsSelf":1097,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":494,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":167,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":1023,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":134,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":638,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastEntrySet":1163,"org.apache.commons.collections4.map.ListOrderedMapTest.testEqualsNull":1205,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":302,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":771,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEqualsNull":1116,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":757,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":164,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":213,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":892,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalEmptyCollectionExists":1146,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":320,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectEqualsSelf":1121,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":856,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":108,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":378,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEqualsNull":1236,"org.apache.commons.collections4.set.PredicatedSetTest.testSimpleSerialization":744,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectHashCodeEqualsSelfHashCode":746,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":587,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectHashCodeEqualsContract":713,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testBagEqualsSelf":1094,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":222,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":1224,"org.apache.commons.collections4.CollectionUtilsTest.get1":395,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":1277,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":858,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":922,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":1267,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":845,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":415,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorSet":1230,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":511,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":1,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":322,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":528,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":404,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":616,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":717,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsContract":919,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":769,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":65,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":118,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":656,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":342,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":1326,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":1265,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":600,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":768,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":940,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":669,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":805,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":953,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":450,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectHashCodeEqualsContract":1120,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":678,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsContract":1106,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":1054,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":433,"org.apache.commons.collections4.set.PredicatedSetTest.testCanonicalEmptyCollectionExists":743,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":1073,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":92,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":431,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":327,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":459,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":524,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":176,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":1288,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":1149,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":866,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":698,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":276,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":452,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testEqualsNull":1055,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":309,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":879,"org.apache.commons.collections4.list.GrowthListTest.testEqualsNull":974,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":821,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRemoveAll":1017,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":341,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectHashCodeEqualsSelfHashCode":1207,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":340,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":104,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":339,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":1081,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":1111,"org.apache.commons.collections4.queue.TransformedQueueTest.testEqualsNull":1119,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":830,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":1199,"org.apache.commons.collections4.map.LRUMapTest.testReset":297,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":561,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":853,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":685,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":1259,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":607,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":798,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListCompatibility":983,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectEqualsSelf":889,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":294,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":680,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectEqualsSelf":1063,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":568,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":173,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":796,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":581,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testDecorateFactory":1328,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":245,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":447,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":653,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullIterator":707,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":169,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":737,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":74,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":716,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":784,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":552,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":505,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":658,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":1092,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":146,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":310,"org.apache.commons.collections4.map.LinkedMapTest.testReset":162,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":287,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testEqualsNull":1134,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":205,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":325,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsContract":1135,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":90,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":766,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":345,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":218,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":671,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":289,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIteratorRemove":728,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":957,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":863,"org.apache.commons.collections4.list.UnmodifiableListTest.testObjectEqualsSelf":992,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsContract":1144,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":1287,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":10,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":539,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":344,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":500,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":1169,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":369,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":1312,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesClearChangesMap":1183,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":526,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":381,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":938,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":1229,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":752,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":935,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":925,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":519,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":773,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":791,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":1258,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":553,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":640,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":1103,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRetainAll":1006,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":506,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":895,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":197,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsContract":1239,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapHashCode":1174,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":360,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":697,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":63,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":266,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":565,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":795,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":1219,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":808,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":989,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":44,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRetainAll":1010,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":898,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":901,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":91,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":1301,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":937,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":1327,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":529,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":610,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":37,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":1087,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":1244,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveAll":997,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":775,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicate":1245,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":362,"org.apache.commons.collections4.list.GrowthListTest.testSerializeDeserializeThenCompare":971,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIterator":701,"org.apache.commons.collections4.map.HashedMapTest.testClone":29,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":549,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":579,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":1099,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":550,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":444,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":1156,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":596,"org.apache.commons.collections4.map.SingletonMapTest.testMakeMap":1138,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":231,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":421,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":819,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":1323,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":267,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":354,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":418,"org.apache.commons.collections4.list.TransformedListTest.testObjectEqualsSelf":917,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":260,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":714,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":996,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":862,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":204,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":560,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsContract":1057,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":859,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":275,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":498,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":530,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":749,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":125,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":1107,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":307,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":355,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":1292,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectEqualsSelf":1105,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":523,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":1194,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":657,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":916,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":1318,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":965,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":1297,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":131,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":191,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":944,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":190,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":984,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":192,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":33,"org.apache.commons.collections4.CollectionUtilsTest.emptyCollection":1058,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":456,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":168,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":66,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":214,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":171,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":250,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":760,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsSelfHashCode":1223,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":586,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":827,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveAll":1007,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":411,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":1289,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":203,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":952,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":202,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectHashCodeEqualsContract":1123,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":163,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":156,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":590,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":972,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":419,"org.apache.commons.collections4.map.LinkedMapTest.testClone":159,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":668,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveAll":1015,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":666,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":911,"org.apache.commons.collections4.map.ListOrderedMapTest.testCanonicalEmptyCollectionExists":1210,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":588,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":844,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":589,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":947,"org.apache.commons.collections4.map.ListOrderedMapTest.testCanonicalFullCollectionExists":1211,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapClear":633,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":12,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":69,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":229,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":572,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":1250,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":1082,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":1108,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":445,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":774,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":242,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":547,"org.apache.commons.collections4.list.TransformedListTest.testEqualsNull":918,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":1307,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":272,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":548,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":15,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetIteratorRemoveChangesMap":626,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":14,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":13,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":316,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":295,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":915,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":1173,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":699,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":812,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":435,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":847,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":621,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":50,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":311,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectEqualsSelf":1206,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":1320,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":299,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectHashCodeEqualsContract":1132,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetIndexed":7,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":764,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":248,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":636,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveAll":1013,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":46,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":1310,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":439,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":637,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":223,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":962,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":688,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":145,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":426,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRetainAll":1018,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":181,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyMapIterator":702,"org.apache.commons.collections4.map.ListOrderedMapTest.testFullMapCompatibility":1177,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":72,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":677,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":429,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":428,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":1069,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":427,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":563,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEqualsNull":1070,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":1110,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":696,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":797,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":902,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":148,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":839,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":136,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":643,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":515,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":628,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":968,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":437,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":312,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyIterator":706,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":876,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":955,"org.apache.commons.collections4.set.TransformedSetTest.testSetEquals":1028,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":504,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":368,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectHashCodeEqualsContract":1114,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":559,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":888,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":977,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":674,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":1264,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullKey":603,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectEqualsSelf":1084,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":794,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":86,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":878,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":62,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":356,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":535,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectEqualsSelf":1115,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":170,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":393,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":867,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":503,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":124,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":151,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":1306,"org.apache.commons.collections4.map.LRUMapTest.testLRU":298,"org.apache.commons.collections4.map.ListOrderedMapTest.testPreviousKey":1162,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":1077,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":1317,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":1038,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":906,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":1313,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":1217,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":47,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":885,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":110,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":573,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":574,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectHashCodeEqualsContract":1208,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":575,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":385,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":860,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":1291,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":846,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":335,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":382,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":557,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalFullCollectionExists":1147,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveAll":1020,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":641,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":1168,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":667,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":806,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectHashCodeEqualsContract":891,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":825,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":755,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":970,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":455,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":36,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":958,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":333,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":443,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":308,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":75,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":424,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":729,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":414,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRetainAll":1000,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":634,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":991,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":622,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":747,"org.apache.commons.collections4.set.ListOrderedSet2Test.testEqualsNull":1026,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":332,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":599,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":258,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":277,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":495,"org.apache.commons.collections4.map.ListOrderedMapTest.testFirstKey":1159,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":1165,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":18,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":372,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":374,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":1255,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":89,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":64,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":9,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":343,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":566,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":196,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":465,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":629,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":323,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":1192,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":284,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":61,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalEmptyCollectionExists":1220,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":1272,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":501,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":499,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":877,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":1157,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":106,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":1170,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":558,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":738,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":694,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":650,"org.apache.commons.collections4.map.HashedMapTest.testEmptyMapCompatibility":780,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":475,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":240,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testBagEqualsSelf":1060,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":76,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":592,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":802,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectEqualsSelf":1130,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":960,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":467,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":1270,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectEqualsSelf":1127,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":174,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":468,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":0,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":178,"org.apache.commons.collections4.list.GrowthListTest.testFullListCompatibility":959,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":736,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":684,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":84,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex":1150,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":180,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":761,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":682,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":1316,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":384,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":541,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":615,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutNullKey":1179,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":363,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":224,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":564,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":1195,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":933,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyIterator":1232,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":546,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":211,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":614,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIsEmpty":731,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":790,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":908,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveAll":1001,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":409,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":1298,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":1252,"org.apache.commons.collections4.map.LinkedMapTest.testEmptyMapCompatibility":826,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":730,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":644,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":799,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":31,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRetainAll":1008,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":1246,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":982,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorOrder":1227,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetEquals":1043,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIteratorSet":704,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":980,"org.apache.commons.collections4.list.UnmodifiableListTest.testSerializeDeserializeThenCompare":990,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":288,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":478,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":762,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":772,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":1061,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":479,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":1196,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":477,"org.apache.commons.collections4.set.TransformedSetTest.testSerializeDeserializeThenCompare":1029,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":914,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":87,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":348,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":951,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":42,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":612,"org.apache.commons.collections4.list.SetUniqueListTest.testObjectHashCodeEqualsContract":872,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":371,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testUnmodifiable":1213,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":349,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":128,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRetainAll":1016,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":893,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":776,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":1153,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetClearChangesMap":1185,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEqualsNull":1125,"org.apache.commons.collections4.map.ListOrderedMapTest.testSimpleSerialization":1209,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":101,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":70,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":817,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":861,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":150,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":1282,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":177,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":1254,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":380,"org.apache.commons.collections4.list.PredicatedListTest.testEqualsNull":946,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":80,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":1203,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":873,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":451,"org.apache.commons.collections4.map.ListOrderedMapTest.testSerializeDeserializeThenCompare":1204,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":1193,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":1142,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":521,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":1200,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":34,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":670,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":449,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":756,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":281,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalFullCollectionExists":815,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":27,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":179,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":441,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsContract":1072,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":111,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":689,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectEqualsSelf":1234,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":283,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":282,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":781,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":1140,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":390,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":818,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":370,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":659,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":225,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":68,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":375,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":188,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":313,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsContract":1117,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":1302,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":448,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":492,"org.apache.commons.collections4.list.UnmodifiableListTest.testObjectHashCodeEqualsContract":994,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":721,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":129,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":1136,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":227,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":848,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":759,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":25,"org.apache.commons.collections4.set.TransformedSortedSetTest.testEqualsNull":1045,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":525,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":536,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":567,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":811,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":216,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":576,"org.apache.commons.collections4.collection.TransformedCollectionTest.testEqualsNull":1131,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":981,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":562,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":158,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":217,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":476,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":517,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":259,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":923,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":979,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":155,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalFullCollectionExists":824,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":466,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":392,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":942,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":472,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":513,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":1182,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":95,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":94,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":646,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":458,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":1101,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":1309,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":96,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":2,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":652,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":239,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":28,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":184,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":238,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":1303,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":237,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":939,"org.apache.commons.collections4.set.PredicatedSetTest.testSetHashCode":723,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":48,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":273,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":931,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":1262,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":1062,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":1305,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":6,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectEqualsSelf":740,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":256,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":516,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":1284,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":1181,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":165,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":442,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":482,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":481,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":480,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":1141,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":987,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveAll":1003,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRetainAll":1012,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":828,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveAll":1197,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":351,"org.apache.commons.collections4.map.LRUMapTest.testClone":296,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":199,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":1247,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":43,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":135,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":189,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":903,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":1065,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":314,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":883,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":1137,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsContract":1222,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":540,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":17,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":244,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":734,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":1325,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":948,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":59,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsContract":1098,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":591,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":533,"org.apache.commons.collections4.set.PredicatedSetTest.testCanonicalFullCollectionExists":741,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":630,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":502,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":683,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":200,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":1024,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectEqualsSelf":1050,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":366,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":1300,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":1256,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":649,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":464,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":1155,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testInitialCapacityZero":832,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":1319,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":257,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":580,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":782,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":618,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":909,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":619,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsContract":1042,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":617,"org.apache.commons.collections4.list.SetUniqueListTest.testObjectEqualsSelf":870,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":899,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectEqualsSelf":1036,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":11,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalEmptyCollectionExists":1237,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":927,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveAll":1005,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testSerializeDeserializeThenCompare":715,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":398,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalEmptyCollectionExists":814,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":537,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":1090,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":350,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":226,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullKey":632,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEqualsNull":1083,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":491,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":1251,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":532,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListCompatibility":978,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testEqualsNull":1128,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":763,"org.apache.commons.collections4.list.GrowthListTest.testObjectEqualsSelf":973,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":3,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":691,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":1299,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectHashCodeEqualsContract":745,"org.apache.commons.collections4.list.GrowthListTest.testEmptyListCompatibility":950,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":1080,"org.apache.commons.collections4.set.PredicatedSetTest.testEqualsNull":742,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":840,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectEqualsSelf":1109,"org.apache.commons.collections4.set.UnmodifiableSetTest.testEqualsNull":1035,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectHashCodeEqualsContract":1047,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":406,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":488,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsContract":1085,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":954,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":83,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":1290,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":969,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":1281,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":1315,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":679,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":198,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":864,"org.apache.commons.collections4.set.TransformedSetTest.testObjectHashCodeEqualsContract":1032,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectHashCodeEqualsContract":1052,"org.apache.commons.collections4.list.PredicatedListTest.testObjectEqualsSelf":945,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":1086,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":584,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":353,"org.apache.commons.collections4.map.HashedMapTest.testInitialCapacityZero":778,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":739,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSimpleSerialization":835,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":718,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":785,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":321,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":543,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains3":1188,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":1311,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":463,"org.apache.commons.collections4.set.TransformedSetTest.testEqualsNull":1031,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":40,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":544,"org.apache.commons.collections4.set.ListOrderedSet2Test.testObjectHashCodeEqualsContract":1027,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalEmptyCollectionExists":823,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":842,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":358,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains2":1187,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":270,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains1":1186,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":1276,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":383,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":850,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":897,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastKeySet":1164,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":786,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":941,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":857,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":662,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":377,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testOrderedMapIterator":1225,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSerializeDeserializeThenCompare":1039,"org.apache.commons.collections4.set.PredicatedSetTest.testGetSet":720,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":822,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":30,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":910,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":446,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":1295,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":611,"org.apache.commons.collections4.set.TransformedSetTest.testObjectEqualsSelf":1030,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":1268,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":195,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":187,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":194,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":359,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":387,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":193,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":1273,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveAll":999,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":1275,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":243,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":185,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectEqualsSelf":1133,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":788,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":423,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":286,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":269,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":803,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":655,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":520,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":1068,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":373,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":838,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":1076,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":67,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":800,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":793,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":1033,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutNullValue":1180,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":554,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":319,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":578,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":142,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":143,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":144,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":507,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":292,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":943,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":265,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":1283,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":1285,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":112,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":376,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":545,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":493,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectEqualsSelf":1056,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":1286,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":1167,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":896,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":109,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":329,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":767,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":352,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":1154,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":268,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectHashCodeEqualsContract":1129,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":1201,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":212,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":663,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":49,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":665,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":664,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFullMapCompatibility":1216,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":1049,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":172,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":1304,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":347,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":399,"org.apache.commons.collections4.list.GrowthListTest.testCollectionClear":966,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":126,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":1088,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEqualsNull":1113,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":1074,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectEqualsSelf":1046,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":1151,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectEqualsSelf":1041,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":410,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":753,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":1161,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":77,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":397,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":527,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":1093,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":306,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":5,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":496,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":389,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":438,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRetainAll":1002,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":1104,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":228,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":386,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":403,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":357,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":508,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":882,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":127,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":675,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":920,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":555,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":251,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":703,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalFullCollectionExists":1235,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":379,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":810,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":926,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":1021,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":60,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":331,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":1314,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":166,"org.apache.commons.collections4.CollectionUtilsTest.getFromObjectArray":396,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":758,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":483,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":512,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":1296,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":518,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionClear":732,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testSimpleSerialization":712,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":262,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRetainAll":1198,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":1260,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":722,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":1293,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":497,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyMapIterator":1228,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":1278,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectEqualsSelf":1075,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":1243,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":884,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":976,"org.apache.commons.collections4.map.ListOrderedMapTest.testMakeMap":1166,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSimpleSerialization":1238,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":208,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":413,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":510,"org.apache.commons.collections4.list.FixedSizeListTest.testEqualsNull":890,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":271,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":432,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":425,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory":700,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":654,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEmptyMapCompatibility":833,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":988,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":107,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":405,"org.apache.commons.collections4.map.ListOrderedMapTest.testLastKey":1160,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":886,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":4,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":625,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":855,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":318,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":624,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":115,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":620,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":149,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":1240,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":114,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":1324,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":88,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":692,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":865,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":595,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":724,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":1067,"org.apache.commons.collections4.map.SingletonMapTest.testSimpleSerialization":1145,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":1178,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":719,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":881,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":434,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":639,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":995,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":750,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":485,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":473,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":1100,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":81,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":956,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":676,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":887,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":787,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectEqualsSelf":708,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":1152,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":246,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":330,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":1263,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":1079,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":964,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":140,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":141,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":139,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":783,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":51,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":253,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":1059,"org.apache.commons.collections4.set.ListOrderedSetTest.testEqualsNull":1051,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":474,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":514,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPut":642,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":695,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":132,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":868,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory":1226,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":967,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":263,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":20,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":869,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":486,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":841,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":52,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":460,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":1269,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":210,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":928,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":985,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":733,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":328,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRetainAll":1004,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":407,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":1261,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":401,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":673,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":264,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":849,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectEqualsSelf":1112,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":122,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":660,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":932,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":904,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":601,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":647,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":119,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":130,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsSelfHashCode":1143,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":1242,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":365,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":21,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":300,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":813,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":417,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":1212,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":1279,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":338,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":534,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":936,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":522,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":1034,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":252,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":1294,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":16,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":336,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":337,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":934,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":54,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":175,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":221,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":361,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":672,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRetainAll":998,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":367,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":765,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveAll":1009,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":301,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":912,"org.apache.commons.collections4.map.ListOrderedMapTest.testEmptyMapCompatibility":1176,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":789,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":924,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":807,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":388,"org.apache.commons.collections4.list.SetUniqueListTest.testEqualsNull":871,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":1048,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSerializeDeserializeThenCompare":1044,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":326,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":687},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"d78adf7f-2ecb-11e6-9fdc-871035b074e3","method":{"position":"org.apache.commons.collections4.MapUtils:406","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key, final java.lang.Boolean defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"d78ba2d0-2ecb-11e6-9fdc-75b1c4778ed3","method":{"position":"org.apache.commons.collections4.map.TransformedMap:241","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            mapToCopy = transformMap(mapToCopy);\n            decorated().putAll(mapToCopy);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:160","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Number"},"failures":[],"tindex":"d78bc9e1-2ecb-11e6-9fdc-db43a88811a0","method":{"position":"org.apache.commons.collections4.comparators.NullComparator:169","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Number) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == null) {\n                return false;\n            } \n            if (obj == (org.apache.commons.collections4.comparators.NullComparator.this)) {\n                return true;\n            } \n            if (!(obj.getClass().equals(org.apache.commons.collections4.comparators.NullComparator.this.getClass()))) {\n                return false;\n            } \n            final org.apache.commons.collections4.comparators.NullComparator<?> org.apache.commons.collections4.comparators.NullComparator<?> = ((org.apache.commons.collections4.comparators.NullComparator<?>)(obj));\n            return ((org.apache.commons.collections4.comparators.NullComparator.this.boolean) == (other.boolean)) && (org.apache.commons.collections4.comparators.NullComparator.this.java.util.Comparator<? super E>.equals(other.java.util.Comparator<? super ?>));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtBinaryOperatorImpl","sourcecode":"other instanceof org.apache.commons.collections4.keyvalue.MultiKey"},"failures":[],"tindex":"d78bf0f2-2ecb-11e6-9fdc-f7162f20501e","method":{"position":"org.apache.commons.collections4.SplitMapUtils:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object arg0) {\n    if (arg0 instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (arg0 == (org.apache.commons.collections4.SplitMapUtils.WrappedGet.this)) {\n                return true;\n            } \n            return (arg0 instanceof org.apache.commons.collections4.SplitMapUtils.WrappedGet) && (((org.apache.commons.collections4.SplitMapUtils.WrappedGet<?, ?>)(arg0)).org.apache.commons.collections4.Get<?, ?>.equals(org.apache.commons.collections4.SplitMapUtils.WrappedGet.this.org.apache.commons.collections4.Get<K, V>));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"arg0"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"d78cdb53-2ecb-11e6-9fdc-d95972d05d29","method":{"position":"org.apache.commons.collections4.iterators.IteratorChain:159","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.Queue<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[0,1,2,3],"tindex":"d78d0264-2ecb-11e6-9fdc-b50b6339d0b8","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:336","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return false;\n            } \n            return coll.contains(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:136","type":"CtBinaryOperatorImpl","sourcecode":"(cacheSize) == 0"},"failures":[],"tindex":"d78d0265-2ecb-11e6-9fdc-33548901f706","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:143","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake buildSnake(final int start, final int diag, final int end1, final int end2) {\n    if (end1 == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = start;\n            while ((((end - diag) < end2) && (end < end1)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(end), java.util.List<T>.get((end - diag))))) {\n                ++end;\n            }\n            return new org.apache.commons.collections4.sequence.SequencesComparator.Snake(start , end , diag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cacheSize":"end1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"d78d2976-2ecb-11e6-9fdc-b9b032e9ec2f","method":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(set , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtBinaryOperatorImpl","sourcecode":"index < ((size) / 2)"},"failures":[4],"tindex":"d78d2977-2ecb-11e6-9fdc-c995b2ebd615","method":{"position":"org.apache.commons.collections4.list.GrowthList:150","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < (index / 2)) {\n        {\n            final int int = decorated().size();\n            boolean boolean = false;\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n                result = true;\n            } \n            return (decorated().addAll(index, coll)) | result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtBinaryOperatorImpl","sourcecode":"(values) == null"},"failures":[],"tindex":"d78d2978-2ecb-11e6-9fdc-3164aeb415d0","method":{"position":"org.apache.commons.collections4.list.TransformedList:79","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.TransformedList<E> org.apache.commons.collections4.list.TransformedList<E> = new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n            if (((transformer != null) && (list != null)) && ((list.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(list.toArray()));\n                list.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"d78d5089-2ecb-11e6-9fdc-7f943a1aeba8","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next(), 1);\n                changed = changed || added;\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"d78d508a-2ecb-11e6-9fdc-79994092841b","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:332","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.ComparatorChain.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.ComparatorChain.this.getClass())) {\n                final org.apache.commons.collections4.comparators.ComparatorChain<?> org.apache.commons.collections4.comparators.ComparatorChain<?> = ((org.apache.commons.collections4.comparators.ComparatorChain<?>)(object));\n                return (null == (java.util.BitSet) ? null == (chain.java.util.BitSet) : java.util.BitSet.equals(chain.java.util.BitSet)) && (null == (java.util.List<java.util.Comparator<E>>) ? null == (chain.java.util.List<java.util.Comparator<?>>) : java.util.List<java.util.Comparator<E>>.equals(chain.java.util.List<java.util.Comparator<?>>));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtBinaryOperatorImpl","sourcecode":"(uniqueSet) == null"},"failures":[5,6],"tindex":"d78d508b-2ecb-11e6-9fdc-db32f2ad87a7","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:331","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Set<E> createSetBasedOnList(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (set == null) {\n        {\n            java.util.Set<E> java.util.Set<E>;\n            if (set.getClass().equals(java.util.HashSet.java.util.HashSet.java.lang.Class)) {\n                subSet = new java.util.HashSet<E>(list.size());\n            } else {\n                try {\n                    subSet = set.getClass().newInstance();\n                } catch (final java.lang.InstantiationException ie) {\n                    subSet = new java.util.HashSet<E>();\n                } catch (final java.lang.IllegalAccessException iae) {\n                    subSet = new java.util.HashSet<E>();\n                }\n            }\n            subSet.addAll(list);\n            return subSet;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"uniqueSet":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[7,8,9,10,11,12,13,14,15,16],"tindex":"d78d779c-2ecb-11e6-9fdc-5bf78a1e3846","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:195","type":"CtMethodImpl","sourcecode":"public K getKey(final int index) {\n    if (index < 0) {\n        {\n            return K[][index];\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"d78d779d-2ecb-11e6-9fdc-1731c13563f7","method":{"position":"org.apache.commons.collections4.ListUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> union(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list1.size()) > (list1.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>(list1);\n            result.addAll(list2);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"d78d9eae-2ecb-11e6-9fdc-af3385015157","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:122","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            for (final E E : coll) {\n                java.util.Map<E, ? super V>.put(e, V);\n            }\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:257","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[17,18],"tindex":"d78d9eaf-2ecb-11e6-9fdc-57d9b15cbcc8","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object other) {\n    if (other == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (other == (org.apache.commons.collections4.keyvalue.MultiKey.this)) {\n                return true;\n            } \n            if (other instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(other));\n                return java.util.Arrays.equals(K[], otherMulti.?[]);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"other"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:252","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"d78d9eb0-2ecb-11e6-9fdc-9b1ac79a6218","method":{"position":"org.apache.commons.collections4.IteratorUtils:938","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> toListIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:117","type":"CtBinaryOperatorImpl","sourcecode":"set1 == set2"},"failures":[19,20,21],"tindex":"d78dc5c1-2ecb-11e6-9fdc-adaf1b3b7be6","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:255","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if (coll.contains(it.next())) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:468","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[22,23],"tindex":"d78dc5c2-2ecb-11e6-9fdc-233dbd5fc9a8","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:115","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getBag().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.ReplacementsFinder:90","type":"CtBinaryOperatorImpl","sourcecode":"(pendingDeletions.isEmpty()) && (pendingInsertions.isEmpty())"},"failures":[],"tindex":"d78dc5c3-2ecb-11e6-9fdc-79195584ff92","method":{"position":"org.apache.commons.collections4.CollectionUtils:663","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.lang.Iterable<T> collection, final C closure) {\n    if ((collection.isEmpty()) && (collection.isEmpty())) {\n        {\n            if ((collection != null) && (closure != null)) {\n                for (final T T : collection) {\n                    closure.execute(element);\n                }\n            } \n            return closure;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingDeletions":"collection","pendingInsertions":"collection"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:158","type":"CtBinaryOperatorImpl","sourcecode":"(!(nextCalled)) || (removed)"},"failures":[24],"tindex":"d78decd4-2ecb-11e6-9fdc-656fbf460002","method":{"position":"org.apache.commons.collections4.CollectionUtils:1547","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final boolean includeDuplicates) {\n    if ((!includeDuplicates) || includeDuplicates) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), includeDuplicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"removed":"includeDuplicates","nextCalled":"includeDuplicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[25],"tindex":"d78decd5-2ecb-11e6-9fdc-93b28174b25f","method":{"position":"org.apache.commons.collections4.ListUtils:508","type":"CtMethodImpl","sourcecode":"public static <E>int indexOf(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((list != null) && (predicate != null)) {\n                for (int int = 0 ; i < (list.size()) ; i++) {\n                    final E E = list.get(i);\n                    if (predicate.evaluate(item)) {\n                        return i;\n                    } \n                }\n            } \n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[26],"tindex":"d78decd6-2ecb-11e6-9fdc-bf89054148a8","method":{"position":"org.apache.commons.collections4.BagUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return org.apache.commons.collections4.bag.TransformedSortedBag.transformingSortedBag(bag, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getRight(dataElement)) == node"},"failures":[],"tindex":"d78decd7-2ecb-11e6-9fdc-db546d0f3533","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1098","type":"CtMethodImpl","sourcecode":"private void swapPosition(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> x, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> y, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((y.getParent(dataElement).getRight(dataElement)) == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getParent(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getLeft(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getRight(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getParent(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getLeft(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getRight(dataElement);\n            final boolean boolean = ((x.getParent(dataElement)) != null) && (x == (x.getParent(dataElement).getLeft(dataElement)));\n            final boolean boolean = ((y.getParent(dataElement)) != null) && (y == (y.getParent(dataElement).getLeft(dataElement)));\n            if (x == yFormerParent) {\n                x.setParent(y, dataElement);\n                if (yWasLeftChild) {\n                    y.setLeft(x, dataElement);\n                    y.setRight(xFormerRightChild, dataElement);\n                } else {\n                    y.setRight(x, dataElement);\n                    y.setLeft(xFormerLeftChild, dataElement);\n                }\n            } else {\n                x.setParent(yFormerParent, dataElement);\n                if (yFormerParent != null) {\n                    if (yWasLeftChild) {\n                        yFormerParent.setLeft(x, dataElement);\n                    } else {\n                        yFormerParent.setRight(x, dataElement);\n                    }\n                } \n                y.setLeft(xFormerLeftChild, dataElement);\n                y.setRight(xFormerRightChild, dataElement);\n            }\n            if (y == xFormerParent) {\n                y.setParent(x, dataElement);\n                if (xWasLeftChild) {\n                    x.setLeft(y, dataElement);\n                    x.setRight(yFormerRightChild, dataElement);\n                } else {\n                    x.setRight(y, dataElement);\n                    x.setLeft(yFormerLeftChild, dataElement);\n                }\n            } else {\n                y.setParent(xFormerParent, dataElement);\n                if (xFormerParent != null) {\n                    if (xWasLeftChild) {\n                        xFormerParent.setLeft(y, dataElement);\n                    } else {\n                        xFormerParent.setRight(y, dataElement);\n                    }\n                } \n                x.setLeft(yFormerLeftChild, dataElement);\n                x.setRight(yFormerRightChild, dataElement);\n            }\n            if ((x.getLeft(dataElement)) != null) {\n                x.getLeft(dataElement).setParent(x, dataElement);\n            } \n            if ((x.getRight(dataElement)) != null) {\n                x.getRight(dataElement).setParent(x, dataElement);\n            } \n            if ((y.getLeft(dataElement)) != null) {\n                y.getLeft(dataElement).setParent(y, dataElement);\n            } \n            if ((y.getRight(dataElement)) != null) {\n                y.getRight(dataElement).setParent(y, dataElement);\n            } \n            x.swapColors(y, dataElement);\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]) == x) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = y;\n            } else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]) == y) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = x;\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"y","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[27],"tindex":"d78e3af8-2ecb-11e6-9fdc-f9bde7a12060","method":{"position":"org.apache.commons.collections4.TransformerUtils:379","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.MapTransformer.mapTransformer(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[],"tindex":"d78f9a89-2ecb-11e6-9fdc-7faf6a72eab3","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:629","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key4 instanceof java.util.Dictionary) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key4"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[],"tindex":"d78fc19a-2ecb-11e6-9fdc-2d9e9702b728","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:167","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator) throws java.lang.IndexOutOfBoundsException {\n    if (index == 0) {\n        throw new java.lang.IndexOutOfBoundsException();\n    } else {\n        {\n            setComparator(index, comparator, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[],"tindex":"d78fc19b-2ecb-11e6-9fdc-138d20d07119","method":{"position":"org.apache.commons.collections4.IteratorUtils:781","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.NodeList nodeList) {\n    if (nodeList == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (nodeList == null) {\n                throw new java.lang.NullPointerException(\"NodeList must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(nodeList);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"nodeList"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtBinaryOperatorImpl","sourcecode":"(isLocked) == false"},"failures":[],"tindex":"d78fe8ac-2ecb-11e6-9fdc-df8f5e65616b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1945","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.SortedMap<K, V> createRangeMap(final K fromKey, final boolean fromInclusive, final K toKey, final boolean toInclusive) {\n    if (fromInclusive == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new RangeEntryMap(fromKey , fromInclusive , toKey , toInclusive);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isLocked":"fromInclusive"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry"},"failures":[],"tindex":"d78fe8ad-2ecb-11e6-9fdc-7729fe6d5ef1","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:453","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(java.lang.Object key) {\n    if (key instanceof java.util.Map.Entry) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[],"tindex":"d78fe8ae-2ecb-11e6-9fdc-b30cfffcd5b8","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:413","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n                return false;\n            } \n            return (((org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger)(obj)).int) == (int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1501","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[28],"tindex":"d7900fbf-2ecb-11e6-9fdc-dd7965a4b928","method":{"position":"org.apache.commons.collections4.CollectionUtils:1497","type":"CtMethodImpl","sourcecode":"public static int maxSize(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).maxSize();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.maxSize();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return -1;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,8,9,10,11,12,13,14,15,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,18,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392],"tindex":"d7900fc0-2ecb-11e6-9fdc-ab2a3a6ed9c3","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:393","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key) {\n    if (key == null) {\n        {\n            int int = key.hashCode();\n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:55","type":"CtBinaryOperatorImpl","sourcecode":"trie instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"d79035d1-2ecb-11e6-9fdc-a71b1933fa29","method":{"position":"org.apache.commons.collections4.MapUtils:1521","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:64","type":"CtBinaryOperatorImpl","sourcecode":"(predicates.length) == 0"},"failures":[393,394,395,396,397,398],"tindex":"d7905ce2-2ecb-11e6-9fdc-85872a14ef8b","method":{"position":"org.apache.commons.collections4.CollectionUtils:1250","type":"CtMethodImpl","sourcecode":"public static java.lang.Object get(final java.lang.Object object, final int index) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = index;\n            if (i < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + i));\n            } \n            if (object instanceof java.util.Map<?, ?>) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(object));\n                final java.util.Iterator<?> java.util.Iterator<?> = map.entrySet().iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.lang.Object[]) {\n                return ((java.lang.Object[])(object))[i];\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.next();\n                    } \n                    it.next();\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object instanceof java.util.Collection<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(object)).iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.nextElement();\n                    } else {\n                        it.nextElement();\n                    }\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object == null) {\n                throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n            } else {\n                try {\n                    return java.lang.reflect.Array.get(object, i);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"object","length":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtBinaryOperatorImpl","sourcecode":"(node.getLeft(dataElement)) != null"},"failures":[399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494],"tindex":"d7905ce3-2ecb-11e6-9fdc-a515c263a73b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:780","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getGrandParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        {\n            return getParent(getParent(node, dataElement), dataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[495],"tindex":"d79083f4-2ecb-11e6-9fdc-090d56fa8a6e","method":{"position":"org.apache.commons.collections4.MapUtils:1217","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.collections4.MapUtils.isEmpty(map));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[134],"tindex":"d79083f5-2ecb-11e6-9fdc-9d166d0028c5","method":{"position":"org.apache.commons.collections4.map.Flat3Map:374","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = map.size();\n            if (size == 0) {\n                return ;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n                return ;\n            } \n            if (size < 4) {\n                for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            } else {\n                convertToMap();\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"d790ab06-2ecb-11e6-9fdc-1369fca863e7","method":{"position":"org.apache.commons.collections4.ListUtils:442","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if ((list == null) || (list == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.TransformedList.transformingList(list, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"list","b":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl","sourcecode":"sortedMap == null"},"failures":[],"tindex":"d790ab07-2ecb-11e6-9fdc-fb4759e3cdb3","method":{"position":"org.apache.commons.collections4.MapUtils:1506","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> synchronizedSortedMap(final java.util.SortedMap<K, V> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedSortedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:667","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(current.left, current)"},"failures":[],"tindex":"d790ab08-2ecb-11e6-9fdc-53cf0e398991","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:758","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(node, current)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            while (true) {\n                org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (child.isEmpty()) {\n                    child = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((child.int) <= (node.int)) {\n                    return child;\n                } \n                node = child;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"current":"node","left":"node"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl","sourcecode":"list1 == list2"},"failures":[],"tindex":"d790d219-2ecb-11e6-9fdc-8f03e7526d98","method":{"position":"org.apache.commons.collections4.ListUtils:281","type":"CtMethodImpl","sourcecode":"public static int hashCodeForList(final java.util.Collection<?> list) {\n    if (list == list) {\n        {\n            if (list == null) {\n                return 0;\n            } \n            int int = 1;\n            final java.util.Iterator<?> java.util.Iterator<?> = list.iterator();\n            while (it.hasNext()) {\n                final java.lang.Object java.lang.Object = it.next();\n                hashCode = (31 * hashCode) + (obj == null ? 0 : obj.hashCode());\n            }\n            return hashCode;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list","list2":"list"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[496,497],"tindex":"d790d21a-2ecb-11e6-9fdc-47de2989ae14","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:45","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceOfPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        {\n            if (type == null) {\n                throw new java.lang.IllegalArgumentException(\"The type to check instanceof must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InstanceofPredicate(type);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[498],"tindex":"d790d21b-2ecb-11e6-9fdc-1394b205d11f","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:187","type":"CtBinaryOperatorImpl","sourcecode":"cachedNode == null"},"failures":[499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,19,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,20,537],"tindex":"d790d21c-2ecb-11e6-9fdc-8d8266bbf97e","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == null) {\n        {\n            super.removeNode(node);\n            broadcastNodeRemoved(node);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cachedNode":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:187","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Number"},"failures":[538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553],"tindex":"d790f92d-2ecb-11e6-9fdc-5b626e0f234d","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:219","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean isEqualValue(final java.lang.Object value1, final java.lang.Object value2) {\n    if (value2 instanceof java.lang.Number) {\n        {\n            return value1 == value2;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[554],"tindex":"d790f92e-2ecb-11e6-9fdc-a760a4f2fe14","method":{"position":"org.apache.commons.collections4.CollectionUtils:494","type":"CtMethodImpl","sourcecode":"public static boolean isProperSubCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if (b instanceof org.apache.commons.collections4.Bag) {\n        {\n            return ((a.size()) < (b.size())) && (org.apache.commons.collections4.CollectionUtils.isSubCollection(a, b));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:55","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[555,403,404,401,402,410,411,413,414,415,416,417,418,419,420,421,556,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691],"tindex":"d790f92f-2ecb-11e6-9fdc-d5be8fe87497","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:54","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Set<java.util.Map.Entry<K, V>> unmodifiableEntrySet(final java.util.Set<java.util.Map.Entry<K, V>> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                return set;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableEntrySet<K, V>(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:117","type":"CtBinaryOperatorImpl","sourcecode":"set1 == set2"},"failures":[],"tindex":"d7912040-2ecb-11e6-9fdc-b3908cce0a61","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:174","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().removeAll(coll);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:157","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.String"},"failures":[],"tindex":"d7912041-2ecb-11e6-9fdc-d157d4a01e69","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1511","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.lang.String) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupValue(obj)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[],"tindex":"d7914752-2ecb-11e6-9fdc-e3e3f1cf73ff","method":{"position":"org.apache.commons.collections4.CollectionUtils:1137","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Enumeration<? extends C> enumeration) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            while (enumeration.hasMoreElements()) {\n                changed |= collection.add(enumeration.nextElement());\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[],"tindex":"d7914753-2ecb-11e6-9fdc-31df1cb38bec","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:582","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if (key instanceof java.util.Collection) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<K>lookup(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[692,693,694,695,696,697],"tindex":"d7914754-2ecb-11e6-9fdc-4f5a84f4a948","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:359","type":"CtMethodImpl","sourcecode":"public void addComposited(final java.util.Collection<E> compositeCollection1, final java.util.Collection<E> compositeCollection2) {\n    if (compositeCollection1.isEmpty()) {\n        {\n            java.util.List<java.util.Collection<E>>.add(compositeCollection1);\n            java.util.List<java.util.Collection<E>>.add(compositeCollection2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"compositeCollection1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[698],"tindex":"d7916e65-2ecb-11e6-9fdc-d79db0768117","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:70","type":"CtMethodImpl","sourcecode":"public static <K, C>org.apache.commons.collections4.collection.IndexedCollection<K, C> uniqueIndexedCollection(final java.util.Collection<C> coll, final org.apache.commons.collections4.Transformer<C, K> keyTransformer) {\n    if (coll instanceof java.util.List<?>) {\n        {\n            return new org.apache.commons.collections4.collection.IndexedCollection<K, C>(coll , keyTransformer , org.apache.commons.collections4.map.MultiValueMap.<K, C>multiValueMap(new java.util.HashMap<K, java.util.Collection<C>>()) , true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:173","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"d7916e66-2ecb-11e6-9fdc-15dffc180259","method":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PeekingIterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PeekingIterator<E> org.apache.commons.collections4.iterators.PeekingIterator<E> = ((org.apache.commons.collections4.iterators.PeekingIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PeekingIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtBinaryOperatorImpl","sourcecode":"cursor == null"},"failures":[],"tindex":"d7916e67-2ecb-11e6-9fdc-91121fbd7de8","method":{"position":"org.apache.commons.collections4.IteratorUtils:446","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"(collection.size()) == 0"},"failures":[],"tindex":"d7916e68-2ecb-11e6-9fdc-77e74f19302f","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next(), 1);\n                changed = changed || added;\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtBinaryOperatorImpl","sourcecode":"((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))"},"failures":[],"tindex":"d7919579-2ecb-11e6-9fdc-fbeaed833bd3","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((set1.size()) != (set2.size()))) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:47","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[558,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715],"tindex":"d791957a-2ecb-11e6-9fdc-2571c3c35f6f","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:45","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<? extends K, ? extends V> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.iterators.ArrayListIterator.this.lastItemIndex) == (-1)"},"failures":[],"tindex":"d791957b-2ecb-11e6-9fdc-e1fe668fbd14","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:251","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            if (nCopies > 0) {\n                final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n                int += nCopies;\n                if (mut == null) {\n                    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(object, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(nCopies));\n                    return true;\n                } \n                mut.int += nCopies;\n                return false;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastItemIndex":"nCopies"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:120","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[716,717],"tindex":"d791bc8c-2ecb-11e6-9fdc-cd1c86a90bda","method":{"position":"org.apache.commons.collections4.ListUtils:352","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : collection) {\n                if (!(remove.contains(obj))) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl","sourcecode":"transform == null"},"failures":[],"tindex":"d791bc8d-2ecb-11e6-9fdc-67855c3a9d1a","method":{"position":"org.apache.commons.collections4.CollectionUtils:994","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Collection<O> collect(final java.lang.Iterable<I> inputCollection, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.collect(inputCollection, transformer, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:352","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0"},"failures":[718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746],"tindex":"d791e39e-2ecb-11e6-9fdc-ef15444a4e35","method":{"position":"org.apache.commons.collections4.set.PredicatedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSet<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if ((org.apache.commons.collections4.CollectionUtils.intersection(set, set).size()) > 0) {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSet<E>(set , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","existingSet":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[501,747,748,518,522,749,750,751,752,753,754,755,536,20,756,757,758,759,760,761,762,763,764,21,765],"tindex":"d791e39f-2ecb-11e6-9fdc-8540a886cecf","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:415","type":"CtMethodImpl","sourcecode":"protected boolean isEqualValue(final java.lang.Object value1, final java.lang.Object value2) {\n    if (value2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (value1 == value2) || (value1 == null ? false : value1.equals(value2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"value2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[766,767,768,769],"tindex":"d791e3a0-2ecb-11e6-9fdc-05838114537e","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:93","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().remove(object, count);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:287","type":"CtBinaryOperatorImpl","sourcecode":"(index < startIndex) || (index > endIndex)"},"failures":[],"tindex":"d791e3a1-2ecb-11e6-9fdc-03b7013efe82","method":{"position":"org.apache.commons.collections4.map.LinkedMap:248","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K remove(final int index) {\n    if ((index < index) || (index > index)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"index","endIndex":"index","index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[62,770,104,149,200,244,288,346,361,380],"tindex":"d7920ab2-2ecb-11e6-9fdc-69c1c08aaf17","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:951","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (null == key) {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.remove(key);\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:309","type":"CtBinaryOperatorImpl","sourcecode":"null != (orderingBits)"},"failures":[771,772],"tindex":"d79231c3-2ecb-11e6-9fdc-cbbceb1fa881","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:507","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object value) {\n    if (null != value) {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.remove(value);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<java.lang.Object, V>.remove(key);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"orderingBits":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:109","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"d79231c4-2ecb-11e6-9fdc-7b62d5b24f8a","method":{"position":"org.apache.commons.collections4.MapUtils:108","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<? super K, V> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                return map.get(key);\n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.AbstractMapIteratorDecorator:43","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"d79231c5-2ecb-11e6-9fdc-91f46b418796","method":{"position":"org.apache.commons.collections4.IteratorUtils:474","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<K, V> mapIterator) {\n    if (mapIterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableMapIterator.unmodifiableMapIterator(mapIterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"mapIterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[773,538,539,540,541,542,543,544,545,546,774,547,548,775,549,550,553,76,77,79,80,81,84,86,89,90,94,95,96,97,98,99,108],"tindex":"d79258d6-2ecb-11e6-9fdc-bff84e5368c1","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:664","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            final java.lang.Object java.lang.Object = entry.getValue();\n            if ((entryKey == null) || (entryValue == null)) {\n                return false;\n            } \n            return (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualKey(entryKey, java.lang.Object)) && (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualValue(entryValue, getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[776,777],"tindex":"d79258d7-2ecb-11e6-9fdc-e96fe878d403","method":{"position":"org.apache.commons.collections4.IteratorUtils:491","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> chainedIterator(final java.util.Iterator<? extends E> iterator1, final java.util.Iterator<? extends E> iterator2) {\n    if (iterator1 instanceof java.util.ListIterator) {\n        {\n            return new org.apache.commons.collections4.iterators.IteratorChain<E>(iterator1 , iterator2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"d7927fe8-2ecb-11e6-9fdc-735634c68856","method":{"position":"org.apache.commons.collections4.SetUtils:326","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.set.TransformedSortedSet.transformingSortedSet(set, transformer);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:124","type":"CtBinaryOperatorImpl","sourcecode":"largestKey == (-1)"},"failures":[778,29,779,30,31,32,33,34,35,36,37,38,39,40,41,42,780,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,781,782,783,773,784,785,786,787,788,789,538,539,790,540,541,542,791,792,543,793,794,544,795,796,545,546,797,798,799,774,547,548,775,549,550,551,800,801,552,770,802,803,804,553,805,806,807,808,809,810,811,812,813,814,815,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,816,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,817,818,819,820,821,822,823,824,112,113,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,825,159,160,161,162,166,167,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,826,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,827,828,208,209,211,9,11,12,13,14,15,16,8,212,213,214,215,216,217,218,219,220,221,222,223,224,829,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,18,249,250,830,831,832,251,254,256,257,258,259,260,261,262,263,264,265,266,267,268,833,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,834,835,296,297,298,299,300,301,302,303,304,305,306,307,308,309,312,313,310,311,314,315,316,317,318,319,320,321,322,323,324,325,326,836,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,837,838,839,840,841,842,843,844,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,845,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,846,391,392],"tindex":"d792a6f9-2ecb-11e6-9fdc-b786e86166a7","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:686","type":"CtMethodImpl","sourcecode":"protected int calculateThreshold(final int newCapacity, final float factor) {\n    if (newCapacity == (-1)) {\n        {\n            return ((int)(newCapacity * factor));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"largestKey":"newCapacity"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.util.EmptyStackException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:325","type":"CtBinaryOperatorImpl","sourcecode":"(nodeCount) == 0"},"failures":[],"tindex":"d792a6fa-2ecb-11e6-9fdc-33eae6343047","method":{"position":"org.apache.commons.collections4.ArrayStack:105","type":"CtMethodImpl","sourcecode":"public E peek(final int n) throws java.util.EmptyStackException {\n    if (n == 0) {\n        {\n            final int int = ((size()) - n) - 1;\n            if (m < 0) {\n                throw new java.util.EmptyStackException();\n            } else {\n                return get(m);\n            }\n        }\n    } else {\n        throw new java.util.EmptyStackException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"n"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,498,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,431,432,435,436,1007,1008,1009,1010,577,578,581,582,1011,1012,1013,1014,1015,1016,1017,1018,593,601,609,616,1019,1020,1021,1022,622,630,638,645,668,676,684,691,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,722,737,740,742,745,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,22,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135],"tindex":"d792ce0b-2ecb-11e6-9fdc-4b1d36df706f","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        {\n            if (object instanceof java.util.Map<?, ?>) {\n                {\n                    return (object == (org.apache.commons.collections4.collection.AbstractCollectionDecorator.this)) || (decorated().equals(object));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:236","type":"CtBinaryOperatorImpl","sourcecode":"(end) >= (maxElements)"},"failures":[],"tindex":"d792f51c-2ecb-11e6-9fdc-33524f2f8f0a","method":{"position":"org.apache.commons.collections4.CollectionUtils:1307","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map.Entry<K, V> get(final java.util.Map<K, V> map, final int index) {\n    if (index >= index) {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            return org.apache.commons.collections4.CollectionUtils.get(map.entrySet(), index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"maxElements":"index","end":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[1136,1137],"tindex":"d792f51d-2ecb-11e6-9fdc-511ef9fc95dc","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = ((org.apache.commons.collections4.Bag<E>)(bag));\n                return tmpBag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"d792f51e-2ecb-11e6-9fdc-3301a25871ed","method":{"position":"org.apache.commons.collections4.SetUtils:326","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.set.TransformedSortedSet.transformingSortedSet(set, transformer);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[648,649,646,647,1138,650,651,652,653,654,655,656,657,1139,658,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,1214,677,678,1215,679,1216,680,681,682,683,684,685,686,687,688,689,690,691,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241],"tindex":"d7931c2f-2ecb-11e6-9fdc-15bca8379712","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:100","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.ListOrderedMap<K, V> listOrderedMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.ListOrderedMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtBinaryOperatorImpl","sourcecode":"other instanceof org.apache.commons.collections4.keyvalue.MultiKey"},"failures":[],"tindex":"d7931c30-2ecb-11e6-9fdc-27bba209bf34","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1517","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (doRemoveValue(o)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"d7931c31-2ecb-11e6-9fdc-25ea8aa921ed","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:582","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if (key instanceof java.util.Collection) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<K>lookup(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"d7934342-2ecb-11e6-9fdc-13337ad16558","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"d7934343-2ecb-11e6-9fdc-4f28212e6752","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        {\n            if (object instanceof java.util.Map<?, ?>) {\n                {\n                    return (object == (org.apache.commons.collections4.collection.AbstractCollectionDecorator.this)) || (decorated().equals(object));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.LazyList:113","type":"CtBinaryOperatorImpl","sourcecode":"index < size"},"failures":[],"tindex":"d7934344-2ecb-11e6-9fdc-f1791a92fe00","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:228","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final int index) {\n    if (index < index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" is less than zero\"));\n            } \n            if (index >= (int)) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" is invalid for size \") + (int)));\n            } \n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            if (index < ((int) / 2)) {\n                entry = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                }\n            } else {\n                entry = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                }\n            }\n            return entry;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtUnaryOperatorImpl","sourcecode":"!(excess.isEmpty())"},"failures":[],"tindex":"d7936a55-2ecb-11e6-9fdc-976bfd262fa4","method":{"position":"org.apache.commons.collections4.BagUtils:149","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (!(bag.isEmpty())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.CollectionBag.collectionBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"excess":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[1242],"tindex":"d7936a56-2ecb-11e6-9fdc-5fe72a3ef83d","method":{"position":"org.apache.commons.collections4.ListUtils:574","type":"CtMethodImpl","sourcecode":"public static java.lang.String longestCommonSubsequence(final java.lang.CharSequence a, final java.lang.CharSequence b) {\n    if (a == null) {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"CharSequence must not be null\");\n            } \n            final java.util.List<java.lang.Character> java.util.List<java.lang.Character> = org.apache.commons.collections4.ListUtils.longestCommonSubsequence(new org.apache.commons.collections4.ListUtils.CharSequenceAsList(a), new org.apache.commons.collections4.ListUtils.CharSequenceAsList(b));\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            for (java.lang.Character java.lang.Character : lcs) {\n                sb.append(ch);\n            }\n            return sb.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[1243],"tindex":"d7939167-2ecb-11e6-9fdc-ab98ca097f78","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:631","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            final int int = getHash(obj);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    final java.lang.Object java.lang.Object = n.getKey();\n                    if ((k == obj) || ((k != null) && (k.equals(obj)))) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(k);\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"d7939168-2ecb-11e6-9fdc-ff0b959c64a7","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1051","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<?, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:625","type":"CtBinaryOperatorImpl","sourcecode":"shortObject == null"},"failures":[8,9,10,11],"tindex":"d7939169-2ecb-11e6-9fdc-cb8ca73d66e0","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:501","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 == null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"shortObject":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"d793b87a-2ecb-11e6-9fdc-afc552b17178","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"d793b87b-2ecb-11e6-9fdc-9f28d84958dd","method":{"position":"org.apache.commons.collections4.IteratorUtils:840","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.PushbackIterator.pushbackIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:153","type":"CtBinaryOperatorImpl","sourcecode":"index > size"},"failures":[1244],"tindex":"d793b87c-2ecb-11e6-9fdc-cbe05736b9b5","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:143","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<E> subList(final int fromIndex, final int toIndex) {\n    if (toIndex > fromIndex) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = decorated().subList(fromIndex, toIndex);\n            return new org.apache.commons.collections4.list.UnmodifiableList<E>(sub);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"fromIndex","index":"toIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[1245],"tindex":"d793b87d-2ecb-11e6-9fdc-115daa818fd7","method":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:46","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsExceptionPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsExceptionPredicate<T>(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:924","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"d793df8e-2ecb-11e6-9fdc-d9eaa0878755","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(index)) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:255","type":"CtUnaryOperatorImpl","sourcecode":"!contains"},"failures":[1246,507,1247,1248,1249,499,1250,500,747,1251,1252,502,1253,503,504,505,1254,1255,1256,506,508,509,510,511,513,512,514,1257,1258,515,516,517,518,519,1259,520,19,521,522,1260,1261,1262,1263,523,1264,1265,1266,524,525,526,527,528,1267,1268,1269,1270,1271,1272,749,750,1273,1274,529,1275,1276,530,531,532,533,1277,1278,1279,1280,751,534,752,535,753,754,1281,755,536,20,537,1282,756,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,757,758,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,759,1316,760,1317,761,762,1318,763,764,21,1319,1320,765,1321,1322,1323,1324,1325,1326],"tindex":"d793df8f-2ecb-11e6-9fdc-f124e1cd8a4c","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:536","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.list.AbstractLinkedList.Node<E> getNode(final int index, final boolean endMarkerAllowed) throws java.lang.IndexOutOfBoundsException {\n    if (!endMarkerAllowed) {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") less than zero.\"));\n            } \n            if ((!endMarkerAllowed) && (index == (int))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") is the size of the list.\"));\n            } \n            if (index > (int)) {\n                throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn't get the node: \" + \"index (\") + index) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n            } \n            org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            if (index < ((int) / 2)) {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            } else {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            }\n            return node;\n        }\n    } else {\n        throw new java.lang.IndexOutOfBoundsException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"contains":"endMarkerAllowed"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[1327,1328],"tindex":"d79406a0-2ecb-11e6-9fdc-f379a0477f1c","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Queue<E> java.util.Queue<E> = ((java.util.Queue<E>)(queue));\n                return tmpQueue;\n            } \n            return new org.apache.commons.collections4.queue.UnmodifiableQueue<E>(queue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[1158],"tindex":"d79406a1-2ecb-11e6-9fdc-57d05ba3cae4","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:547","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final int index) {\n    if (index == (-1)) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.remove(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"d7942db2-2ecb-11e6-9fdc-77ee8eae22e9","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}