{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":209,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":211,"org.apache.commons.collections4.bag.CollectionBagTest.testCanonicalEmptyCollectionExists":432,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":461,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectHashCodeEqualsSelfHashCode":328,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":73,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":469,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":715,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":750,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":676,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":158,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToString":310,"org.apache.commons.collections4.CollectionUtilsTest.getNegative":330,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":611,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":448,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":127,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":251,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":421,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":769,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":175,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":176,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":177,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":566,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":206,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRetainAll":672,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":369,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":427,"org.apache.commons.collections4.CollectionUtilsTest.get":332,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":536,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":41,"org.apache.commons.collections4.map.Flat3MapTest.testObjectEqualsSelf":650,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":1,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":260,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":61,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":507,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":569,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSimpleSerialization":280,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":153,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":344,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":14,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":553,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":392,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":123,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":360,"org.apache.commons.collections4.CollectionUtilsTest.select":165,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":535,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":752,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":25,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":762,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":398,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":638,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionSize":664,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":299,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":223,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":188,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":598,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIsEmpty":669,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":400,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":413,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":617,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":343,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":491,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":733,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":770,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":437,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":470,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":11,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":240,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":720,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToString":43,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":101,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":296,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":423,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveChangesMap":587,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":405,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":640,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":56,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":500,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":18,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":273,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":265,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":459,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":110,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":527,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":713,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":771,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":372,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray2":308,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":72,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":137,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":690,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClear":147,"org.apache.commons.collections4.trie.PatriciaTrieTest.testLastKey":656,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":294,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":714,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":74,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":584,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":420,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":4,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":17,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":626,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":703,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":3,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":145,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":109,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionSize":42,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":157,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":476,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":347,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":739,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":734,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":376,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":365,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":522,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":555,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":387,"org.apache.commons.collections4.set.TransformedSetTest.testSetHashCode":661,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":2,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":29,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":711,"org.apache.commons.collections4.map.Flat3MapTest.testEqualsNull":649,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":426,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":580,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":449,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":532,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":320,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":181,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":312,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":99,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":349,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":646,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":131,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":554,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx1":161,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":193,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":759,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":503,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":557,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":222,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":8,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":383,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":735,"org.apache.commons.collections4.CollectionUtilsTest.get1":333,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":499,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":195,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":416,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":68,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":458,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":246,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":761,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":445,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":155,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":441,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":727,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":444,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":87,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":66,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":621,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":629,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":401,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":303,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":142,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":747,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":295,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":699,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":34,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":93,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":256,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":434,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":533,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":594,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":741,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectEqualsSelf":278,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":221,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":186,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":744,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":291,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":534,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":511,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":185,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":630,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":52,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":787,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":97,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":697,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":214,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":385,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":732,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":354,"org.apache.commons.collections4.set.CompositeSetTest.testSimpleSerialization":540,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":202,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIteratorRemove":44,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":484,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":497,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":530,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":379,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":245,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":117,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":170,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsSelfHashCode":390,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":772,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":98,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":652,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":460,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":90,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":33,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":85,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":82,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":62,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":377,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":776,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":358,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":255,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":466,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":707,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":783,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":723,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsSelfHashCode":435,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":454,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":244,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":615,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":84,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":549,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":719,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":19,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":504,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":262,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":201,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":591,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":698,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":753,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":575,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSerializeDeserializeThenCompare":283,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":702,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":184,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":411,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":642,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":521,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":130,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":524,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":120,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":595,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":100,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":253,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":288,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":134,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorIsSerializable":277,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":361,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":526,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":645,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":111,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":382,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":91,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":399,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":565,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":370,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":436,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":439,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":538,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":148,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":635,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":0,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":755,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":307,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":298,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":388,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":371,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCanonicalFullCollectionExists":323,"org.apache.commons.collections4.list.TreeListTest.testBug35258":348,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":381,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":389,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":166,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":738,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIteratorRemove":311,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":412,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":593,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":218,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":438,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":187,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":559,"org.apache.commons.collections4.set.TransformedSetTest.testCanonicalFullCollectionExists":679,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":782,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray2":663,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":620,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":258,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":668,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":205,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":440,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":238,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionSize":309,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":368,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":190,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":304,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":542,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":560,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":431,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":293,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testDecorate":249,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":685,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":31,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":603,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":767,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":414,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":498,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":261,"org.apache.commons.collections4.set.TransformedSetTest.testSetEquals":660,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":136,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":393,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":271,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":270,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":269,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":162,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":272,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":133,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":695,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":159,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":331,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":237,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":641,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":132,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsContract":281,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":135,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":224,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":374,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":671,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":284,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":599,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":406,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":501,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":138,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":179,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testSimpleSerialization":326,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":724,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRetainAll":316,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":625,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":276,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":32,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":422,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIsEmpty":314,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":528,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":274,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsContract":391,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":464,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":718,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":227,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":622,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":15,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":45,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIteratorRemove":666,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":766,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":619,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":208,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":541,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":415,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKeyInverse":144,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":545,"org.apache.commons.collections4.map.ListOrderedMap2Test.testNextKey":200,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":463,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":394,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":696,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":169,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":128,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":582,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":589,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":756,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":628,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":228,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":631,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":493,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":290,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":53,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":508,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToString":80,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":178,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":607,"org.apache.commons.collections4.set.TransformedSetTest.testSimpleSerialization":682,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":378,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":487,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":688,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectEqualsSelf":322,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":745,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":172,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":748,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":51,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":636,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":694,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":749,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":637,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":775,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":129,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":573,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":531,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":225,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":313,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":583,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":736,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":22,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":446,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":119,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":78,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":780,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":585,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIsEmpty":47,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":773,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":116,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":356,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":26,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":424,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":556,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":350,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":139,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":590,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":46,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":606,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":608,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":577,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":108,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":558,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":36,"org.apache.commons.collections4.set.TransformedSetTest.testSerializeDeserializeThenCompare":675,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":567,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":722,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":95,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":180,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":302,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":673,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":467,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalFullCollectionExists":537,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":506,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":786,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":700,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":742,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":478,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":103,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":285,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":495,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":692,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":247,"org.apache.commons.collections4.bag.CollectionBagTest.testSimpleSerialization":433,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":340,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":7,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":785,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":403,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":740,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":28,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":496,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":716,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":124,"org.apache.commons.collections4.list.UnmodifiableListTest.testDecorateFactory":544,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":192,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":525,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":173,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":471,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":623,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":407,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":662,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEmptyListSort":275,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":728,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":505,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":112,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalEmptyCollectionExists":539,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":515,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":210,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":483,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":604,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":156,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":301,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":37,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":264,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":644,"org.apache.commons.collections4.set.TransformedSetTest.testObjectHashCodeEqualsSelfHashCode":684,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":404,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":243,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":616,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":730,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":386,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":634,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":207,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":122,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":517,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":731,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":305,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":529,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":561,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":88,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":239,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":287,"org.apache.commons.collections4.list.TreeListTest.testRemove":352,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRemoveChangesMap":612,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemove":318,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":152,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":419,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":199,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testSerializeDeserializeThenCompare":319,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":380,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":362,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":259,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsSelfHashCode":282,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":86,"org.apache.commons.collections4.set.PredicatedSetTest.testSetHashCode":39,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":363,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":357,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":725,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":710,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":75,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":543,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":384,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":220,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCanonicalEmptyCollectionExists":325,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":92,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":754,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":488,"org.apache.commons.collections4.bag.CollectionBagTest.testCanonicalFullCollectionExists":430,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":627,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":647,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":230,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":774,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":586,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":50,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":5,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":213,"org.apache.commons.collections4.list.TreeListTest.testListEquals":359,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":474,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":297,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":468,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":618,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":610,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":472,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":473,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":12,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":402,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":183,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":24,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":494,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":442,"org.apache.commons.collections4.map.Flat3MapTest.testObjectHashCodeEqualsContract":651,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":102,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":355,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":451,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":171,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":149,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":576,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":686,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":65,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":286,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":336,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":550,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":486,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":167,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":212,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":737,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":204,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":146,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":154,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":219,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testEqualsNull":324,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":292,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":20,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":248,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectEqualsSelf":429,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionClear":670,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":547,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":194,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":76,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":563,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":114,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":562,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":477,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":351,"org.apache.commons.collections4.set.TransformedSetTest.testObjectHashCodeEqualsContract":683,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":633,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":465,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":54,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":60,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":520,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":345,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":760,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":777,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":16,"org.apache.commons.collections4.set.TransformedSetTest.testEqualsNull":680,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":721,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":778,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":667,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":513,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":107,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":709,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":596,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":397,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":198,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":13,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":232,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":233,"org.apache.commons.collections4.set.TransformedSetTest.testObjectEqualsSelf":678,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":395,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":231,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testLastKey":654,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":252,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":751,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":632,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":229,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":512,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":337,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":353,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":624,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":69,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":509,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":614,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":784,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":35,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":758,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":164,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":150,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":564,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":485,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":89,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":701,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":516,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":409,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":410,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":126,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":168,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":779,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":113,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":708,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":27,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":572,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectHashCodeEqualsContract":327,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectEqualsSelf":712,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":9,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":452,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":659,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":105,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":143,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":743,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":418,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":648,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":10,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":64,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":375,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":489,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":600,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":140,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":160,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":341,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClear":118,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":364,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":197,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":289,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":335,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":456,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":689,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":653,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionClear":315,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":321,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":339,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":329,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":443,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":338,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":106,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testEqualsNull":163,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToString":665,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":455,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":125,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":55,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":643,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":21,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":250,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":263,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":578,"org.apache.commons.collections4.set.CompositeSetTest.testContains":514,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":63,"org.apache.commons.collections4.CollectionUtilsTest.isFull":657,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":781,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":367,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":765,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":57,"org.apache.commons.collections4.ListUtilsTest.testEmptyIfNull":570,"org.apache.commons.collections4.CollectionUtilsTest.getFromObjectArray":334,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":568,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":226,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":279,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":691,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionClear":48,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":552,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":523,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":655,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":408,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":115,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":704,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":346,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":717,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":236,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":151,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":453,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":450,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":38,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":482,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":490,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":94,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":141,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":241,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":174,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":234,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":235,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":182,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":257,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":574,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":551,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":462,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":217,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":215,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":597,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":546,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":196,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":479,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":481,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":480,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":203,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":757,"org.apache.commons.collections4.set.TransformedSetTest.testCanonicalEmptyCollectionExists":681,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":613,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":40,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":216,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":317,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":447,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":581,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":674,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":417,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":300,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":588,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":242,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":693,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":687,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":191,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":492,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":677,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":601,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":609,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":254,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":602,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":266,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":267,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":306,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":268,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":510,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":571,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":579,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":658,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":705,"org.apache.commons.collections4.list.PredicatedListTest.testFullListSerialization":67,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":768,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":189,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":70,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":49,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":457,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":764,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":548,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":706,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":639,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":77,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionSize":79,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":366,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesRemoveChangesMap":592,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":475,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":96,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":518,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":519,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":83,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":104,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":342,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":81,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":428,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":502,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":425,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":121,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":746,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":729,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":373,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":396,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":6,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":59,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":605,"org.apache.commons.collections4.map.HashedMapTest.testObjectEqualsSelf":726,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":763},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[0,1],"tindex":"13195e0f-2eb0-11e6-b85b-e7e4ad0caee2","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93],"tindex":"131a2160-2eb0-11e6-b85b-972001d73fbd","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            for (final E E : coll) {\n                validate(item);\n            }\n            return decorated().addAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:151","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160],"tindex":"131a4871-2eb0-11e6-b85b-05a16a47c0aa","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        {\n            return new org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K>(normalMap , reverseMap , inverseMap);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[161],"tindex":"131a9692-2eb0-11e6-b85b-1b40372e2bc2","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:53","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (methodName == null) {\n                        throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n                    } \n                    return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[162],"tindex":"131abda3-2eb0-11e6-b85b-d50f2fe0409c","method":{"position":"org.apache.commons.collections4.CollectionUtils:705","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (collection != null) && (closure != null) ? org.apache.commons.collections4.CollectionUtils.forAllButLastDo(collection.iterator(), closure) : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[],"tindex":"131ae4b4-2eb0-11e6-b85b-2dcdcedd5a79","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1468","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = size();\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(o);\n            return size != (size());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"131b0bc5-2eb0-11e6-b85b-5ba3aea110cb","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:739","type":"CtMethodImpl","sourcecode":"protected V entryValue(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[163],"tindex":"131b0bc6-2eb0-11e6-b85b-8b87c33a3406","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:279","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.FixedOrderComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.FixedOrderComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(object));\n                return null == (java.util.Map<T, java.lang.Integer>) ? null == (comp.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(comp.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (comp.int))) && ((boolean) == (comp.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[],"tindex":"131bcf17-2eb0-11e6-b85b-d90b27ef3b39","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:351","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.list.AbstractLinkedList.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.List) == false) {\n                return false;\n            } \n            final java.util.List<?> java.util.List<?> = ((java.util.List<?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            final java.util.ListIterator<?> java.util.ListIterator<?> = listIterator();\n            final java.util.ListIterator<?> java.util.ListIterator<?> = other.listIterator();\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                final java.lang.Object java.lang.Object = it1.next();\n                final java.lang.Object java.lang.Object = it2.next();\n                if (!(o1 == null ? o2 == null : o1.equals(o2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"131c1d38-2eb0-11e6-b85b-f5a0edb9c5dd","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:165","type":"CtMethodImpl","sourcecode":"public void add(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"add() method is not supported\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[164],"tindex":"131c1d39-2eb0-11e6-b85b-ddcf3c2b62a7","method":{"position":"org.apache.commons.collections4.PredicateUtils:535","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(transformer, predicate);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"131c1d3a-2eb0-11e6-b85b-0b0d3575cf60","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[],"tindex":"131c444b-2eb0-11e6-b85b-bf0202f570f6","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:616","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntrySet().contains(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[165],"tindex":"131c444c-2eb0-11e6-b85b-f5e3e3c6aa2f","method":{"position":"org.apache.commons.collections4.CollectionUtils:898","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> select(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection != null) && (predicate != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:93","type":"CtBinaryOperatorImpl","sourcecode":"end < start"},"failures":[166],"tindex":"131c6b5d-2eb0-11e6-b85b-53a3117a0063","method":{"position":"org.apache.commons.collections4.IteratorUtils:316","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end) {\n    if (start < start) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start , end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start","end":"start"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"131c6b5e-2eb0-11e6-b85b-6bcccb75d170","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:207","type":"CtMethodImpl","sourcecode":"public void setReverseSort(final int index) {\n    if (index < 0) {\n        {\n            checkLocked();\n            java.util.BitSet.set(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[167],"tindex":"131c6b5f-2eb0-11e6-b85b-33d0cc027ce5","method":{"position":"org.apache.commons.collections4.PredicateUtils:402","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> neitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate1 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(predicate1, predicate2);\n            return nonePredicate;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[168,169,170,171],"tindex":"131c9270-2eb0-11e6-b85b-a935f1e02694","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:657","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key4 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            if (key5 != null) {\n                h ^= key5.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key4"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:407","type":"CtBinaryOperatorImpl","sourcecode":"(values) == null"},"failures":[172],"tindex":"131c9271-2eb0-11e6-b85b-f163a1c54bed","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:378","type":"CtMethodImpl","sourcecode":"public boolean putAll(final K key, final java.util.Collection<V> values) {\n    if (values == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((values == null) || ((values.size()) == 0)) {\n                return false;\n            } \n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(values.size());\n                coll.addAll(values);\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.addAll(values);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"values"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"131cb982-2eb0-11e6-b85b-d9d762ff9221","method":{"position":"org.apache.commons.collections4.map.SingletonMap:265","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            switch (map.size()) {\n                case 0 :\n                    return ;\n                case 1 :\n                    final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> = map.entrySet().iterator().next();\n                    put(entry.getKey(), entry.getValue());\n                    return ;\n                default :\n                    throw new java.lang.IllegalArgumentException(\"The map size must be 0 or 1\");\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"131ce093-2eb0-11e6-b85b-e1fd16b087d3","method":{"position":"org.apache.commons.collections4.CollectionUtils:1176","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.util.Iterator<T> iterator, final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = index;\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(i);\n            while (iterator.hasNext()) {\n                i--;\n                if (i == (-1)) {\n                    return iterator.next();\n                } \n                iterator.next();\n            }\n            throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[173],"tindex":"131dcaf4-2eb0-11e6-b85b-49f5547a5a70","method":{"position":"org.apache.commons.collections4.functors.MapTransformer:49","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            return new org.apache.commons.collections4.functors.MapTransformer<I, O>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:534","type":"CtUnaryOperatorImpl","sourcecode":"!(h.isInternalNode())"},"failures":[174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194],"tindex":"131df205-2eb0-11e6-b85b-8d06dbaab481","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:499","type":"CtMethodImpl","sourcecode":"private void removeExternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isInternalNode())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isExternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an external Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            } else {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            }\n            if ((child.int) > (parent.int)) {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            } else {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[195],"tindex":"131e1916-2eb0-11e6-b85b-e1f0392f0277","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:73","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformedQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            final org.apache.commons.collections4.queue.TransformedQueue<E> org.apache.commons.collections4.queue.TransformedQueue<E> = new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n            if ((queue.size()) > 0) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(queue.toArray()));\n                queue.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[196],"tindex":"131e4027-2eb0-11e6-b85b-85f43361d0c4","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[197,198,199,200],"tindex":"131e4028-2eb0-11e6-b85b-efc601dd2517","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:193","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.util.List<K>.indexOf(key);\n            if ((index >= 0) && (index < ((size()) - 1))) {\n                return java.util.List<K>.get((index + 1));\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[201,202,203,204,205,206],"tindex":"131e6739-2eb0-11e6-b85b-0df0153c44b6","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"131e673a-2eb0-11e6-b85b-59809930f8a9","method":{"position":"org.apache.commons.collections4.PredicateUtils:535","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(transformer, predicate);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"cursor == null"},"failures":[],"tindex":"131e8e4b-2eb0-11e6-b85b-81cbc0b52006","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:288","type":"CtMethodImpl","sourcecode":"protected void unregisterCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = ref.get();\n                if (cur == null) {\n                    it.remove();\n                } else if (cur == cursor) {\n                    ref.clear();\n                    it.remove();\n                    break;\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[207],"tindex":"131eb55c-2eb0-11e6-b85b-459ccdafdab7","method":{"position":"org.apache.commons.collections4.map.LinkedMap:183","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        {\n            return remove(get(index));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[208],"tindex":"131edc6d-2eb0-11e6-b85b-01c8d86a3327","method":{"position":"org.apache.commons.collections4.MapUtils:1217","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.collections4.MapUtils.isEmpty(map));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[209],"tindex":"131edc6e-2eb0-11e6-b85b-596f2345433c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            if ((node != null) && (node.getKey().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248],"tindex":"131f037f-2eb0-11e6-b85b-7b23d28b7371","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:153","type":"CtMethodImpl","sourcecode":"private int getHash(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return 0;\n            } \n            int int = key.hashCode();\n            hash += ~(hash << 15);\n            hash ^= hash >>> 10;\n            hash += hash << 3;\n            hash ^= hash >>> 6;\n            hash += ~(hash << 11);\n            hash ^= hash >>> 16;\n            hash %= org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int;\n            return hash < 0 ? hash * (-1) : hash;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[249,250],"tindex":"131f51a0-2eb0-11e6-b85b-9bafb3b61b58","method":{"position":"org.apache.commons.collections4.bag.PredicatedSortedBag:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedSortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedSortedBag<E>(bag , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,186,266,267,268,269,270,271,187,188,190,192,193,194],"tindex":"131f51a1-2eb0-11e6-b85b-6d2bdc2046f6","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:610","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, null);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"131f78b2-2eb0-11e6-b85b-6d09fcfee005","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:713","type":"CtMethodImpl","sourcecode":"protected int entryHashCode(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:153","type":"CtBinaryOperatorImpl","sourcecode":"reverse == true"},"failures":[272,273,274,275,276,277,278,279,280,281,282,283],"tindex":"131f9fc3-2eb0-11e6-b85b-d79ea5d811b2","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:149","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (comparator == null) {\n        {\n            if (reverse == true) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    checkLocked();\n                    java.util.List<java.util.Comparator<E>>.add(comparator);\n                    if (reverse == true) {\n                        java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n                    } \n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reverse":"reverse"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[162,284],"tindex":"131fc6d4-2eb0-11e6-b85b-d10d0be58926","method":{"position":"org.apache.commons.collections4.CollectionUtils:722","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    final T T = iterator.next();\n                    if (iterator.hasNext()) {\n                        closure.execute(element);\n                    } else {\n                        return element;\n                    }\n                }\n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:49","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"131fede5-2eb0-11e6-b85b-8148b792e8eb","method":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:69","type":"CtMethodImpl","sourcecode":"private static <E>java.util.Iterator<E> createTypesafeIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new java.util.Iterator<E>() {\n                        public boolean hasNext() {\n                            return iterator.hasNext();\n                        }\n\n                        public E next() {\n                            return iterator.next();\n                        }\n\n                        public void remove() {\n                            iterator.remove();\n                        }\n                    };\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"132014f6-2eb0-11e6-b85b-473ba9a6f47e","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:90","type":"CtMethodImpl","sourcecode":"public static <J, K, U, V>org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super J, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super U, ? extends V> valueTransformer) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>(map , keyTransformer , valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[285,286,287,288,289],"tindex":"132014f7-2eb0-11e6-b85b-3fe52f270213","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:272","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<E>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"132014f8-2eb0-11e6-b85b-a9c942023d61","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:167","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator) throws java.lang.IndexOutOfBoundsException {\n    if (index > 0) {\n        {\n            setComparator(index, comparator, false);\n        }\n    } else {\n        throw new java.lang.IndexOutOfBoundsException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[],"tindex":"132014f9-2eb0-11e6-b85b-352ca1a234ab","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:177","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[251,252,290,291,253,292,254,255,256,257,293,294,258,259,295,260,261,296,262,263,264,297,298,265,186,299,300,301,266,267,268,269,270,271,187,302,303,188,189,304,305,190,191,192,193,194],"tindex":"13203c0a-2eb0-11e6-b85b-a5aecc33706c","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:57","type":"CtMethodImpl","sourcecode":"static boolean isOutOfBoundsIndex(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)) {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[306,92,307,308,309,310,311,312,313,314,315,93,316,317,318,319,320,321,322,323,324,325,326,327,328,329],"tindex":"13203c0b-2eb0-11e6-b85b-4f8e2f46fe11","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.collection.PredicatedCollection<T> predicatedCollection(final java.util.Collection<T> coll, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.collection.PredicatedCollection<T>(coll , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"1320631c-2eb0-11e6-b85b-e1cd5abe8f18","method":{"position":"org.apache.commons.collections4.SplitMapUtils:59","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[330,331,332,333,334,335,336],"tindex":"1320631d-2eb0-11e6-b85b-6db8da3d872b","method":{"position":"org.apache.commons.collections4.CollectionUtils:1250","type":"CtMethodImpl","sourcecode":"public static java.lang.Object get(final java.lang.Object object, final int index) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            int int = index;\n            if (i < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + i));\n            } \n            if (object instanceof java.util.Map<?, ?>) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(object));\n                final java.util.Iterator<?> java.util.Iterator<?> = map.entrySet().iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.lang.Object[]) {\n                return ((java.lang.Object[])(object))[i];\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.next();\n                    } \n                    it.next();\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object instanceof java.util.Collection<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(object)).iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.nextElement();\n                    } else {\n                        it.nextElement();\n                    }\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object == null) {\n                throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n            } else {\n                try {\n                    return java.lang.reflect.Array.get(object, i);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[337,338,339,340,341],"tindex":"1320b13e-2eb0-11e6-b85b-53abbc58ae47","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:71","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.SetUniqueList<E> setUniqueList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (list.isEmpty()) {\n                return new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(list);\n            list.clear();\n            final org.apache.commons.collections4.list.SetUniqueList<E> org.apache.commons.collections4.list.SetUniqueList<E> = new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            sl.addAll(temp);\n            return sl;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:99","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[342],"tindex":"1320b13f-2eb0-11e6-b85b-530e4c547864","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:95","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.MultiKeyMap<K, V> multiKeyMap(final org.apache.commons.collections4.map.AbstractHashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> map) {\n    if ((map.size()) > 0) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            if ((map.size()) > 0) {\n                throw new java.lang.IllegalArgumentException(\"Map must be empty\");\n            } \n            return new org.apache.commons.collections4.map.MultiKeyMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"1320d850-2eb0-11e6-b85b-f5864b82c03b","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:196","type":"CtMethodImpl","sourcecode":"public void setForwardSort(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.BitSet.clear(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[343],"tindex":"1320d851-2eb0-11e6-b85b-87dc6adaa11f","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1243","type":"CtMethodImpl","sourcecode":"private static void checkKeyAndValue(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[19,29],"tindex":"1320d852-2eb0-11e6-b85b-773fef1b4d36","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:105","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[],"tindex":"1320d853-2eb0-11e6-b85b-cb5420671491","method":{"position":"org.apache.commons.collections4.map.TransformedMap:76","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[344],"tindex":"1320ff64-2eb0-11e6-b85b-e9edecddf673","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:224","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            final boolean boolean = super.retainAll(coll);\n            if (changed) {\n                reindex();\n            } \n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391],"tindex":"13212675-2eb0-11e6-b85b-478ee70dd709","method":{"position":"org.apache.commons.collections4.list.TreeList:286","type":"CtMethodImpl","sourcecode":"private void checkInterval(final int index, final int startIndex, final int endIndex) {\n    if ((endIndex < startIndex) || (index > endIndex)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                {\n                    if ((index < startIndex) || (index > endIndex)) {\n                        throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + index) + \", size=\") + (size())));\n                    } \n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"13214d86-2eb0-11e6-b85b-5b70375ac73e","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl","sourcecode":"(coll1.size()) < (coll2.size())"},"failures":[392],"tindex":"13214d87-2eb0-11e6-b85b-db5e1deedfd6","method":{"position":"org.apache.commons.collections4.CollectionUtils:366","type":"CtMethodImpl","sourcecode":"public static boolean containsAll(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if ((coll2.size()) < (coll1.size())) {\n        {\n            if (coll2.isEmpty()) {\n                return true;\n            } else {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll1.iterator();\n                final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (elementsAlreadySeen.contains(nextElement)) {\n                        continue;\n                    } \n                    boolean boolean = false;\n                    while (it.hasNext()) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        elementsAlreadySeen.add(p);\n                        if (nextElement == null ? p == null : nextElement.equals(p)) {\n                            foundCurrentElement = true;\n                            break;\n                        } \n                    }\n                    if (foundCurrentElement) {\n                        continue;\n                    } else {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll1","coll1":"coll2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:916","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"13214d88-2eb0-11e6-b85b-69d347cacf88","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:71","type":"CtMethodImpl","sourcecode":"static boolean isNullBitKey(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[393,394,395],"tindex":"13217499-2eb0-11e6-b85b-53d87c33d914","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:130","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            java.util.Map<E, ? super V>.remove(obj);\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[],"tindex":"1321749a-2eb0-11e6-b85b-f907b53df8d6","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:53","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (methodName == null) {\n                        throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n                    } \n                    return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"1321749b-2eb0-11e6-b85b-01d6ce06a94c","method":{"position":"org.apache.commons.collections4.IteratorUtils:869","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration, final java.util.Collection<? super E> removeCollection) {\n    if (enumeration == null) {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            if (removeCollection == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration , removeCollection);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"tindex":"13219bac-2eb0-11e6-b85b-976c63de59cf","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.CollectionBag<E>(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,287,289,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,339,543,544],"tindex":"13219bad-2eb0-11e6-b85b-0b38c3a722bc","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.List<E> java.util.List<E> = ((java.util.List<E>)(list));\n                return tmpList;\n            } \n            return new org.apache.commons.collections4.list.UnmodifiableList<E>(list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[545,94,95,546,547,548,549,550,551],"tindex":"1321c2be-2eb0-11e6-b85b-67af7967ad34","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().getKey(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"1322ad1f-2eb0-11e6-b85b-a97ffef1d822","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:149","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (comparator == null) {\n        {\n            if (reverse == true) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    checkLocked();\n                    java.util.List<java.util.Comparator<E>>.add(comparator);\n                    if (reverse == true) {\n                        java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n                    } \n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[552,553,554,555,556,557,558,559,560],"tindex":"1322d330-2eb0-11e6-b85b-cd383adc35be","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:200","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<V, K>.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"13236f71-2eb0-11e6-b85b-ed5f43875124","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:738","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((multi.size()) >= 2) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"13239682-2eb0-11e6-b85b-bd5766f2a1a6","method":{"position":"org.apache.commons.collections4.map.LinkedMap:263","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"13239683-2eb0-11e6-b85b-2b538a294ca9","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:378","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object k) {\n    if (k == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (k == null) {\n                return false;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SplitMapUtils:238","type":"CtBinaryOperatorImpl","sourcecode":"put instanceof java.util.Map"},"failures":[561],"tindex":"1323bd94-2eb0-11e6-b85b-83474f97b5e2","method":{"position":"org.apache.commons.collections4.SplitMapUtils:234","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> writableMap(final org.apache.commons.collections4.Put<K, V> put) {\n    if (put instanceof java.util.Map) {\n        {\n            if (put == null) {\n                throw new java.lang.IllegalArgumentException(\"Put must not be null\");\n            } \n            if (put instanceof java.util.Map) {\n                return ((java.util.Map<K, V>)(put));\n            } \n            return new org.apache.commons.collections4.SplitMapUtils.WrappedPut<K, V>(put);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"put":"put"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[174],"tindex":"1323bd95-2eb0-11e6-b85b-8d9c72be6302","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1720","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"1323e4a6-2eb0-11e6-b85b-51738d6a8a5d","method":{"position":"org.apache.commons.collections4.CollectionUtils:251","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> intersection(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((b == null) || (a == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, helper.min(obj));\n            }\n            return helper.list();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[562,563,564,565,476,479,480,481,484,485,488,489,496,500,502],"tindex":"1323e4a7-2eb0-11e6-b85b-5ba75d874ecd","method":{"position":"org.apache.commons.collections4.map.CompositeMap:198","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"13240bb8-2eb0-11e6-b85b-c10684ab03d1","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:119","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            final java.util.Set<E> java.util.Set<E> = new java.util.HashSet<E>(list);\n            list.retainAll(set);\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:764","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"1324a7f9-2eb0-11e6-b85b-f9e94af1e3dc","method":{"position":"org.apache.commons.collections4.ListUtils:386","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> synchronizedList(final java.util.List<E> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[475,483,502,504],"tindex":"1324a7fa-2eb0-11e6-b85b-3d32018bff08","method":{"position":"org.apache.commons.collections4.map.CompositeMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsValue(value)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:287","type":"CtBinaryOperatorImpl","sourcecode":"(index < startIndex) || (index > endIndex)"},"failures":[],"tindex":"1324a7fb-2eb0-11e6-b85b-2d199aabb182","method":{"position":"org.apache.commons.collections4.list.TreeList:286","type":"CtMethodImpl","sourcecode":"private void checkInterval(final int index, final int startIndex, final int endIndex) {\n    if ((endIndex < startIndex) || (index > endIndex)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                {\n                    if ((index < startIndex) || (index > endIndex)) {\n                        throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + index) + \", size=\") + (size())));\n                    } \n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex","endIndex":"endIndex","index":"endIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[],"tindex":"1324cf0c-2eb0-11e6-b85b-352d20ab78bf","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:120","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[566,567],"tindex":"1324cf0d-2eb0-11e6-b85b-d94a74b267ee","method":{"position":"org.apache.commons.collections4.list.GrowthList:121","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E element) {\n    if (index < 0) {\n        {\n            final int int = decorated().size();\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n            } \n            decorated().add(index, element);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[178,187],"tindex":"1324cf0e-2eb0-11e6-b85b-b3c116ae59bd","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1515","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<V> java.util.Iterator<V> = iterator() ; it.hasNext() ; ) {\n                final V V = it.next();\n                if (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(value, o)) {\n                    it.remove();\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[568,569],"tindex":"1324f61f-2eb0-11e6-b85b-b558b72a7bcb","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1511","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupValue(obj)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[570],"tindex":"1324f620-2eb0-11e6-b85b-4d659b851611","method":{"position":"org.apache.commons.collections4.ListUtils:61","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> emptyIfNull(final java.util.List<T> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return list == null ? java.util.Collections.<T>emptyList() : list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,560],"tindex":"1324f621-2eb0-11e6-b85b-a3918dff7278","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:85","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[619,620,553,621,622,623,624,625,626,627,557,628,629,630,631,632,633,634,206,635],"tindex":"13251d32-2eb0-11e6-b85b-fde31cbace48","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:146","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return java.util.Map<K, V>.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:59","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"13254443-2eb0-11e6-b85b-97c907bef976","method":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:69","type":"CtMethodImpl","sourcecode":"private static <E>java.util.Iterator<E> createTypesafeIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new java.util.Iterator<E>() {\n                        public boolean hasNext() {\n                            return iterator.hasNext();\n                        }\n\n                        public E next() {\n                            return iterator.next();\n                        }\n\n                        public void remove() {\n                            iterator.remove();\n                        }\n                    };\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652],"tindex":"13254444-2eb0-11e6-b85b-494e15c0264a","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            if (obj == (org.apache.commons.collections4.map.Flat3Map.this)) {\n                return true;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(obj);\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((int) != (other.size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                java.lang.Object java.lang.Object = null;\n                switch (int) {\n                    case 3 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 2 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 1 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                }\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[653],"tindex":"13256b55-2eb0-11e6-b85b-2bc2952cc944","method":{"position":"org.apache.commons.collections4.QueueUtils:93","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return org.apache.commons.collections4.queue.TransformedQueue.transformingQueue(queue, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[654,174,655,656,291,292],"tindex":"13259266-2eb0-11e6-b85b-b70d49f62857","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1162","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        {\n            if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                return null;\n            } \n            while ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (node.int)) {\n                node = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n            return node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1467","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[657],"tindex":"13259267-2eb0-11e6-b85b-a3cfa86143b8","method":{"position":"org.apache.commons.collections4.CollectionUtils:1466","type":"CtMethodImpl","sourcecode":"public static boolean isFull(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).isFull();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.isFull();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return false;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[404,425,444,459,658,28],"tindex":"1325b978-2eb0-11e6-b85b-3d296eb80602","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            return remove(object, 1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684],"tindex":"1325b979-2eb0-11e6-b85b-4fa2cde76935","method":{"position":"org.apache.commons.collections4.set.TransformedSet:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSet<E> transformingSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[],"tindex":"1325e08a-2eb0-11e6-b85b-534694413d1f","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:462","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.Node.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((K) == null ? (e2.getKey()) == null : K.equals(e2.getKey())) && ((V) == null ? (e2.getValue()) == null : V.equals(e2.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"1325e08b-2eb0-11e6-b85b-ffae67ce68f3","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:179","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.set(index, comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(index);\n            } else {\n                java.util.BitSet.clear(index);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"1326079c-2eb0-11e6-b85b-3fe081872c97","method":{"position":"org.apache.commons.collections4.CollectionUtils:326","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final org.apache.commons.collections4.Predicate<O> p) {\n    if ((a == null) || (b == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>();\n            final org.apache.commons.collections4.bag.HashBag<O> org.apache.commons.collections4.bag.HashBag<O> = new org.apache.commons.collections4.bag.HashBag<O>();\n            for (final O O : b) {\n                if (p.evaluate(element)) {\n                    bag.add(element);\n                } \n            }\n            for (final O O : a) {\n                if (!(bag.remove(element, 1))) {\n                    list.add(element);\n                } \n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:749","type":"CtBinaryOperatorImpl","sourcecode":"(collection != null) && (predicate != null)"},"failures":[685],"tindex":"1326079d-2eb0-11e6-b85b-a7f988c6eb05","method":{"position":"org.apache.commons.collections4.CollectionUtils:774","type":"CtMethodImpl","sourcecode":"public static <T>boolean filterInverse(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((collection != null) && (predicate != null)) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.filter(collection, (predicate == null ? null : org.apache.commons.collections4.PredicateUtils.notPredicate(predicate)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[686],"tindex":"1326079e-2eb0-11e6-b85b-3b28f1df5033","method":{"position":"org.apache.commons.collections4.ClosureUtils:145","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> doWhileClosure(final org.apache.commons.collections4.Closure<? super E> closure, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,648,638,639,641,642,644,645,646,647,770,771,772,773,774,775,776,777,778,779,780,781,782,783],"tindex":"13262eaf-2eb0-11e6-b85b-5d616e3e7e7b","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1309","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((map.size()) != (size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = mapIterator();\n            try {\n                while (it.hasNext()) {\n                    final java.lang.Object java.lang.Object = it.next();\n                    final java.lang.Object java.lang.Object = it.getValue();\n                    if (value == null) {\n                        if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n                            return false;\n                        } \n                    } else {\n                        if ((value.equals(map.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                }\n            } catch (final java.lang.ClassCastException ignored) {\n                return false;\n            } catch (final java.lang.NullPointerException ignored) {\n                return false;\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[784],"tindex":"132655c0-2eb0-11e6-b85b-879a26e0e53c","method":{"position":"org.apache.commons.collections4.CollectionUtils:494","type":"CtMethodImpl","sourcecode":"public static boolean isProperSubCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((b.size()) != (a.size())) {\n        {\n            return ((a.size()) < (b.size())) && (org.apache.commons.collections4.CollectionUtils.isSubCollection(a, b));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[785],"tindex":"132655c1-2eb0-11e6-b85b-6bc4e7e0af4c","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:254","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[786,787],"tindex":"132655c2-2eb0-11e6-b85b-a15dec2ea3ba","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:281","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return null;\n            } \n            purgeBeforeWrite();\n            return super.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}