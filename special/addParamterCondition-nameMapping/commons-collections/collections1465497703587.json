{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":62,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":166,"org.apache.commons.collections4.keyvalue.TiedMapEntryTest.testEqualsAndHashCode":248,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":143,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":255,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":63,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":116,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":190,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":239,"org.apache.commons.collections4.set.CompositeSetTest.testSimpleSerialization":163,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":228,"org.apache.commons.collections4.list.TreeListTest.testCollectionSize":242,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":7,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":51,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":181,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":136,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":71,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":153,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":233,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking":250,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":134,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":133,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":205,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":53,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":101,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":184,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":220,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":232,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":67,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":159,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":66,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicate":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":70,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":18,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":204,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":211,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":12,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":123,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":127,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":135,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":154,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":209,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":206,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":210,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":182,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":213,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":103,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":108,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":158,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":91,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":139,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":208,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":78,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":201,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":82,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":120,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":42,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":124,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":64,"org.apache.commons.collections4.list.TreeListTest.testFullListSerialization":229,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":144,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":188,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":40,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":147,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":9,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalFullCollectionExists":160,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":109,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":203,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":167,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":89,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":125,"org.apache.commons.collections4.SetUtilsTest.testHashCode":254,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":175,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":186,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":226,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":117,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":192,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":214,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":81,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":236,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":216,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":56,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":221,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":58,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":161,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":193,"org.apache.commons.collections4.list.TreeListTest.testSerializeDeserializeThenCompare":231,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":197,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":90,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":28,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":148,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":168,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":77,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":3,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":150,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":244,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":246,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":93,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":223,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":202,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":2,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":222,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":73,"org.apache.commons.collections4.set.CompositeSetTest.testContains":137,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalEmptyCollectionExists":162,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":138,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":218,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":14,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":106,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":104,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":180,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":32,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":98,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":79,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":235,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":121,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":245,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":86,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":240,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":112,"org.apache.commons.collections4.MapUtilsTest.testEmptyIfNull":0,"org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testEqualsAndHashCode":253,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":96,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":179,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":187,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":76,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":243,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":140,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":45,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":152,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":173,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":131,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":227,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":128,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":217,"org.apache.commons.collections4.list.TreeListTest.testFullListCompatibility":230,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":20,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":145,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":115,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":15,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":241,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":234,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":114,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":176,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":16,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":107,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":178,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":177,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":46,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":215,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":44,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":110,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":165,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":238,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":155,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":92,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":24,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":31,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":65,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":185,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains1":247,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":52,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":47,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":189,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":105,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":195,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":49,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":200,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":237,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":11,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalSet":249,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":38,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":37,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":36,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":34,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":75,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":196,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":207,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":60,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":102,"org.apache.commons.collections4.list.TreeListTest.testListEquals":212,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":171,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":252,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":87,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":130,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":80,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":43,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":169,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":170,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":59,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":111,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":191,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":225,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":122,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":118,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":219,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":41,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":198,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":251,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":88,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":183,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":54,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":95,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":151,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":74,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":129,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":172,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":126,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":141,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":142,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":85,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":84,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":13,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":156,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":97,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":50,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":199,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":224,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":29,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":132,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":94,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":8,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":164,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":157,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":83,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":119,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":174},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1086","type":"CtBinaryOperatorImpl","sourcecode":"it != null"},"failures":[],"tindex":"cff06924-2e71-11e6-8ad1-cfaabc2d0df2","method":{"position":"org.apache.commons.collections4.IteratorUtils:955","type":"CtMethodImpl","sourcecode":"public static java.lang.Object[] toArray(final java.util.Iterator<?> iterator) {\n    if (iterator != null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            final java.util.List<?> java.util.List<?> = org.apache.commons.collections4.IteratorUtils.toList(iterator, 100);\n            return list.toArray();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"it":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[0],"tindex":"cff12c75-2e71-11e6-8ad1-db035f69fe7b","method":{"position":"org.apache.commons.collections4.MapUtils:1191","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> emptyIfNull(final java.util.Map<K, V> map) {\n    if (map == null) {\n        {\n            return map == null ? java.util.Collections.<K, V>emptyMap() : map;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtBinaryOperatorImpl","sourcecode":"i < 0"},"failures":[1,2],"tindex":"cff15386-2e71-11e6-8ad1-e52f7c97c263","method":{"position":"org.apache.commons.collections4.list.PredicatedList:112","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    validate(object);\n                    decorated().add(index, object);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[3,4,5],"tindex":"cff15387-2e71-11e6-8ad1-9d795d444ee1","method":{"position":"org.apache.commons.collections4.functors.NotPredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NotPredicate<T>(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[],"tindex":"cff17a98-2e71-11e6-8ad1-f7da0ff4b8de","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:86","type":"CtMethodImpl","sourcecode":"public static <K, C>org.apache.commons.collections4.collection.IndexedCollection<K, C> nonUniqueIndexedCollection(final java.util.Collection<C> coll, final org.apache.commons.collections4.Transformer<C, K> keyTransformer) {\n    if (coll instanceof java.util.List<?>) {\n        {\n            return new org.apache.commons.collections4.collection.IndexedCollection<K, C>(coll , keyTransformer , org.apache.commons.collections4.map.MultiValueMap.<K, C>multiValueMap(new java.util.HashMap<K, java.util.Collection<C>>()) , false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"tindex":"cff1a1a9-2e71-11e6-8ad1-b97cebcb1c88","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:51","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lengthInBits(final java.lang.String key) {\n    if (key == null) {\n        {\n            return key != null ? (key.length()) * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int) : 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.IndexedCollection:119","type":"CtVariableReadImpl","sourcecode":"added"},"failures":[],"tindex":"cff1efca-2e71-11e6-8ad1-a7a92ad34660","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1802","type":"CtMethodImpl","sourcecode":"protected boolean inFromRange(final K key, final boolean forceInclusive) {\n    if (forceInclusive) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final K K = getFromKey();\n            final boolean boolean = isFromInclusive();\n            final int int = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\n                return ret >= 0;\n            } else {\n                return ret > 0;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"added":"forceInclusive"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:764","type":"CtBinaryOperatorImpl","sourcecode":"shortObject == null"},"failures":[52],"tindex":"cff216db-2e71-11e6-8ad1-e90a5e4a5f69","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"shortObject":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134],"tindex":"cff216dc-2e71-11e6-8ad1-bb50ab9fde8e","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:219","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n            for (final E E : coll) {\n                addNodeBefore(node, e);\n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"cff23ded-2e71-11e6-8ad1-5f989ccfbf21","method":{"position":"org.apache.commons.collections4.list.PredicatedList:112","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    validate(object);\n                    decorated().add(index, object);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtBinaryOperatorImpl","sourcecode":"(uniqueSet) == null"},"failures":[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207],"tindex":"cff264fe-2e71-11e6-8ad1-6fc55c03927a","method":{"position":"org.apache.commons.collections4.set.CompositeSet:343","type":"CtMethodImpl","sourcecode":"public synchronized void addComposited(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set);\n                if ((intersects.size()) > 0) {\n                    if ((org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n                    } \n                    getMutator().resolveCollision(org.apache.commons.collections4.set.CompositeSet.this, existingSet, set, intersects);\n                    if ((org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0) {\n                        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n                    } \n                } \n            }\n            java.util.List<java.util.Set<E>>.add(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"uniqueSet":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:341","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"cff28c0f-2e71-11e6-8ad1-ad9a4b44d2cd","method":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:201","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        {\n            super.removeNode(node);\n            addNodeToCache(node);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245],"tindex":"cff2b320-2e71-11e6-8ad1-ff4047ed7b48","method":{"position":"org.apache.commons.collections4.list.TreeList:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> c) {\n    if (c == null) {\n        {\n            if (c.isEmpty()) {\n                return false;\n            } \n            int += c.size();\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(c);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = (org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null ? cTree : org.apache.commons.collections4.list.TreeList.AVLNode<E>.addAll(cTree, int);\n            int += c.size();\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"c"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[246],"tindex":"cff2b321-2e71-11e6-8ad1-a3dc4b4d2058","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[],"tindex":"cff2da32-2e71-11e6-8ad1-ab29d221171a","method":{"position":"org.apache.commons.collections4.map.LRUMap:175","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            moveToMRU(entry);\n            return entry.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[247,248],"tindex":"cff2da33-2e71-11e6-8ad1-194891dce481","method":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map<?, ?>) {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.TiedMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = getValue();\n            return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:96","type":"CtBinaryOperatorImpl","sourcecode":"size == 0"},"failures":[249,250,251],"tindex":"cff30144-2e71-11e6-8ad1-9fcc67b5a359","method":{"position":"org.apache.commons.collections4.list.PredicatedList:132","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validate(object);\n            return decorated().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"cff30145-2e71-11e6-8ad1-0ba4dfb67b14","method":{"position":"org.apache.commons.collections4.ComparatorUtils:119","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Comparator<E> reversedComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.comparators.ReverseComparator<E>(comparator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"cff32856-2e71-11e6-8ad1-df1bb318a994","method":{"position":"org.apache.commons.collections4.IteratorUtils:588","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Collection<java.util.Iterator<? extends E>> iterators) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[252],"tindex":"cff32857-2e71-11e6-8ad1-67d65798baee","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:610","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[],"tindex":"cff32858-2e71-11e6-8ad1-9d92321945e3","method":{"position":"org.apache.commons.collections4.MapUtils:1311","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map != null) {\n        {\n            return org.apache.commons.collections4.map.TransformedMap.transformingMap(map, keyTransformer, valueTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:186","type":"CtBinaryOperatorImpl","sourcecode":"answer != null"},"failures":[253],"tindex":"cff34f69-2e71-11e6-8ad1-c5a4eccec53c","method":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.DefaultKeyValue.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> = ((org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.ReplacementsFinder:90","type":"CtBinaryOperatorImpl","sourcecode":"(pendingDeletions.isEmpty()) && (pendingInsertions.isEmpty())"},"failures":[254,255],"tindex":"cff34f6a-2e71-11e6-8ad1-e9371012331a","method":{"position":"org.apache.commons.collections4.SetUtils:140","type":"CtMethodImpl","sourcecode":"public static <T>int hashCodeForSet(final java.util.Collection<T> set) {\n    if ((set.isEmpty()) && (set.isEmpty())) {\n        {\n            if (set == null) {\n                return 0;\n            } \n            int int = 0;\n            for (final T T : set) {\n                if (obj != null) {\n                    hashCode += obj.hashCode();\n                } \n            }\n            return hashCode;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingDeletions":"set","pendingInsertions":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:99","type":"CtBinaryOperatorImpl","sourcecode":"endIndex < startIndex"},"failures":[],"tindex":"cff3767b-2e71-11e6-8ad1-03ca5fed3286","method":{"position":"org.apache.commons.collections4.list.TransformedList:119","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getList().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"index","endIndex":"index"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":24,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}