{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":222,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx5":326,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":450,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":327,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectEqualsSelf":470,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":132,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":234,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":344,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":370,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":353,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":394,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":551,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":258,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":494,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":230,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":311,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":300,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":314,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCanonicalFullCollectionExists":438,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":262,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":242,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":26,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":62,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":182,"org.apache.commons.collections4.CollectionUtilsTest.get":283,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":236,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":449,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":237,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":190,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":287,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":290,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":68,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":148,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":176,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":369,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":487,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":198,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":491,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":226,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":170,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":0,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":374,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":426,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":403,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":167,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectEqualsSelf":497,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":389,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":397,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSimpleSerialization":436,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":48,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":85,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":524,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":410,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":411,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":503,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":11,"org.apache.commons.collections4.CollectionUtilsTest.select":111,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":177,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":478,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":260,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":253,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":372,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":315,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":562,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":150,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":461,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":357,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":255,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":412,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":245,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":488,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":522,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":157,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":246,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":244,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":118,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":516,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":56,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":103,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":325,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":345,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":239,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":404,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":137,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":299,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":386,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":231,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":84,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":184,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":442,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":161,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":423,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":119,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":343,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":368,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":266,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":65,"org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf":109,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":223,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":561,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":419,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":220,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":188,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":512,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":277,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":506,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":340,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":61,"org.apache.commons.collections4.map.CompositeMapTest.testGet":275,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":308,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":218,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":393,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":332,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":430,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":295,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":209,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":456,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsContract":536,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":83,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":39,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":547,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":18,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":285,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":530,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":284,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":166,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":305,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":529,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":556,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":217,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":134,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":102,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":294,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":362,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":458,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":415,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":485,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":100,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":406,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":76,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":77,"org.apache.commons.collections4.bag.HashBagTest.testObjectHashCodeEqualsContract":521,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":75,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":431,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":376,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":429,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":417,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":208,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":268,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":270,"org.apache.commons.collections4.CollectionUtilsTest.union":272,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":384,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":33,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":105,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":250,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":273,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":544,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":243,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":334,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":385,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":402,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":559,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":235,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":563,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":4,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":392,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":265,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":387,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":240,"org.apache.commons.collections4.list.TreeListTest.testRemove":2,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":131,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":73,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":34,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":72,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":140,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":564,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":229,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":537,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":74,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":164,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":289,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":383,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":538,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":301,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":86,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":348,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":382,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":479,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":204,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":545,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":238,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":31,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":143,"org.apache.commons.collections4.functors.AllPredicateTest.emptyCollectionToGetInstance":331,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":210,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":249,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":446,"org.apache.commons.collections4.bag.TreeBagTest.testObjectHashCodeEqualsContract":508,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":248,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":247,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":136,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":557,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":408,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":7,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":154,"org.apache.commons.collections4.map.LRUMapTest.testClone":147,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":92,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":124,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":363,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":141,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":476,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":535,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":138,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":139,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":254,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":41,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":307,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEqualsNull":496,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":420,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":30,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":80,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":498,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":91,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsContract":514,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":88,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":298,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":261,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":448,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":474,"org.apache.commons.collections4.list.TreeListTest.testListEquals":10,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":183,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":352,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":172,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":233,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":110,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":493,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":445,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":424,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":58,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":543,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":98,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":15,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":113,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":219,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsContract":541,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":201,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":525,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":324,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":199,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":466,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":519,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":227,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":367,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":390,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEqualsNull":432,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":133,"org.apache.commons.collections4.functors.AllPredicateTest.singletonCollectionToGetInstance":333,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":259,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":221,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":490,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":472,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":78,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":414,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":413,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":511,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":123,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":174,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":542,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":405,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":252,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsContract":434,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":296,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":365,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":462,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":483,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":504,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":216,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":531,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":329,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":162,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":38,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":6,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":45,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":351,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":428,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":232,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":409,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":32,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":46,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsNull":469,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":276,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":381,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":471,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":555,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":40,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":335,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":425,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":337,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":97,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":106,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":215,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":502,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":473,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":313,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":453,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":310,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":457,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":25,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":44,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":303,"org.apache.commons.collections4.functors.AllPredicateTest.nullArrayToGetInstance":553,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":57,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":371,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":539,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":99,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":9,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":191,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":317,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":533,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":24,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":338,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":95,"org.apache.commons.collections4.map.ListOrderedMap2Test.testIndexOf":108,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":282,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":346,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":304,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":350,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":286,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":475,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":552,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":379,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":454,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":467,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":126,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":281,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":342,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":527,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":52,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":554,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":468,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":53,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":540,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":54,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":212,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":398,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":135,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":189,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":495,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":81,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":336,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":186,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":152,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":375,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":155,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":380,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":451,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":360,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":395,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":509,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":421,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":114,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":364,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":168,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":361,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":101,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":528,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":89,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":489,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":422,"org.apache.commons.collections4.SetUtilsTest.testHashCode":499,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":21,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":159,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":12,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":480,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":178,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":460,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":13,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":264,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":63,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":513,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":225,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":441,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":484,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":206,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":179,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":171,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":35,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":17,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":439,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":293,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":330,"org.apache.commons.collections4.CollectionUtilsTest.isFull":280,"org.apache.commons.collections4.list.TreeListTest.testBug35258":5,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":107,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":355,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":482,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":477,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":501,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":129,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":187,"org.apache.commons.collections4.bag.HashBagTest.testObjectEqualsSelf":520,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":481,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCanonicalEmptyCollectionExists":437,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":28,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":64,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":36,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":3,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":341,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":391,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":443,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":416,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":510,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":144,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":213,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":49,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":50,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":274,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":51,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":565,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":517,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":203,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":558,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":256,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":180,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":149,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex1":279,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":200,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":271,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":323,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":292,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":193,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx5":322,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":288,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":207,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx1":550,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":79,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":173,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsSelfHashCode":435,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":440,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":96,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":194,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":349,"org.apache.commons.collections4.bag.TreeBagTest.testEmptyBagCompatibility":505,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":297,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":302,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":121,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":532,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":197,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":196,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":534,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":195,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":116,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":202,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":316,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testDecorate":396,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":452,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":251,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":67,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":128,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":214,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":87,"org.apache.commons.collections4.bag.HashBagTest.testEmptyBagCompatibility":518,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":291,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":205,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":153,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsContract":546,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":328,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":399,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":257,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":500,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":93,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":160,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":90,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":37,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":401,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":125,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":373,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":312,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":523,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":444,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":142,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectEqualsSelf":433,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":241,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":163,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":94,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":377,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":465,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":130,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":165,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":459,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":120,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":263,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":228,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":447,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":359,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":151,"org.apache.commons.collections4.map.LRUMapTest.testLRU":146,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":175,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":526,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":20,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":400,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":486,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":145,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":169,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":158,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":378,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":278,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":358,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":122,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":347,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":82,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":548,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":319,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":318,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":492,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":407,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":185,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":455,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":464,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":463,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":117,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":224,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":306,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":560,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":115,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":515,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":309,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":211,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":549,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":267,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":321,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx5":320,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":427,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":192,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":181,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":366,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":388,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":19,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":269,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":356,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":418,"org.apache.commons.collections4.bag.TreeBagTest.testObjectEqualsSelf":507,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":60,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":339,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":354},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.DefaultedMap:105","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[],"tindex":"e2996b0a-3e80-11e6-80fe-254a9b9e30e5","method":{"position":"org.apache.commons.collections4.MapUtils:1623","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (factory == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[0],"tindex":"e299b92b-3e80-11e6-80fe-776d469c6977","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:224","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = super.retainAll(coll);\n            if (changed) {\n                reindex();\n            } \n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"e299e03c-3e80-11e6-80fe-3b155b6d6b55","method":{"position":"org.apache.commons.collections4.list.TreeList:413","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> get(final int index) {\n    if (index < 0) {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode.this;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = indexRelativeToMe < 0 ? getLeftSubTree() : getRightSubTree();\n            if (nextNode == null) {\n                return null;\n            } \n            return nextNode.get(indexRelativeToMe);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83],"tindex":"e299e03d-3e80-11e6-80fe-3f78c6f7285f","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                return null;\n            } \n            return super.getEntry(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],"tindex":"e29a074e-3e80-11e6-80fe-eb7e94b6fcf1","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:72","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"e29a074f-3e80-11e6-80fe-7134ad85db12","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:331","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Set<E> createSetBasedOnList(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Set<E> java.util.Set<E>;\n            if (set.getClass().equals(java.util.HashSet.java.util.HashSet.java.lang.Class)) {\n                subSet = new java.util.HashSet<E>(list.size());\n            } else {\n                try {\n                    subSet = set.getClass().newInstance();\n                } catch (final java.lang.InstantiationException ie) {\n                    subSet = new java.util.HashSet<E>();\n                } catch (final java.lang.IllegalAccessException iae) {\n                    subSet = new java.util.HashSet<E>();\n                }\n            }\n            subSet.addAll(list);\n            return subSet;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"e29a0750-3e80-11e6-80fe-85ed6ad001ef","method":{"position":"org.apache.commons.collections4.list.TransformedList:79","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.TransformedList<E> org.apache.commons.collections4.list.TransformedList<E> = new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n            if (((transformer != null) && (list != null)) && ((list.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(list.toArray()));\n                list.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[108,109],"tindex":"e29a2e61-3e80-11e6-80fe-1d25b80a0d40","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:410","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return java.util.List<K>.indexOf(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e29a2e62-3e80-11e6-80fe-5be6bccea749","method":{"position":"org.apache.commons.collections4.ListUtils:400","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[110],"tindex":"e29a2e63-3e80-11e6-80fe-bda3f5105a78","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((transformers.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(transformers);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e29a5574-3e80-11e6-80fe-b9e041ee728d","method":{"position":"org.apache.commons.collections4.MapUtils:297","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Float) {\n                return ((java.lang.Float)(answer));\n            } \n            return java.lang.Float.valueOf(answer.floatValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[111],"tindex":"e29a5575-3e80-11e6-80fe-07815782015a","method":{"position":"org.apache.commons.collections4.CollectionUtils:898","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> select(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection != null) && (predicate != null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"e29a7c86-3e80-11e6-80fe-97ed459d3ee5","method":{"position":"org.apache.commons.collections4.MapUtils:1664","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, transformerFactory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtBinaryOperatorImpl","sourcecode":"nCopies > 0"},"failures":[112,113,114,115,106,107],"tindex":"e29a7c87-3e80-11e6-80fe-df44df081ef6","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:125","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getBag().add(transform(object), nCopies);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"nCopies"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[116,117,118,119,120,121,122,123,124,125,126],"tindex":"e29aa398-3e80-11e6-80fe-bf6b61088b38","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtBinaryOperatorImpl","sourcecode":"to != null"},"failures":[127,128,129,130,131,132,133,134,135,136],"tindex":"e29af1b9-3e80-11e6-80fe-29ef96e1db61","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:716","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> from, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> to, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (from != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (to != null) {\n                if (from == null) {\n                    to.setBlack(dataElement);\n                } else {\n                    to.copyColor(from, dataElement);\n                }\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"to":"from"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"e29af1ba-3e80-11e6-80fe-9d5f475a3882","method":{"position":"org.apache.commons.collections4.ListUtils:678","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<T> get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = size();\n            if (listSize < 0) {\n                throw new java.lang.IllegalArgumentException((\"negative size: \" + listSize));\n            } \n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" must not be negative\"));\n            } \n            if (index >= listSize) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" must be less than size \") + listSize));\n            } \n            final int int = index * (int);\n            final int int = java.lang.Math.min((start + (int)), java.util.List<T>.size());\n            return java.util.List<T>.subList(start, end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[137,138,139,140,141,142,143,144,145],"tindex":"e29af1bb-3e80-11e6-80fe-554cdd822896","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:53","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[146,147,148,149,150,151,152,153,154,155],"tindex":"e29af1bc-3e80-11e6-80fe-bba836e9f2d2","method":{"position":"org.apache.commons.collections4.map.LRUMap:192","type":"CtMethodImpl","sourcecode":"protected void moveToMRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                (int)++;\n                if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n                    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n                } \n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n            } else if (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                throw new java.lang.IllegalStateException((\"Can't move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"e29b18cd-3e80-11e6-80fe-5f6c8701da4f","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n            } \n            java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[],"tindex":"e29b18ce-3e80-11e6-80fe-b538954210bc","method":{"position":"org.apache.commons.collections4.CollectionUtils:1086","type":"CtMethodImpl","sourcecode":"public static <T>boolean addIgnoreNull(final java.util.Collection<T> collection, final T object) {\n    if (collection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (collection == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            return (object != null) && (collection.add(object));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[156,157,158,159,160],"tindex":"e29b18cf-3e80-11e6-80fe-69fd83b38e53","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:357","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            removeAllExpired(now());\n            return super.containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[161],"tindex":"e29b18d0-3e80-11e6-80fe-410a35c46ec2","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:86","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final V defaultValue) {\n    if (map == null) {\n        {\n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(defaultValue));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[162],"tindex":"e29b3fe1-3e80-11e6-80fe-d19b97fd0b04","method":{"position":"org.apache.commons.collections4.set.PredicatedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSet<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSet<E>(set , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[163],"tindex":"e29b3fe2-3e80-11e6-80fe-4f5b2e337658","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[164],"tindex":"e29b3fe3-3e80-11e6-80fe-fbe9800093b0","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"e29b3fe4-3e80-11e6-80fe-1d32766f3823","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:971","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.get((index + (int)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[165,166],"tindex":"e29b3fe5-3e80-11e6-80fe-97a6faf67426","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:112","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[],"tindex":"e29b3fe6-3e80-11e6-80fe-e392ec4b4380","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:616","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        {\n            return getEntrySet().contains(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[],"tindex":"e29b66f7-3e80-11e6-80fe-b3a7c7058ad5","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.containsKey(key)) {\n                final V V = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.get(key);\n                if (value == null ? (entry.getValue()) == null : value.equals(entry.getValue())) {\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.remove(key);\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.remove(value);\n                    return true;\n                } \n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,127,238,239,240,128,241,242,243,244,245,246,247,248,249,129,250,251,130,131,252,253,132,133,134,135,136],"tindex":"e29b66f8-3e80-11e6-80fe-db98bd22d598","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:547","type":"CtMethodImpl","sourcecode":"private K doRemoveValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getKey();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[254],"tindex":"e29b66f9-3e80-11e6-80fe-217560ba9132","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"e29b66fa-3e80-11e6-80fe-456b359e2431","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[137,255,256,139,140,141,142,143,144,145,257,258],"tindex":"e29b8e0b-3e80-11e6-80fe-9d7f1735d3a5","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic O transform(final java.lang.Object input) {\n    if (input == null) {\n        {\n            if (input == null) {\n                return null;\n            } \n            try {\n                final java.lang.Class<?> java.lang.Class<?> = input.getClass();\n                final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(java.lang.String, java.lang.Class<?>[]);\n                return ((O)(method.invoke(input, java.lang.Object[])));\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' does not exist\"));\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' cannot be accessed\"));\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' threw an exception\") , ex);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[162],"tindex":"e29b8e0c-3e80-11e6-80fe-650a163f46a5","method":{"position":"org.apache.commons.collections4.SetUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.set.PredicatedSet.predicatedSet(set, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:317","type":"CtBinaryOperatorImpl","sourcecode":"cursor == null"},"failures":[259,260,261,262,263],"tindex":"e29b8e0d-3e80-11e6-80fe-a7bbcb577031","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:288","type":"CtMethodImpl","sourcecode":"protected void unregisterCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = ref.get();\n                if (cur == null) {\n                    it.remove();\n                } else if (cur == cursor) {\n                    ref.clear();\n                    it.remove();\n                    break;\n                } \n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[264,265],"tindex":"e29bb51e-3e80-11e6-80fe-37b5978014cb","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:344","type":"CtMethodImpl","sourcecode":"public java.lang.Object remove(final int index) {\n    if (index < 0) {\n        {\n            final java.lang.Object java.lang.Object = java.util.List<E>.remove(index);\n            remove(obj);\n            return obj;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"e29bb51f-3e80-11e6-80fe-b59a54aebbfe","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:336","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return false;\n            } \n            return coll.contains(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[266],"tindex":"e29bb520-3e80-11e6-80fe-796649aa58e1","method":{"position":"org.apache.commons.collections4.functors.IfClosure:70","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if ((trueClosure == null) || (falseClosure == null)) {\n                throw new java.lang.IllegalArgumentException(\"Closures must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.IfClosure<E>(predicate , trueClosure , falseClosure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[267,268,269],"tindex":"e29bb521-3e80-11e6-80fe-2598ae1aaea4","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:377","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            removeIfExpired(key, now());\n            return super.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(y, dataElement)"},"failures":[127,128,129,130,131,132,133,134,135,136],"tindex":"e29bb522-3e80-11e6-80fe-474dab172423","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1098","type":"CtMethodImpl","sourcecode":"private void swapPosition(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> x, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> y, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(x, dataElement)) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getParent(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getLeft(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getRight(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getParent(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getLeft(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getRight(dataElement);\n            final boolean boolean = ((x.getParent(dataElement)) != null) && (x == (x.getParent(dataElement).getLeft(dataElement)));\n            final boolean boolean = ((y.getParent(dataElement)) != null) && (y == (y.getParent(dataElement).getLeft(dataElement)));\n            if (x == yFormerParent) {\n                x.setParent(y, dataElement);\n                if (yWasLeftChild) {\n                    y.setLeft(x, dataElement);\n                    y.setRight(xFormerRightChild, dataElement);\n                } else {\n                    y.setRight(x, dataElement);\n                    y.setLeft(xFormerLeftChild, dataElement);\n                }\n            } else {\n                x.setParent(yFormerParent, dataElement);\n                if (yFormerParent != null) {\n                    if (yWasLeftChild) {\n                        yFormerParent.setLeft(x, dataElement);\n                    } else {\n                        yFormerParent.setRight(x, dataElement);\n                    }\n                } \n                y.setLeft(xFormerLeftChild, dataElement);\n                y.setRight(xFormerRightChild, dataElement);\n            }\n            if (y == xFormerParent) {\n                y.setParent(x, dataElement);\n                if (xWasLeftChild) {\n                    x.setLeft(y, dataElement);\n                    x.setRight(yFormerRightChild, dataElement);\n                } else {\n                    x.setRight(y, dataElement);\n                    x.setLeft(yFormerLeftChild, dataElement);\n                }\n            } else {\n                y.setParent(xFormerParent, dataElement);\n                if (xFormerParent != null) {\n                    if (xWasLeftChild) {\n                        xFormerParent.setLeft(y, dataElement);\n                    } else {\n                        xFormerParent.setRight(y, dataElement);\n                    }\n                } \n                x.setLeft(yFormerLeftChild, dataElement);\n                x.setRight(yFormerRightChild, dataElement);\n            }\n            if ((x.getLeft(dataElement)) != null) {\n                x.getLeft(dataElement).setParent(x, dataElement);\n            } \n            if ((x.getRight(dataElement)) != null) {\n                x.getRight(dataElement).setParent(x, dataElement);\n            } \n            if ((y.getLeft(dataElement)) != null) {\n                y.getLeft(dataElement).setParent(y, dataElement);\n            } \n            if ((y.getRight(dataElement)) != null) {\n                y.getRight(dataElement).setParent(y, dataElement);\n            } \n            x.swapColors(y, dataElement);\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]) == x) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = y;\n            } else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]) == y) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = x;\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"y":"x","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"e29bdc33-3e80-11e6-80fe-0f81a577b909","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:378","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object k) {\n    if (k == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (k == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (k == null) {\n                        return false;\n                    } \n                    final K K = castKey(k);\n                    final int int = lengthInBits(key);\n                    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n                    return (!(entry.isEmpty())) && (compareKeys(key, entry.K));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[270,271],"tindex":"e29bdc34-3e80-11e6-80fe-fd50011dd497","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:236","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    removeNode(node);\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e29bdc35-3e80-11e6-80fe-8115afcc68cd","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:238","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(e.getKey(), e.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[272,273,274],"tindex":"e29c0346-3e80-11e6-80fe-31152b097e8c","method":{"position":"org.apache.commons.collections4.CollectionUtils:227","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> union(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (a == null)) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, helper.max(obj));\n            }\n            return helper.list();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"e29c0347-3e80-11e6-80fe-458bb8d974ba","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:456","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getNearestEntryForKey(final K key, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    return current;\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[],"tindex":"e29c0348-3e80-11e6-80fe-ab4e947037ac","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[275,276,277,278],"tindex":"e29c2a59-3e80-11e6-80fe-512e95bf243f","method":{"position":"org.apache.commons.collections4.map.CompositeMap:281","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].get(key);\n                } \n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[279],"tindex":"e29c2a5a-3e80-11e6-80fe-c96c10aba9f8","method":{"position":"org.apache.commons.collections4.PredicateUtils:236","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName, paramTypes, args));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[],"tindex":"e29c2a5b-3e80-11e6-80fe-e15b53500982","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:157","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Closure<T> coerce(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.Closure<T>)(closure));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e29c2a5c-3e80-11e6-80fe-4762acf78f4f","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:136","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<E> transform(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(coll.size());\n            for (final E E : coll) {\n                list.add(transform(item));\n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"e29c2a5d-3e80-11e6-80fe-1f10aaa7c172","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2057","type":"CtMethodImpl","sourcecode":"public K get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.getKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[3,2,9,23],"tindex":"e29c516e-3e80-11e6-80fe-7de8acebd1a7","method":{"position":"org.apache.commons.collections4.list.TreeList:493","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> insert(final int index, final E obj) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe <= 0) {\n                return insertOnLeft(indexRelativeToMe, obj);\n            } \n            return insertOnRight(indexRelativeToMe, obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1467","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[280],"tindex":"e29c516f-3e80-11e6-80fe-c766349d750b","method":{"position":"org.apache.commons.collections4.CollectionUtils:1466","type":"CtMethodImpl","sourcecode":"public static boolean isFull(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).isFull();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.isFull();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return false;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"e29c5170-3e80-11e6-80fe-b77ff69cd281","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:317","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryBefore(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e29c5171-3e80-11e6-80fe-c1c99c333511","method":{"position":"org.apache.commons.collections4.set.CompositeSet:388","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Set<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            java.util.List<java.util.Set<E>>.remove(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"e29c7882-3e80-11e6-80fe-b90e07e99ae4","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:110","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[281,282],"tindex":"e29c7883-3e80-11e6-80fe-e74ede129757","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[283,284,285,286,287],"tindex":"e29c7884-3e80-11e6-80fe-efe3359e9c5c","method":{"position":"org.apache.commons.collections4.CollectionUtils:1194","type":"CtMethodImpl","sourcecode":"private static void checkIndexBounds(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + index));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311],"tindex":"e29c7885-3e80-11e6-80fe-8d109d1b0160","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1463","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            return containsKey(o);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e29c7886-3e80-11e6-80fe-b12e75d21262","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:543","type":"CtBinaryOperatorImpl","sourcecode":"equator == null"},"failures":[312],"tindex":"e29c7887-3e80-11e6-80fe-e757e000c698","method":{"position":"org.apache.commons.collections4.CollectionUtils:542","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b, final org.apache.commons.collections4.Equator<?> equator) {\n    if (equator == null) {\n        {\n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"equator may not be null\");\n            } \n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.Transformer org.apache.commons.collections4.Transformer = new org.apache.commons.collections4.Transformer() {\n                public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n                    return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n                }\n            };\n            return org.apache.commons.collections4.CollectionUtils.isEqualCollection(org.apache.commons.collections4.CollectionUtils.collect(a, transformer), org.apache.commons.collections4.CollectionUtils.collect(b, transformer));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:238","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[313,314,315,316,317],"tindex":"e29c9f98-3e80-11e6-80fe-19a7a4db131d","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:340","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> mutator) {\n    if (mutator == null) {\n        {\n            org.apache.commons.collections4.collection.CompositeCollection.this.org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> = mutator;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"e29c9f99-3e80-11e6-80fe-89373d693b79","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:378","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object k) {\n    if (k == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (k == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (k == null) {\n                        return false;\n                    } \n                    final K K = castKey(k);\n                    final int int = lengthInBits(key);\n                    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n                    return (!(entry.isEmpty())) && (compareKeys(key, entry.K));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:540","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[127,128,129,130,131,132,133,134,135,136],"tindex":"e29c9f9a-3e80-11e6-80fe-2f0c89e5806a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1908","type":"CtMethodImpl","sourcecode":"private void swapColors(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n            node.boolean[][dataElement.ordinal()] ^= boolean[][dataElement.ordinal()];\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[318,319,320,321,322,323,324,325,326,327,328,329,330,330,331,332,332,333,334,335],"tindex":"e29cc6ab-3e80-11e6-80fe-238d7fe31b1f","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:96","type":"CtMethodImpl","sourcecode":"static <T>org.apache.commons.collections4.Predicate<T>[] validate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = new org.apache.commons.collections4.Predicate[predicates.size()];\n            int int = 0;\n            for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : predicates) {\n                preds[i] = predicate;\n                if ((preds[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n                i++;\n            }\n            return preds;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"e29cc6ac-3e80-11e6-80fe-a186ff1d3c0a","method":{"position":"org.apache.commons.collections4.MapUtils:446","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Byte getByte(final java.util.Map<? super K, ?> map, final K key, final java.lang.Byte defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[336,165,337,338,166,339,340,341,342,343,344,345,346,347,348,39,40,41,42,43,45,46,47,48,349,350,351,352,353,354,151,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,62,63,64,65,66,68,69,70,71,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392],"tindex":"e29cc6ad-3e80-11e6-80fe-db87270f6a24","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:946","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[393],"tindex":"e29cc6ae-3e80-11e6-80fe-dd91b0880dd4","method":{"position":"org.apache.commons.collections4.BagUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            return org.apache.commons.collections4.bag.TransformedSortedBag.transformingSortedBag(bag, transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[394,395],"tindex":"e29cedbf-3e80-11e6-80fe-77b61f62b998","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:70","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:108","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"e29cedc0-3e80-11e6-80fe-9b8e04720ca8","method":{"position":"org.apache.commons.collections4.ListUtils:442","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.TransformedList.transformingList(list, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:358","type":"CtUnaryOperatorImpl","sourcecode":"!(h.isEmpty())"},"failures":[],"tindex":"e29cedc1-3e80-11e6-80fe-8964e5aabbeb","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:480","type":"CtMethodImpl","sourcecode":"V removeEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isEmpty())) {\n        {\n            if (h != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (h.isInternalNode()) {\n                    removeInternalEntry(h);\n                } else {\n                    removeExternalEntry(h);\n                }\n            } \n            decrementSize();\n            return h.setKeyValue(null, null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e29cedc2-3e80-11e6-80fe-c7f61cbf8daa","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:90","type":"CtMethodImpl","sourcecode":"public static <J, K, U, V>org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super J, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super U, ? extends V> valueTransformer) {\n    if (map != null) {\n        {\n            return new org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>(map , keyTransformer , valueTransformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,87,88,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439],"tindex":"e29cedc3-3e80-11e6-80fe-ef16db990f71","method":{"position":"org.apache.commons.collections4.bag.PredicatedSortedBag:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedSortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                {\n                    return new org.apache.commons.collections4.bag.PredicatedSortedBag<E>(bag , predicate);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[440,441,442],"tindex":"e29d14d4-3e80-11e6-80fe-b1a54357335f","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:87","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().add(object, count);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,270,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,271,492,493,494,495,496,497,498],"tindex":"e29d14d5-3e80-11e6-80fe-2f9811c8f59f","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:351","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        {\n            if (obj == (org.apache.commons.collections4.list.AbstractLinkedList.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.List) == false) {\n                return false;\n            } \n            final java.util.List<?> java.util.List<?> = ((java.util.List<?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            final java.util.ListIterator<?> java.util.ListIterator<?> = listIterator();\n            final java.util.ListIterator<?> java.util.ListIterator<?> = other.listIterator();\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                final java.lang.Object java.lang.Object = it1.next();\n                final java.lang.Object java.lang.Object = it2.next();\n                if (!(o1 == null ? o2 == null : o1.equals(o2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"e29d14d6-3e80-11e6-80fe-3172e8a225f4","method":{"position":"org.apache.commons.collections4.ListUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> union(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list1.size()) > (list1.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>(list1);\n            result.addAll(list2);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:141","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[499],"tindex":"e29d14d7-3e80-11e6-80fe-7767db4cf057","method":{"position":"org.apache.commons.collections4.SetUtils:140","type":"CtMethodImpl","sourcecode":"public static <T>int hashCodeForSet(final java.util.Collection<T> set) {\n    if (set == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set == null) {\n                return 0;\n            } \n            int int = 0;\n            for (final T T : set) {\n                if (obj != null) {\n                    hashCode += obj.hashCode();\n                } \n            }\n            return hashCode;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:977","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"e29d3be8-3e80-11e6-80fe-91200fac4dd0","method":{"position":"org.apache.commons.collections4.IteratorUtils:976","type":"CtMethodImpl","sourcecode":"public static <E>E[] toArray(final java.util.Iterator<? extends E> iterator, final java.lang.Class<E> arrayClass) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (arrayClass == null) {\n                throw new java.lang.NullPointerException(\"Array class must not be null\");\n            } \n            final java.util.List<E> java.util.List<E> = org.apache.commons.collections4.IteratorUtils.toList(iterator, 100);\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final E[] E[] = ((E[])(java.lang.reflect.Array.newInstance(arrayClass, list.size())));\n            return list.toArray(array);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[],"tindex":"e29d3be9-3e80-11e6-80fe-db3756e2622a","method":{"position":"org.apache.commons.collections4.IteratorUtils:335","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start, final int end) {\n    if (end == start) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start","end":"end"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[500,501],"tindex":"e29d3bea-3e80-11e6-80fe-a900c20f0dea","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:199","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"e29d3beb-3e80-11e6-80fe-8520f2b46c39","method":{"position":"org.apache.commons.collections4.SplitMapUtils:104","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.remove(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"e29d62fc-3e80-11e6-80fe-67c380b551ab","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:700","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entryNext(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[502,503,504,505,506,507,508,509,510,511,512,513,514,413,414,416,417,434,515,516,517,518,519,520,521,522,523,524,525,89,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546],"tindex":"e29d62fd-3e80-11e6-80fe-6399b5eaefa7","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:538","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object == (org.apache.commons.collections4.bag.AbstractMapBag.this)) {\n                return true;\n            } \n            if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.Bag<?> org.apache.commons.collections4.Bag<?> = ((org.apache.commons.collections4.Bag<?>)(object));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n                if ((other.getCount(element)) != (getCount(element))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[547,548,549,550,551,552,553],"tindex":"e29d62fe-3e80-11e6-80fe-731512a52eb3","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:78","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Predicate<?>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n            } \n            for (int int = 0 ; i < (predicates.int) ; i++) {\n                if ((predicates[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:905","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"e29d62ff-3e80-11e6-80fe-d367ef064115","method":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PushbackIterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PushbackIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[554,555],"tindex":"e29d6300-3e80-11e6-80fe-5d03b7a69523","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:404","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[556,557],"tindex":"e29d8a11-3e80-11e6-80fe-25ef8dbc4225","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:215","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[],"tindex":"e29d8a12-3e80-11e6-80fe-7f18972aaa01","method":{"position":"org.apache.commons.collections4.CollectionUtils:98","type":"CtMethodImpl","sourcecode":"public int freqA(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[558],"tindex":"e29d8a13-3e80-11e6-80fe-970c761d2edd","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:631","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        {\n            final int int = getHash(obj);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    final java.lang.Object java.lang.Object = n.getKey();\n                    if ((k == obj) || ((k != null) && (k.equals(obj)))) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(k);\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"e29db124-3e80-11e6-80fe-af562f0097ad","method":{"position":"org.apache.commons.collections4.bag.PredicatedSortedBag:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedSortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                {\n                    return new org.apache.commons.collections4.bag.PredicatedSortedBag<E>(bag , predicate);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[398,400,401,404,406,413,417,425,559,560,561,562,563,537,540,564],"tindex":"e29db125-3e80-11e6-80fe-a5ee425b3516","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:105","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return decorated().getCount(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[13,25,26,27,28,30,33,565],"tindex":"e29db126-3e80-11e6-80fe-b78ecef1376a","method":{"position":"org.apache.commons.collections4.list.TreeList:158","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                return -1;\n            } \n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e29dd837-3e80-11e6-80fe-bbc3429b1c91","method":{"position":"org.apache.commons.collections4.MapUtils:1262","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableMap.unmodifiableMap(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e29dd838-3e80-11e6-80fe-c53bbc3bd31b","method":{"position":"org.apache.commons.collections4.MapUtils:605","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return 0;\n            } \n            return byteObject.byteValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"e29dd839-3e80-11e6-80fe-a7f7107a382d","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:73","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformedQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.queue.TransformedQueue<E> org.apache.commons.collections4.queue.TransformedQueue<E> = new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n            if ((queue.size()) > 0) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(queue.toArray()));\n                queue.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"e29dd83a-3e80-11e6-80fe-4d14c75eb2a5","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1240","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntryInSubtree(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> parentOfSubtree) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, parentOfSubtree);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e29dd83b-3e80-11e6-80fe-f1f00d0355a8","method":{"position":"org.apache.commons.collections4.MapUtils:255","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Integer) {\n                return ((java.lang.Integer)(answer));\n            } \n            return java.lang.Integer.valueOf(answer.intValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e29dff4c-3e80-11e6-80fe-8df7cf3e7fe3","method":{"position":"org.apache.commons.collections4.set.CompositeSet:265","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeSet without a SetMutator strategy\");\n            } \n            return org.apache.commons.collections4.set.CompositeSet.SetMutator<E>.addAll(org.apache.commons.collections4.set.CompositeSet.this, java.util.List<java.util.Set<E>>, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"e29dff4d-3e80-11e6-80fe-3b602841d3d6","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:82","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142467/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}