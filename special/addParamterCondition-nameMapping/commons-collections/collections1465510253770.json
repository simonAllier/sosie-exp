{"failureDictionary":{"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":80,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":344,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":81,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":478,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":19,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":419,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":195,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":553,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":25,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":30,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":226,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":510,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":29,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":131,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":308,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":85,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":470,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":219,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":518,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":43,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":240,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":90,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":136,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":1,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":382,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRetainAll":393,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":338,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":532,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":114,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":368,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":165,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":560,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":435,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":288,"org.apache.commons.collections4.list.GrowthListTest.testFullListCompatibility":558,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":134,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":15,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":411,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":342,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":266,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":360,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":449,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":456,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":401,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":522,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":303,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":203,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToString":563,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":101,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":423,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":364,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":156,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":31,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":289,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":175,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":113,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":469,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":205,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains3":256,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains2":255,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains1":254,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Other":506,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":48,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":18,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":216,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":291,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":8,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":463,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":484,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":204,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":38,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":181,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":561,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":91,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":252,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":440,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":333,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":441,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":200,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":439,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":309,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":105,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":369,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":543,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":109,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":194,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":514,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking2":538,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":4,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":100,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":41,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":489,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":380,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking2":330,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":356,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":433,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":126,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":155,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":445,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":491,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":27,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":218,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":452,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":559,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":0,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":374,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":197,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":157,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":341,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":62,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testObjectHashCodeEqualsContract":527,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":121,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":84,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":107,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":495,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":9,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":36,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":16,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":66,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":184,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":161,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":405,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":383,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicateEx1":403,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":428,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":477,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":436,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testObjectEqualsSelf":525,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":187,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":354,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":17,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":233,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":357,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":96,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":472,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":236,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":258,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRetainAll":395,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":492,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove3":494,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":493,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":12,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":473,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":541,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking2":555,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":214,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":281,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":185,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":420,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":118,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":347,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":348,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":346,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":511,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":270,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":164,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":468,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":536,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":154,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":95,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":239,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":272,"org.apache.commons.collections4.list.GrowthListTest.testFullListSerialization":552,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":117,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":160,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":407,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":189,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":168,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":212,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":451,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":170,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":426,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":376,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":320,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Enumeration":500,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains1":77,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains2":78,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":318,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":437,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains3":79,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":111,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Null":503,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":202,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":10,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":98,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":483,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":392,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":533,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":223,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":188,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":277,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":222,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":486,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":515,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains1":260,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":519,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":306,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":458,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains3":262,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains2":261,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":302,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":11,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":294,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":301,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":88,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRetainAll":402,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":482,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":61,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":59,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":60,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":359,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":167,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":287,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":122,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":351,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":535,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":396,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":390,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":540,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":158,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":488,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":120,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":169,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":455,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_PrimitiveArray":501,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":231,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":87,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":417,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":476,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":144,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":248,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":430,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":130,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":249,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":250,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":14,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":453,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":163,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":5,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":106,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":397,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":174,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":416,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":74,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":129,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":75,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":166,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":371,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":244,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":73,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":547,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":137,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":20,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":232,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":415,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":13,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":221,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":431,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains2":52,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains3":53,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains1":51,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":379,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":448,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":349,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":304,"org.apache.commons.collections4.list.GrowthListTest.testCollectionSize":562,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":389,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":285,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":173,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":421,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":93,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":234,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":314,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":548,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":153,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":284,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":375,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":529,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":229,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":327,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":481,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":69,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":68,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":67,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":381,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":220,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":409,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":361,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":26,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":124,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":345,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":434,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":545,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":362,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":191,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":24,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":37,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":556,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":83,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":22,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking2":539,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":103,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":135,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":278,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking":328,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":464,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":358,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":394,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":457,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":6,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":462,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":182,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":99,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":241,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":319,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":142,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":243,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":242,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":279,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":378,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":310,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":275,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":412,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":45,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":521,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":531,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":370,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":324,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":151,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":86,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":171,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":513,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":466,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":149,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":177,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":471,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":28,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRetainAll":388,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":139,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":198,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":427,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":147,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":47,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":425,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":49,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":365,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":21,"org.apache.commons.collections4.list.GrowthListTest.testSerializeDeserializeThenCompare":568,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":325,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":315,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":366,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":524,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":199,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":367,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":363,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":116,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":235,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":447,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":520,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":180,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":352,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":461,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":442,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":32,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":429,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":89,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":295,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":322,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":465,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":138,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":63,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":190,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":65,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":64,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":251,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":110,"org.apache.commons.collections4.list.GrowthListTest.testCollectionClear":566,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":228,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":257,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":152,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":293,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Iterator":505,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":123,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":414,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":565,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":311,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":321,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":335,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":259,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":517,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":33,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":253,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":104,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":280,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":530,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":377,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":339,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":475,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":274,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":307,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testSerializeDeserializeThenCompare":528,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":179,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":125,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":271,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":127,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":516,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testEqualsNull":526,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":391,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":237,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":140,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_List":502,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":246,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":404,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":247,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":172,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":209,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":245,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":50,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":544,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":133,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":384,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":549,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":413,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":183,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":57,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":145,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":406,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":286,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":227,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":534,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":290,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":340,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":509,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":55,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":56,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Map":504,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":108,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":97,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":298,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":474,"org.apache.commons.collections4.list.GrowthListTest.testListListIterator":546,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":238,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":537,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":450,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":297,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":523,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":40,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":292,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":443,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":39,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":507,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove3":498,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":497,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":192,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":479,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":128,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":350,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":273,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":210,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":150,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":564,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":496,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":34,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":76,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":92,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":207,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":58,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":305,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":265,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":213,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":264,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":263,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":487,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":224,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":332,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":385,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":35,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":312,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":438,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":337,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":460,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":554,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":119,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRetainAll":387,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":490,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking2":551,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":398,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":230,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":201,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":459,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":42,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":282,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":196,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":550,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":336,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":148,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":208,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":211,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":326,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":299,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":355,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":300,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking":410,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":2,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains1":70,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":283,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":454,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains3":72,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains2":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":46,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":146,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":343,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":329,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":432,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":418,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":217,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":141,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":3,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":193,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":542,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":334,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":23,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":313,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":132,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":422,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":267,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":353,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":268,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":323,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRetainAll":400,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":54,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":269,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":112,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":176,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":186,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":178,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":480,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":44,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":386,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":446,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":331,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":372,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":276,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":508,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":159,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":567,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":7,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":424,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":557,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":512,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":115,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":215,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":225,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":444,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":94,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":102,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":317,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":206,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":296,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":485,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":399,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":316,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":408,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":373,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":162,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":467,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":499,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":143},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[0],"tindex":"086e34e0-2e8f-11e6-915f-555a7f44840f","method":{"position":"org.apache.commons.collections4.ClosureUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                {\n                    return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[1],"tindex":"086ed121-2e8f-11e6-915f-d95064d85c2b","method":{"position":"org.apache.commons.collections4.CollectionUtils:409","type":"CtMethodImpl","sourcecode":"public static boolean containsAny(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if (coll2.isEmpty()) {\n        {\n            if ((coll1.size()) < (coll2.size())) {\n                for (final java.lang.Object java.lang.Object : coll1) {\n                    if (coll2.contains(aColl1)) {\n                        return true;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (coll1.contains(aColl2)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[2],"tindex":"086ef832-2e8f-11e6-915f-bda9672d6e9d","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"086f1f43-2e8f-11e6-915f-e91bcc3a6aec","method":{"position":"org.apache.commons.collections4.MapUtils:406","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key, final java.lang.Boolean defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[],"tindex":"086f1f44-2e8f-11e6-915f-6d8a18cfe2f4","method":{"position":"org.apache.commons.collections4.IteratorUtils:744","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> loopingIterator(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                {\n                    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            if (coll == null) {\n                                throw new java.lang.NullPointerException(\"Collection must not be null\");\n                            } \n                            return new org.apache.commons.collections4.iterators.LoopingIterator<E>(coll);\n                        }\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[3,4,5,6,7,8,9,10],"tindex":"086f4655-2e8f-11e6-915f-bb1e84cdd342","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:97","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().remove(object, count);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"086f6d66-2e8f-11e6-915f-d3d993cfc61c","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[11,12],"tindex":"086f6d67-2e8f-11e6-915f-5351f444077f","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:215","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[],"tindex":"086f9478-2e8f-11e6-915f-3b1c272d89bd","method":{"position":"org.apache.commons.collections4.map.LinkedMap:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[13],"tindex":"086f9479-2e8f-11e6-915f-57dbb55b2b9c","method":{"position":"org.apache.commons.collections4.list.TransformedList:142","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            coll = transform(coll);\n            return getList().addAll(index, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[14],"tindex":"086fbb8a-2e8f-11e6-915f-e9d70246d8f9","method":{"position":"org.apache.commons.collections4.TransformerUtils:192","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"086fe29b-2e8f-11e6-915f-47aa96380756","method":{"position":"org.apache.commons.collections4.IteratorUtils:718","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> filteredListIterator(final java.util.ListIterator<? extends E> listIterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (listIterator == null) {\n                throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterListIterator<E>(listIterator , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[15,16],"tindex":"086fe29c-2e8f-11e6-915f-d77e2aadb590","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[17],"tindex":"087009ad-2e8f-11e6-915f-4f6295bcc3c9","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[18],"tindex":"087009ae-2e8f-11e6-915f-5d8d369d5515","method":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:47","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> factoryTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.FactoryTransformer<I, O>(factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[19,20,21,22],"tindex":"087030bf-2e8f-11e6-915f-91b9cab9c7a9","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:501","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key3 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key3"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"087057d0-2e8f-11e6-915f-bb5418f7cced","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                    while (entry != null) {\n                        if ((entry.getValue()) == null) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            } else {\n                for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                    while (entry != null) {\n                        if (isEqualValue(value, entry.getValue())) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[36,37],"tindex":"08707ee1-2e8f-11e6-915f-17108548f49d","method":{"position":"org.apache.commons.collections4.set.CompositeSet:303","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"0870a5f2-2e8f-11e6-915f-71e5911ae0d4","method":{"position":"org.apache.commons.collections4.MapUtils:659","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return 0L;\n            } \n            return longObject.longValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[38,39,40,41,42,43],"tindex":"0870a5f3-2e8f-11e6-915f-7dda058b0c78","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:70","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName , paramTypes , args);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[44,45,46],"tindex":"0870cd04-2e8f-11e6-915f-55881a1b88a6","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:255","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if (coll.contains(it.next())) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"0870f415-2e8f-11e6-915f-2f23a18ad566","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isPrefix(final java.lang.String prefix, final int offsetInBits, final int lengthInBits, final java.lang.String key) {\n    if (offsetInBits == 0) {\n        {\n            if (((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n            } \n            final java.lang.String java.lang.String = prefix.substring((offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)), (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)));\n            return key.startsWith(s1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"offsetInBits"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[47],"tindex":"08711b26-2e8f-11e6-915f-fd23c33782e7","method":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        {\n            if (obj == (org.apache.commons.collections4.functors.ConstantTransformer.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                return false;\n            } \n            final java.lang.Object java.lang.Object = ((org.apache.commons.collections4.functors.ConstantTransformer<?, ?>)(obj)).getConstant();\n            return (otherConstant == (getConstant())) || ((otherConstant != null) && (otherConstant.equals(getConstant())));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[48],"tindex":"08711b27-2e8f-11e6-915f-3bdd71aff9bf","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[49],"tindex":"08711b28-2e8f-11e6-915f-1f5e6758c7d1","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[50],"tindex":"08714239-2e8f-11e6-915f-4b5210456c13","method":{"position":"org.apache.commons.collections4.TransformerUtils:149","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> asTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtBinaryOperatorImpl","sourcecode":"(node.getLeft(dataElement)) != null"},"failures":[],"tindex":"0871423a-2e8f-11e6-915f-9f6d109446fc","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1908","type":"CtMethodImpl","sourcecode":"private void swapColors(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((node.getLeft(dataElement)) != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n                    node.boolean[][dataElement.ordinal()] ^= boolean[][dataElement.ordinal()];\n                    boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,6,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,10,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,13,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322],"tindex":"0871694b-2e8f-11e6-915f-85fee72bc538","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            return decorated().contains(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.EqualPredicate:109","type":"CtBinaryOperatorImpl","sourcecode":"(equator) != null"},"failures":[],"tindex":"0871905c-2e8f-11e6-915f-0d77123c5bf6","method":{"position":"org.apache.commons.collections4.functors.EqualPredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> equalPredicate(final T object, final org.apache.commons.collections4.Equator<T> equator) {\n    if (equator != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return org.apache.commons.collections4.functors.NullPredicate.nullPredicate();\n            } \n            return new org.apache.commons.collections4.functors.EqualPredicate<T>(object , equator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:62","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>"},"failures":[],"tindex":"0871905d-2e8f-11e6-915f-3fd3f150e84f","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:47","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[323,324,325,326],"tindex":"0871b76e-2e8f-11e6-915f-b34d2650e705","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:368","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                {\n                    if ((coll.size()) == 0) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) {\n                                return false;\n                            } \n                            if (coll.isEmpty()) {\n                                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.clear();\n                                return true;\n                            } \n                            boolean boolean = false;\n                            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                            while (it.hasNext()) {\n                                if ((coll.contains(it.next())) == false) {\n                                    it.remove();\n                                    modified = true;\n                                } \n                            }\n                            return modified;\n                        }\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"0871b76f-2e8f-11e6-915f-1ba63a3fa69c","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:368","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                {\n                    if ((coll.size()) == 0) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) {\n                                return false;\n                            } \n                            if (coll.isEmpty()) {\n                                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.clear();\n                                return true;\n                            } \n                            boolean boolean = false;\n                            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                            while (it.hasNext()) {\n                                if ((coll.contains(it.next())) == false) {\n                                    it.remove();\n                                    modified = true;\n                                } \n                            }\n                            return modified;\n                        }\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:876","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[327],"tindex":"0871de80-2e8f-11e6-915f-c38782cb5e41","method":{"position":"org.apache.commons.collections4.CollectionUtils:823","type":"CtMethodImpl","sourcecode":"public static <C>int countMatches(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (input != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if ((input != null) && (predicate != null)) {\n                for (final C C : input) {\n                    if (predicate.evaluate(o)) {\n                        count++;\n                    } \n                }\n            } \n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[328,329,330],"tindex":"0871de81-2e8f-11e6-915f-190028f4a2dc","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:147","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        {\n            return decorated().set(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[331],"tindex":"0871de82-2e8f-11e6-915f-3f81e56809b3","method":{"position":"org.apache.commons.collections4.ListUtils:546","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b, final org.apache.commons.collections4.Equator<? super E> equator) {\n    if ((a == null) || (b == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n            } \n            final org.apache.commons.collections4.sequence.SequencesComparator<E> org.apache.commons.collections4.sequence.SequencesComparator<E> = new org.apache.commons.collections4.sequence.SequencesComparator<E>(a , b , equator);\n            final org.apache.commons.collections4.sequence.EditScript<E> org.apache.commons.collections4.sequence.EditScript<E> = comparator.getScript();\n            final org.apache.commons.collections4.ListUtils.LcsVisitor<E> org.apache.commons.collections4.ListUtils.LcsVisitor<E> = new org.apache.commons.collections4.ListUtils.LcsVisitor<E>();\n            script.visit(visitor);\n            return visitor.getSubSequence();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[332,333,334,335,336],"tindex":"08720593-2e8f-11e6-915f-2be87c1cbf3f","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:357","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            removeAllExpired(now());\n            return super.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[18],"tindex":"08720594-2e8f-11e6-915f-cfafdd3dfc42","method":{"position":"org.apache.commons.collections4.TransformerUtils:178","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> asTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[20],"tindex":"08720595-2e8f-11e6-915f-5328d825c9d8","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:629","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key5 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key5"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"08722ca6-2e8f-11e6-915f-e71b89bb4b34","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:143","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373],"tindex":"08722ca7-2e8f-11e6-915f-ef385b28347c","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return false;\n            } \n            return (entry.getValue()) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"087253b8-2e8f-11e6-915f-cf983e9afe48","method":{"position":"org.apache.commons.collections4.MapUtils:605","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            if (map != null) {\n                {\n                    final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n                    if (byteObject == null) {\n                        return 0;\n                    } \n                    return byteObject.byteValue();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[374,221,375,376,228,377],"tindex":"087253b9-2e8f-11e6-915f-2ff6cbac04d5","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:272","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index > 0) {\n        {\n            return java.util.List<E>.get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"087253ba-2e8f-11e6-915f-cf099b8ae59a","method":{"position":"org.apache.commons.collections4.CollectionUtils:326","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final org.apache.commons.collections4.Predicate<O> p) {\n    if ((b == null) || (b == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>();\n            final org.apache.commons.collections4.bag.HashBag<O> org.apache.commons.collections4.bag.HashBag<O> = new org.apache.commons.collections4.bag.HashBag<O>();\n            for (final O O : b) {\n                if (p.evaluate(element)) {\n                    bag.add(element);\n                } \n            }\n            for (final O O : a) {\n                if (!(bag.remove(element, 1))) {\n                    list.add(element);\n                } \n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[378,379],"tindex":"08727acb-2e8f-11e6-915f-573c4a317899","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:429","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.Iterator<? extends java.util.Map.Entry<K, V>> nextIterator(int count) {\n    if (count > 3) {\n        {\n            if (!(keyIterator.hasNext())) {\n                return null;\n            } \n            final K K = keyIterator.next();\n            final org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>>() {\n                public java.util.Map.Entry<K, V> transform(final V input) {\n                    return new java.util.Map.Entry<K, V>() {\n                        public K getKey() {\n                            return key;\n                        }\n\n                        public V getValue() {\n                            return input;\n                        }\n\n                        public V setValue(V value) {\n                            throw new java.lang.UnsupportedOperationException();\n                        }\n                    };\n                }\n            };\n            return new org.apache.commons.collections4.iterators.TransformIterator<V, java.util.Map.Entry<K, V>>(new ValuesIterator(key) , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:173","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"0872a1dc-2e8f-11e6-915f-ab5402e30d8e","method":{"position":"org.apache.commons.collections4.IteratorUtils:976","type":"CtMethodImpl","sourcecode":"public static <E>E[] toArray(final java.util.Iterator<? extends E> iterator, final java.lang.Class<E> arrayClass) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (arrayClass == null) {\n                throw new java.lang.NullPointerException(\"Array class must not be null\");\n            } \n            final java.util.List<E> java.util.List<E> = org.apache.commons.collections4.IteratorUtils.toList(iterator, 100);\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final E[] E[] = ((E[])(java.lang.reflect.Array.newInstance(arrayClass, list.size())));\n            return list.toArray(array);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"0872a1dd-2e8f-11e6-915f-b7a502da61e8","method":{"position":"org.apache.commons.collections4.IteratorUtils:744","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> loopingIterator(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                {\n                    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            if (coll == null) {\n                                throw new java.lang.NullPointerException(\"Collection must not be null\");\n                            } \n                            return new org.apache.commons.collections4.iterators.LoopingIterator<E>(coll);\n                        }\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"0872c8ee-2e8f-11e6-915f-61b61ea9c0d8","method":{"position":"org.apache.commons.collections4.ArrayStack:152","type":"CtMethodImpl","sourcecode":"public int search(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = (size()) - 1;\n            int int = 1;\n            while (i >= 0) {\n                final java.lang.Object java.lang.Object = get(i);\n                if (((object == null) && (current == null)) || ((object != null) && (object.equals(current)))) {\n                    return n;\n                } \n                i--;\n                n++;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"0872c8ef-2e8f-11e6-915f-f7cfaf817dbd","method":{"position":"org.apache.commons.collections4.ClosureUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                {\n                    return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"0872c8f0-2e8f-11e6-915f-33bf5636ab04","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:582","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<K>lookup(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[380,381,382],"tindex":"0872f001-2e8f-11e6-915f-2f7ba27d53a0","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:97","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:266","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[],"tindex":"0872f002-2e8f-11e6-915f-371bc418ceb3","method":{"position":"org.apache.commons.collections4.set.CompositeSet:330","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.set.CompositeSet.SetMutator<E> mutator) {\n    if (mutator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E> = mutator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402],"tindex":"08731713-2e8f-11e6-915f-3fe8220201c9","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:143","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            return decorated().retainAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[],"tindex":"08731714-2e8f-11e6-915f-d5f1f2256c04","method":{"position":"org.apache.commons.collections4.set.CompositeSet:127","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"08731715-2e8f-11e6-915f-7da76ae1441e","method":{"position":"org.apache.commons.collections4.CollectionUtils:1212","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.lang.Iterable<T> iterable, final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            if (iterable instanceof java.util.List<?>) {\n                return ((java.util.List<T>)(iterable)).get(index);\n            } \n            return org.apache.commons.collections4.CollectionUtils.get(iterable.iterator(), index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[],"tindex":"08733e26-2e8f-11e6-915f-19ddc8b7dc09","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[403],"tindex":"08733e27-2e8f-11e6-915f-9f9b15854f7c","method":{"position":"org.apache.commons.collections4.PredicateUtils:487","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsExceptionPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NullIsExceptionPredicate.nullIsExceptionPredicate(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[],"tindex":"08733e28-2e8f-11e6-915f-05cdb85aae61","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1908","type":"CtMethodImpl","sourcecode":"private void swapColors(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((node.getLeft(dataElement)) != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n                    node.boolean[][dataElement.ordinal()] ^= boolean[][dataElement.ordinal()];\n                    boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"08736539-2e8f-11e6-915f-ffd394f0d6aa","method":{"position":"org.apache.commons.collections4.map.Flat3Map:982","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.Flat3Map<K, ?>.remove(key);\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,275,276,425,277,397,278,426,280],"tindex":"0873653a-2e8f-11e6-915f-3f3f9def4f2d","method":{"position":"org.apache.commons.collections4.list.PredicatedList:94","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[427,428],"tindex":"0873653b-2e8f-11e6-915f-3d552a3a438e","method":{"position":"org.apache.commons.collections4.TransformerUtils:379","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        {\n            return org.apache.commons.collections4.functors.MapTransformer.mapTransformer(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"0873653c-2e8f-11e6-915f-61a2690253be","method":{"position":"org.apache.commons.collections4.MapUtils:1680","type":"CtMethodImpl","sourcecode":"public static <K, V>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends V> elements, final org.apache.commons.collections4.Transformer<V, K> keyTransformer) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.populateMap(map, elements, keyTransformer, org.apache.commons.collections4.TransformerUtils.<V>nopTransformer());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[429],"tindex":"08738c4d-2e8f-11e6-915f-136f88f0c7dc","method":{"position":"org.apache.commons.collections4.CollectionUtils:946","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection != null) && (predicate != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"08738c4e-2e8f-11e6-915f-6737df1968d0","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:158","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(bitIndex))"},"failures":[],"tindex":"08738c4f-2e8f-11e6-915f-7b8cbfdb2948","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:64","type":"CtMethodImpl","sourcecode":"static boolean isEqualBitKey(final int bitIndex) {\n    if (!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(bitIndex))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:165","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"0873b360-2e8f-11e6-915f-4bc33eae25eb","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:110","type":"CtMethodImpl","sourcecode":"final boolean isBitSet(final K key, final int bitIndex, final int lengthInBits) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer<? super K>.isBitSet(key, bitIndex, lengthInBits);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,263,264,265],"tindex":"0873b361-2e8f-11e6-915f-559a660f8fe5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1533","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            return (node != null) && (node.getValue().equals(value));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[448],"tindex":"0873da72-2e8f-11e6-915f-650dcce75a98","method":{"position":"org.apache.commons.collections4.CollectionUtils:606","type":"CtMethodImpl","sourcecode":"public static <O>int cardinality(final O obj, final java.lang.Iterable<? super O> coll) {\n    if (coll instanceof java.util.Set<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof java.util.Set<?>) {\n                return ((java.util.Set<? super O>)(coll)).contains(obj) ? 1 : 0;\n            } \n            if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n                return ((org.apache.commons.collections4.Bag<? super O>)(coll)).getCount(obj);\n            } \n            int int = 0;\n            if (obj == null) {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (element == null) {\n                        count++;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (obj.equals(element)) {\n                        count++;\n                    } \n                }\n            }\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[449],"tindex":"0873da73-2e8f-11e6-915f-f53feb1ff249","method":{"position":"org.apache.commons.collections4.map.LinkedMap:154","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index < 0) {\n        {\n            return getEntry(index).getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.util.EmptyStackException","condition":{"position":"org.apache.commons.collections4.ArrayStack:122","type":"CtBinaryOperatorImpl","sourcecode":"n <= 0"},"failures":[],"tindex":"0873da74-2e8f-11e6-915f-83c26e61f816","method":{"position":"org.apache.commons.collections4.ArrayStack:105","type":"CtMethodImpl","sourcecode":"public E peek(final int n) throws java.util.EmptyStackException {\n    if (n <= 0) {\n        {\n            final int int = ((size()) - n) - 1;\n            if (m < 0) {\n                throw new java.util.EmptyStackException();\n            } else {\n                return get(m);\n            }\n        }\n    } else {\n        throw new java.util.EmptyStackException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[],"tindex":"0873da75-2e8f-11e6-915f-cb066b5bba81","method":{"position":"org.apache.commons.collections4.map.LinkedMap:238","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[450,451],"tindex":"08740186-2e8f-11e6-915f-19825a31660d","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            if (object == (org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[452],"tindex":"08740187-2e8f-11e6-915f-13676a831ffe","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:246","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                result |= remove(name);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"08740188-2e8f-11e6-915f-272e082a2dc1","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:316","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : coll) {\n                if (contains(e)) {\n                    continue;\n                } \n                decorated().add(e);\n                toAdd.add(e);\n                changed = true;\n            }\n            if (changed) {\n                java.util.List<E>.addAll(index, toAdd);\n            } \n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[],"tindex":"08740189-2e8f-11e6-915f-1b5b4a9081da","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:645","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.map.ListOrderedMap.EntrySetView.this)) {\n                return true;\n            } \n            return getEntrySet().equals(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[453,454,455,456,457,458,459],"tindex":"0874289a-2e8f-11e6-915f-21684ba6d4bb","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:458","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Map<java.lang.Object, java.lang.Long>.remove(key);\n            return super.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"0874289b-2e8f-11e6-915f-adc15bdfa8ed","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1004","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            rangeCheck(index, ((int) + 1));\n            final int int = coll.size();\n            if (cSize == 0) {\n                return false;\n            } \n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.addAll(((int) + index), coll);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            int += cSize;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[],"tindex":"0874289c-2e8f-11e6-915f-231030e16fa8","method":{"position":"org.apache.commons.collections4.IteratorUtils:744","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> loopingIterator(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                {\n                    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            if (coll == null) {\n                                throw new java.lang.NullPointerException(\"Collection must not be null\");\n                            } \n                            return new org.apache.commons.collections4.iterators.LoopingIterator<E>(coll);\n                        }\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[460],"tindex":"08744fad-2e8f-11e6-915f-41b24fd0c9ea","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[461,462,463,464,465,466,467,468,469,470],"tindex":"08744fae-2e8f-11e6-915f-15e75a29ad0b","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        {\n            return java.util.Map<E, ? super V>.keySet().equals(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[471],"tindex":"08744faf-2e8f-11e6-915f-c9db69e3cb47","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"087476c0-2e8f-11e6-915f-5b7ce387786d","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:97","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().remove(object, count);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[91,472,473,138,474,139,140,475,141,476,477,142,478,479,143,480,481,482,483,183,484,184,185,485,186,486,487,187,488,489,188,490,491,193,208,13,290,318],"tindex":"087476c1-2e8f-11e6-915f-0deef2aea217","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(transform(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"087476c2-2e8f-11e6-915f-8191ea2aac9e","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:368","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                {\n                    if ((coll.size()) == 0) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) {\n                                return false;\n                            } \n                            if (coll.isEmpty()) {\n                                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.clear();\n                                return true;\n                            } \n                            boolean boolean = false;\n                            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                            while (it.hasNext()) {\n                                if ((coll.contains(it.next())) == false) {\n                                    it.remove();\n                                    modified = true;\n                                } \n                            }\n                            return modified;\n                        }\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[492,493,494,495,496,497,498,499],"tindex":"08749dd3-2e8f-11e6-915f-dffa1aff8b6a","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:627","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if (getEntrySet().contains(obj)) {\n                final java.lang.Object java.lang.Object = ((java.util.Map.Entry<K, V>)(obj)).getKey();\n                org.apache.commons.collections4.map.ListOrderedMap<K, V>.remove(key);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[500,501,502,503,504,505,506],"tindex":"08749dd4-2e8f-11e6-915f-8516e8117e32","method":{"position":"org.apache.commons.collections4.CollectionUtils:1382","type":"CtMethodImpl","sourcecode":"public static boolean sizeIsEmpty(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            if (object == null) {\n                return true;\n            } else if (object instanceof java.util.Collection<?>) {\n                return ((java.util.Collection<?>)(object)).isEmpty();\n            } else if (object instanceof java.util.Map<?, ?>) {\n                return ((java.util.Map<?, ?>)(object)).isEmpty();\n            } else if (object instanceof java.lang.Object[]) {\n                return (((java.lang.Object[])(object)).int) == 0;\n            } else if (object instanceof java.util.Iterator<?>) {\n                return (((java.util.Iterator<?>)(object)).hasNext()) == false;\n            } else if (object instanceof java.util.Enumeration<?>) {\n                return (((java.util.Enumeration<?>)(object)).hasMoreElements()) == false;\n            } else {\n                try {\n                    return (java.lang.reflect.Array.getLength(object)) == 0;\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[507,508,509,510,511],"tindex":"08749dd5-2e8f-11e6-915f-a99aeab8bc5b","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:236","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object value) {\n    if (value == null) {\n        {\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    removeNode(node);\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"0874c4e6-2e8f-11e6-915f-e5e1f38daead","method":{"position":"org.apache.commons.collections4.MapUtils:605","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            if (map != null) {\n                {\n                    final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n                    if (byteObject == null) {\n                        return 0;\n                    } \n                    return byteObject.byteValue();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"0874c4e7-2e8f-11e6-915f-6b4e4ef53ae1","method":{"position":"org.apache.commons.collections4.set.CompositeSet:388","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Set<E> set) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.List<java.util.Set<E>>.remove(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"0874c4e8-2e8f-11e6-915f-2568d8ba14ce","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:128","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[512],"tindex":"0874ebf9-2e8f-11e6-915f-5d7547347637","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[513,514,515,516,517,518,519,520,521,522,523],"tindex":"0874ebfa-2e8f-11e6-915f-a96aa04f2e36","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:213","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        {\n            final int int = indexOf(object);\n            final E E = super.set(index, object);\n            if ((pos != (-1)) && (pos != index)) {\n                super.remove(pos);\n            } \n            java.util.Set<E>.remove(removed);\n            java.util.Set<E>.add(object);\n            return removed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"0874ebfb-2e8f-11e6-915f-b341c8816d0f","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:252","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getEntry(final java.lang.Object k) {\n    if (k == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final K K = castKey(k);\n            if (key == null) {\n                return null;\n            } \n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K)) ? entry : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[],"tindex":"0875130c-2e8f-11e6-915f-8b9f94dad6e1","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[524],"tindex":"0875130d-2e8f-11e6-915f-8bbcf00ee33d","method":{"position":"org.apache.commons.collections4.map.TransformedMap:99","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map == null) {\n        {\n            final org.apache.commons.collections4.map.TransformedMap<K, V> org.apache.commons.collections4.map.TransformedMap<K, V> = new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[525,526,527,528],"tindex":"0875130e-2e8f-11e6-915f-f35d6e3cc174","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:279","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            if ((org.apache.commons.collections4.comparators.FixedOrderComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.FixedOrderComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(object));\n                return null == (java.util.Map<T, java.lang.Integer>) ? null == (comp.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(comp.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (comp.int))) && ((boolean) == (comp.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:234","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"08753a1f-2e8f-11e6-915f-191981a425f4","method":{"position":"org.apache.commons.collections4.IteratorUtils:888","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Enumeration<E> asEnumeration(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorEnumeration<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"08753a20-2e8f-11e6-915f-e15852795e1d","method":{"position":"org.apache.commons.collections4.MapUtils:1542","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.PredicatedSortedMap.predicatedSortedMap(map, keyPred, valuePred);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[529,530,531,532,533,534,535,536,537],"tindex":"08753a21-2e8f-11e6-915f-ed4681985eb5","method":{"position":"org.apache.commons.collections4.list.TreeList:158","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                return -1;\n            } \n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,281,282,565,566,283,398,567,568,285,286],"tindex":"08756132-2e8f-11e6-915f-eb6d9b34937d","method":{"position":"org.apache.commons.collections4.list.GrowthList:69","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.GrowthList<E> growthList(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            return new org.apache.commons.collections4.list.GrowthList<E>(list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[],"tindex":"08756133-2e8f-11e6-915f-25db35a0a83d","method":{"position":"org.apache.commons.collections4.IteratorUtils:316","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end) {\n    if (end == start) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start","end":"end"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}