{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":91,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":151,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":25,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":103,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":128,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":261,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":295,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":24,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":20,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":476,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":284,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":283,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":435,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":233,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":287,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":473,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":316,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":99,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":352,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":356,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":358,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":338,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":357,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":377,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":150,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":247,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":113,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":139,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":105,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":106,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":60,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":135,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":214,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":300,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":490,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":46,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking":237,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":370,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":68,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":307,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":94,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":40,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":319,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":251,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":37,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":134,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":298,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":355,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":289,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":412,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":161,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":353,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":354,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":276,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":278,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":159,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":416,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":326,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":127,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":415,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":396,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKey":178,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":493,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":364,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":444,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":475,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":228,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":255,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":116,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking":145,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":371,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":117,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":115,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":167,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":274,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":109,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":149,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":164,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":313,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":447,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":380,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":281,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":337,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":100,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":54,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":401,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":206,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":92,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":393,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":468,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":440,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":89,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":169,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":296,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":58,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":291,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":418,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":349,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":270,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicateEx1":333,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":87,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":230,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":366,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":220,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":79,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":196,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":107,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":379,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":186,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKey":170,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":346,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":383,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":190,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":438,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":86,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":130,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":263,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":434,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":446,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":219,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":362,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":331,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":310,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":369,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":78,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":204,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":395,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":143,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":172,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":404,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":463,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":122,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":188,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":114,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":244,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":451,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":390,"org.apache.commons.collections4.bag.PredicatedBagTest.testCanonicalEmptyCollectionExists":431,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":104,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":398,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":110,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":294,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":125,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":180,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":419,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":97,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":140,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":306,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":405,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":213,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":1,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":406,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":339,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":23,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":253,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":74,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":108,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":288,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":457,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":314,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":293,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":469,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":80,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":120,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":201,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":119,"org.apache.commons.collections4.map.ListOrderedMap2Test.testPreviousKey":183,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":118,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":132,"org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie":376,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":29,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":497,"org.apache.commons.collections4.map.LRUMapTest.testClone":489,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":367,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":455,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx1":239,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":231,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":15,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":387,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":348,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":329,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":479,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":142,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsSelfHashCode":428,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":327,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKey":157,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":336,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":199,"org.apache.commons.collections4.CollectionUtilsTest.collateException2":243,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":308,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":394,"org.apache.commons.collections4.CollectionUtilsTest.collateException1":242,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":460,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":53,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":442,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":102,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":197,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":202,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":389,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":22,"org.apache.commons.collections4.bag.PredicatedBagTest.testCanonicalFullCollectionExists":432,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":414,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":249,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":388,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":88,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":191,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsContract":429,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":153,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":448,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":71,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":35,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":324,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":176,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":96,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":173,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":129,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":487,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":90,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":439,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":13,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":372,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":241,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":424,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":402,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":437,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":425,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":211,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":474,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":378,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":232,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":386,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":273,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":267,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":126,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":413,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":198,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":305,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":221,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":385,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":436,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":85,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":136,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":485,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":33,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":34,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":133,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":268,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullStream":384,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":101,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKey":165,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":302,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":484,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":472,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":160,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":152,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":400,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":480,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":200,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":32,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":179,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":194,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":84,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":240,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":423,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":351,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":361,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":321,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":318,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":138,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":344,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":234,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":259,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":408,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":61,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":210,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":155,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":182,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":410,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":181,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":246,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":312,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":28,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":345,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":433,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":269,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":175,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":409,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":12,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking2":146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":82,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":217,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":262,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":282,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":272,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":131,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":168,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":285,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":59,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":317,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":254,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":56,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":495,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":498,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":483,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":481,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":360,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":417,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":478,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":299,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":192,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":208,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":38,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":325,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":399,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectEqualsSelf":427,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":297,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":279,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":341,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":382,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":342,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":343,"org.apache.commons.collections4.SetUtilsTest.testHashCode":189,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":315,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":363,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":137,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":93,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":467,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":235,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":466,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":368,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":18,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":397,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":174,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":248,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":76,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":49,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":426,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":41,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":443,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":11,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":10,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":407,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":332,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":7,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":303,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":6,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":9,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":411,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":8,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":3,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":19,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":5,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":4,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":465,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":218,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":275,"org.apache.commons.collections4.CollectionUtilsTest.isFull":0,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":195,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":328,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":453,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":121,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":57,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":26,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":141,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":301,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":471,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":265,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":158,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":403,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":16,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":458,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":83,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":156,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":144,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":148,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":163,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":258,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":264,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":290,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":374,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":73,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":252,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":320,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":50,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":492,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":70,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":216,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":359,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":63,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":177,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":212,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":77,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory":381,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testDecorateFactory":375,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":43,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":464,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":229,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":477,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":335,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":340,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":454,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":450,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":486,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":304,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":292,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":67,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":66,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":65,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":72,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":441,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":445,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":14,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":421,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":462,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":123,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":311,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":111,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":260,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":391,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapRemove":236,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":420,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":334,"org.apache.commons.collections4.bag.PredicatedBagTest.testSimpleSerialization":430,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":280,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":215,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":75,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":496,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":452,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":277,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":209,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":330,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":227,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":226,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":225,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":256,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":222,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":223,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":224,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":31,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":456,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":112,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":187,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":271,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":322,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":488,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":124,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":449,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":207,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":98,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":494,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":45,"org.apache.commons.collections4.map.ListOrderedMapTest.testPreviousKey":185,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking2":238,"org.apache.commons.collections4.map.LRUMapTest.testLRU":491,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":257,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":39,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":459,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":470,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":166,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicateEx":147,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":184,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":461,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":17,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":422,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":482,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":245,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":499,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":323,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":250,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":286,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":55,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiRemove":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":365,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":95,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":347,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":392,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":193,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":154,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":350,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":81,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":21,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":203,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":62,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":52,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":373,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":205,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":266,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKeyInverse":171,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":162,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":27,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":309},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"92c239b2-3e8a-11e6-8c78-01d8470a133f","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:325","type":"CtMethodImpl","sourcecode":"private int increment(int index) {\n    if (index < 0) {\n        {\n            index++;\n            if (index >= (int)) {\n                index = 0;\n            } \n            return index;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[34,35],"tindex":"92c287d3-3e8a-11e6-8c78-53445b527274","method":{"position":"org.apache.commons.collections4.functors.WhileClosure:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> whileClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> closure, final boolean doLoop) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.WhileClosure<E>(predicate , closure , doLoop);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[36],"tindex":"92c287d4-3e8a-11e6-8c78-6df4d62bd1f1","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132],"tindex":"92c2aee5-3e8a-11e6-8c78-a5484d81c51e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:851","type":"CtMethodImpl","sourcecode":"private void rotateRight(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getLeft(dataElement);\n            node.setLeft(leftChild.getRight(dataElement), dataElement);\n            if ((leftChild.getRight(dataElement)) != null) {\n                leftChild.getRight(dataElement).setParent(node, dataElement);\n            } \n            leftChild.setParent(node.getParent(dataElement), dataElement);\n            if ((node.getParent(dataElement)) == null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = leftChild;\n            } else if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n                node.getParent(dataElement).setRight(leftChild, dataElement);\n            } else {\n                node.getParent(dataElement).setLeft(leftChild, dataElement);\n            }\n            leftChild.setRight(node, dataElement);\n            node.setParent(leftChild, dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[133],"tindex":"92c2aee6-3e8a-11e6-8c78-9deab114c9b4","method":{"position":"org.apache.commons.collections4.list.PredicatedList:128","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i == (-1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new PredicatedListIterator(decorated().listIterator(i));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"92c2aee7-3e8a-11e6-8c78-1f78db2c8a83","method":{"position":"org.apache.commons.collections4.CollectionUtils:251","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> intersection(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((b == null) || (a == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, helper.min(obj));\n            }\n            return helper.list();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[],"tindex":"92c2d5f8-3e8a-11e6-8c78-153fe5bf804c","method":{"position":"org.apache.commons.collections4.MapUtils:1698","type":"CtMethodImpl","sourcecode":"public static <K, V, E>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends E> elements, final org.apache.commons.collections4.Transformer<E, K> keyTransformer, final org.apache.commons.collections4.Transformer<E, V> valueTransformer) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = elements.iterator();\n            while (iter.hasNext()) {\n                final E E = iter.next();\n                map.put(keyTransformer.transform(temp), valueTransformer.transform(temp));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:68","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[134],"tindex":"92c2d5f9-3e8a-11e6-8c78-6db6a26ef894","method":{"position":"org.apache.commons.collections4.functors.ChainedClosure:67","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if (closures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure collection must not be null\");\n            } \n            if ((closures.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[closures.size()];\n            int int = 0;\n            for (final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> : closures) {\n                cmds[(i++)] = closure;\n            }\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedClosure<E>(false , cmds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"92c2fd0a-3e8a-11e6-8c78-7979ac373c4c","method":{"position":"org.apache.commons.collections4.SetUtils:274","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> synchronizedSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedSortedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"92c2fd0b-3e8a-11e6-8c78-6ba912653ae4","method":{"position":"org.apache.commons.collections4.MapUtils:426","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key, final java.lang.Number defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"92c2fd0c-3e8a-11e6-8c78-e93609bc2412","method":{"position":"org.apache.commons.collections4.MapUtils:255","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Integer) {\n                return ((java.lang.Integer)(answer));\n            } \n            return java.lang.Integer.valueOf(answer.intValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[135],"tindex":"92c2fd0d-3e8a-11e6-8c78-a7342ab85944","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[136,137,138,139,140,141,142,143,144],"tindex":"92c3241e-3e8a-11e6-8c78-93254e1518d9","method":{"position":"org.apache.commons.collections4.list.TreeList:430","type":"CtMethodImpl","sourcecode":"int indexOf(final java.lang.Object object, final int index) {\n    if (null == object) {\n        {\n            if ((getLeftSubTree()) != null) {\n                final int int = org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n                if (result != (-1)) {\n                    return result;\n                } \n            } \n            if ((E) == null ? (E) == object : E.equals(object)) {\n                return index;\n            } \n            if ((getRightSubTree()) != null) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n            return -1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[145,146],"tindex":"92c3241f-3e8a-11e6-8c78-4d770341881c","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[147],"tindex":"92c32420-3e8a-11e6-8c78-ef86355684de","method":{"position":"org.apache.commons.collections4.functors.NotPredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NotPredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[148,149,150],"tindex":"92c34b31-3e8a-11e6-8c78-ab0bc19ffb60","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1505","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o == null) {\n        {\n            return containsValue(o);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[151,152,153,154],"tindex":"92c34b32-3e8a-11e6-8c78-154dd4a9b038","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:154","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key2 != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final int int = hash(key1, key2);\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n                    while (entry != null) {\n                        if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n                    }\n                    return false;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"92c34b33-3e8a-11e6-8c78-e71b4e0a38ff","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            final org.apache.commons.collections4.set.TransformedSortedSet<E> org.apache.commons.collections4.set.TransformedSortedSet<E> = new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[155],"tindex":"92c34b34-3e8a-11e6-8c78-8b49139ab581","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:292","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1163","type":"CtBinaryOperatorImpl","sourcecode":"(x.getLeft(dataElement)) != null"},"failures":[107,111,121,124,125,128,129,130,131,132],"tindex":"92c37245-3e8a-11e6-8c78-d58535373a99","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1098","type":"CtMethodImpl","sourcecode":"private void swapPosition(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> x, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> y, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((y.getLeft(dataElement)) != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getParent(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getLeft(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getRight(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getParent(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getLeft(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getRight(dataElement);\n            final boolean boolean = ((x.getParent(dataElement)) != null) && (x == (x.getParent(dataElement).getLeft(dataElement)));\n            final boolean boolean = ((y.getParent(dataElement)) != null) && (y == (y.getParent(dataElement).getLeft(dataElement)));\n            if (x == yFormerParent) {\n                x.setParent(y, dataElement);\n                if (yWasLeftChild) {\n                    y.setLeft(x, dataElement);\n                    y.setRight(xFormerRightChild, dataElement);\n                } else {\n                    y.setRight(x, dataElement);\n                    y.setLeft(xFormerLeftChild, dataElement);\n                }\n            } else {\n                x.setParent(yFormerParent, dataElement);\n                if (yFormerParent != null) {\n                    if (yWasLeftChild) {\n                        yFormerParent.setLeft(x, dataElement);\n                    } else {\n                        yFormerParent.setRight(x, dataElement);\n                    }\n                } \n                y.setLeft(xFormerLeftChild, dataElement);\n                y.setRight(xFormerRightChild, dataElement);\n            }\n            if (y == xFormerParent) {\n                y.setParent(x, dataElement);\n                if (xWasLeftChild) {\n                    x.setLeft(y, dataElement);\n                    x.setRight(yFormerRightChild, dataElement);\n                } else {\n                    x.setRight(y, dataElement);\n                    x.setLeft(yFormerLeftChild, dataElement);\n                }\n            } else {\n                y.setParent(xFormerParent, dataElement);\n                if (xFormerParent != null) {\n                    if (xWasLeftChild) {\n                        xFormerParent.setLeft(y, dataElement);\n                    } else {\n                        xFormerParent.setRight(y, dataElement);\n                    }\n                } \n                x.setLeft(yFormerLeftChild, dataElement);\n                x.setRight(yFormerRightChild, dataElement);\n            }\n            if ((x.getLeft(dataElement)) != null) {\n                x.getLeft(dataElement).setParent(x, dataElement);\n            } \n            if ((x.getRight(dataElement)) != null) {\n                x.getRight(dataElement).setParent(x, dataElement);\n            } \n            if ((y.getLeft(dataElement)) != null) {\n                y.getLeft(dataElement).setParent(y, dataElement);\n            } \n            if ((y.getRight(dataElement)) != null) {\n                y.getRight(dataElement).setParent(y, dataElement);\n            } \n            x.swapColors(y, dataElement);\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]) == x) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = y;\n            } else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]) == y) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = x;\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"x":"y","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[156],"tindex":"92c37246-3e8a-11e6-8c78-332a912cf807","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:792","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key1 != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    boolean boolean = false;\n                    final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n                    while (it.hasNext()) {\n                        final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                        if ((((((multi.size()) >= 4) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) && (key4 == null ? (multi.getKey(3)) == null : key4.equals(multi.getKey(3)))) {\n                            it.remove();\n                            modified = true;\n                        } \n                    }\n                    return modified;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"92c39957-3e8a-11e6-8c78-db4dfaa5eb5a","method":{"position":"org.apache.commons.collections4.FactoryUtils:120","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate) {\n    if (classToInstantiate == null) {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, null, null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182],"tindex":"92c39958-3e8a-11e6-8c78-b9f14ab137ab","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:221","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                {\n                    return java.util.Map<V, K>.get(value);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[183,184,185,186],"tindex":"92c39959-3e8a-11e6-8c78-f32ded01a133","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:208","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.util.List<K>.indexOf(key);\n            if (index > 0) {\n                return java.util.List<K>.get((index - 1));\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:87","type":"CtBinaryOperatorImpl","sourcecode":"(iterator.hasNext()) == false"},"failures":[],"tindex":"92c3995a-3e8a-11e6-8c78-d53f86a2c803","method":{"position":"org.apache.commons.collections4.IteratorUtils:840","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if ((iterator.hasNext()) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.PushbackIterator.pushbackIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:151","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[],"tindex":"92c3995b-3e8a-11e6-8c78-218d075442ea","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K>(normalMap , reverseMap , inverseMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[187],"tindex":"92c3995c-3e8a-11e6-8c78-5b817e816f15","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:99","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            return decorated().addAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[188],"tindex":"92c3995d-3e8a-11e6-8c78-85fb0048ed4e","method":{"position":"org.apache.commons.collections4.map.LinkedMap:183","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[],"tindex":"92c3c06e-3e8a-11e6-8c78-fbfd21cd53fa","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"92c3c06f-3e8a-11e6-8c78-a76e82047829","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:154","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key2 != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final int int = hash(key1, key2);\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n                    while (entry != null) {\n                        if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n                    }\n                    return false;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"92c3c070-3e8a-11e6-8c78-4bded9ee025b","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1054","type":"CtMethodImpl","sourcecode":"protected void rangeCheck(final int index, final int beyond) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < 0) || (index >= beyond)) {\n                throw new java.lang.IndexOutOfBoundsException(((((\"Index '\" + index) + \"' out of bounds for size '\") + (int)) + \"'\"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:141","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[189],"tindex":"92c3c071-3e8a-11e6-8c78-392f8a69ecbd","method":{"position":"org.apache.commons.collections4.SetUtils:140","type":"CtMethodImpl","sourcecode":"public static <T>int hashCodeForSet(final java.util.Collection<T> set) {\n    if (set == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set == null) {\n                return 0;\n            } \n            int int = 0;\n            for (final T T : set) {\n                if (obj != null) {\n                    hashCode += obj.hashCode();\n                } \n            }\n            return hashCode;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getLeft(dataElement)) == node"},"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,51,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,93,94,97,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132],"tindex":"92c3e782-3e8a-11e6-8c78-85a62b95a272","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:823","type":"CtMethodImpl","sourcecode":"private void rotateLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getRight(dataElement);\n            node.setRight(rightChild.getLeft(dataElement), dataElement);\n            if ((rightChild.getLeft(dataElement)) != null) {\n                rightChild.getLeft(dataElement).setParent(node, dataElement);\n            } \n            rightChild.setParent(node.getParent(dataElement), dataElement);\n            if ((node.getParent(dataElement)) == null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = rightChild;\n            } else if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n                node.getParent(dataElement).setLeft(rightChild, dataElement);\n            } else {\n                node.getParent(dataElement).setRight(rightChild, dataElement);\n            }\n            rightChild.setLeft(node, dataElement);\n            node.setParent(rightChild, dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtBinaryOperatorImpl","sourcecode":"nCopies <= 0"},"failures":[190,191,192,193,194,195],"tindex":"92c3e783-3e8a-11e6-8c78-196669ef1bf1","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:125","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies <= 0) {\n        {\n            return getBag().add(transform(object), nCopies);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"nCopies"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[196,197,198],"tindex":"92c3e784-3e8a-11e6-8c78-25622290226e","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:404","type":"CtMethodImpl","sourcecode":"public java.util.Iterator<V> iterator(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (!(containsKey(key))) {\n                return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n            } \n            return new ValuesIterator(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"92c3e785-3e8a-11e6-8c78-372f6c48d6bb","method":{"position":"org.apache.commons.collections4.map.SingletonMap:231","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return isEqualValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[199,200,201,202,203,204,205],"tindex":"92c40e96-3e8a-11e6-8c78-1b5ef70c6a62","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:377","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            removeIfExpired(key, now());\n            return super.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[206,207],"tindex":"92c40e97-3e8a-11e6-8c78-c5f3f1aa5d5c","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:230","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        {\n            final boolean boolean = java.util.Set<E>.remove(object);\n            if (result) {\n                super.remove(object);\n            } \n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:216","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"92c40e98-3e8a-11e6-8c78-e97d9641056a","method":{"position":"org.apache.commons.collections4.ComparatorUtils:152","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullLowComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[],"tindex":"92c40e99-3e8a-11e6-8c78-2b964fa8b8ea","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        {\n            return java.util.Map<K, V>.equals(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"92c40e9a-3e8a-11e6-8c78-b5fa4ba1281e","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:221","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                {\n                    return java.util.Map<V, K>.get(value);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,148,228,229,230,231,232,233,234],"tindex":"92c40e9b-3e8a-11e6-8c78-8fbaccfb68e9","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:610","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, null);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtBinaryOperatorImpl","sourcecode":"(collection.size()) > 0"},"failures":[],"tindex":"92c435ac-3e8a-11e6-8c78-5fdfd989a9ad","method":{"position":"org.apache.commons.collections4.CollectionUtils:1689","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if ((collection.size()) > 0) {\n        {\n            return org.apache.commons.collections4.ListUtils.removeAll(collection, remove);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[235],"tindex":"92c435ad-3e8a-11e6-8c78-dd0544275a6d","method":{"position":"org.apache.commons.collections4.CollectionUtils:1749","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> predicatedCollection(final java.util.Collection<C> collection, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.collection.PredicatedCollection.predicatedCollection(collection, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[236],"tindex":"92c435ae-3e8a-11e6-8c78-2f713d2caf25","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"92c435af-3e8a-11e6-8c78-9bb85657d01a","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:336","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return false;\n            } \n            return coll.contains(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"92c435b0-3e8a-11e6-8c78-8d5605c47e3e","method":{"position":"org.apache.commons.collections4.IteratorUtils:544","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E> iterator1, final java.util.Iterator<? extends E> iterator2) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterator1 , iterator2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[],"tindex":"92c45cc1-3e8a-11e6-8c78-157e6e3cdb0a","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        {\n            if (object == (org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[237,238],"tindex":"92c45cc2-3e8a-11e6-8c78-5bee15381d48","method":{"position":"org.apache.commons.collections4.list.TransformedList:155","type":"CtMethodImpl","sourcecode":"public E set(final int index, E object) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            object = transform(object);\n            return getList().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"92c45cc3-3e8a-11e6-8c78-67f229ad1425","method":{"position":"org.apache.commons.collections4.MapUtils:183","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Number) {\n                        return ((java.lang.Number)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        try {\n                            final java.lang.String java.lang.String = ((java.lang.String)(answer));\n                            return java.text.NumberFormat.getInstance().parse(text);\n                        } catch (final java.text.ParseException e) {\n                        }\n                    } \n                } \n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:871","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"92c45cc4-3e8a-11e6-8c78-e966333583b8","method":{"position":"org.apache.commons.collections4.EnumerationUtils:50","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[239],"tindex":"92c45cc5-3e8a-11e6-8c78-a9a5988218f9","method":{"position":"org.apache.commons.collections4.PredicateUtils:211","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false"},"failures":[],"tindex":"92c45cc6-3e8a-11e6-8c78-556d1733d52c","method":{"position":"org.apache.commons.collections4.map.Flat3Map:857","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (boolean) {\n                return false;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = getKey();\n            final java.lang.Object java.lang.Object = getValue();\n            return (key == null ? (other.getKey()) == null : key.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[240,241],"tindex":"92c483d7-3e8a-11e6-8c78-a7ae6cce1493","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:429","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.Iterator<? extends java.util.Map.Entry<K, V>> nextIterator(int count) {\n    if (count > 3) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(keyIterator.hasNext())) {\n                return null;\n            } \n            final K K = keyIterator.next();\n            final org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>>() {\n                public java.util.Map.Entry<K, V> transform(final V input) {\n                    return new java.util.Map.Entry<K, V>() {\n                        public K getKey() {\n                            return key;\n                        }\n\n                        public V getValue() {\n                            return input;\n                        }\n\n                        public V setValue(V value) {\n                            throw new java.lang.UnsupportedOperationException();\n                        }\n                    };\n                }\n            };\n            return new org.apache.commons.collections4.iterators.TransformIterator<V, java.util.Map.Entry<K, V>>(new ValuesIterator(key) , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1603","type":"CtVariableReadImpl","sourcecode":"includeDuplicates"},"failures":[242,243,244],"tindex":"92c483d8-3e8a-11e6-8c78-ad2c50dd004e","method":{"position":"org.apache.commons.collections4.CollectionUtils:1588","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c, final boolean includeDuplicates) {\n    if (includeDuplicates) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"The collections must not be null\");\n            } \n            if (c == null) {\n                throw new java.lang.IllegalArgumentException(\"The comparator must not be null\");\n            } \n            final int int = (a instanceof java.util.Collection<?>) && (b instanceof java.util.Collection<?>) ? java.lang.Math.max(1, ((((java.util.Collection<?>)(a)).size()) + (((java.util.Collection<?>)(b)).size()))) : 10;\n            final java.util.Iterator<O> java.util.Iterator<O> = new org.apache.commons.collections4.iterators.CollatingIterator<O>(c , a.iterator() , b.iterator());\n            if (includeDuplicates) {\n                return org.apache.commons.collections4.IteratorUtils.toList(iterator, totalSize);\n            } else {\n                final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>(totalSize);\n                O O = null;\n                while (iterator.hasNext()) {\n                    final O O = iterator.next();\n                    if ((lastItem == null) || (!(lastItem.equals(item)))) {\n                        mergedList.add(item);\n                    } \n                    lastItem = item;\n                }\n                mergedList.trimToSize();\n                return mergedList;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"includeDuplicates":"includeDuplicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"92c4aae9-3e8a-11e6-8c78-4180fc4c9732","method":{"position":"org.apache.commons.collections4.map.SingletonMap:189","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (isEqualKey(key)) {\n                return V;\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,203,204,205,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,135,309,310],"tindex":"92c4aaea-3e8a-11e6-8c78-b5130dc884d1","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:93","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[311],"tindex":"92c4aaeb-3e8a-11e6-8c78-fbb5fbc5bab6","method":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, java.lang.Boolean> predicateTransformer(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.PredicateTransformer<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[312,313,314,315,316,317,318,319,320],"tindex":"92c4aaec-3e8a-11e6-8c78-d71bcf6252ed","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:213","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index > 0) {\n        {\n            final int int = indexOf(object);\n            final E E = super.set(index, object);\n            if ((pos != (-1)) && (pos != index)) {\n                super.remove(pos);\n            } \n            java.util.Set<E>.remove(removed);\n            java.util.Set<E>.add(object);\n            return removed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[321,322,323],"tindex":"92c4aaed-3e8a-11e6-8c78-31e1317a06ba","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:255","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if (coll.contains(it.next())) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[324,325],"tindex":"92c4d1fe-3e8a-11e6-8c78-e5dfce155047","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:110","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[326],"tindex":"92c4d1ff-3e8a-11e6-8c78-63114389cf05","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:91","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[1],"tindex":"92c4d200-3e8a-11e6-8c78-c93734cdf2d6","method":{"position":"org.apache.commons.collections4.CollectionUtils:1497","type":"CtMethodImpl","sourcecode":"public static int maxSize(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).maxSize();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.maxSize();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return -1;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[327,328,329,330,331],"tindex":"92c4d201-3e8a-11e6-8c78-e18fd61fe24d","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl","sourcecode":"sortedMap == null"},"failures":[332],"tindex":"92c4d202-3e8a-11e6-8c78-f7c145dca77b","method":{"position":"org.apache.commons.collections4.MapUtils:1772","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableSortedMap<K, V> iterableSortedMap(final java.util.SortedMap<K, V> sortedMap) {\n    if (sortedMap == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (sortedMap == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return sortedMap instanceof org.apache.commons.collections4.IterableSortedMap ? ((org.apache.commons.collections4.IterableSortedMap<K, V>)(sortedMap)) : new org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>(sortedMap) {            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"sortedMap"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:161","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"92c4f913-3e8a-11e6-8c78-59f17f02a09e","method":{"position":"org.apache.commons.collections4.IteratorUtils:976","type":"CtMethodImpl","sourcecode":"public static <E>E[] toArray(final java.util.Iterator<? extends E> iterator, final java.lang.Class<E> arrayClass) {\n    if (iterator instanceof java.util.ListIterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (arrayClass == null) {\n                throw new java.lang.NullPointerException(\"Array class must not be null\");\n            } \n            final java.util.List<E> java.util.List<E> = org.apache.commons.collections4.IteratorUtils.toList(iterator, 100);\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final E[] E[] = ((E[])(java.lang.reflect.Array.newInstance(arrayClass, list.size())));\n            return list.toArray(array);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[333],"tindex":"92c4f914-3e8a-11e6-8c78-973e3f588d7d","method":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:46","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsExceptionPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsExceptionPredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[212,213,214,215,216,218,219,220,221,222,223,224,225,226,227,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359],"tindex":"92c4f915-3e8a-11e6-8c78-4d265d4861ca","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if (o == (org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.this)) {\n                return true;\n            } else if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(o));\n            if ((org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(K, other.getKey())) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(V, other.getValue()))) {\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"92c4f916-3e8a-11e6-8c78-531645c0d03c","method":{"position":"org.apache.commons.collections4.IteratorUtils:744","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> loopingIterator(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingIterator<E>(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"92c52027-3e8a-11e6-8c78-bbd2800545a3","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:97","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[360,361,362,363,364,365,322,366,367,368,369,370,371,372,323,373],"tindex":"92c52028-3e8a-11e6-8c78-81df60258f84","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:132","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i++;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[374],"tindex":"92c52029-3e8a-11e6-8c78-495d57e12e29","method":{"position":"org.apache.commons.collections4.SplitMapUtils:104","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Get<K, V>.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:55","type":"CtBinaryOperatorImpl","sourcecode":"trie instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[375,376],"tindex":"92c5202a-3e8a-11e6-8c78-17a89b5cda83","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:54","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Trie<K, V> org.apache.commons.collections4.Trie<K, V> = ((org.apache.commons.collections4.Trie<K, V>)(trie));\n                return tmpTrie;\n            } \n            return new org.apache.commons.collections4.trie.UnmodifiableTrie<K, V>(trie);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:66","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[377],"tindex":"92c5202b-3e8a-11e6-8c78-4be33862c22c","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:379","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Collection<E> coll) {\n    if (coll == null) {\n        {\n            java.util.List<java.util.Collection<E>>.remove(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"92c5473c-3e8a-11e6-8c78-e963be36a78c","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.TransformedBag<E> org.apache.commons.collections4.bag.TransformedBag<E> = new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"92c5473d-3e8a-11e6-8c78-7b5665286045","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return getEntrySet().containsAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:120","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[378],"tindex":"92c5473e-3e8a-11e6-8c78-a534c9416da3","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:119","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.List<E> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            final java.util.Set<E> java.util.Set<E> = new java.util.HashSet<E>(list);\n            list.retainAll(set);\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[379],"tindex":"92c5473f-3e8a-11e6-8c78-2fb346bf5185","method":{"position":"org.apache.commons.collections4.ClosureUtils:279","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures) {\n    if (closures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[380],"tindex":"92c54740-3e8a-11e6-8c78-017132987492","method":{"position":"org.apache.commons.collections4.ClosureUtils:182","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName, paramTypes, args));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:50","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[381],"tindex":"92c54741-3e8a-11e6-8c78-0f57486d216a","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:45","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<? extends K, ? extends V> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[],"tindex":"92c56e52-3e8a-11e6-8c78-5f9454760b21","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:451","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"92c56e53-3e8a-11e6-8c78-07bd8783bff1","method":{"position":"org.apache.commons.collections4.list.TransformedList:142","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            coll = transform(coll);\n            return getList().addAll(index, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"92c56e54-3e8a-11e6-8c78-878b8ffcbbac","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:49","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Predicate<T>[] copy(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Predicate<T>[])(predicates.clone()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[382,383,384,385,386],"tindex":"92c56e55-3e8a-11e6-8c78-fb46e93f4bd2","method":{"position":"org.apache.commons.collections4.MapUtils:938","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void debugPrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (label != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"label"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"92c56e56-3e8a-11e6-8c78-a7437d8f8034","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:82","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SplitMapUtils:211","type":"CtBinaryOperatorImpl","sourcecode":"get == null"},"failures":[],"tindex":"92c56e57-3e8a-11e6-8c78-75d92e265736","method":{"position":"org.apache.commons.collections4.SplitMapUtils:210","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>org.apache.commons.collections4.IterableMap<K, V> readableMap(final org.apache.commons.collections4.Get<K, V> get) {\n    if (get == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (get == null) {\n                throw new java.lang.IllegalArgumentException(\"Get must not be null\");\n            } \n            if (get instanceof java.util.Map) {\n                return get instanceof org.apache.commons.collections4.IterableMap ? ((org.apache.commons.collections4.IterableMap<K, V>)(get)) : org.apache.commons.collections4.MapUtils.iterableMap(((java.util.Map<K, V>)(get)));\n            } \n            return new org.apache.commons.collections4.SplitMapUtils.WrappedGet<K, V>(get);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"get":"get"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"92c59568-3e8a-11e6-8c78-8d1b400b645f","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"92c59569-3e8a-11e6-8c78-9fe88fcd330d","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:792","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key1 != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    boolean boolean = false;\n                    final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n                    while (it.hasNext()) {\n                        final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                        if ((((((multi.size()) >= 4) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) && (key4 == null ? (multi.getKey(3)) == null : key4.equals(multi.getKey(3)))) {\n                            it.remove();\n                            modified = true;\n                        } \n                    }\n                    return modified;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433],"tindex":"92c5956a-3e8a-11e6-8c78-6162bba58ebd","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:60","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedBag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedBag<E>(bag , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[434],"tindex":"92c5956b-3e8a-11e6-8c78-9fedf1cf2727","method":{"position":"org.apache.commons.collections4.CollectionUtils:1770","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> transformingCollection(final java.util.Collection<E> collection, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.collection.TransformedCollection.transformingCollection(collection, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:979","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[435,436,208,437,210,211,209,212,213,438,439,214,215,216,440,217,218,441,219,442,443,220,221,444,445,446,222,223,224,225,226,227,148,447,448,228,449,450,451,229,334,230,231,232,233,234],"tindex":"92c5bc7c-3e8a-11e6-8c78-c111601676b2","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:57","type":"CtMethodImpl","sourcecode":"static boolean isOutOfBoundsIndex(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)) {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"92c5bc7d-3e8a-11e6-8c78-59a770a86869","method":{"position":"org.apache.commons.collections4.iterators.TransformIterator:109","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends I> iterator) {\n    if (iterator == null) {\n        {\n            org.apache.commons.collections4.iterators.TransformIterator.this.java.util.Iterator<? extends I> = iterator;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[452,453],"tindex":"92c5bc7e-3e8a-11e6-8c78-b3dbddd56e0d","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:199","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[380,454,455,456,457,458,459],"tindex":"92c5bc7f-3e8a-11e6-8c78-9d61a145b327","method":{"position":"org.apache.commons.collections4.functors.TransformerClosure:48","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> transformerClosure(final org.apache.commons.collections4.Transformer<? super E, ?> transformer) {\n    if (transformer == null) {\n        {\n            if (transformer == null) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            return new org.apache.commons.collections4.functors.TransformerClosure<E>(transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[460,461],"tindex":"92c5e390-3e8a-11e6-8c78-b3c4c05a3868","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:140","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().retainAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[462],"tindex":"92c5e391-3e8a-11e6-8c78-951ed9507b60","method":{"position":"org.apache.commons.collections4.list.TransformedList:127","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            return getList().lastIndexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[312,313,463,314,464,465,466,467,468,315,469,470,471,317,318,472,473,474,475,476,477,478,479,480,481,482,206,483,484,485,486,487,207,488],"tindex":"92c5e392-3e8a-11e6-8c78-71416176fa94","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:70","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            decorated().add(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[489,490,491,492,493,494,495,496,497,498],"tindex":"92c5e393-3e8a-11e6-8c78-934b6903b404","method":{"position":"org.apache.commons.collections4.map.LRUMap:192","type":"CtMethodImpl","sourcecode":"protected void moveToMRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        {\n            if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                (int)++;\n                if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n                    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n                } \n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n            } else if (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                throw new java.lang.IllegalStateException((\"Can't move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[499],"tindex":"92c60aa4-3e8a-11e6-8c78-1fda7744c27b","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:76","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((preds.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(preds[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:502","type":"CtUnaryOperatorImpl","sourcecode":"!(h.isExternalNode())"},"failures":[],"tindex":"92c60aa5-3e8a-11e6-8c78-d7ecd9848732","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:531","type":"CtMethodImpl","sourcecode":"private void removeInternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isExternalNode())) {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isInternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an internal Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.int = h.int;\n            {\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) && ((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != h)) {\n                    p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                } else {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                }\n                if ((child.int) > (parent.int)) {\n                    child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n                } \n            }\n            {\n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } else {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                }\n            }\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407787/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}