{"failureDictionary":{"org.apache.commons.collections4.bag.CollectionBagTest.testCanonicalEmptyCollectionExists":81,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":141,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":55,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":217,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":551,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":256,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":27,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":459,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":197,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":324,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":385,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":70,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullValue":313,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":93,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIsEmpty":491,"org.apache.commons.collections4.CollectionUtilsTest.collect":667,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectEqualsSelf":102,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testSerializeDeserializeThenCompare":246,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSerializeDeserializeThenCompare":342,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":599,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":653,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":76,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":574,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":423,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":289,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":352,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":770,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":546,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":767,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":511,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSimpleSerialization":468,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":586,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":250,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectEqualsSelf":424,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":717,"org.apache.commons.collections4.queue.PredicatedQueueTest.testFullQueueCompatibility":476,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":224,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsContract":443,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":192,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":561,"org.apache.commons.collections4.CollectionUtilsTest.select":658,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEqualsNull":400,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":221,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":644,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapHashCode":309,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":35,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":772,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":2,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":637,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":572,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":364,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":654,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":154,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEqualsNull":440,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":376,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":4,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":575,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":62,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":188,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":635,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":498,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":616,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":94,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":568,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":617,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":16,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":108,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":715,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":688,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":171,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalEmptyCollectionExists":401,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":432,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":117,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":211,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":755,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsSelfHashCode":417,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":72,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":355,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":784,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectEqualsSelf":203,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":9,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":334,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":461,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":721,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":362,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":99,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":781,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsSelfHashCode":404,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":139,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":703,"org.apache.commons.collections4.trie.PatriciaTrieTest.testLastKey":133,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":120,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":348,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":704,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testDecorateFactory":299,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":587,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":285,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":679,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":69,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":585,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":584,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":708,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":562,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":581,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":720,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":707,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":606,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":661,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":549,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":255,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":540,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":614,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":761,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":39,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":493,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSimpleSerialization":402,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEqualsNull":413,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":121,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":629,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSimpleSerialization":339,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":701,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":726,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":318,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":75,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":28,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":682,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":752,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":208,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":327,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":201,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":538,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":383,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":240,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":152,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":712,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":519,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":590,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":684,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":668,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":65,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":52,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":177,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testUnmodifiable":300,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":24,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":621,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":20,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":252,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":134,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":216,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":552,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":604,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking2":509,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":237,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":23,"org.apache.commons.collections4.queue.PredicatedQueueTest.testSerializeDeserializeThenCompare":497,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":113,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePoll":478,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":577,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":375,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap":282,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":691,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":91,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectEqualsSelf":228,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":808,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":351,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":597,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEmptyQueueSerialization":480,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":44,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":390,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":603,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":588,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":602,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":694,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":347,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":83,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectEqualsSelf":466,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":706,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":151,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSimpleSerialization":415,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":33,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":734,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":638,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":363,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":420,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":421,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":128,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":435,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":800,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":642,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":582,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":573,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastEntrySet":791,"org.apache.commons.collections4.MapUtilsTest.testConvertResourceBundle":292,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":472,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullStream":269,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":759,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":633,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":206,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":652,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":583,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":123,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":605,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":143,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":389,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":744,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":176,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":207,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":54,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":43,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":805,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":515,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":329,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":576,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":264,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":346,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectEqualsSelf":244,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":529,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":786,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":30,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":186,"org.apache.commons.collections4.MapUtilsTest.testInvertMap":290,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsSelfHashCode":84,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRetainAll":494,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":48,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":266,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":523,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":175,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":732,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":234,"org.apache.commons.collections4.queue.PredicatedQueueTest.testSimpleSerialization":504,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":570,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":571,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":699,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":356,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":112,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":110,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSerializeDeserializeThenCompare":471,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":807,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":651,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":182,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":119,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":60,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":200,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":595,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":395,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":507,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":209,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":344,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking":138,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorIsSerializable":465,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":3,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":641,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":692,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":15,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":539,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":622,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":18,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":550,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":797,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":288,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":448,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":361,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":665,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":286,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNonEmptyMap":280,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalFullCollectionExists":412,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":650,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":564,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":111,"org.apache.commons.collections4.ListUtilsTest.testSelect":664,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":518,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectHashCodeEqualsContract":214,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":663,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":490,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":446,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapClear":321,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":533,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":625,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":61,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":147,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":17,"org.apache.commons.collections4.MapUtilsTest.testEmptyIfNull":298,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetIteratorRemoveChangesMap":312,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":536,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":535,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":534,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":600,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":373,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":639,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":307,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalFullCollectionExists":399,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":771,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":325,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":547,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":219,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":349,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":326,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":19,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":169,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testCanonicalFullCollectionExists":336,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":410,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsContract":403,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":380,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":557,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFullMapCompatibility":322,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":453,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":378,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCanonicalEmptyCollectionExists":503,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":580,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":184,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":80,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":419,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":358,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":387,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":41,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":558,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectEqualsSelf":411,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":332,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":63,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":291,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":314,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectHashCodeEqualsContract":245,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":353,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":795,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":532,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":768,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectHashCodeEqualsContract":505,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":181,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":372,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":371,"org.apache.commons.collections4.MapUtilsTest.testPopulateMap":283,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":370,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":659,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastEntrySet":783,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":222,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastEntrySet":787,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":460,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":794,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEqualsNull":227,"org.apache.commons.collections4.queue.PredicatedQueueTest.testFullQueueSerialization":483,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":730,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":257,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":620,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":239,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":643,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":168,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFirstKey":302,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsContract":469,"org.apache.commons.collections4.map.ListOrderedMapTest.testPreviousKey":88,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":155,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":10,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithEmptyMap":279,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":747,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":479,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":592,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":406,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":464,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectEqualsSelf":398,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":527,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":42,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":71,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":681,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":462,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":58,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":330,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsContract":429,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":799,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":757,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":578,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":758,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":104,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalFullCollectionExists":439,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":273,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":158,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":596,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":718,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":107,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":323,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":275,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":680,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":308,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":738,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":601,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":215,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":268,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":628,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":64,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":284,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":57,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":548,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":524,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":773,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":647,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testSerializeDeserializeThenCompare":230,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEqualsNull":337,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":97,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":198,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":315,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastEntrySet":798,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":632,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":619,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":159,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":457,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":618,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":343,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEqualsNull":202,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":436,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueRemove":475,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":543,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testDecorateFactory":180,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":516,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":745,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionSize":486,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":793,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":98,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":655,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectHashCodeEqualsContract":103,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCanonicalFullCollectionExists":501,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":142,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":199,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":156,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":705,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":185,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":512,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":25,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":32,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":499,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":782,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSerializeDeserializeThenCompare":445,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":569,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":753,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectHashCodeEqualsContract":204,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":36,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":73,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":236,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":739,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":796,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":114,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":333,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":613,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":677,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":762,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":634,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":690,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalEmptyCollectionExists":414,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIteratorRemove":488,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":607,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream":296,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":374,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":392,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":685,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":297,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":657,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":484,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":806,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSerializeDeserializeThenCompare":418,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":526,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":178,"org.apache.commons.collections4.bag.CollectionBagTest.testSimpleSerialization":82,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":803,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":711,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":790,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":7,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":38,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":751,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":678,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":122,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":125,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":763,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicateEx1":666,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":193,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectEqualsSelf":260,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":382,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":630,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":742,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":241,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":11,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":593,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":683,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":785,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEmptyListSort":463,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":489,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":631,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":87,"org.apache.commons.collections4.queue.PredicatedQueueTest.testGet":473,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":624,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":140,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":722,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":458,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":254,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":366,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":359,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":391,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":778,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":8,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":174,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":697,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":187,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":520,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":743,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":693,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":183,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":482,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":640,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":191,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":760,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":137,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":379,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":563,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsSelfHashCode":444,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":170,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":409,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":100,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":238,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectHashCodeEqualsContract":340,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":68,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":249,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":675,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":517,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":673,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":213,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNull":267,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":788,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":686,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEqualsNull":243,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":350,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":542,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsSelfHashCode":470,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":541,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":746,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":615,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":695,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":150,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":626,"org.apache.commons.collections4.map.ListOrderedMap2Test.testPreviousKey":90,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":609,"org.apache.commons.collections4.map.LRUMapTest.testClone":769,"org.apache.commons.collections4.bag.CollectionBagTest.testCanonicalFullCollectionExists":79,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":648,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeThenCompare":205,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":235,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":554,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":674,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":161,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":598,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":735,"org.apache.commons.collections4.ListUtilsTest.testSubtract":766,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":545,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSimpleSerialization":442,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":702,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":765,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":756,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":316,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":709,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":153,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":649,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":531,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":360,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":727,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":96,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":775,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":696,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":455,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":627,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":741,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":388,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":6,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":34,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":21,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":304,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":305,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":303,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":212,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":45,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":226,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":671,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":287,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":149,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":233,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":277,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":608,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullKey":319,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":251,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":148,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsSelfHashCode":430,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":451,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":129,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":179,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":700,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":422,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectEqualsSelf":78,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":496,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":278,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":384,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithEmptyMap":281,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testCanonicalEmptyCollectionExists":338,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":809,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":276,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":190,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":434,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":408,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":513,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testLastKey":301,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":59,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":611,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":394,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":719,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":95,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectHashCodeEqualsContract":229,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":749,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":780,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":565,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":776,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":1,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":777,"org.apache.commons.collections4.queue.PredicatedQueueTest.testRemove":474,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":716,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEqualsNull":426,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray2":485,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":495,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":612,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToString":487,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":163,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":450,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":164,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEqualsNull":259,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":528,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":646,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":126,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":397,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":645,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testLastKey":130,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":162,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":544,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":386,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":160,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":567,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSimpleSerialization":428,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":232,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":560,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":456,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":623,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":656,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":253,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":555,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":556,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":452,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":636,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":13,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":270,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":14,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":195,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":118,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":754,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalEmptyCollectionExists":427,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":591,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":396,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":447,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":124,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":610,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":774,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":689,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":37,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":660,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":713,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":294,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":46,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":537,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":433,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEqualsNull":135,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":247,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":67,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEqualsNull":502,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":293,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":714,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":295,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":258,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsContract":189,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":514,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":50,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":454,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":724,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":723,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":225,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":594,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":802,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":22,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalEmptyCollectionExists":441,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":698,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":49,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":194,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectHashCodeEqualsContract":261,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":750,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":31,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionClear":492,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":357,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":525,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":676,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking":508,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":728,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":510,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMakeMap":317,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":157,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":467,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":220,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":672,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":132,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":12,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":167,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":731,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":725,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":47,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":248,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":29,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":662,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":521,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":172,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicateEx1":86,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":736,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":131,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":165,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":166,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":106,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":116,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex1":522,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":449,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":354,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEmptyMapCompatibility":320,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":56,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":146,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":393,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":144,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":589,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":263,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":271,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":801,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":311,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectHashCodeEqualsSelfHashCode":341,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":310,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":306,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":477,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":559,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":792,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":437,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":145,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":669,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":26,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":764,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":66,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":328,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":365,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":265,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":173,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":101,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":223,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":40,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":381,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEqualsNull":105,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":566,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":687,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsContract":416,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":345,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":737,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":367,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":368,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":369,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalFullCollectionExists":425,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPut":331,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":748,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":810,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectEqualsSelf":335,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":377,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":92,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":218,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":51,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":115,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":729,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectEqualsSelf":500,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":804,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSerializeDeserializeThenCompare":431,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testSerializeDeserializeThenCompare":262,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEmptyQueueCompatibility":481,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":89,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":553,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectEqualsSelf":438,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":136,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSerializeDeserializeThenCompare":405,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":210,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":109,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":242,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":231,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":779,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectHashCodeEqualsSelfHashCode":506,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":127,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":407,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":85,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":77,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":670,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":74,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":196,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":530,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":272,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":0,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":274,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":710,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":789,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":579,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":733,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":740},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84],"tindex":"f4caef34-3f37-11e6-92ef-e979d6232b5e","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.CollectionBag<E>(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4cb8b75-3f37-11e6-92ef-972b9a9f8c8b","method":{"position":"org.apache.commons.collections4.SplitMapUtils:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.SplitMapUtils.WrappedPut.this)) {\n                return true;\n            } \n            return (obj instanceof org.apache.commons.collections4.SplitMapUtils.WrappedPut) && (((org.apache.commons.collections4.SplitMapUtils.WrappedPut<?, ?>)(obj)).org.apache.commons.collections4.Put<?, ?>.equals(org.apache.commons.collections4.SplitMapUtils.WrappedPut.this.org.apache.commons.collections4.Put<K, V>));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl"},"failures":[85],"tindex":"f4cb8b76-3f37-11e6-92ef-57a0da4a644a","method":{"position":"org.apache.commons.collections4.PredicateUtils:421","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4cbb287-3f37-11e6-92ef-2161e40f6def","method":{"position":"org.apache.commons.collections4.CollectionUtils:251","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> intersection(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (b == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, helper.min(obj));\n            }\n            return helper.list();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4cbb288-3f37-11e6-92ef-6740e4dfc765","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:259","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.lang.Object put(final K key, final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(1);\n                coll.add(((V)(value)));\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.add(((V)(value)));\n            }\n            return result ? value : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4cbd999-3f37-11e6-92ef-2f52a5b42ba0","method":{"position":"org.apache.commons.collections4.ListUtils:186","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> select(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl"},"failures":[86],"tindex":"f4cbd99a-3f37-11e6-92ef-39904f911d36","method":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (predicate == null) {\n                        throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n                    } \n                    return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(predicate);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4cc00ab-3f37-11e6-92ef-8bf8d36a1b5c","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:317","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryBefore(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl"},"failures":[87,88,89,90],"tindex":"f4cc00ac-3f37-11e6-92ef-3fbbca0c18f7","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:208","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.util.List<K>.indexOf(key);\n            if (index > 0) {\n                return java.util.List<K>.get((index - 1));\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4cc27bd-3f37-11e6-92ef-97c7945354cb","method":{"position":"org.apache.commons.collections4.FactoryUtils:139","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, paramTypes, args);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl"},"failures":[91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],"tindex":"f4cc27be-3f37-11e6-92ef-e3136e0c7ea1","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1322","type":"CtMethodImpl","sourcecode":"private boolean doEquals(final java.lang.Object obj, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                try {\n                    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = getMapIterator(dataElement) ; it.hasNext() ; ) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        final java.lang.Object java.lang.Object = it.getValue();\n                        if ((value.equals(other.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                } catch (final java.lang.ClassCastException ex) {\n                    return false;\n                } catch (final java.lang.NullPointerException ex) {\n                    return false;\n                }\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl"},"failures":[115],"tindex":"f4cc4ecf-3f37-11e6-92ef-8bf71843bf5e","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n            } \n            java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4cc4ed0-3f37-11e6-92ef-e5a63104bcb2","method":{"position":"org.apache.commons.collections4.SplitMapUtils:79","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl"},"failures":[116,117,118,119],"tindex":"f4cc75e1-3f37-11e6-92ef-8d3c9d9f0391","method":{"position":"org.apache.commons.collections4.map.TransformedMap:197","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl"},"failures":[120,121,122],"tindex":"f4cc75e2-3f37-11e6-92ef-473df6150f8a","method":{"position":"org.apache.commons.collections4.MapUtils:968","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\nprivate static void verbosePrintInternal(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map, final org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>> lineage, final boolean debug) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            if (map == null) {\n                if (label != null) {\n                    out.print(label);\n                    out.print(\" = \");\n                } \n                out.println(\"null\");\n                return ;\n            } \n            if (label != null) {\n                out.print(label);\n                out.println(\" = \");\n            } \n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println(\"{\");\n            lineage.push(map);\n            for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : map.entrySet()) {\n                final java.lang.Object java.lang.Object = entry.getKey();\n                final java.lang.Object java.lang.Object = entry.getValue();\n                if ((childValue instanceof java.util.Map) && (!(lineage.contains(childValue)))) {\n                    org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, (childKey == null ? \"null\" : childKey), ((java.util.Map<?, ?>)(childValue)), lineage, debug);\n                } else {\n                    org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n                    out.print(childKey);\n                    out.print(\" = \");\n                    final int int = lineage.indexOf(childValue);\n                    if (lineageIndex == (-1)) {\n                        out.print(childValue);\n                    } else if (((lineage.size()) - 1) == lineageIndex) {\n                        out.print(\"(this Map)\");\n                    } else {\n                        out.print(((\"(ancestor[\" + ((((lineage.size()) - 1) - lineageIndex) - 1)) + \"] Map)\"));\n                    }\n                    if (debug && (childValue != null)) {\n                        out.print(' ');\n                        out.println(childValue.getClass().getName());\n                    } else {\n                        out.println();\n                    }\n                }\n            }\n            lineage.pop();\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println((debug ? \"} \" + (map.getClass().getName()) : \"}\"));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl"},"failures":[123,124,125,126],"tindex":"f4cc9cf3-3f37-11e6-92ef-618a111dc828","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:168","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().remove(object);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:96","type":"CtBinaryOperatorImpl"},"failures":[127],"tindex":"f4cc9cf4-3f37-11e6-92ef-e9b29c17b034","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:95","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.MultiKeyMap<K, V> multiKeyMap(final org.apache.commons.collections4.map.AbstractHashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> map) {\n    if (map == null) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            if ((map.size()) > 0) {\n                throw new java.lang.IllegalArgumentException(\"Map must be empty\");\n            } \n            return new org.apache.commons.collections4.map.MultiKeyMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtBinaryOperatorImpl"},"failures":[128,129,130,131,132,133],"tindex":"f4cc9cf5-3f37-11e6-92ef-ff3ac6ecb9dd","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1162","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        {\n            if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                return null;\n            } \n            while ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (node.int)) {\n                node = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n            return node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4ccc406-3f37-11e6-92ef-55390e2ea508","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:235","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Set<java.util.Map.Entry<K, java.lang.Object>> java.util.Set<java.util.Map.Entry<K, java.lang.Object>> = decorated().entrySet();\n            if (pairs != null) {\n                for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : pairs) {\n                    if (((java.util.Collection<V>)(entry.getValue())).contains(value)) {\n                        return true;\n                    } \n                }\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl"},"failures":[134],"tindex":"f4ccc407-3f37-11e6-92ef-a98e4499bc22","method":{"position":"org.apache.commons.collections4.TransformerUtils:192","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl"},"failures":[135],"tindex":"f4cceb18-3f37-11e6-92ef-fb1500aa7e93","method":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.TransformingComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.TransformingComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.TransformingComparator<?, ?> org.apache.commons.collections4.comparators.TransformingComparator<?, ?> = ((org.apache.commons.collections4.comparators.TransformingComparator<?, ?>)(object));\n                return null == (java.util.Comparator<O>) ? null == (comp.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(comp.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:61","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4cceb19-3f37-11e6-92ef-1b9bf7e8fad2","method":{"position":"org.apache.commons.collections4.MapUtils:1521","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4cceb1a-3f37-11e6-92ef-af02c708857f","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:536","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.list.AbstractLinkedList.Node<E> getNode(final int index, final boolean endMarkerAllowed) throws java.lang.IndexOutOfBoundsException {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IndexOutOfBoundsException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") less than zero.\"));\n            } \n            if ((!endMarkerAllowed) && (index == (int))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") is the size of the list.\"));\n            } \n            if (index > (int)) {\n                throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn't get the node: \" + \"index (\") + index) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n            } \n            org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            if (index < ((int) / 2)) {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            } else {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            }\n            return node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[136],"tindex":"f4cd122b-3f37-11e6-92ef-3998ee46ec0e","method":{"position":"org.apache.commons.collections4.PredicateUtils:337","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4cd122c-3f37-11e6-92ef-b92fb6030d54","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:79","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[137,138,139],"tindex":"f4cd122d-3f37-11e6-92ef-6723413b1862","method":{"position":"org.apache.commons.collections4.list.PredicatedList:112","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            validate(object);\n            decorated().add(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl"},"failures":[140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179],"tindex":"f4cd393e-3f37-11e6-92ef-9364623ebf32","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:153","type":"CtMethodImpl","sourcecode":"private int getHash(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return 0;\n            } \n            int int = key.hashCode();\n            hash += ~(hash << 15);\n            hash ^= hash >>> 10;\n            hash += hash << 3;\n            hash ^= hash >>> 6;\n            hash += ~(hash << 11);\n            hash ^= hash >>> 16;\n            hash %= org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int;\n            return hash < 0 ? hash * (-1) : hash;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:55","type":"CtBinaryOperatorImpl"},"failures":[180],"tindex":"f4cd393f-3f37-11e6-92ef-f141cdbf21bb","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:54","type":"CtMethodImpl","sourcecode":"public static <T>java.util.Collection<T> unmodifiableCollection(final java.util.Collection<? extends T> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Collection<T> java.util.Collection<T> = ((java.util.Collection<T>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableCollection<T>(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4cd3940-3f37-11e6-92ef-e1d53db7e55e","method":{"position":"org.apache.commons.collections4.IteratorUtils:824","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4cd3941-3f37-11e6-92ef-e7f572731050","method":{"position":"org.apache.commons.collections4.MapUtils:255","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                {\n                    final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n                    if (answer == null) {\n                        return null;\n                    } \n                    if (answer instanceof java.lang.Integer) {\n                        return ((java.lang.Integer)(answer));\n                    } \n                    return java.lang.Integer.valueOf(answer.intValue());\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl"},"failures":[181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262],"tindex":"f4cd6052-3f37-11e6-92ef-b58f767410c1","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            return java.util.Map<K, V>.equals(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4cd6053-3f37-11e6-92ef-7f95e1d2a500","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:598","type":"CtMethodImpl","sourcecode":"protected void destroyEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != null) {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            entry.java.lang.Object = null;\n            entry.java.lang.Object = null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl"},"failures":[263],"tindex":"f4cd8764-3f37-11e6-92ef-b77b440b0872","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4cd8765-3f37-11e6-92ef-85d15db25425","method":{"position":"org.apache.commons.collections4.map.SingletonMap:189","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (isEqualKey(key)) {\n                return V;\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl"},"failures":[264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,120,294,295,121,122,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342],"tindex":"f4cd8766-3f37-11e6-92ef-eb4ab246ac75","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = ((java.util.SortedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableSortedMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl"},"failures":[343,128,344,129,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386],"tindex":"f4cd8767-3f37-11e6-92ef-ebadbcdbec16","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:456","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getNearestEntryForKey(final K key, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    return current;\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:153","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4cdae78-3f37-11e6-92ef-19d1175df3de","method":{"position":"org.apache.commons.collections4.ComparatorUtils:172","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullHighComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4cdae79-3f37-11e6-92ef-4b7491b0ec90","method":{"position":"org.apache.commons.collections4.MapUtils:255","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                {\n                    final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n                    if (answer == null) {\n                        return null;\n                    } \n                    if (answer instanceof java.lang.Integer) {\n                        return ((java.lang.Integer)(answer));\n                    } \n                    return java.lang.Integer.valueOf(answer.intValue());\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl"},"failures":[387,388,389,390,391],"tindex":"f4cdd58a-3f37-11e6-92ef-55817acb18cc","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            return remove(object, 1);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtBinaryOperatorImpl"},"failures":[392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,115,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447],"tindex":"f4cdd58b-3f37-11e6-92ef-5389e19c33d8","method":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:112","type":"CtMethodImpl","sourcecode":"protected void checkBound(final int bound, final int len, final java.lang.String type) {\n    if (len > bound) {\n        {\n            if (bound > len) {\n                throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s beyond the end of the array. \"));\n            } \n            if (bound < 0) {\n                throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s before the start of the array. \"));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"bound","bound":"len"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[448],"tindex":"f4cdd58c-3f37-11e6-92ef-65eb508e13fe","method":{"position":"org.apache.commons.collections4.bag.SynchronizedSortedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedSortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.SynchronizedSortedBag<E>(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[449],"tindex":"f4cdd58d-3f37-11e6-92ef-61f42723f1c0","method":{"position":"org.apache.commons.collections4.BagUtils:84","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedBag.synchronizedBag(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:59","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4cdfc9e-3f37-11e6-92ef-db004debd3b5","method":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PeekingIterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PeekingIterator<E> org.apache.commons.collections4.iterators.PeekingIterator<E> = ((org.apache.commons.collections4.iterators.PeekingIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PeekingIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl"},"failures":[450,451],"tindex":"f4cdfc9f-3f37-11e6-92ef-6d70722b2572","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:429","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.Iterator<? extends java.util.Map.Entry<K, V>> nextIterator(int count) {\n    if (count == 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(keyIterator.hasNext())) {\n                return null;\n            } \n            final K K = keyIterator.next();\n            final org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>>() {\n                public java.util.Map.Entry<K, V> transform(final V input) {\n                    return new java.util.Map.Entry<K, V>() {\n                        public K getKey() {\n                            return key;\n                        }\n\n                        public V getValue() {\n                            return input;\n                        }\n\n                        public V setValue(V value) {\n                            throw new java.lang.UnsupportedOperationException();\n                        }\n                    };\n                }\n            };\n            return new org.apache.commons.collections4.iterators.TransformIterator<V, java.util.Map.Entry<K, V>>(new ValuesIterator(key) , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl"},"failures":[452],"tindex":"f4ce23b0-3f37-11e6-92ef-c58c97526a06","method":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            if (obj == (org.apache.commons.collections4.functors.ConstantTransformer.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                return false;\n            } \n            final java.lang.Object java.lang.Object = ((org.apache.commons.collections4.functors.ConstantTransformer<?, ?>)(obj)).getConstant();\n            return (otherConstant == (getConstant())) || ((otherConstant != null) && (otherConstant.equals(getConstant())));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtBinaryOperatorImpl"},"failures":[453],"tindex":"f4ce23b1-3f37-11e6-92ef-f5bd8145c1d5","method":{"position":"org.apache.commons.collections4.functors.TransformerClosure:48","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> transformerClosure(final org.apache.commons.collections4.Transformer<? super E, ?> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            return new org.apache.commons.collections4.functors.TransformerClosure<E>(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4ce23b2-3f37-11e6-92ef-d5e50728fe73","method":{"position":"org.apache.commons.collections4.list.TreeList:173","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (indexOf(object)) >= 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4ce23b3-3f37-11e6-92ef-71592e7bcf23","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:174","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().removeAll(coll);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4ce4ac4-3f37-11e6-92ef-737ccbb3cc75","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4ce4ac5-3f37-11e6-92ef-316b852613cc","method":{"position":"org.apache.commons.collections4.list.PredicatedList:98","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4ce4ac6-3f37-11e6-92ef-0b0efe344401","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(((java.util.Map.Entry<?, ?>)(o)).getKey());\n            return (candidate != null) && (candidate.equals(o));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl"},"failures":[454],"tindex":"f4ce4ac7-3f37-11e6-92ef-99b399efb4dd","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl"},"failures":[455,456,457,458],"tindex":"f4ce71d8-3f37-11e6-92ef-cfca53c6f09c","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                {\n                    if ((org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) || (coll.isEmpty())) {\n                        return false;\n                    } \n                    boolean boolean = false;\n                    final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                    while (it.hasNext()) {\n                        modified |= remove(it.next());\n                    }\n                    return modified;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4ce71d9-3f37-11e6-92ef-918a2dd27449","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:302","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            _putAll(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl"},"failures":[459],"tindex":"f4ce71da-3f37-11e6-92ef-0d8a4fc17eaa","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.OnePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:183","type":"CtBinaryOperatorImpl"},"failures":[460,461,462,463,464,465,466,467,468,469,470,471],"tindex":"f4ce71db-3f37-11e6-92ef-cde8f9437be2","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:149","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (reverse == true) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.add(comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reverse":"reverse"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl"},"failures":[472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506],"tindex":"f4ce98ec-3f37-11e6-92ef-27cb449b7086","method":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.PredicatedQueue<E> predicatedQueue(final java.util.Queue<E> Queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.queue.PredicatedQueue<E>(Queue , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4ce98ed-3f37-11e6-92ef-bfd73900d99f","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                {\n                    if ((org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) || (coll.isEmpty())) {\n                        return false;\n                    } \n                    boolean boolean = false;\n                    final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                    while (it.hasNext()) {\n                        modified |= remove(it.next());\n                    }\n                    return modified;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl"},"failures":[507],"tindex":"f4ce98ee-3f37-11e6-92ef-91d2319b3ce6","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:120","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[508,509],"tindex":"f4ce98ef-3f37-11e6-92ef-2946d7b18a0d","method":{"position":"org.apache.commons.collections4.list.TransformedList:119","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getList().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4cebf00-3f37-11e6-92ef-3de2d4b6d7f4","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:542","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V set(final int index, final V value) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.setValue(index, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl"},"failures":[510,511],"tindex":"f4cebf01-3f37-11e6-92ef-dd726b95c349","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1511","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupValue(obj)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4cebf02-3f37-11e6-92ef-b71ab300000c","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1240","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntryInSubtree(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> parentOfSubtree) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, parentOfSubtree);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4cebf03-3f37-11e6-92ef-818762fe5b0f","method":{"position":"org.apache.commons.collections4.MapUtils:659","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return 0L;\n            } \n            return longObject.longValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl"},"failures":[512],"tindex":"f4cee614-3f37-11e6-92ef-29c4638ff4bd","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:134","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Closure<?>... closures) {\n    if (closures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n            } \n            for (int int = 0 ; i < (closures.int) ; i++) {\n                if ((closures[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl"},"failures":[513,514,515,516,517,518,519,520,521],"tindex":"f4cee615-3f37-11e6-92ef-43677cc9a105","method":{"position":"org.apache.commons.collections4.list.TreeList:158","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                return -1;\n            } \n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl"},"failures":[522],"tindex":"f4cee616-3f37-11e6-92ef-757f074831f5","method":{"position":"org.apache.commons.collections4.PredicateUtils:236","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName, paramTypes, args));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4cf0d27-3f37-11e6-92ef-e9519fbcafd1","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl"},"failures":[523],"tindex":"f4cf0d28-3f37-11e6-92ef-5b81e7f3e147","method":{"position":"org.apache.commons.collections4.list.TransformedList:123","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            return getList().indexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl"},"failures":[524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654],"tindex":"f4cf0d29-3f37-11e6-92ef-13b4fdaa664c","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:337","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(java.lang.Object key) {\n    if (key == null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            final int int = hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    final V V = entry.getValue();\n                    removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4cf343a-3f37-11e6-92ef-950f813f6271","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:100","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.ListOrderedMap<K, V> listOrderedMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        {\n            return new org.apache.commons.collections4.map.ListOrderedMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl"},"failures":[655,656,657,658,659,660,661,662,663,664,665],"tindex":"f4cf343b-3f37-11e6-92ef-77989a7da77d","method":{"position":"org.apache.commons.collections4.CollectionUtils:510","type":"CtMethodImpl","sourcecode":"public static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((a.size()) != (a.size())) {\n        {\n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n            if ((helper.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (helper.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n                return false;\n            } \n            for (final java.lang.Object java.lang.Object : helper.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n                if ((helper.freqA(obj)) != (helper.freqB(obj))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl"},"failures":[666],"tindex":"f4cf343c-3f37-11e6-92ef-3b04f69dd0ad","method":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:46","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsExceptionPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsExceptionPredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1039","type":"CtBinaryOperatorImpl"},"failures":[667],"tindex":"f4cf343d-3f37-11e6-92ef-51cfb19308d1","method":{"position":"org.apache.commons.collections4.CollectionUtils:1037","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.lang.Iterable<? extends I> inputCollection, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if (inputCollection != null) {\n        {\n            if (inputCollection != null) {\n                return org.apache.commons.collections4.CollectionUtils.collect(inputCollection.iterator(), transformer, outputCollection);\n            } \n            return outputCollection;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputCollection":"inputCollection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:404","type":"CtBinaryOperatorImpl"},"failures":[668,669,670],"tindex":"f4cf5b4e-3f37-11e6-92ef-3d8378643c3f","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:403","type":"CtMethodImpl","sourcecode":"private boolean isExpired(final long now, final java.lang.Long expirationTimeObject) {\n    if (expirationTimeObject != null) {\n        {\n            if (expirationTimeObject != null) {\n                final long long = expirationTimeObject.longValue();\n                return (expirationTime >= 0) && (now >= expirationTime);\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expirationTimeObject":"expirationTimeObject"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4cf5b4f-3f37-11e6-92ef-8f8021eb1007","method":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (classToInstantiate == null) {\n                throw new java.lang.IllegalArgumentException(\"Class to instantiate must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate);\n            } \n            return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate , paramTypes , args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl"},"failures":[512],"tindex":"f4cf5b50-3f37-11e6-92ef-d3447c68cde0","method":{"position":"org.apache.commons.collections4.ClosureUtils:200","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4cf5b51-3f37-11e6-92ef-3db10b01cf2e","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl"},"failures":[671],"tindex":"f4cf5b52-3f37-11e6-92ef-e3c8969ba50b","method":{"position":"org.apache.commons.collections4.list.TransformedList:142","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            coll = transform(coll);\n            return getList().addAll(index, coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtBinaryOperatorImpl"},"failures":[343,128,344,129,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386],"tindex":"f4cf8263-3f37-11e6-92ef-ff02b8cfd78e","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:110","type":"CtMethodImpl","sourcecode":"final boolean isBitSet(final K key, final int bitIndex, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        {\n            if (key == null) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer<? super K>.isBitSet(key, bitIndex, lengthInBits);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4cf8264-3f37-11e6-92ef-f52338791dbc","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                result |= remove(name);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4cf8265-3f37-11e6-92ef-33c37c67e411","method":{"position":"org.apache.commons.collections4.IteratorUtils:1052","type":"CtMethodImpl","sourcecode":"public static java.util.Iterator<?> getIterator(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == null) {\n                return org.apache.commons.collections4.IteratorUtils.emptyIterator();\n            } \n            if (obj instanceof java.util.Iterator) {\n                return ((java.util.Iterator<?>)(obj));\n            } \n            if (obj instanceof java.util.Collection) {\n                return ((java.util.Collection<?>)(obj)).iterator();\n            } \n            if (obj instanceof java.lang.Object[]) {\n                return new org.apache.commons.collections4.iterators.ObjectArrayIterator<java.lang.Object>(((java.lang.Object[])(obj)));\n            } \n            if (obj instanceof java.util.Enumeration) {\n                return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Enumeration<?>)(obj)));\n            } \n            if (obj instanceof java.util.Map) {\n                return ((java.util.Map<?, ?>)(obj)).values().iterator();\n            } \n            if (obj instanceof org.w3c.dom.NodeList) {\n                return new org.apache.commons.collections4.iterators.NodeListIterator(((org.w3c.dom.NodeList)(obj)));\n            } \n            if (obj instanceof org.w3c.dom.Node) {\n                return new org.apache.commons.collections4.iterators.NodeListIterator(((org.w3c.dom.Node)(obj)));\n            } \n            if (obj instanceof java.util.Dictionary) {\n                return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Dictionary<?, ?>)(obj)).elements());\n            } else if (obj.getClass().isArray()) {\n                return new org.apache.commons.collections4.iterators.ArrayIterator<java.lang.Object>(obj);\n            } \n            try {\n                final java.lang.reflect.Method java.lang.reflect.Method = obj.getClass().getMethod(\"iterator\", ((java.lang.Class[])(null)));\n                if (java.util.Iterator.java.util.Iterator.java.lang.Class.isAssignableFrom(method.getReturnType())) {\n                    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(method.invoke(obj, ((java.lang.Object[])(null)))));\n                    if (it != null) {\n                        return it;\n                    } \n                } \n            } catch (final java.lang.RuntimeException e) {\n            } catch (final java.lang.NoSuchMethodException e) {\n            } catch (final java.lang.IllegalAccessException e) {\n            } catch (final java.lang.reflect.InvocationTargetException e) {\n            }\n            return org.apache.commons.collections4.IteratorUtils.singletonIterator(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl"},"failures":[672,673,674,675,676,677,678,679,680,681,682,387,683,684,685,686,687,688,689,690,691,692,1,2,3,4,5,6,7,8,9,10,11,12,13,14,693,694,695,696,16,17,18,19,20,21,22,23,24,25,26,27,28,29,697,698,699,700,31,32,33,34,35,36,37,38,39,40,41,42,43,44,701,702,703,704,46,47,48,49,50,51,52,53,54,55,56,57,58,59,705,706,707,708,709,710,711,712,713,714,715,388,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,389,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,390,760,761,762,763,764,765,766,767],"tindex":"f4cfa976-3f37-11e6-92ef-9b49e531a147","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:272","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next());\n                changed = changed || added;\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4cfa977-3f37-11e6-92ef-d5e584d80f2d","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:133","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4cfa978-3f37-11e6-92ef-4bb0271597cc","method":{"position":"org.apache.commons.collections4.set.CompositeSet:127","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4cfa979-3f37-11e6-92ef-8b95eb6fe3bc","method":{"position":"org.apache.commons.collections4.IteratorUtils:544","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E> iterator1, final java.util.Iterator<? extends E> iterator2) {\n    if (comparator == null) {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterator1 , iterator2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4cfd08a-3f37-11e6-92ef-a15c102ec6cf","method":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (predicate == null) {\n                        throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n                    } \n                    return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(predicate);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4cfd08b-3f37-11e6-92ef-13992bb2255c","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl"},"failures":[134,768,452],"tindex":"f4cfd08c-3f37-11e6-92ef-d3c0d17216cd","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:168","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <I, O>org.apache.commons.collections4.Transformer<I, O>[] copy(final org.apache.commons.collections4.Transformer<? super I, ? extends O>... transformers) {\n    if (transformers == null) {\n        {\n            if (transformers == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Transformer<I, O>[])(transformers.clone()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl"},"failures":[769,770,771,772,609,610],"tindex":"f4cff79d-3f37-11e6-92ef-573627a7e1da","method":{"position":"org.apache.commons.collections4.map.LRUMap:175","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            moveToMRU(entry);\n            return entry.getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl"},"failures":[773],"tindex":"f4cff79e-3f37-11e6-92ef-6bfe4aa5d00a","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:577","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key2 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4cff79f-3f37-11e6-92ef-613b8e7f4405","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:79","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal K castKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return ((K)(key));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl"},"failures":[774,775,776,777],"tindex":"f4d01eb0-3f37-11e6-92ef-1b730cf9feb7","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:245","type":"CtMethodImpl","sourcecode":"public void putAll(int index, final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                final K K = entry.getKey();\n                final boolean boolean = containsKey(key);\n                put(index, entry.getKey(), entry.getValue());\n                if (!contains) {\n                    index++;\n                } else {\n                    index = (indexOf(entry.getKey())) + 1;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4d01eb1-3f37-11e6-92ef-abf177950e65","method":{"position":"org.apache.commons.collections4.MapUtils:1060","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<V, K> invertMap(final java.util.Map<K, V> map) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Map<V, K> java.util.Map<V, K> = new java.util.HashMap<V, K>(map.size());\n            for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n                out.put(entry.getValue(), entry.getKey());\n            }\n            return out;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:317","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4d01eb2-3f37-11e6-92ef-274919d3cafe","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:271","type":"CtMethodImpl","sourcecode":"protected void registerCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                if ((ref.get()) == null) {\n                    it.remove();\n                } \n            }\n            java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.add(new java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>(cursor));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[722,778],"tindex":"f4d045c3-3f37-11e6-92ef-e1a2372bc50c","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                return bag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableSortedBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4d045c4-3f37-11e6-92ef-558cc2c81c42","method":{"position":"org.apache.commons.collections4.MapUtils:641","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return 0;\n            } \n            return integerObject.intValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl"},"failures":[779,780,781,782,783,784,785,201,786,787,788,789,226,790,791,792,793,242,794,795,796,797,798,799,800,258],"tindex":"f4d045c5-3f37-11e6-92ef-094746821911","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:186","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            V V = null;\n            if (java.util.Map<K, V>.containsKey(key)) {\n                value = java.util.Map<K, V>.remove(key);\n                java.util.Map<V, K>.remove(value);\n            } \n            return value;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f4d045c6-3f37-11e6-92ef-213a46e3304f","method":{"position":"org.apache.commons.collections4.map.LinkedMap:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.keySet().containsAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl"},"failures":[801,802,803,804,805,806,807,808,809,810],"tindex":"f4d06cd7-3f37-11e6-92ef-43019b1cd264","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:284","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return java.util.Set<E>.contains(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612594/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}