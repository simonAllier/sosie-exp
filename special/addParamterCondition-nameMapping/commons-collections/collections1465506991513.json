{"failureDictionary":{"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":552,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":830,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":553,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":744,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":804,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":793,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":48,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":612,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastValues":691,"org.apache.commons.collections4.ListUtilsTest.testIntersectListWithNoOverlapAndDifferentTypes":621,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastEntrySet":689,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":448,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":280,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":532,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":905,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":9,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullValue":272,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":900,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":776,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":342,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":676,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":838,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":547,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":677,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetIteratorRemoveChangesMap":313,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":678,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":127,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":910,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsContract":349,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":461,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":817,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":554,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":124,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":500,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":818,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":401,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullValue":301,"org.apache.commons.collections4.map.PredicatedMapTest.testMapHashCode":695,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":815,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":87,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":834,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectEqualsSelf":727,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":65,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":770,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":176,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveAll":718,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":811,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":760,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":199,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":248,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":311,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":319,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":635,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":63,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":723,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullValue":241,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":575,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":861,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapHashCode":268,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":503,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":801,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":605,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":908,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":305,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":474,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":668,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapClear":247,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":414,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":456,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":722,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":111,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":847,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":296,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":540,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":839,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking2":888,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":324,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":73,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":444,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":196,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":595,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":795,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":249,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":913,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":145,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":598,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":451,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":831,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":899,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":416,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":77,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":125,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":808,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":290,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":889,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":177,"org.apache.commons.collections4.map.PredicatedMapTest.testCanonicalEmptyCollectionExists":730,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":159,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":743,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":788,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":43,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":588,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":13,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":30,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":642,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":119,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":256,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":739,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":388,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":615,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":863,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":28,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":373,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testRemove":359,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":747,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":237,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":492,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":478,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":228,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testCanonicalFullCollectionExists":363,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":420,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":97,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":245,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testCanonicalEmptyCollectionExists":365,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":469,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":858,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":340,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":738,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":35,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":252,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":431,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":894,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":433,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":627,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":522,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":520,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":646,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFullMapCompatibility":864,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":236,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":638,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToString":926,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":47,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":189,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRetainAll":318,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":112,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":603,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":658,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":437,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":538,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":79,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":219,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":570,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullValue":704,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":113,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":374,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetIteratorRemoveChangesMap":240,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":168,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":876,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":224,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":276,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":93,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":251,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEqualsNull":364,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":846,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":912,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":751,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":530,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":682,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":526,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":52,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":142,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":545,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":631,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":283,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":764,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":673,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":430,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":498,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":706,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":422,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":919,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":654,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":129,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectHashCodeEqualsContract":367,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":195,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":878,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":921,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":432,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":191,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":544,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":72,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":742,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":782,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":67,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":259,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":18,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":796,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":329,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":243,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":17,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":207,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":40,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":701,"org.apache.commons.collections4.map.PredicatedMapTest.testFullMapCompatibility":713,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":827,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":216,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":783,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":90,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":587,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":836,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":756,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":829,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":182,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":528,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":185,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":663,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":103,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":907,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":223,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":175,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":250,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testNextKey":135,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":183,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":434,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":800,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":218,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":550,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":589,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":664,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":110,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapClear":141,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":468,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":123,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":295,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":326,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullIterator":361,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":824,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":686,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":331,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":139,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":15,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":656,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":633,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":209,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":6,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":929,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":402,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":31,"org.apache.commons.collections4.ListUtilsTest.testPartition":618,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":881,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":140,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":153,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":521,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":409,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":155,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":154,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":490,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":486,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray2":4,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":649,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":285,"org.apache.commons.collections4.set.UnmodifiableSetTest.testDecorateFactory":333,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":466,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFullMapCompatibility":870,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":132,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":647,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":662,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":543,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":717,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":23,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":2,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":107,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":734,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":719,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":893,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":131,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":406,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":442,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":692,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":253,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":892,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveAll":161,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":786,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIterator":355,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":121,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":517,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":600,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":617,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":239,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":418,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":614,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":78,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":765,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":473,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":75,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":317,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":158,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":368,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":685,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":928,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":102,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":923,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":482,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":511,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":871,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":372,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":143,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesClearChangesMap":726,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":583,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":387,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":330,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":505,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":523,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":636,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":395,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":653,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":413,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":491,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":640,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":833,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":443,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":445,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetHashCode":335,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":128,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":616,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":69,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":659,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":736,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":385,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":386,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":384,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":579,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":806,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":641,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":399,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":299,"org.apache.commons.collections4.list.TreeListTest.testBug35258":629,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":233,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":497,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":76,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":206,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":652,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":204,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":502,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":660,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":231,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":232,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":537,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":377,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapClear":278,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":114,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":821,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnmodifiable":332,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":737,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetIteratorRemoveChangesMap":271,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":667,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":353,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":92,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":897,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":266,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":504,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking":10,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":281,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":609,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":96,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":282,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":446,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":1,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":484,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":26,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":226,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":83,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":670,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyMapIterator":356,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":215,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCanonicalEmptyCollectionExists":351,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":84,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":105,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testDecorate":379,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":752,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":514,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":288,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":20,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":273,"org.apache.commons.collections4.map.PredicatedMapTest.testMakeMap":708,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":94,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":602,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":192,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyIterator":360,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":314,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":774,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":294,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":463,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":578,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":101,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":508,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":666,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":665,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":212,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":766,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullKey":246,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains1":558,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains3":560,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains2":559,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":441,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":869,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":887,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":932,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFirstKey":261,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":807,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToString":344,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":911,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":309,"org.apache.commons.collections4.ListUtilsTest.testIntersectNonEmptySubset":620,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":644,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":610,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":515,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":178,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":680,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":115,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":687,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":116,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":117,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":438,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":459,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":479,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":924,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":99,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveAll":304,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":470,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":746,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":286,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":205,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":41,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRetainAll":725,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":166,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":453,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":832,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":820,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":81,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":592,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":71,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":279,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullKey":306,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":512,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":750,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":267,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":518,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":242,"org.apache.commons.collections4.ListUtilsTest.testIntersectionOrderInsensitivity":623,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":809,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":410,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":371,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":108,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":842,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":274,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":573,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":872,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":100,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":596,"org.apache.commons.collections4.map.PredicatedMapTest.testEmptyMapCompatibility":711,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":720,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":403,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":0,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":679,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":323,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":336,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutAll":151,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":768,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":850,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":769,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":235,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":650,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":429,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":696,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":698,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":844,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":697,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":845,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":222,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPut":148,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":220,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":33,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":258,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testFirstKey":133,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":174,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":527,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":721,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":604,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":106,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":805,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":541,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":39,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":450,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":257,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":310,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":501,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":436,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":460,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":25,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains3":398,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains2":397,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":816,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains1":396,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":632,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.initializationError":230,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":593,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":289,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":160,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":749,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":705,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIteratorSet":358,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":394,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":548,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":172,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":853,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":792,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":854,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":601,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":852,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":533,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":885,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":12,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":255,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":785,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":681,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":611,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":753,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":789,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":449,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":797,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":927,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":298,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":421,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":542,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":828,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetClearChangesMap":703,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":29,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":208,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":477,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":375,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":455,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":826,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":672,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFullMapCompatibility":868,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":98,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":865,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":781,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":227,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":480,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":8,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":536,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsContract":732,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":197,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":874,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":825,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":50,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":591,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":884,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":898,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":883,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":302,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":777,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":180,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":700,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":109,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":118,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":428,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":657,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":184,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":104,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":535,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":483,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":862,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":851,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":419,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":454,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":606,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":582,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":843,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":712,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":55,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":164,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains1":555,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains2":556,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":848,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains3":557,"org.apache.commons.collections4.list.TreeListTest.testRemove":626,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray2":343,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":458,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":787,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":321,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":755,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":194,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":651,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":835,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":57,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCanonicalFullCollectionExists":352,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":325,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":481,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":784,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullKey":710,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":761,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":488,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":569,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":58,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":901,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":655,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains1":390,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":819,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":857,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains3":392,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":856,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains2":391,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":855,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":308,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":510,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":525,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetClearChangesMap":699,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullValue":150,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":794,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":879,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":137,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":748,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":293,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":316,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":291,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":292,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":32,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":773,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":169,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":190,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFullMapCompatibility":866,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":452,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testLastKey":134,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":234,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":21,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":275,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":221,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":586,"org.apache.commons.collections4.list.TreeListTest.testListEquals":648,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":54,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":320,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":439,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":381,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":841,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":382,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":383,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":724,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":875,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":762,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":427,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":122,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":415,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":684,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":435,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapHashCode":146,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":715,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":263,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":447,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":179,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":264,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":156,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":262,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":882,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":147,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectEqualsSelf":346,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":404,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":639,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":62,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testSerializeDeserializeThenCompare":369,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":499,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":568,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":735,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":780,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":165,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullKey":277,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":49,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains2":565,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains3":566,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains1":564,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":757,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":163,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":229,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":799,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullKey":149,"org.apache.commons.collections4.set.UnmodifiableSetTest.testEqualsNull":347,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":813,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":674,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":934,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":496,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":860,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":516,"org.apache.commons.collections4.map.PredicatedMapTest.testSimpleSerialization":731,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":495,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":217,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapHashCode":297,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":628,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":930,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testLastKey":260,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":584,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":170,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":563,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":562,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":561,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":126,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapClear":307,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":152,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":597,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":36,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":630,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":425,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":840,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":37,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":187,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":608,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":917,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":904,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":303,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking2":11,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":412,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsSelfHashCode":733,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":489,"org.apache.commons.collections4.CollectionUtilsTest.addIgnoreNull":376,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking":886,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":920,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":200,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":424,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":767,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":475,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":539,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":823,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":779,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":254,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":534,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiMapIteratorSet":138,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":80,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":328,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":634,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":873,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":464,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":471,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":772,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":334,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionSize":341,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":599,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":120,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":624,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":42,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":173,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":370,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveAll":707,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":338,"org.apache.commons.collections4.ListUtilsTest.testIntersectListWithSelf":622,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":702,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":38,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSimpleSerialization":350,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":51,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":16,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":925,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":171,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":918,"org.apache.commons.collections4.map.PredicatedMapTest.testCanonicalFullCollectionExists":728,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":546,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":405,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":201,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":607,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":203,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":202,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":393,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetIteratorRemoveChangesMap":300,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":457,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":810,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsSelfHashCode":348,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":467,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":877,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":423,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":513,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":645,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":389,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":68,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":637,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":56,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testPreviousKey":136,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":741,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":485,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":531,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":472,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":867,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":509,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":798,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":693,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":181,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":95,"org.apache.commons.collections4.ListUtilsTest.testIntersectEmptyWithEmptyList":619,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":758,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":407,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":66,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":914,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":213,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":188,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":24,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":53,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":771,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":380,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":61,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":775,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":357,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":312,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":476,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":440,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":45,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":574,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":906,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":778,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testSimpleSerialization":366,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRetainAll":694,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":193,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":675,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":417,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":507,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":625,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":740,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":186,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":337,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":890,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":506,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":915,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":802,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":378,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicateEx1":14,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":70,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex1":59,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":89,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":683,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":82,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":315,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":763,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory":354,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":745,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":327,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":812,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet":688,"org.apache.commons.collections4.map.PredicatedMapTest.testEqualsNull":729,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":895,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":580,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":465,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":270,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":916,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":269,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":803,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":549,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":577,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":265,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":714,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":931,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":238,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":529,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":909,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":590,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":91,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":284,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":157,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":130,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":571,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":859,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":822,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":671,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":214,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastKeySet":690,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":754,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectEqualsSelf":362,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":903,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":585,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":493,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":613,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":661,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":581,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":524,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":922,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIsEmpty":7,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":791,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":849,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPut":287,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":790,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":933,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":880,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":494,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetIteratorRemoveChangesMap":167,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":935,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":46,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":669,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":709,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIsEmpty":339,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":837,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":594,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":408,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":814,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":64,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":211,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":400,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":902,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":198,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":244,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":5,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":567,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":322,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":3,"org.apache.commons.collections4.IteratorUtilsTest.testToArray":60,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":716,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":144,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":74,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":487,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":345,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":891,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":462,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":572,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":210,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":551,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRetainAll":162,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":643,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":411,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":519,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":576,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":759,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":896,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":426,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":27,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":225},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[],"tindex":"6ffa3554-2e87-11e6-9cc1-b75fcdc76eb2","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next(), 1);\n                changed = changed || added;\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[0,1,2],"tindex":"6ffb1fb5-2e87-11e6-9cc1-f1f188571513","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:162","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n            E = null;\n            boolean = false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:182","type":"CtBinaryOperatorImpl","sourcecode":"(valueTransformer) == null"},"failures":[],"tindex":"6ffb46c6-2e87-11e6-9cc1-c5c11edc0c40","method":{"position":"org.apache.commons.collections4.MapUtils:1570","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (valueTransformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.TransformedSortedMap.transformingSortedMap(map, keyTransformer, valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"valueTransformer":"valueTransformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"6ffb6dd7-2e87-11e6-9cc1-89698734d98a","method":{"position":"org.apache.commons.collections4.MapUtils:234","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Short) {\n                return ((java.lang.Short)(answer));\n            } \n            return java.lang.Short.valueOf(answer.shortValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[3,4,5,6,7,8,9],"tindex":"6ffc5838-2e87-11e6-9cc1-95edc114b593","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:47","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[10,11,12],"tindex":"6ffc7f49-2e87-11e6-9cc1-3d5618ab54ee","method":{"position":"org.apache.commons.collections4.list.GrowthList:121","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E element) {\n    if (index > 0) {\n        {\n            final int int = decorated().size();\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n            } \n            decorated().add(index, element);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl","sourcecode":"predicatesAndClosures == null"},"failures":[13],"tindex":"6ffc7f4a-2e87-11e6-9cc1-8d6cd99b1d02","method":{"position":"org.apache.commons.collections4.ClosureUtils:331","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.switchClosure(predicatesAndClosures);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[14],"tindex":"6ffca65b-2e87-11e6-9cc1-97dd43af6b15","method":{"position":"org.apache.commons.collections4.PredicateUtils:502","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsFalsePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NullIsFalsePredicate.nullIsFalsePredicate(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[15,16,17,18],"tindex":"6ffca65c-2e87-11e6-9cc1-01b2bd177030","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:93","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().remove(object, count);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtBinaryOperatorImpl","sourcecode":"nCopies <= 0"},"failures":[],"tindex":"6ffca65d-2e87-11e6-9cc1-01e41e5eebe0","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:125","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getBag().add(transform(object), nCopies);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"nCopies"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[],"tindex":"6ffca65e-2e87-11e6-9cc1-4fd8fcfcc587","method":{"position":"org.apache.commons.collections4.map.LinkedMap:233","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"6ffccd6f-2e87-11e6-9cc1-7312dd3e8fab","method":{"position":"org.apache.commons.collections4.PredicateUtils:273","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                {\n                    return org.apache.commons.collections4.functors.AllPredicate.allPredicate(predicates);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"6ffccd70-2e87-11e6-9cc1-d3b2b9de7f76","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:75","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            final org.apache.commons.collections4.bag.TransformedSortedBag<E> org.apache.commons.collections4.bag.TransformedSortedBag<E> = new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[19,20,21,22,23,24],"tindex":"6ffccd71-2e87-11e6-9cc1-1dbe1ce6e4c6","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:92","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            validate(object);\n            return decorated().add(object, count);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"6ffcf482-2e87-11e6-9cc1-29fb95a38f77","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:174","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hash(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return java.lang.System.identityHashCode(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"6ffcf483-2e87-11e6-9cc1-1b98d30725cb","method":{"position":"org.apache.commons.collections4.PredicateUtils:273","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                {\n                    return org.apache.commons.collections4.functors.AllPredicate.allPredicate(predicates);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[25],"tindex":"6ffcf484-2e87-11e6-9cc1-f73570c80c95","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:143","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1027","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"6ffd1b95-2e87-11e6-9cc1-179207d11608","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:71","type":"CtMethodImpl","sourcecode":"static boolean isNullBitKey(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)) {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[26,27,28,29],"tindex":"6ffd1b96-2e87-11e6-9cc1-d361ec8f687a","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:627","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if (getEntrySet().contains(obj)) {\n                final java.lang.Object java.lang.Object = ((java.util.Map.Entry<K, V>)(obj)).getKey();\n                org.apache.commons.collections4.map.ListOrderedMap<K, V>.remove(key);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[30,31,32,33,34,35,36,37,38,39,40,41],"tindex":"6ffd1b97-2e87-11e6-9cc1-3d0ac33f0b6e","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:188","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        {\n            return (java.lang.System.identityHashCode(key)) ^ (java.lang.System.identityHashCode(value));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[42],"tindex":"6ffd42a8-2e87-11e6-9cc1-a5eb92f6adc9","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:57","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((predicates.int) != (transformers.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(predicates , transformers , defaultTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:58","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"6ffd42a9-2e87-11e6-9cc1-1db9acee3447","method":{"position":"org.apache.commons.collections4.IteratorUtils:763","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> loopingListIterator(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            if (list == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (list == null) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            if (list == null) {\n                                throw new java.lang.NullPointerException(\"List must not be null\");\n                            } \n                            return new org.apache.commons.collections4.iterators.LoopingListIterator<E>(list);\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[43,44,45,46,47,48,49,50,51,52],"tindex":"6ffd69ba-2e87-11e6-9cc1-810ff1906a1a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:755","type":"CtMethodImpl","sourcecode":"private static void makeRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            if (node != null) {\n                node.setRed(dataElement);\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"6ffe541b-2e87-11e6-9cc1-c7cbf8f3192c","method":{"position":"org.apache.commons.collections4.SetUtils:192","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[53],"tindex":"6ffe7b2c-2e87-11e6-9cc1-d56c4f18b564","method":{"position":"org.apache.commons.collections4.CollectionUtils:1668","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> retainAll(final java.util.Collection<C> collection, final java.util.Collection<?> retain) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.retainAll(collection, retain);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[54],"tindex":"6ffe7b2d-2e87-11e6-9cc1-df7c0cfb5f75","method":{"position":"org.apache.commons.collections4.CollectionUtils:1547","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final boolean includeDuplicates) {\n    if ((a == null) || (a == null)) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), includeDuplicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[55,56],"tindex":"6ffea23e-2e87-11e6-9cc1-13c85008906e","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:344","type":"CtMethodImpl","sourcecode":"public java.lang.Object remove(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Object java.lang.Object = java.util.List<E>.remove(index);\n            remove(obj);\n            return obj;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[57,58],"tindex":"6ffea23f-2e87-11e6-9cc1-69036a8a3076","method":{"position":"org.apache.commons.collections4.list.TreeList:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index).getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"6ffec950-2e87-11e6-9cc1-817c15bc36bc","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1051","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<?, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[59],"tindex":"6ffec951-2e87-11e6-9cc1-87297066df9d","method":{"position":"org.apache.commons.collections4.PredicateUtils:236","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName, paramTypes, args));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:956","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[60],"tindex":"6ffec952-2e87-11e6-9cc1-b5b5601d4d48","method":{"position":"org.apache.commons.collections4.IteratorUtils:955","type":"CtMethodImpl","sourcecode":"public static java.lang.Object[] toArray(final java.util.Iterator<?> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            final java.util.List<?> java.util.List<?> = org.apache.commons.collections4.IteratorUtils.toList(iterator, 100);\n            return list.toArray();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[61],"tindex":"6ffec953-2e87-11e6-9cc1-7bba65813106","method":{"position":"org.apache.commons.collections4.TransformerUtils:149","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> asTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"6ffef064-2e87-11e6-9cc1-858ef9b3de3a","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:112","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return java.util.Map<E, ? super V>.keySet().containsAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[62],"tindex":"6ffef065-2e87-11e6-9cc1-d7be768c5bb6","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:629","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"6fff1776-2e87-11e6-9cc1-05ed65fb25f4","method":{"position":"org.apache.commons.collections4.MapUtils:1329","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.FixedSizeMap.fixedSizeMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[],"tindex":"6fff1777-2e87-11e6-9cc1-f1e974f4f191","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 1) {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[63],"tindex":"6fff1778-2e87-11e6-9cc1-4bb15b836c34","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[],"tindex":"6fff3e89-2e87-11e6-9cc1-d364b6be1355","method":{"position":"org.apache.commons.collections4.map.SingletonMap:534","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.SingletonMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != 1) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = other.entrySet().iterator().next();\n            return (isEqualKey(entry.getKey())) && (isEqualValue(entry.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"7000770a-2e87-11e6-9cc1-9fece357205d","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:111","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().addAll(coll);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:551","type":"CtBinaryOperatorImpl","sourcecode":"equator == null"},"failures":[],"tindex":"70009e1b-2e87-11e6-9cc1-41b8dc268674","method":{"position":"org.apache.commons.collections4.ListUtils:546","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b, final org.apache.commons.collections4.Equator<? super E> equator) {\n    if (equator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n            } \n            final org.apache.commons.collections4.sequence.SequencesComparator<E> org.apache.commons.collections4.sequence.SequencesComparator<E> = new org.apache.commons.collections4.sequence.SequencesComparator<E>(a , b , equator);\n            final org.apache.commons.collections4.sequence.EditScript<E> org.apache.commons.collections4.sequence.EditScript<E> = comparator.getScript();\n            final org.apache.commons.collections4.ListUtils.LcsVisitor<E> org.apache.commons.collections4.ListUtils.LcsVisitor<E> = new org.apache.commons.collections4.ListUtils.LcsVisitor<E>();\n            script.visit(visitor);\n            return visitor.getSubSequence();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"7000c52c-2e87-11e6-9cc1-a725bd625d59","method":{"position":"org.apache.commons.collections4.map.Flat3Map:982","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.Flat3Map<K, ?>.remove(key);\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,63,345,346,347,348,349,350,351,352],"tindex":"7000c52d-2e87-11e6-9cc1-035dbc178d0f","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:52","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Set<E> java.util.Set<E> = ((java.util.Set<E>)(set));\n                return tmpSet;\n            } \n            return new org.apache.commons.collections4.set.UnmodifiableSet<E>(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:47","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[353,100,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369],"tindex":"7000ec3e-2e87-11e6-9cc1-7d41c601d054","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:45","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<? extends K, ? extends V> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[370,371],"tindex":"7000ec3f-2e87-11e6-9cc1-091861cf2810","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:384","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((multi.size()) == 3) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[372],"tindex":"70011350-2e87-11e6-9cc1-97c1aaef49c5","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:120","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[373,374,375],"tindex":"70011351-2e87-11e6-9cc1-f323936e651e","method":{"position":"org.apache.commons.collections4.MapUtils:968","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\nprivate static void verbosePrintInternal(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map, final org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>> lineage, final boolean debug) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            if (map == null) {\n                if (label != null) {\n                    out.print(label);\n                    out.print(\" = \");\n                } \n                out.println(\"null\");\n                return ;\n            } \n            if (label != null) {\n                out.print(label);\n                out.println(\" = \");\n            } \n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println(\"{\");\n            lineage.push(map);\n            for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : map.entrySet()) {\n                final java.lang.Object java.lang.Object = entry.getKey();\n                final java.lang.Object java.lang.Object = entry.getValue();\n                if ((childValue instanceof java.util.Map) && (!(lineage.contains(childValue)))) {\n                    org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, (childKey == null ? \"null\" : childKey), ((java.util.Map<?, ?>)(childValue)), lineage, debug);\n                } else {\n                    org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n                    out.print(childKey);\n                    out.print(\" = \");\n                    final int int = lineage.indexOf(childValue);\n                    if (lineageIndex == (-1)) {\n                        out.print(childValue);\n                    } else if (((lineage.size()) - 1) == lineageIndex) {\n                        out.print(\"(this Map)\");\n                    } else {\n                        out.print(((\"(ancestor[\" + ((((lineage.size()) - 1) - lineageIndex) - 1)) + \"] Map)\"));\n                    }\n                    if (debug && (childValue != null)) {\n                        out.print(' ');\n                        out.println(childValue.getClass().getName());\n                    } else {\n                        out.println();\n                    }\n                }\n            }\n            lineage.pop();\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println((debug ? \"} \" + (map.getClass().getName()) : \"}\"));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.EqualPredicate:109","type":"CtBinaryOperatorImpl","sourcecode":"(equator) != null"},"failures":[],"tindex":"70013a62-2e87-11e6-9cc1-09e8921d2f1f","method":{"position":"org.apache.commons.collections4.functors.EqualPredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> equalPredicate(final T object, final org.apache.commons.collections4.Equator<T> equator) {\n    if (equator != null) {\n        {\n            if (object == null) {\n                return org.apache.commons.collections4.functors.NullPredicate.nullPredicate();\n            } \n            return new org.apache.commons.collections4.functors.EqualPredicate<T>(object , equator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[376],"tindex":"70013a63-2e87-11e6-9cc1-7589519fd651","method":{"position":"org.apache.commons.collections4.CollectionUtils:1086","type":"CtMethodImpl","sourcecode":"public static <T>boolean addIgnoreNull(final java.util.Collection<T> collection, final T object) {\n    if (collection == null) {\n        {\n            if (collection == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            return (object != null) && (collection.add(object));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"70016174-2e87-11e6-9cc1-c7758ee027d2","method":{"position":"org.apache.commons.collections4.functors.IfClosure:70","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if ((trueClosure == null) || (falseClosure == null)) {\n                throw new java.lang.IllegalArgumentException(\"Closures must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.IfClosure<E>(predicate , trueClosure , falseClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"70016175-2e87-11e6-9cc1-87579ed9e132","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Set<E>.containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:120","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"70016176-2e87-11e6-9cc1-ab625457ec96","method":{"position":"org.apache.commons.collections4.IteratorUtils:763","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> loopingListIterator(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            if (list == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (list == null) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            if (list == null) {\n                                throw new java.lang.NullPointerException(\"List must not be null\");\n                            } \n                            return new org.apache.commons.collections4.iterators.LoopingListIterator<E>(list);\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:93","type":"CtBinaryOperatorImpl","sourcecode":"end < start"},"failures":[377],"tindex":"70018887-2e87-11e6-9cc1-d99b047cf818","method":{"position":"org.apache.commons.collections4.IteratorUtils:316","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end) {\n    if (end < start) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start , end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start","end":"end"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[],"tindex":"70018888-2e87-11e6-9cc1-df305810e8f8","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:598","type":"CtMethodImpl","sourcecode":"protected void destroyEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != null) {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            entry.java.lang.Object = null;\n            entry.java.lang.Object = null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[378],"tindex":"70018889-2e87-11e6-9cc1-13e15a78030d","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1711","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (!(inRange(castKey(key)))) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[379,380],"tindex":"7001af9a-2e87-11e6-9cc1-e1a435496d4c","method":{"position":"org.apache.commons.collections4.bag.PredicatedSortedBag:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedSortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedSortedBag<E>(bag , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"7001af9b-2e87-11e6-9cc1-df30c1c86a85","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:298","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            (int)++;\n            java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n            int -= mut.int;\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[84,85,86,87,381,382,383,384,385,386,115,116,117,118,153,154,155,156,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,20,21,421,422,423,424,425,426,427,428,429,430,179,431,432,433,23,24,434,435,436,437,438,439,440,441,442,443,444,445,446,447,18,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,6,542,9,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,201,202,203,208,558,559,560,561,562,563,564,565,566,567,231,232,233,238,262,263,264,269,291,292,293,298,337,340,342,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616],"tindex":"7001d6ac-2e87-11e6-9cc1-d3844514a1c5","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            return decorated().contains(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:540","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[66,617],"tindex":"7001d6ad-2e87-11e6-9cc1-e5174c63d5f8","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:597","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextGreater(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getRight(dataElement)) != null) {\n                rval = leastNode(node.getRight(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getRight(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"7001fdbe-2e87-11e6-9cc1-3d9b03d19ba6","method":{"position":"org.apache.commons.collections4.SplitMapUtils:142","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"7001fdbf-2e87-11e6-9cc1-4f0ec1d21046","method":{"position":"org.apache.commons.collections4.iterators.TransformIterator:109","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends I> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.TransformIterator.this.java.util.Iterator<? extends I> = iterator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:104","type":"CtBinaryOperatorImpl","sourcecode":"size == 0"},"failures":[618],"tindex":"7001fdc0-2e87-11e6-9cc1-fb0cc931e8a0","method":{"position":"org.apache.commons.collections4.ListUtils:654","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<java.util.List<T>> partition(final java.util.List<T> list, final int size) {\n    if (size == 0) {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (size <= 0) {\n                throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n            } \n            return new org.apache.commons.collections4.ListUtils.Partition<T>(list , size);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[619,620,621,622,623],"tindex":"700224d1-2e87-11e6-9cc1-39e103d627ea","method":{"position":"org.apache.commons.collections4.ListUtils:89","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> intersection(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list1.size())) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            java.util.List<? extends E> java.util.List<? extends E> = list1;\n            java.util.List<? extends E> java.util.List<? extends E> = list2;\n            if ((list1.size()) > (list2.size())) {\n                smaller = list2;\n                larger = list1;\n            } \n            final java.util.HashSet<E> java.util.HashSet<E> = new java.util.HashSet<E>(smaller);\n            for (final E E : larger) {\n                if (hashSet.contains(e)) {\n                    result.add(e);\n                    hashSet.remove(e);\n                } \n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[624],"tindex":"700224d2-2e87-11e6-9cc1-cda4554c094d","method":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:51","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformedPredicate<T>(transformer , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660],"tindex":"70024be3-2e87-11e6-9cc1-c900166a5f76","method":{"position":"org.apache.commons.collections4.list.TreeList:413","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode.this;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = indexRelativeToMe < 0 ? getLeftSubTree() : getRightSubTree();\n            if (nextNode == null) {\n                return null;\n            } \n            return nextNode.get(indexRelativeToMe);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:358","type":"CtUnaryOperatorImpl","sourcecode":"!(h.isEmpty())"},"failures":[661,662,663,664,665,666,667,668,669,670,671,672,673,674,378,675,676,677,678,679,680,681,682,683,684,685,686],"tindex":"70024be4-2e87-11e6-9cc1-3bc2edcc0a7e","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:480","type":"CtMethodImpl","sourcecode":"V removeEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isEmpty())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (h.isInternalNode()) {\n                    removeInternalEntry(h);\n                } else {\n                    removeExternalEntry(h);\n                }\n            } \n            decrementSize();\n            return h.setKeyValue(null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"700272f5-2e87-11e6-9cc1-3f91b5c05d6c","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:438","type":"CtMethodImpl","sourcecode":"protected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (key == null ? 0 : key.hashCode()) ^ (value == null ? 0 : value.hashCode());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[687,688,689,690,691,552,553,554,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735],"tindex":"700272f6-2e87-11e6-9cc1-1dce38e794de","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:78","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.PredicatedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"700272f7-2e87-11e6-9cc1-ed58089efe09","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:207","type":"CtMethodImpl","sourcecode":"public void setReverseSort(final int index) {\n    if (index < 0) {\n        {\n            checkLocked();\n            java.util.BitSet.set(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"700272f8-2e87-11e6-9cc1-e9fc6be03350","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl","sourcecode":"sortedMap == null"},"failures":[736],"tindex":"70029a09-2e87-11e6-9cc1-af94c5c8bbcf","method":{"position":"org.apache.commons.collections4.MapUtils:1772","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableSortedMap<K, V> iterableSortedMap(final java.util.SortedMap<K, V> sortedMap) {\n    if (sortedMap == null) {\n        {\n            if (sortedMap == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return sortedMap instanceof org.apache.commons.collections4.IterableSortedMap ? ((org.apache.commons.collections4.IterableSortedMap<K, V>)(sortedMap)) : new org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>(sortedMap) {            };\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"sortedMap"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[737],"tindex":"70029a0a-2e87-11e6-9cc1-5512c760b918","method":{"position":"org.apache.commons.collections4.CollectionUtils:1717","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> synchronizedCollection(final java.util.Collection<C> collection) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            return org.apache.commons.collections4.collection.SynchronizedCollection.synchronizedCollection(collection);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:216","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[738],"tindex":"7002c11b-2e87-11e6-9cc1-b5b2ec81d5b7","method":{"position":"org.apache.commons.collections4.ComparatorUtils:119","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Comparator<E> reversedComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            return new org.apache.commons.collections4.comparators.ReverseComparator<E>(comparator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[739,410,405,740,406,407,741,408,742,743,409,744,745,746,170,747,748,481,476,749,477,478,750,479,751,752,480,195,753,754,196,755,499,502,520,548,578,610],"tindex":"7002c11c-2e87-11e6-9cc1-972ff3c7bd5d","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:136","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<E> transform(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(coll.size());\n            for (final E E : coll) {\n                list.add(transform(item));\n            }\n            return list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"7002c11d-2e87-11e6-9cc1-8d7a1263ad72","method":{"position":"org.apache.commons.collections4.SplitMapUtils:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.SplitMapUtils.WrappedPut.this)) {\n                return true;\n            } \n            return (obj instanceof org.apache.commons.collections4.SplitMapUtils.WrappedPut) && (((org.apache.commons.collections4.SplitMapUtils.WrappedPut<?, ?>)(obj)).org.apache.commons.collections4.Put<?, ?>.equals(org.apache.commons.collections4.SplitMapUtils.WrappedPut.this.org.apache.commons.collections4.Put<K, V>));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809],"tindex":"7002e82e-2e87-11e6-9cc1-3f787e39314b","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:259","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.lang.Object put(final K key, final java.lang.Object value) {\n    if (value != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(1);\n                coll.add(((V)(value)));\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.add(((V)(value)));\n            }\n            return result ? value : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[810,811,64,65,66,67,812,813,814,815,816,68,69,817,70,71,72,73,74,75,76,77,78,818,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,819,820,617,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,43,846,847,848,44,849,850,851,852,853,854,855,856,857,45,858,859,46,47,860,861,48,49,50,51,52],"tindex":"7002e82f-2e87-11e6-9cc1-974a9edd791e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1200","type":"CtMethodImpl","sourcecode":"private static void checkNonNullComparable(final java.lang.Object o, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (o == null) {\n        {\n            if (o == null) {\n                throw new java.lang.NullPointerException((dataElement + \" cannot be null\"));\n            } \n            if (!(o instanceof java.lang.Comparable)) {\n                throw new java.lang.ClassCastException((dataElement + \" must be Comparable\"));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[862,863],"tindex":"70030f40-2e87-11e6-9cc1-1d509c36fc7a","method":{"position":"org.apache.commons.collections4.map.LinkedMap:143","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index > 0) {\n        {\n            return getEntry(index).getKey();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[864,865,866,867,868,869,870,871],"tindex":"70030f41-2e87-11e6-9cc1-d5dc5fa97e3e","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:180","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[872,873,874,875],"tindex":"70030f42-2e87-11e6-9cc1-cbd5094b7d47","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) || (coll.isEmpty())) {\n                return false;\n            } \n            boolean boolean = false;\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (it.hasNext()) {\n                modified |= remove(it.next());\n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[370,371],"tindex":"70030f43-2e87-11e6-9cc1-ebbe2e383eba","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:532","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 != null) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((((multi.size()) == 4) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[20,21,876,449,450,877,463,878,879,192,880,464,465,881,882,466,883,467,884,885,468,469,475,476],"tindex":"70033654-2e87-11e6-9cc1-694c6109c9a7","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[886,887,888],"tindex":"70033655-2e87-11e6-9cc1-e561e65d01de","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:147","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        {\n            return decorated().set(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"70033656-2e87-11e6-9cc1-db64afebe819","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            return java.util.Map<E, ? super V>.keySet().equals(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"70035d67-2e87-11e6-9cc1-5be7feb39f31","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object k) {\n    if (k == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(k);\n            return entry != null ? entry.getValue() : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1018","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"70035d68-2e87-11e6-9cc1-23ffc14c0220","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:171","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[208,567,238,269,298],"tindex":"70035d69-2e87-11e6-9cc1-53d7eb4237e5","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"70035d6a-2e87-11e6-9cc1-e1fbd31cee80","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:204","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            key2 = isKeyType(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<?>)(key2)).get();\n            return key1 == key2;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[],"tindex":"70035d6b-2e87-11e6-9cc1-673813960af5","method":{"position":"org.apache.commons.collections4.comparators.NullComparator:169","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == null) {\n                return false;\n            } \n            if (obj == (org.apache.commons.collections4.comparators.NullComparator.this)) {\n                return true;\n            } \n            if (!(obj.getClass().equals(org.apache.commons.collections4.comparators.NullComparator.this.getClass()))) {\n                return false;\n            } \n            final org.apache.commons.collections4.comparators.NullComparator<?> org.apache.commons.collections4.comparators.NullComparator<?> = ((org.apache.commons.collections4.comparators.NullComparator<?>)(obj));\n            return ((org.apache.commons.collections4.comparators.NullComparator.this.boolean) == (other.boolean)) && (org.apache.commons.collections4.comparators.NullComparator.this.java.util.Comparator<? super E>.equals(other.java.util.Comparator<? super ?>));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[889],"tindex":"7003847c-2e87-11e6-9cc1-71a9e558c9c2","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:55","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"7003847d-2e87-11e6-9cc1-69e4e2a14ba9","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[5],"tindex":"7003847e-2e87-11e6-9cc1-c309102a7d32","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"7003847f-2e87-11e6-9cc1-59ca87338b7b","method":{"position":"org.apache.commons.collections4.list.TransformedList:142","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            coll = transform(coll);\n            return getList().addAll(index, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[647,648,635,636,637,638,639,640,633,634,649,650,651,652,653,654,655,656,657,658,890,659],"tindex":"7003ab90-2e87-11e6-9cc1-d79ec94cb2f5","method":{"position":"org.apache.commons.collections4.list.TreeList:452","type":"CtMethodImpl","sourcecode":"void toArray(final java.lang.Object[] array, final int index) {\n    if (index > 0) {\n        {\n            array[index] = E;\n            if ((getLeftSubTree()) != null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n            if ((getRightSubTree()) != null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[816,83],"tindex":"7003ab91-2e87-11e6-9cc1-83e84a6f759d","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[891],"tindex":"7003ab92-2e87-11e6-9cc1-f39a0fb1acec","method":{"position":"org.apache.commons.collections4.PredicateUtils:421","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(iterator.hasPrevious()) == false"},"failures":[],"tindex":"7003ab93-2e87-11e6-9cc1-fdda4bfb03b9","method":{"position":"org.apache.commons.collections4.IteratorUtils:446","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<E> iterator) {\n    if ((iterator.hasPrevious()) == false) {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"7003d2a4-2e87-11e6-9cc1-11df9de76277","method":{"position":"org.apache.commons.collections4.MapUtils:802","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key, final long defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return defaultValue;\n            } \n            return longObject.longValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[892,893],"tindex":"7003d2a5-2e87-11e6-9cc1-655f57f1f4e4","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935],"tindex":"7003d2a6-2e87-11e6-9cc1-c1f8eb86a5fa","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            return addAll(size(), coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:167","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"7003d2a7-2e87-11e6-9cc1-51d27c75ae27","method":{"position":"org.apache.commons.collections4.IteratorUtils:763","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> loopingListIterator(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            if (list == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (list == null) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            if (list == null) {\n                                throw new java.lang.NullPointerException(\"List must not be null\");\n                            } \n                            return new org.apache.commons.collections4.iterators.LoopingListIterator<E>(list);\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}