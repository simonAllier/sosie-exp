{"failureDictionary":{"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":206,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":71,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":40,"org.apache.commons.collections4.list.PredicatedListTest.testObjectEqualsSelf":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":106,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":216,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":98,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":24,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":204,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":130,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":176,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":150,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":212,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":9,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking":20,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":135,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":69,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":199,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":154,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":56,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":192,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToString":48,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking":116,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":1,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":76,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":91,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":187,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":79,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":59,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testDecorateFactory":110,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":0,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":181,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":152,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":53,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":50,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":27,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking":31,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":218,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":26,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking":240,"org.apache.commons.collections4.CollectionUtilsTest.testSize_List":129,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":4,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":96,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":165,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":36,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":7,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":75,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":189,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":46,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":6,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":161,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":219,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":169,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":180,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":58,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":52,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":128,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":2,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":137,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":221,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":68,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":108,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":126,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":193,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":151,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":156,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":177,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":237,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":85,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":191,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":228,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":160,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":215,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":188,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":84,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking2":118,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":138,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":92,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":172,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":97,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":223,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":74,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking":34,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":29,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":147,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":238,"org.apache.commons.collections4.list.PredicatedListTest.testEqualsNull":63,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":60,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":155,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":16,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Other":134,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":78,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":73,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":171,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":173,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":141,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":18,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":162,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":115,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":243,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":77,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":210,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":17,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":184,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":166,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":89,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":39,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":28,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":112,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":107,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":235,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":205,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":230,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":127,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":220,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":41,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":66,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":158,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":136,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":185,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":225,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":104,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":122,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":183,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":197,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":198,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":13,"org.apache.commons.collections4.list.PredicatedListTest.testCanonicalFullCollectionExists":62,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":80,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":22,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":224,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":11,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":57,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":222,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":113,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":178,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":213,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":38,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":81,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":174,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":186,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":95,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":120,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":201,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":14,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":93,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":132,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":54,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":200,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":146,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":194,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":42,"org.apache.commons.collections4.list.PredicatedListTest.testCanonicalEmptyCollectionExists":64,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":8,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsSelfHashCode":67,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":121,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":109,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":3,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":227,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains3":87,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":190,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains2":86,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":202,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":111,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":148,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":145,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":12,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":207,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":125,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":231,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":217,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalSet":15,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":90,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":226,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListSerialization":43,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":72,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":140,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":208,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":21,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking":25,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":35,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":139,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":232,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":103,"org.apache.commons.collections4.list.PredicatedListTest.testFullListSerialization":33,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":105,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":117,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":88,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":37,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":157,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":55,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":163,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":168,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":32,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":175,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking2":242,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Array":133,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":214,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":159,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":241,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Map":131,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":149,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":70,"org.apache.commons.collections4.list.PredicatedListTest.testSimpleSerialization":65,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":209,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":45,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionSize":47,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":30,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":239,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":124,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":170,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":179,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":114,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":123,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":99,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":236,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":142,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":10,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":51,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":49,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":182,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":101,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":119,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":234,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":167,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":143,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":203,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":44,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":196,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":195,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":211,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":5,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":153,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":229,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":23,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":233,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":144,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":94,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":164},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtBinaryOperatorImpl","sourcecode":"((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))"},"failures":[],"tindex":"a5183223-2ea0-11e6-a956-5d6852b0d301","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (((coll == null) || (coll == null)) || ((list1.size()) != (list2.size()))) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) || (coll.isEmpty())) {\n                        return false;\n                    } \n                    boolean boolean = false;\n                    final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                    while (it.hasNext()) {\n                        modified |= remove(it.next());\n                    }\n                    return modified;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:276","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[0,1,2,3,4],"tindex":"a5191c84-2ea0-11e6-a956-43e8a9baf132","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:340","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> mutator) {\n    if (mutator == null) {\n        {\n            org.apache.commons.collections4.collection.CompositeCollection.this.org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> = mutator;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:58","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"a5194395-2ea0-11e6-a956-254bead0a3e2","method":{"position":"org.apache.commons.collections4.ListUtils:477","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.LazyList.lazyList(list, factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[5,6],"tindex":"a5196aa6-2ea0-11e6-a956-097ac93b4615","method":{"position":"org.apache.commons.collections4.CollectionUtils:463","type":"CtMethodImpl","sourcecode":"public static boolean isSubCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((a.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n            for (final java.lang.Object java.lang.Object : a) {\n                if ((helper.freqA(obj)) > (helper.freqB(obj))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"a"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:187","type":"CtBinaryOperatorImpl","sourcecode":"cachedNode == null"},"failures":[],"tindex":"a5196aa7-2ea0-11e6-a956-25e97df183ad","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:481","type":"CtMethodImpl","sourcecode":"protected void addNodeAfter(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = createNode(value);\n            addNode(newNode, node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cachedNode":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[7],"tindex":"a51991b8-2ea0-11e6-a956-b9feaf4dc453","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) != (coll.size())) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"a51991b9-2ea0-11e6-a956-b115d9fe0b3c","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:379","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Collection<E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.List<java.util.Collection<E>>.remove(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:141","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[8],"tindex":"a519b8ca-2ea0-11e6-a956-1daac153504f","method":{"position":"org.apache.commons.collections4.CollectionUtils:663","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection != null) && (closure != null)) {\n                for (final T T : collection) {\n                    closure.execute(element);\n                }\n            } \n            return closure;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1220","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[9],"tindex":"a519b8cb-2ea0-11e6-a956-23f6cbf1f437","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:204","type":"CtMethodImpl","sourcecode":"public org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor(final int fromIndex) {\n    if (fromIndex == 0) {\n        {\n            final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = new org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>(org.apache.commons.collections4.list.CursorableLinkedList.this , fromIndex);\n            registerCursor(cursor);\n            return cursor;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"fromIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtBinaryOperatorImpl","sourcecode":"newCapacity <= (org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY)"},"failures":[],"tindex":"a519dfdc-2ea0-11e6-a956-c9cb9fef5ba9","method":{"position":"org.apache.commons.collections4.list.PredicatedList:94","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index <= index) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"index","newCapacity":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[10],"tindex":"a519dfdd-2ea0-11e6-a956-532bacda78c7","method":{"position":"org.apache.commons.collections4.PredicateUtils:352","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> eitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate1 == null) {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>onePredicate(predicate1, predicate2);\n            return onePredicate;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"a51a06ee-2ea0-11e6-a956-516becd1598c","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:146","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<K, V>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[11],"tindex":"a51a06ef-2ea0-11e6-a956-c3a8d3f95660","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:210","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends J, ? extends U> mapToCopy) {\n    if (mapToCopy.isEmpty()) {\n        {\n            decorated().putAll(transformMap(mapToCopy));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.ReplacementsFinder:90","type":"CtBinaryOperatorImpl","sourcecode":"(pendingDeletions.isEmpty()) && (pendingInsertions.isEmpty())"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"tindex":"a51a2e00-2ea0-11e6-a956-218367b4c003","method":{"position":"org.apache.commons.collections4.list.PredicatedList:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.list.PredicatedList<T> predicatedList(final java.util.List<T> list, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((list.isEmpty()) && (list.isEmpty())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.PredicatedList<T>(list , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingDeletions":"list","pendingInsertions":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1220","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[],"tindex":"a51a2e01-2ea0-11e6-a956-b58c14187dd9","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:179","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (index == 0) {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.set(index, comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(index);\n            } else {\n                java.util.BitSet.clear(index);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[],"tindex":"a51a5512-2ea0-11e6-a956-7d9b723f3a6f","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:105","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key instanceof java.util.Dictionary) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:381","type":"CtConditionalImpl","sourcecode":"nextElement == null ? p == null : nextElement.equals(p)"},"failures":[],"tindex":"a51bb4a3-2ea0-11e6-a956-2ba18e3ef49d","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:140","type":"CtMethodImpl","sourcecode":"static boolean compare(final java.lang.Object a, final java.lang.Object b) {\n    if (a == null ? a == null : nextElement.equals(p)) {\n        {\n            return a == null ? b == null : a.equals(b);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"a","nextElement":"a"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"a51bb4a4-2ea0-11e6-a956-254b41956b1b","method":{"position":"org.apache.commons.collections4.set.CompositeSet:343","type":"CtMethodImpl","sourcecode":"public synchronized void addComposited(final java.util.Set<E> set) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set);\n                if ((intersects.size()) > 0) {\n                    if ((org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n                    } \n                    getMutator().resolveCollision(org.apache.commons.collections4.set.CompositeSet.this, existingSet, set, intersects);\n                    if ((org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0) {\n                        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n                    } \n                } \n            }\n            java.util.List<java.util.Set<E>>.add(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"a51bdbb5-2ea0-11e6-a956-d7c709862e7a","method":{"position":"org.apache.commons.collections4.ComparatorUtils:235","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>E max(final E o1, final E o2, java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            final int int = comparator.compare(o1, o2);\n            return c > 0 ? o1 : o2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[68,69,70,71],"tindex":"a51bdbb6-2ea0-11e6-a956-21e63eba3361","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:384","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 == null) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((multi.size()) == 3) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[72,73,74,75,76,77,78,79,80,81,82,83,84],"tindex":"a51c02c7-2ea0-11e6-a956-054c1342c192","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:68","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if ((object instanceof java.util.List) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"a51c02c8-2ea0-11e6-a956-570bac5c6de4","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) != (coll.size())) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[85],"tindex":"a51c02c9-2ea0-11e6-a956-e752fec2d4d0","method":{"position":"org.apache.commons.collections4.CollectionUtils:946","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection != null) && (predicate != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry"},"failures":[],"tindex":"a51c02ca-2ea0-11e6-a956-c506704feb7d","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2031","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o instanceof java.util.Map.Entry) {\n                {\n                    if (!(o instanceof java.util.Map.Entry)) {\n                        return false;\n                    } \n                    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n                    final K K = entry.getKey();\n                    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                        return false;\n                    } \n                    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n                    if ((node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()))) {\n                        removeEntry(node);\n                        return true;\n                    } \n                    return false;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"a51c29db-2ea0-11e6-a956-9d9cc4cfb47a","method":{"position":"org.apache.commons.collections4.map.Flat3Map:126","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(key);\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                    case 2 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                    case 1 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"a51c50ec-2ea0-11e6-a956-2303624c7fa0","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2031","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o instanceof java.util.Map.Entry) {\n                {\n                    if (!(o instanceof java.util.Map.Entry)) {\n                        return false;\n                    } \n                    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n                    final K K = entry.getKey();\n                    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                        return false;\n                    } \n                    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n                    if ((node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()))) {\n                        removeEntry(node);\n                        return true;\n                    } \n                    return false;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:157","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.String"},"failures":[86,87,88,89,90,91,92,93,94,95,96,97,98],"tindex":"a51c50ed-2ea0-11e6-a956-757c8042e301","method":{"position":"org.apache.commons.collections4.map.SingletonMap:189","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key instanceof java.lang.String) {\n                {\n                    if (isEqualKey(key)) {\n                        return V;\n                    } \n                    return null;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[99,100,101,102],"tindex":"a51c77fe-2ea0-11e6-a956-b9328c47c7fb","method":{"position":"org.apache.commons.collections4.map.CompositeMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsValue(value)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"a51c77ff-2ea0-11e6-a956-dfb341d2f7a4","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (((coll == null) || (coll == null)) || ((list1.size()) != (list2.size()))) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) || (coll.isEmpty())) {\n                        return false;\n                    } \n                    boolean boolean = false;\n                    final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                    while (it.hasNext()) {\n                        modified |= remove(it.next());\n                    }\n                    return modified;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:520","type":"CtBinaryOperatorImpl","sourcecode":"(node.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY)) != null"},"failures":[103,104,105,106,107,108,109],"tindex":"a51c7800-2ea0-11e6-a956-23824d4bd55c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:631","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextSmaller(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getRight(dataElement)) != null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getLeft(dataElement)) != null) {\n                rval = greatestNode(node.getLeft(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getLeft(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:55","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[110],"tindex":"a51c9f11-2ea0-11e6-a956-a109aff77347","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:54","type":"CtMethodImpl","sourcecode":"public static <T>java.util.Collection<T> unmodifiableCollection(final java.util.Collection<? extends T> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Collection<T> java.util.Collection<T> = ((java.util.Collection<T>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableCollection<T>(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[111,112,105,113,106,114,107,108,109,115],"tindex":"a51c9f12-2ea0-11e6-a956-61a34eb00857","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:755","type":"CtMethodImpl","sourcecode":"private static void makeRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            if (node != null) {\n                node.setRed(dataElement);\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"a51cc623-2ea0-11e6-a956-11f5b91fc671","method":{"position":"org.apache.commons.collections4.map.SingletonMap:189","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key instanceof java.lang.String) {\n                {\n                    if (isEqualKey(key)) {\n                        return V;\n                    } \n                    return null;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"a51cc624-2ea0-11e6-a956-1b64e137bc62","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtBinaryOperatorImpl","sourcecode":"(size) >= (threshold)"},"failures":[116,117,118],"tindex":"a51cc625-2ea0-11e6-a956-43d7b4d419ba","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:147","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index >= index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","threshold":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:448","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[119,120,121,122,123,124,125,126,127],"tindex":"a51cc626-2ea0-11e6-a956-d39a4b252909","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:626","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            return org.apache.commons.collections4.map.StaticBucketMap.this.containsKey(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144],"tindex":"a51ced37-2ea0-11e6-a956-0757a2832713","method":{"position":"org.apache.commons.collections4.CollectionUtils:1329","type":"CtMethodImpl","sourcecode":"public static int size(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object == null) {\n                return 0;\n            } \n            int int = 0;\n            if (object instanceof java.util.Map<?, ?>) {\n                total = ((java.util.Map<?, ?>)(object)).size();\n            } else if (object instanceof java.util.Collection<?>) {\n                total = ((java.util.Collection<?>)(object)).size();\n            } else if (object instanceof java.lang.Object[]) {\n                total = ((java.lang.Object[])(object)).int;\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    total++;\n                    it.next();\n                }\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    total++;\n                    it.nextElement();\n                }\n            } else {\n                try {\n                    total = java.lang.reflect.Array.getLength(object);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n            return total;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[145],"tindex":"a51dd798-2ea0-11e6-a956-4da5dcac48c1","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:157","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.String"},"failures":[],"tindex":"a51e73d9-2ea0-11e6-a956-c3cf242a779a","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:264","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 instanceof java.lang.Double) {\n        {\n            if (key1 instanceof java.lang.String) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final int int = hash(key1, key2, key3);\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n                    while (entry != null) {\n                        if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                            return entry.getValue();\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n                    }\n                    return null;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[70],"tindex":"a51e73da-2ea0-11e6-a956-813ef2f820b4","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:629","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key4 == null) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"key4"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"a51f101b-2ea0-11e6-a956-6bf8ab57316d","method":{"position":"org.apache.commons.collections4.map.Flat3Map:758","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, V>.containsKey(key);\n            org.apache.commons.collections4.map.Flat3Map<K, V>.remove(key);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[146],"tindex":"a520218c-2ea0-11e6-a956-db27f6b92da1","method":{"position":"org.apache.commons.collections4.functors.TransformerClosure:48","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> transformerClosure(final org.apache.commons.collections4.Transformer<? super E, ?> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            return new org.apache.commons.collections4.functors.TransformerClosure<E>(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl","sourcecode":"list1 == list2"},"failures":[6],"tindex":"a520218d-2ea0-11e6-a956-4993bdbcf295","method":{"position":"org.apache.commons.collections4.CollectionUtils:494","type":"CtMethodImpl","sourcecode":"public static boolean isProperSubCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if (b == a) {\n        {\n            return ((a.size()) < (b.size())) && (org.apache.commons.collections4.CollectionUtils.isSubCollection(a, b));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"b","list2":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[147,148,149,150,151,152,153,154,155,156,157,73,158,159,160,161,162,163,79,164,165,166,167,168,169,81,170,171,172,173,174,175,82,176,177,84,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235],"tindex":"a520489e-2ea0-11e6-a956-55c09fa26168","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().contains(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[236],"tindex":"a520489f-2ea0-11e6-a956-25c91ed62fdc","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return decorated().indexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:323","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Double"},"failures":[],"tindex":"a52048a0-2ea0-11e6-a956-952ed74ac88c","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:264","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 instanceof java.lang.Double) {\n        {\n            if (key1 instanceof java.lang.String) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final int int = hash(key1, key2, key3);\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n                    while (entry != null) {\n                        if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                            return entry.getValue();\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n                    }\n                    return null;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key3"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"a5206eb1-2ea0-11e6-a956-01bb69fd2320","method":{"position":"org.apache.commons.collections4.map.Flat3Map:982","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.Flat3Map<K, ?>.remove(key);\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[237,238],"tindex":"a52095c2-2ea0-11e6-a956-ffe269703dcc","method":{"position":"org.apache.commons.collections4.map.TransformedMap:241","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if ((mapToCopy.size()) != 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            mapToCopy = transformMap(mapToCopy);\n            decorated().putAll(mapToCopy);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:178","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.iterators.ObjectArrayListIterator.this.lastItemIndex) == (-1)"},"failures":[239,240,241,242],"tindex":"a52095c3-2ea0-11e6-a956-3fad48e2a95d","method":{"position":"org.apache.commons.collections4.list.TransformedList:155","type":"CtMethodImpl","sourcecode":"public E set(final int index, E object) {\n    if (index == (-1)) {\n        {\n            object = transform(object);\n            return getList().set(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastItemIndex":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:488","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"a52095c4-2ea0-11e6-a956-89109cc661fa","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.containsKey(key)) {\n                final V V = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.get(key);\n                if (value == null ? (entry.getValue()) == null : value.equals(entry.getValue())) {\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.remove(key);\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.remove(value);\n                    return true;\n                } \n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtBinaryOperatorImpl","sourcecode":"((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))"},"failures":[],"tindex":"a520bcd5-2ea0-11e6-a956-4b7f8755532d","method":{"position":"org.apache.commons.collections4.CollectionUtils:1427","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((set1.size()) != (set2.size()))) {\n        {\n            return !(org.apache.commons.collections4.CollectionUtils.isEmpty(coll));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[85,243],"tindex":"a520bcd6-2ea0-11e6-a956-f9be58bd8028","method":{"position":"org.apache.commons.collections4.CollectionUtils:968","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if ((inputCollection != null) && (predicate != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (!(predicate.evaluate(item))) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:287","type":"CtBinaryOperatorImpl","sourcecode":"(index < startIndex) || (index > endIndex)"},"failures":[],"tindex":"a520bcd7-2ea0-11e6-a956-238302759939","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1050","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<E> subList(final int fromIndexInclusive, final int toIndexExclusive) {\n    if ((toIndexExclusive < toIndexExclusive) || (index > fromIndexInclusive)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>(org.apache.commons.collections4.list.AbstractLinkedList<E> , (fromIndexInclusive + (int)) , (toIndexExclusive + (int)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"toIndexExclusive","endIndex":"fromIndexInclusive","index":"toIndexExclusive"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:916","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"a520e3e8-2ea0-11e6-a956-bf70e3956d3c","method":{"position":"org.apache.commons.collections4.list.TreeList:502","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.list.TreeList.AVLNode<E> insertOnLeft(final int indexRelativeToMe, final E obj) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(indexRelativeToMe)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((getLeftSubTree()) == null) {\n                setLeft(new org.apache.commons.collections4.list.TreeList.AVLNode<E>((-1) , obj , org.apache.commons.collections4.list.TreeList.AVLNode.this , org.apache.commons.collections4.list.TreeList.AVLNode<E>), null);\n            } else {\n                setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(indexRelativeToMe, obj), null);\n            }\n            if ((int) >= 0) {\n                (int)++;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = balance();\n            recalcHeight();\n            return ret;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"indexRelativeToMe"},"type":"special","returnInThen":false,"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":54,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}