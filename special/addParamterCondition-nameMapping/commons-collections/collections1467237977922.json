{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":68,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":257,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":323,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":24,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":105,"org.apache.commons.collections4.CollectionUtilsTest.getNegative":443,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":607,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":858,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":415,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":601,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":859,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":725,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":572,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":703,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":76,"org.apache.commons.collections4.CollectionUtilsTest.collect":497,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":535,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":479,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":462,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":162,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":341,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":365,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":123,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":304,"org.apache.commons.collections4.CollectionUtilsTest.get":471,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking":689,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":133,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":209,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":119,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":394,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testEqualsNull":423,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":141,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":863,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":72,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":373,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":113,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":9,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":110,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":200,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":612,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":568,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":478,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":186,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":332,"org.apache.commons.collections4.CollectionUtilsTest.select":453,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":744,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":495,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Other":511,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":104,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":455,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":53,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testEqualsNull":622,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":292,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":29,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":302,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":366,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":264,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":233,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":399,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":565,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":788,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":305,"org.apache.commons.collections4.CollectionUtilsTest.intersection":477,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":195,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":585,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":625,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":852,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":290,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":86,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":563,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":749,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":619,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":313,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":77,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":298,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":314,"org.apache.commons.collections4.CollectionUtilsTest.testPermutationsWithNullCollection":485,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":546,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":127,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":606,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":23,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":170,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":613,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":69,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Other":519,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveChangesMap":774,"org.apache.commons.collections4.map.CompositeMapTest.testPut":534,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":131,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testObjectEqualsSelf":630,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":201,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":155,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":403,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":627,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":84,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":506,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":847,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":802,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":482,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":587,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":710,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":374,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":226,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":372,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":371,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":11,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":333,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":368,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":177,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":151,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":611,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":99,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":347,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":498,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":825,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":397,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull":450,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":487,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":615,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":540,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":388,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":799,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Enumeration":438,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":609,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":312,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":407,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":102,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":697,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesIteratorRemoveChangesMap":594,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Null":468,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":836,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":223,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformer":831,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":18,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":599,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testSerializeDeserializeThenCompare":632,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":147,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":614,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":85,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":199,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":254,"org.apache.commons.collections4.functors.AllPredicateTest.emptyCollectionToGetInstance":154,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":109,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":663,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":843,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":603,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":253,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":386,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx1":650,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":256,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveChangesMap":647,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":835,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":755,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":192,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":263,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectEqualsSelf":421,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":826,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":827,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":731,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":828,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":377,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":761,"org.apache.commons.collections4.CollectionUtilsTest.get1":473,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":753,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_PrimitiveArray":457,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCanonicalFullCollectionExists":422,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":126,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":270,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":39,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":115,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":521,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":764,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":318,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":514,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":324,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":694,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":345,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":247,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":189,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":307,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":65,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":144,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":410,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":692,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":856,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":804,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":142,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":74,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsContract":633,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNull":430,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":48,"org.apache.commons.collections4.functors.AllPredicateTest.singletonCollectionToGetInstance":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":67,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":339,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":700,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":344,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":343,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":375,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":475,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":206,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":554,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":742,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":248,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":243,"org.apache.commons.collections4.CollectionUtilsTest.exists":445,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":669,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":580,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":293,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectHashCodeEqualsSelfHashCode":427,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":222,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":439,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":46,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":704,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":743,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":644,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":62,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":548,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":178,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":355,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":814,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":369,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":19,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":303,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":759,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":160,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":244,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullStream":712,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":288,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":364,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":699,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":370,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":346,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":666,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":219,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":752,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":733,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":269,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":838,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove3":822,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove2":821,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove1":820,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":4,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":773,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":214,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":657,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":772,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":728,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":306,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":768,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionSize":412,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":273,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":698,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":26,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":770,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":1,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":268,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":553,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":762,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":173,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":442,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":22,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":636,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":300,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":574,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":652,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":301,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":402,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":756,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":58,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":246,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":793,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":174,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":132,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":2,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":129,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":571,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":10,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":363,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":32,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":461,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":628,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":337,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":693,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":783,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":451,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":771,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":801,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":551,"org.apache.commons.collections4.SetUtilsTest.testHashCode":765,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":434,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":662,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":739,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":818,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":539,"org.apache.commons.collections4.CollectionUtilsTest.emptyCollection":458,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":71,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":354,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":469,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":319,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":387,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":398,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":791,"org.apache.commons.collections4.ListUtilsTest.testDefaultIfNull":866,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":163,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":635,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":122,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":525,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":588,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":362,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectHashCodeEqualsContract":426,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":153,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":227,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":406,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":335,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":130,"org.apache.commons.collections4.ListUtilsTest.testSelect":524,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":558,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveAll":592,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":557,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":516,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":213,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":381,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":322,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":507,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":582,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":59,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":260,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":494,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":384,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":383,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":342,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":382,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":294,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":405,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetIteratorRemoveChangesMap":245,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":146,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":215,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testSimpleSerialization":425,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":395,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":845,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":150,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":602,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":691,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":683,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":137,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":328,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":166,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":367,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":795,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":221,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":140,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":139,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":138,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":767,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":509,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":329,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":237,"org.apache.commons.collections4.CollectionUtilsTest.find":472,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":648,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":148,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":861,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":251,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":570,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":276,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":695,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":562,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":474,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":643,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":454,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":317,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":3,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":356,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":447,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":865,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":682,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":31,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":701,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":567,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":671,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":520,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":212,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":401,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":27,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":379,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":780,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":280,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":604,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":197,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":308,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":57,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":266,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":338,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":459,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":135,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":125,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx2":833,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":840,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":600,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":734,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":714,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":596,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":217,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":44,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRemoveChangesMap":646,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":649,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":284,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":526,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":396,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":277,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":359,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testSerializeDeserializeThenCompare":624,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":80,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":238,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":598,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":40,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":775,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":786,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":287,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":316,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":504,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":673,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":815,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":315,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":638,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":198,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":466,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":252,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":705,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":194,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":839,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithEmptyCollection":432,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testSerializeDeserializeThenCompare":418,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":545,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":543,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":90,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":391,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":490,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testDecorateFactory":408,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":83,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":433,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":491,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":560,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":50,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":224,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":182,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":634,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":658,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":665,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":617,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray2":411,"org.apache.commons.collections4.CollectionUtilsTest.addAllForElements":441,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":702,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":729,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":741,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":672,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":555,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":618,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":299,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":55,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":229,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":414,"org.apache.commons.collections4.CollectionUtilsTest.transform2":436,"org.apache.commons.collections4.CollectionUtilsTest.transform1":435,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":120,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":792,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionNullEquator":503,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":605,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":776,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":311,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":642,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":778,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":191,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":832,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":817,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":93,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":289,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":94,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":205,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":92,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":419,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":25,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":616,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":857,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToString":413,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":656,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":348,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream":711,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":721,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRetainAll":593,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":444,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":715,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":575,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":54,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNonEmptyCollection":431,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testEqualsCompatibleInstance":620,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":864,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetRemoveChangesMap":240,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":49,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":279,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":751,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetIteratorRemoveChangesMap":241,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":271,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":210,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":564,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":66,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":207,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":20,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":417,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":559,"org.apache.commons.collections4.map.CompositeMapTest.testGet":533,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":169,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":64,"org.apache.commons.collections4.list.UnmodifiableListTest.testDecorateFactory":0,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":285,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":738,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":152,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":829,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":380,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":286,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":661,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":483,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":655,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testSerializeDeserializeThenCompare":629,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":6,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":172,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":321,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":530,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":664,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":809,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":107,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":811,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":790,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":812,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":449,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":813,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":34,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveChangesMap":823,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":645,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":686,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":573,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":184,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":216,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":781,"org.apache.commons.collections4.CollectionUtilsTest.union":476,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":639,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":732,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":853,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":161,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":353,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":91,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":157,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":532,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":334,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":81,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":719,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":740,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":684,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":87,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":204,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRemoveChangesMap":796,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":73,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":547,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":766,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":390,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":492,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":389,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":515,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":28,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":17,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":231,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":763,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":282,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":668,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":722,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":203,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":726,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":97,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":584,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":95,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":566,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":185,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":350,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":360,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":35,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":589,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":675,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":340,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":542,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":393,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":846,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":608,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":225,"org.apache.commons.collections4.CollectionUtilsTest.collateException2":465,"org.apache.commons.collections4.CollectionUtilsTest.collateException1":464,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":670,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":361,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":275,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":747,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":486,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":175,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":79,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":782,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":824,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":777,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":283,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":640,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":745,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":746,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":750,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Array":518,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":641,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Map":510,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":544,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":183,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":517,"org.apache.commons.collections4.CollectionUtilsTest.testUnmodifiableCollection":499,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":262,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":717,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":862,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":349,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":800,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":106,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":261,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":493,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":579,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testObjectHashCodeEqualsContract":623,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":272,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":706,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":117,"org.apache.commons.collections4.map.SingletonMapTest.testClone":758,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Array":508,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":718,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":103,"org.apache.commons.collections4.CollectionUtilsTest.filter":446,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":537,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":716,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":536,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":428,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":352,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":737,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":38,"org.apache.commons.collections4.QueueUtilsTest.testEmptyQueue":249,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":460,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":78,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":626,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":841,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":528,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":16,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove1":805,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":228,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove2":806,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":295,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":784,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove3":807,"org.apache.commons.collections4.CollectionUtilsTest.addIgnoreNull":496,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":310,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":61,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":677,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":678,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":420,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":168,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":281,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":358,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":357,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":676,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":392,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":52,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":236,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":674,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":297,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":134,"org.apache.commons.collections4.CollectionUtilsTest.testSize_List":502,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":527,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":550,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":331,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":720,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":830,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":5,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":320,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":437,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testObjectEqualsSelf":621,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":440,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":798,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":37,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":484,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":326,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":327,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":538,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":165,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":291,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":696,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":14,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":531,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":844,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":837,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testObjectHashCodeEqualsContract":631,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":190,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnmodifiable":409,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":239,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":108,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":176,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":196,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":727,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":232,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":378,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":637,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":351,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":842,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":15,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":819,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":590,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":481,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":208,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":385,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":164,"org.apache.commons.collections4.CollectionUtilsTest.addAllForEnumeration":452,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":816,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":111,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":33,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Iterator":505,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":709,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":748,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":789,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":724,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":803,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":121,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":488,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":810,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":463,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":336,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":489,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":723,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":660,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":578,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":188,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":149,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":659,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":114,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_List":467,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":220,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":456,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":760,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":187,"org.apache.commons.collections4.set.CompositeSetTest.testContains":529,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithEmptyCollection":523,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":278,"org.apache.commons.collections4.CollectionUtilsTest.isFull":448,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":569,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":43,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":736,"org.apache.commons.collections4.CollectionUtilsTest.getFromObjectArray":480,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":98,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":501,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":265,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Map":470,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":708,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":167,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":21,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIsEmpty":416,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":681,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":400,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":513,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":552,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":267,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":730,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":707,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":834,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":679,"org.apache.commons.collections4.CollectionUtilsTest.reverse":500,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":680,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":124,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":255,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex1":757,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":143,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":159,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCanonicalEmptyCollectionExists":424,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":136,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx5":158,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":218,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":230,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":854,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":855,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":667,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":549,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":258,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":785,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":116,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":376,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":404,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":36,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":597,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":595,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":330,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":797,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":610,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":211,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":259,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":202,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":145,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":171,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":769,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":787,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":685,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":88,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveChangesMap":808,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":180,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":60,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":522,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":296,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNonEmptyCollection":512,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":179,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":556,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":8,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":234,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":586,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":577,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":89,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":779,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":576,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":651,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":101,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":75,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":690,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":42,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":118,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":235,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":112,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":13,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":30,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":735,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":250,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":591,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":325,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":848,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":688,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":849,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":653,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesRemoveChangesMap":794,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":193,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":541,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":128,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":687,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":860,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":429,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":181,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":583,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":850,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":754,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":851,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":47,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":274,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":654,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":713,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":581,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":309,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":7,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":242,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":41,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":561},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"b444c52c-3e45-11e6-bdd0-535a2d3fd218","method":{"position":"org.apache.commons.collections4.CollectionUtils:326","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final org.apache.commons.collections4.Predicate<O> p) {\n    if ((b == null) || (b == null)) {\n        {\n            final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>();\n            final org.apache.commons.collections4.bag.HashBag<O> org.apache.commons.collections4.bag.HashBag<O> = new org.apache.commons.collections4.bag.HashBag<O>();\n            for (final O O : b) {\n                if (p.evaluate(element)) {\n                    bag.add(element);\n                } \n            }\n            for (final O O : a) {\n                if (!(bag.remove(element, 1))) {\n                    list.add(element);\n                } \n            }\n            return list;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[0],"tindex":"b4453a5d-3e45-11e6-bdd0-8396ab21eadb","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.List<E> java.util.List<E> = ((java.util.List<E>)(list));\n                return tmpList;\n            } \n            return new org.apache.commons.collections4.list.UnmodifiableList<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"b445616e-3e45-11e6-bdd0-b785e7940a59","method":{"position":"org.apache.commons.collections4.bag.SynchronizedSortedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedSortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.SynchronizedSortedBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[1],"tindex":"b445616f-3e45-11e6-bdd0-894eb3f264b2","method":{"position":"org.apache.commons.collections4.list.TransformedList:123","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            return getList().indexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"tindex":"b4458880-3e45-11e6-bdd0-dda31a307ae4","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:946","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152],"tindex":"b445af91-3e45-11e6-bdd0-6d7822a6173f","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:755","type":"CtMethodImpl","sourcecode":"private static void makeRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node != null) {\n                node.setRed(dataElement);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"b445af92-3e45-11e6-bdd0-5b62eb94c306","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:362","type":"CtMethodImpl","sourcecode":"public int size(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return 0;\n            } \n            return coll.size();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[153,153,154,155,155,156,157,158,159,160],"tindex":"b445d6a3-3e45-11e6-bdd0-f752146a17b1","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:79","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((preds.int) == 1) {\n                return preds[0];\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(preds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,55,246,247,248],"tindex":"b445d6a4-3e45-11e6-bdd0-2b11c5b06ec2","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:81","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().containsKey(key);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[249,250],"tindex":"b445fdb5-3e45-11e6-bdd0-9fb6aea7ba10","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[251,252,253,254,255,256],"tindex":"b445fdb6-3e45-11e6-bdd0-d31f6b2105db","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic O transform(final java.lang.Object input) {\n    if (input == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (input == null) {\n                return null;\n            } \n            try {\n                final java.lang.Class<?> java.lang.Class<?> = input.getClass();\n                final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(java.lang.String, java.lang.Class<?>[]);\n                return ((O)(method.invoke(input, java.lang.Object[])));\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' does not exist\"));\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' cannot be accessed\"));\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' threw an exception\") , ex);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272],"tindex":"b44624c7-3e45-11e6-bdd0-7b933a6c651a","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return true;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[273,274,275,276,277,278,279,280,281,282,283,284,18,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,28,313,314,315,316,317,318,319,320,321,322,323,324,325,35,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,44,343,344,345,346,347,348,349,350,351,352,353,354,355,356,53,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398],"tindex":"b4464bd8-3e45-11e6-bdd0-0300939e39c0","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:337","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(java.lang.Object key) {\n    if (key == null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            final int int = hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    final V V = entry.getValue();\n                    removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:151","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[],"tindex":"b44672e9-3e45-11e6-bdd0-03b0ab76d448","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"b44672ea-3e45-11e6-bdd0-ef980cefbea0","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:616","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntrySet().contains(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"b44672eb-3e45-11e6-bdd0-2162227f102b","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                return containsAll(((org.apache.commons.collections4.Bag<?>)(coll)));\n            } \n            return containsAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(coll));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:55","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[399,400,401,402,403,404,101,405,144,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,253,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,254,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,288,303,533,534,535,536,537,538,539,540,541,316,542,543,544,545,546,547,548,549,550,551,552,329,553,346,360,554,555,556,557,558,559,220,221,222,223,225,560,561,226,562,563,564,228,565,566,567,568,569,570,230,571,572,573,574,575,576,577,578,579,580,581,374,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,392,608,609,610,247,611,612,613,614,615,616,617],"tindex":"b44672ec-3e45-11e6-bdd0-93fa98ebf83a","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:54","type":"CtMethodImpl","sourcecode":"public static <T>java.util.Collection<T> unmodifiableCollection(final java.util.Collection<? extends T> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Collection<T> java.util.Collection<T> = ((java.util.Collection<T>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableCollection<T>(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:68","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[618],"tindex":"b44699fd-3e45-11e6-bdd0-91d75967229c","method":{"position":"org.apache.commons.collections4.ClosureUtils:218","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if (closures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"b44699fe-3e45-11e6-bdd0-d765e2232d55","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:165","type":"CtMethodImpl","sourcecode":"public void add(final java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"add() method is not supported\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl","sourcecode":"collectionFactory == null"},"failures":[],"tindex":"b44699ff-3e45-11e6-bdd0-ad08d95d353c","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:120","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, ? super C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        {\n            return new org.apache.commons.collections4.map.MultiValueMap<K, V>(map , collectionFactory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:905","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"b4469a00-3e45-11e6-bdd0-c53e8d01b8c0","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:188","type":"CtMethodImpl","sourcecode":"public void setIterator(final int index, final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.set(index, iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(keyTransformer) == null"},"failures":[],"tindex":"b4469a01-3e45-11e6-bdd0-157e8aa94c1d","method":{"position":"org.apache.commons.collections4.MapUtils:1570","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (keyTransformer == null) {\n        {\n            return org.apache.commons.collections4.map.TransformedSortedMap.transformingSortedMap(map, keyTransformer, valueTransformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keyTransformer":"keyTransformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[619],"tindex":"b4469a02-3e45-11e6-bdd0-6ba326718adf","method":{"position":"org.apache.commons.collections4.ClosureUtils:182","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName, paramTypes, args));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"b446c113-3e45-11e6-bdd0-a5d30ba0bca1","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:126","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformer) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer must not be null\");\n            } \n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[620,621,622,623,624],"tindex":"b446c114-3e45-11e6-bdd0-0f973ccb2e69","method":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            return ((org.apache.commons.collections4.comparators.BooleanComparator.this) == object) || ((object instanceof org.apache.commons.collections4.comparators.BooleanComparator) && ((org.apache.commons.collections4.comparators.BooleanComparator.this.boolean) == (((org.apache.commons.collections4.comparators.BooleanComparator)(object)).boolean)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[625,626],"tindex":"b446c115-3e45-11e6-bdd0-d356f7f6c7dc","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:239","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final E E = super.remove(index);\n            java.util.Set<E>.remove(result);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[627,628,629,630,631,632,633,634,43,52,203,238],"tindex":"b446c116-3e45-11e6-bdd0-f5249fe4fa7d","method":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return ((org.apache.commons.collections4.comparators.ComparableComparator.this) == object) || ((null != object) && (object.getClass().equals(org.apache.commons.collections4.comparators.ComparableComparator.this.getClass())));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"b446c117-3e45-11e6-bdd0-fdecc58ac5f1","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return decorated().containsAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"b446c118-3e45-11e6-bdd0-fb93ed56f6fc","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:81","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().containsKey(key);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[635],"tindex":"b446e829-3e45-11e6-bdd0-2d8903c3edea","method":{"position":"org.apache.commons.collections4.map.LazyMap:96","type":"CtMethodImpl","sourcecode":"public static <V, K>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[636],"tindex":"b446e82a-3e45-11e6-bdd0-39460aa18b93","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[637],"tindex":"b446e82b-3e45-11e6-bdd0-e383545a6c61","method":{"position":"org.apache.commons.collections4.IteratorUtils:396","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start) {\n    if (start < 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"b446e82c-3e45-11e6-bdd0-b34c280aa8b1","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:352","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.util.Collection<V> getCollection(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((java.util.Collection<V>)(decorated().get(key)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[638],"tindex":"b446e82d-3e45-11e6-bdd0-81ebcebb789f","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:542","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V set(final int index, final V value) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.setValue(index, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"b446e82e-3e45-11e6-bdd0-ab971183e8db","method":{"position":"org.apache.commons.collections4.IteratorUtils:566","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E>... iterators) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[85],"tindex":"b4470f3f-3e45-11e6-bdd0-27e90fdb7965","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:195","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            return node == null ? null : node.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"b4470f40-3e45-11e6-bdd0-c5405ec92f6f","method":{"position":"org.apache.commons.collections4.CollectionUtils:300","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((b == null) || (a == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<O> org.apache.commons.collections4.Predicate<O> = org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            return org.apache.commons.collections4.CollectionUtils.subtract(a, b, p);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[639,640,641,642,141,145,643,644,645,646,647,648,649],"tindex":"b4470f41-3e45-11e6-bdd0-e172ced37211","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:382","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.map.CompositeMap.this.mutator) == null"},"failures":[],"tindex":"b4470f42-3e45-11e6-bdd0-e597b50ab12d","method":{"position":"org.apache.commons.collections4.map.CompositeMap:121","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> mutator) {\n    if (mutator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> = mutator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[650],"tindex":"b4470f43-3e45-11e6-bdd0-81b11ce90bee","method":{"position":"org.apache.commons.collections4.PredicateUtils:211","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"b4470f44-3e45-11e6-bdd0-37b171aa24dc","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:418","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[651],"tindex":"b4473655-3e45-11e6-bdd0-effeacf6c8df","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[2,3,274,652,653,654,4,655,656,5,6,279,657,658,659,7,660,661,8,9,10,11,12,13,14,15,16,17,18,289,290,291,292,293,294,20,21,22,23,24,25,26,27,28,317,318,319,320,321,322,29,30,31,32,33,34,662,663,35,330,331,332,333,334,335,36,37,38,39,40,41,42,43,44,347,348,349,350,351,352,45,46,47,48,49,50,51,52,53,361,362,363,364,365,366,55],"tindex":"b4473656-3e45-11e6-bdd0-b3ff921b4ed0","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key != null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b4473657-3e45-11e6-bdd0-85df8c9d134d","method":{"position":"org.apache.commons.collections4.MapUtils:213","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Byte getByte(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Byte) {\n                return ((java.lang.Byte)(answer));\n            } \n            return java.lang.Byte.valueOf(answer.byteValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"b4473658-3e45-11e6-bdd0-fbc4ed080206","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:146","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[257,664,665,666,258,259,667,260,261,262,668,669,263,670,264,671,672,265,266,673,674,675,676,677,678,679,680,681,682,683,684,606,267,685,686,268,269,270,271,272],"tindex":"b4475d69-3e45-11e6-bdd0-b5692296180f","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:153","type":"CtMethodImpl","sourcecode":"private int getHash(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                return 0;\n            } \n            int int = key.hashCode();\n            hash += ~(hash << 15);\n            hash ^= hash >>> 10;\n            hash += hash << 3;\n            hash ^= hash >>> 6;\n            hash += ~(hash << 11);\n            hash ^= hash >>> 16;\n            hash %= org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int;\n            return hash < 0 ? hash * (-1) : hash;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:551","type":"CtBinaryOperatorImpl","sourcecode":"equator == null"},"failures":[687,688],"tindex":"b4475d6a-3e45-11e6-bdd0-d36041aaf3d2","method":{"position":"org.apache.commons.collections4.ListUtils:546","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b, final org.apache.commons.collections4.Equator<? super E> equator) {\n    if (equator == null) {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n            } \n            final org.apache.commons.collections4.sequence.SequencesComparator<E> org.apache.commons.collections4.sequence.SequencesComparator<E> = new org.apache.commons.collections4.sequence.SequencesComparator<E>(a , b , equator);\n            final org.apache.commons.collections4.sequence.EditScript<E> org.apache.commons.collections4.sequence.EditScript<E> = comparator.getScript();\n            final org.apache.commons.collections4.ListUtils.LcsVisitor<E> org.apache.commons.collections4.ListUtils.LcsVisitor<E> = new org.apache.commons.collections4.ListUtils.LcsVisitor<E>();\n            script.visit(visitor);\n            return visitor.getSubSequence();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[689,690,691],"tindex":"b4475d6b-3e45-11e6-bdd0-dfc5c6e55103","method":{"position":"org.apache.commons.collections4.list.PredicatedList:106","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        {\n            return decorated().remove(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"b4475d6c-3e45-11e6-bdd0-216054699c88","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1054","type":"CtMethodImpl","sourcecode":"protected void rangeCheck(final int index, final int beyond) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < 0) || (index >= beyond)) {\n                throw new java.lang.IndexOutOfBoundsException(((((\"Index '\" + index) + \"' out of bounds for size '\") + (int)) + \"'\"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[692,693],"tindex":"b4475d6d-3e45-11e6-bdd0-1d8edc5219d1","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:120","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[694,695,696],"tindex":"b447847e-3e45-11e6-bdd0-85fe2c58a742","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:180","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Transformer<?, ?>... transformers) {\n    if (transformers == null) {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n            } \n            for (int int = 0 ; i < (transformers.int) ; i++) {\n                if ((transformers[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtBinaryOperatorImpl","sourcecode":"i < 0"},"failures":[486,487,697,698,699,700,701,702,703,704,705,706],"tindex":"b447847f-3e45-11e6-bdd0-11a17d42d55e","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:329","type":"CtMethodImpl","sourcecode":"private void clear(final int i) {\n    if (i < 0) {\n        {\n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[707,708],"tindex":"b4478480-3e45-11e6-bdd0-313d45e451e9","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1097","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> subtree(final K prefix, final int offsetInBits, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) <= (path.int)) || (lengthInBits < (current.int))) {\n                    break;\n                } \n                path = current;\n                if (!(isBitSet(prefix, (offsetInBits + (current.int)), (offsetInBits + lengthInBits)))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current.isEmpty() ? path : current;\n            if (entry.isEmpty()) {\n                return null;\n            } \n            final int int = offsetInBits + lengthInBits;\n            if ((entry == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && ((lengthInBits(entry.getKey())) < endIndexInBits)) {\n                return null;\n            } \n            if ((isBitSet(prefix, endIndexInBits, endIndexInBits)) != (isBitSet(entry.K, lengthInBits, lengthInBits(entry.K)))) {\n                return null;\n            } \n            final int int = getKeyAnalyzer().bitIndex(prefix, offsetInBits, lengthInBits, entry.K, 0, lengthInBits(entry.getKey()));\n            if ((bitIndex >= 0) && (bitIndex < lengthInBits)) {\n                return null;\n            } \n            return entry;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[709,710,711,712,713,714,715,716,717,718],"tindex":"b447ab91-3e45-11e6-bdd0-f12920180b54","method":{"position":"org.apache.commons.collections4.MapUtils:968","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\nprivate static void verbosePrintInternal(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map, final org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>> lineage, final boolean debug) {\n    if (label != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            if (map == null) {\n                if (label != null) {\n                    out.print(label);\n                    out.print(\" = \");\n                } \n                out.println(\"null\");\n                return ;\n            } \n            if (label != null) {\n                out.print(label);\n                out.println(\" = \");\n            } \n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println(\"{\");\n            lineage.push(map);\n            for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : map.entrySet()) {\n                final java.lang.Object java.lang.Object = entry.getKey();\n                final java.lang.Object java.lang.Object = entry.getValue();\n                if ((childValue instanceof java.util.Map) && (!(lineage.contains(childValue)))) {\n                    org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, (childKey == null ? \"null\" : childKey), ((java.util.Map<?, ?>)(childValue)), lineage, debug);\n                } else {\n                    org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n                    out.print(childKey);\n                    out.print(\" = \");\n                    final int int = lineage.indexOf(childValue);\n                    if (lineageIndex == (-1)) {\n                        out.print(childValue);\n                    } else if (((lineage.size()) - 1) == lineageIndex) {\n                        out.print(\"(this Map)\");\n                    } else {\n                        out.print(((\"(ancestor[\" + ((((lineage.size()) - 1) - lineageIndex) - 1)) + \"] Map)\"));\n                    }\n                    if (debug && (childValue != null)) {\n                        out.print(' ');\n                        out.println(childValue.getClass().getName());\n                    } else {\n                        out.println();\n                    }\n                }\n            }\n            lineage.pop();\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println((debug ? \"} \" + (map.getClass().getName()) : \"}\"));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"label"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[719],"tindex":"b447ab92-3e45-11e6-bdd0-6b843578d896","method":{"position":"org.apache.commons.collections4.SplitMapUtils:158","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[720,721,722,723,724,725,726,727,728,729,730,731,732,733],"tindex":"b447ab93-3e45-11e6-bdd0-d3cbe4c06d2b","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:82","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            return decorated().indexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[734],"tindex":"b447ab94-3e45-11e6-bdd0-0fdbae7f4c20","method":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformerPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformerPredicate<T>(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"b447ab95-3e45-11e6-bdd0-37cc1fe64b28","method":{"position":"org.apache.commons.collections4.set.CompositeSet:388","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Set<E> set) {\n    if (set == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.List<java.util.Set<E>>.remove(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[735,736],"tindex":"b447d2a6-3e45-11e6-bdd0-f7f8b6f52cef","method":{"position":"org.apache.commons.collections4.list.TreeList:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index);\n            final E E = node.E;\n            node.setValue(obj);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[527,529,531,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756],"tindex":"b447d2a7-3e45-11e6-bdd0-95dabb7ba349","method":{"position":"org.apache.commons.collections4.set.CompositeSet:127","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[757],"tindex":"b447d2a8-3e45-11e6-bdd0-8dce6016511f","method":{"position":"org.apache.commons.collections4.PredicateUtils:236","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName, paramTypes, args));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[758,547,759,760,761],"tindex":"b447d2a9-3e45-11e6-bdd0-59265ded7bd4","method":{"position":"org.apache.commons.collections4.map.SingletonMap:221","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return isEqualKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"b447d2aa-3e45-11e6-bdd0-53efc4941579","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:714","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1) {\n    if (key1 != null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((multi.size()) >= 1) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[762],"tindex":"b447f9bb-3e45-11e6-bdd0-3f4784216cf0","method":{"position":"org.apache.commons.collections4.BagUtils:116","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.PredicatedBag.predicatedBag(bag, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[525],"tindex":"b447f9bc-3e45-11e6-bdd0-634dd66e4b2c","method":{"position":"org.apache.commons.collections4.ListUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> selectRejected(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[763,764],"tindex":"b447f9bd-3e45-11e6-bdd0-e376826fe416","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:106","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().getCount(object);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b447f9be-3e45-11e6-bdd0-7fb55cbff681","method":{"position":"org.apache.commons.collections4.MapUtils:566","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key, final java.util.Map<?, ?> defaultValue) {\n    if (map != null) {\n        {\n            java.util.Map<?, ?> java.util.Map<?, ?> = org.apache.commons.collections4.MapUtils.getMap(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"b447f9bf-3e45-11e6-bdd0-058733308fa3","method":{"position":"org.apache.commons.collections4.map.SingletonMap:265","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            switch (map.size()) {\n                case 0 :\n                    return ;\n                case 1 :\n                    final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> = map.entrySet().iterator().next();\n                    put(entry.getKey(), entry.getValue());\n                    return ;\n                default :\n                    throw new java.lang.IllegalArgumentException(\"The map size must be 0 or 1\");\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b447f9c0-3e45-11e6-bdd0-237135850c28","method":{"position":"org.apache.commons.collections4.MapUtils:183","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Number) {\n                        return ((java.lang.Number)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        try {\n                            final java.lang.String java.lang.String = ((java.lang.String)(answer));\n                            return java.text.NumberFormat.getInstance().parse(text);\n                        } catch (final java.text.ParseException e) {\n                        }\n                    } \n                } \n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:141","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[765],"tindex":"b44820d1-3e45-11e6-bdd0-016571626db6","method":{"position":"org.apache.commons.collections4.SetUtils:140","type":"CtMethodImpl","sourcecode":"public static <T>int hashCodeForSet(final java.util.Collection<T> set) {\n    if (set == null) {\n        {\n            if (set == null) {\n                return 0;\n            } \n            int int = 0;\n            for (final T T : set) {\n                if (obj != null) {\n                    hashCode += obj.hashCode();\n                } \n            }\n            return hashCode;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[766],"tindex":"b44820d2-3e45-11e6-bdd0-19943e1e42db","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:136","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"b44820d3-3e45-11e6-bdd0-c916333e4f01","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:791","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? null : node.getParent(dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[767,639,768,769,770,771,641,128,141,772,773,542,774,171,775,543,776,179,777,544,778,187,779,548,780,553,781,195,782,554,783,784,785,199,202,786,555,787,788,212,789,556,559,226,564,230,571,234,237,790,581,791,792,793,794,582,586,590,591,597,605,795,607,796,797,798,799,800,391,392,610,617],"tindex":"b44820d4-3e45-11e6-bdd0-cd057db2b20e","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:85","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830],"tindex":"b44847e5-3e45-11e6-bdd0-2d394e560353","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.containsKey(key)) {\n                final V V = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.get(key);\n                if (value == null ? (entry.getValue()) == null : value.equals(entry.getValue())) {\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.remove(key);\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.remove(value);\n                    return true;\n                } \n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b44847e6-3e45-11e6-bdd0-692c49e13323","method":{"position":"org.apache.commons.collections4.MapUtils:364","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<K, V> map, final K key, final V defaultValue) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final V V = map.get(key);\n                if (answer != null) {\n                    return answer;\n                } \n            } \n            return defaultValue;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"b44847e7-3e45-11e6-bdd0-3b19b87c7fd1","method":{"position":"org.apache.commons.collections4.FactoryUtils:120","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate) {\n    if (classToInstantiate == null) {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, null, null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:79","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (bag != null)) && ((bag.size()) > 0)"},"failures":[],"tindex":"b44847e8-3e45-11e6-bdd0-23646eb7ddb7","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        {\n            final org.apache.commons.collections4.bag.TransformedBag<E> org.apache.commons.collections4.bag.TransformedBag<E> = new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[65,62,63,117,118],"tindex":"b44847e9-3e45-11e6-bdd0-c78277ac6642","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2061","type":"CtMethodImpl","sourcecode":"public V getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"b44847ea-3e45-11e6-bdd0-033ba5e2fe82","method":{"position":"org.apache.commons.collections4.set.CompositeSet:265","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeSet without a SetMutator strategy\");\n            } \n            return org.apache.commons.collections4.set.CompositeSet.SetMutator<E>.addAll(org.apache.commons.collections4.set.CompositeSet.this, java.util.List<java.util.Set<E>>, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[831,832,833,255,834,256,835,836],"tindex":"b4486efb-3e45-11e6-bdd0-edb4211f44dc","method":{"position":"org.apache.commons.collections4.PredicateUtils:469","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> asPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        {\n            return org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[837,838],"tindex":"b4486efc-3e45-11e6-bdd0-abc4f19e9f39","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:264","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key3"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[618],"tindex":"b4486efd-3e45-11e6-bdd0-87131581d69d","method":{"position":"org.apache.commons.collections4.ClosureUtils:200","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false"},"failures":[],"tindex":"b4486efe-3e45-11e6-bdd0-d95f15c99fec","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:237","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"remove() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.remove(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[664,668,270,271],"tindex":"b448960f-3e45-11e6-bdd0-37776eefc9d0","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:200","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return n.V;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[627,43,52,203,238],"tindex":"b4489610-3e45-11e6-bdd0-e1271f0f0ae1","method":{"position":"org.apache.commons.collections4.comparators.NullComparator:169","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        {\n            if (obj == null) {\n                return false;\n            } \n            if (obj == (org.apache.commons.collections4.comparators.NullComparator.this)) {\n                return true;\n            } \n            if (!(obj.getClass().equals(org.apache.commons.collections4.comparators.NullComparator.this.getClass()))) {\n                return false;\n            } \n            final org.apache.commons.collections4.comparators.NullComparator<?> org.apache.commons.collections4.comparators.NullComparator<?> = ((org.apache.commons.collections4.comparators.NullComparator<?>)(obj));\n            return ((org.apache.commons.collections4.comparators.NullComparator.this.boolean) == (other.boolean)) && (org.apache.commons.collections4.comparators.NullComparator.this.java.util.Comparator<? super E>.equals(other.java.util.Comparator<? super ?>));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[788,212,789,556],"tindex":"b4489611-3e45-11e6-bdd0-e11a2453d582","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:357","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            removeAllExpired(now());\n            return super.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[],"tindex":"b4489612-3e45-11e6-bdd0-bfba44a68add","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[],"tindex":"b4489613-3e45-11e6-bdd0-97305e4c1165","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(((java.util.Map.Entry<?, ?>)(o)).getKey());\n            return (candidate != null) && (candidate.equals(o));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[839],"tindex":"b448bd24-3e45-11e6-bdd0-9983a7202e2f","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index > 0) {\n        {\n            return new FixedSizeListIterator(decorated().listIterator(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[32,662,328,329],"tindex":"b448bd25-3e45-11e6-bdd0-877bd1707e12","method":{"position":"org.apache.commons.collections4.map.Flat3Map:244","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(value);\n            } \n            if (value == null) {\n                switch (int) {\n                    case 3 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                switch (int) {\n                    case 3 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 2 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 1 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[695,696,840,840,841,842,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,160],"tindex":"b448bd26-3e45-11e6-bdd0-cfac60022d5a","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:78","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Predicate<?>... predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n            } \n            for (int int = 0 ; i < (predicates.int) ; i++) {\n                if ((predicates[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[863],"tindex":"b448bd27-3e45-11e6-bdd0-ed8e366dfe45","method":{"position":"org.apache.commons.collections4.map.LinkedMap:154","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index < 0) {\n        {\n            return getEntry(index).getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[636],"tindex":"b448bd28-3e45-11e6-bdd0-9dbdcfb2c31d","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[864,865],"tindex":"b448bd29-3e45-11e6-bdd0-ddeb939891bd","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:230","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = java.util.Set<E>.remove(object);\n            if (result) {\n                super.remove(object);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[866],"tindex":"b448e43a-3e45-11e6-bdd0-87d68073dc0e","method":{"position":"org.apache.commons.collections4.ListUtils:75","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> defaultIfNull(final java.util.List<T> list, final java.util.List<T> defaultList) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return list == null ? defaultList : list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"b448e43b-3e45-11e6-bdd0-c962dc13556e","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:285","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<E>.indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[456],"tindex":"b448e43c-3e45-11e6-bdd0-8bfad38c3040","method":{"position":"org.apache.commons.collections4.CollectionUtils:1668","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> retainAll(final java.util.Collection<C> collection, final java.util.Collection<?> retain) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            return org.apache.commons.collections4.ListUtils.retainAll(collection, retain);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"b448e43d-3e45-11e6-bdd0-5b7e6d4b9888","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:105","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b448e43e-3e45-11e6-bdd0-e7f3f190d6e5","method":{"position":"org.apache.commons.collections4.MapUtils:546","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key, final java.lang.Double defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"b448e43f-3e45-11e6-bdd0-016385f93f3b","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:129","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880735/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}