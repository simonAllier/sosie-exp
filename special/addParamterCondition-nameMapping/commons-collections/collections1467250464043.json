{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":316,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":137,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":690,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":621,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":353,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":447,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":482,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastValues":584,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastEntrySet":582,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":404,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":398,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":181,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":787,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":324,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":557,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIsEmpty":246,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":223,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIsEmpty":758,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":561,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":560,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testEqualsNull":768,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":409,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":274,"org.apache.commons.collections4.CollectionUtilsTest.get":627,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":284,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":569,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":528,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":741,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":270,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":292,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":320,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":608,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":264,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":494,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectEqualsSelf":184,"org.apache.commons.collections4.queue.PredicatedQueueTest.testFullQueueCompatibility":233,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":262,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":697,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":585,"org.apache.commons.collections4.CollectionUtilsTest.select":211,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":74,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":14,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":694,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":352,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":484,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":31,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":589,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":592,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":518,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":147,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":764,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":469,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":47,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":407,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":383,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":87,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":50,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":803,"org.apache.commons.collections4.CollectionUtilsTest.intersection":215,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":802,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testGetSet":748,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":334,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":252,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":700,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":506,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":543,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":325,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":456,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":278,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":446,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":412,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":747,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":317,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":397,"org.apache.commons.collections4.map.CompositeMapTest.testPut":222,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":282,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":533,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":142,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":332,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":578,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":18,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":452,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":743,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":628,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testRemove":366,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":144,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testCanonicalFullCollectionExists":370,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":60,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":59,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":56,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":496,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":565,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":684,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":302,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":811,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testCanonicalEmptyCollectionExists":372,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":347,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":218,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectEqualsSelf":195,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":685,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":733,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":190,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":780,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":392,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":228,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":512,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":507,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":709,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToString":424,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":350,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":680,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":781,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":759,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":16,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":248,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":670,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformer":663,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCanonicalEmptyCollectionExists":773,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":503,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":545,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":298,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":641,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":333,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEqualsNull":371,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":411,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":703,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":133,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":357,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":523,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":573,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":121,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":3,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":163,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":701,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":624,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":668,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":669,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":112,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":382,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEqualsNull":183,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":418,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":65,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":650,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectHashCodeEqualsContract":374,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":775,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":419,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":607,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":120,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":135,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":277,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":463,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiClear":682,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":266,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":778,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":603,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":689,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":132,"org.apache.commons.collections4.queue.PredicatedQueueTest.testSerializeDeserializeThenCompare":251,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":52,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePoll":234,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":313,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":295,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":390,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":20,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":729,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":726,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":293,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":322,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":479,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":315,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":687,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":717,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":784,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEmptyQueueSerialization":235,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":432,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":63,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":406,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastValues":598,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":623,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":208,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":534,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":477,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":788,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":310,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullIterator":368,"org.apache.commons.collections4.functors.AllPredicateTest.nullCollectionToGetInstance":632,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":57,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":777,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":48,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":24,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":229,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":783,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":58,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":801,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":433,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":426,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":158,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":662,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSimpleSerialization":772,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":809,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":453,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":762,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":439,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":588,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":595,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":653,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicateEx":776,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":143,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":594,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":51,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":5,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":735,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":88,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":637,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":782,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":34,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":119,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":389,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":683,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":678,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":449,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":550,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRetainAll":249,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":737,"org.apache.commons.collections4.queue.PredicatedQueueTest.testSimpleSerialization":258,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":514,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":162,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":564,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":140,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":445,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":45,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":618,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":639,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIterator":362,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":15,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":46,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":127,"org.apache.commons.collections4.map.HashedMapTest.testClone":570,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking2":716,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":753,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":306,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":283,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":124,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":182,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":437,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":280,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":375,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":495,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":425,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastEntrySet":596,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":524,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":674,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":421,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":718,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":138,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":472,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":810,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":633,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":210,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":391,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":740,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":600,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove3":101,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":175,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":100,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":99,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":166,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":744,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":734,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":227,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":72,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":319,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":213,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":625,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":170,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":601,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":515,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":273,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":199,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":797,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":796,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":793,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":795,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":794,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":80,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":713,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":281,"org.apache.commons.collections4.ListUtilsTest.testSelect":198,"org.apache.commons.collections4.map.LinkedMapTest.testClone":574,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionClear":755,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":220,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":245,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":130,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":511,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":36,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":704,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":307,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":379,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":539,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":359,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":297,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":395,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":587,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":178,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":692,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsSelfHashCode":771,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":526,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":301,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":807,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":288,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCanonicalEmptyCollectionExists":257,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyMapIterator":363,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":291,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":290,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":289,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":676,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":32,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":436,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":529,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":299,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":23,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":756,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":192,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":516,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":706,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyIterator":367,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":710,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":580,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":25,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":644,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectHashCodeEqualsContract":259,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":538,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":673,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":537,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":725,"org.apache.commons.collections4.MapUtilsTest.testPopulateMap":358,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":122,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":9,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":33,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":757,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":131,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":695,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":702,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":605,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":579,"org.apache.commons.collections4.queue.PredicatedQueueTest.testFullQueueSerialization":238,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":491,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":715,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":438,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":145,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":115,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":471,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":739,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":785,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":410,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":742,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":77,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":172,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":705,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":751,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":745,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":117,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":450,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":723,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":67,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testComparator":750,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":657,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":422,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":654,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":85,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":84,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":79,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":149,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":111,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":318,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":552,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":305,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":385,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":212,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":286,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":276,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx2":665,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":800,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":468,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":686,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":647,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":492,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectEqualsSelf":157,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":328,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testEqualsNull":196,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":464,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":8,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":590,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":714,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":360,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":813,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":707,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":789,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIteratorRemove":760,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":711,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":30,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueRemove":232,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":544,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":562,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":338,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastKeySet":597,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":217,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":485,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":586,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":83,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":95,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionSize":241,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":330,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":331,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":206,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":73,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":490,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCanonicalFullCollectionExists":255,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":481,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":173,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":177,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":455,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":656,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":786,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":640,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":761,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":186,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":509,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":559,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":677,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":253,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":558,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":44,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":812,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":164,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":271,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":581,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionNullEquator":10,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":92,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":808,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":13,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":664,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIteratorSet":365,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":731,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":1,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":174,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":341,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking":712,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":342,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":620,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":754,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":340,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":113,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIteratorRemove":243,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":21,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":448,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":646,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":78,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":239,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":622,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":114,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":480,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":652,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":727,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":488,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":708,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":314,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":35,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":443,"org.apache.commons.collections4.map.CompositeMapTest.testGet":221,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":554,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":312,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":303,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":68,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":244,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":660,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":629,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":645,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":2,"org.apache.commons.collections4.queue.PredicatedQueueTest.testGet":230,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":441,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":551,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":203,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":517,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":37,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":311,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":355,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":435,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":532,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":474,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":396,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":171,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":151,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":799,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":679,"org.apache.commons.collections4.CollectionUtilsTest.union":214,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":504,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":19,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":675,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":237,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":205,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":339,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":505,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":329,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":110,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":335,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":568,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemove":129,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":619,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":321,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":566,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemove":128,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":89,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":527,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":792,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":451,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":502,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":165,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":191,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":399,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":304,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":345,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":612,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":344,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":343,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":105,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":104,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":103,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":520,"org.apache.commons.collections4.map.LRUMapTest.testClone":571,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":593,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":475,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":738,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":721,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":454,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":553,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":17,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":185,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":542,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":643,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":161,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":599,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":779,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":327,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":180,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":613,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":804,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":434,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":806,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":90,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":189,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsContract":770,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove3":108,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove1":106,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove2":107,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":699,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":4,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testSerializeDeserializeThenCompare":376,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":672,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":153,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":381,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":519,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":510,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":617,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":354,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":380,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":609,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray2":765,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":176,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":159,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":790,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":118,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":188,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":268,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":430,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":351,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":126,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":225,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":224,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":148,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":169,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":427,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectHashCodeEqualsContract":197,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":457,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":462,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":326,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":458,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsNull":156,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":416,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":201,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":635,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":501,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":577,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":655,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":403,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":41,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking2":7,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":12,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":611,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":649,"org.apache.commons.collections4.queue.PredicatedQueueTest.testRemove":231,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":688,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSerializeDeserializeThenCompare":767,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray2":240,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":250,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":309,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToString":242,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":160,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":387,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":616,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":28,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":388,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":139,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":556,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":636,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":658,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":386,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":549,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":483,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":43,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":285,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":200,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":681,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveChangesMap":109,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":440,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":86,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":125,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":207,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":209,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":461,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":749,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":630,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":226,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":26,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":499,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":154,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":204,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionSize":763,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":123,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":661,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":155,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":648,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":459,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":356,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":66,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":521,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":423,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":500,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":417,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":216,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":626,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":70,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetHashCode":752,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":102,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":728,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":476,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":76,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":93,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":261,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":473,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEqualsNull":256,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":547,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":548,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":746,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectEqualsSelf":769,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":272,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":146,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":486,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":604,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":698,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":659,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":730,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":94,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":300,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":805,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":265,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":413,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":634,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":720,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":575,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionClear":247,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":531,"org.apache.commons.collections4.set.CompositeSetTest.testContains":202,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":364,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":651,"org.apache.commons.collections4.CollectionUtilsTest.isFull":791,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":467,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":168,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":40,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":522,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":346,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":167,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":405,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":384,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":401,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":487,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":615,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":693,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testSimpleSerialization":373,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":444,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":219,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":187,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicateEx1":525,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":414,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":722,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":513,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":667,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":275,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":666,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":294,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":530,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":563,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":287,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx4":631,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":671,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory":361,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":591,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":82,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":377,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":64,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":267,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":724,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":393,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":415,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":460,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":541,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":546,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":116,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":572,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":428,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":378,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":408,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":719,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":296,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":39,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":736,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":606,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":567,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":348,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":336,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":696,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":489,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":308,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":540,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastKeySet":583,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":42,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectEqualsSelf":369,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":402,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveChangesMap":98,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsContract":194,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":614,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":493,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":420,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":535,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":536,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":337,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":429,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":497,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":152,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":431,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":349,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectEqualsSelf":193,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":323,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":691,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":466,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":269,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":263,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":498,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":81,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectEqualsSelf":254,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":400,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":470,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCanonicalFullCollectionExists":774,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":602,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEmptyQueueCompatibility":236,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToString":766,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":29,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":642,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":179,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":279,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":141,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":150,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":610,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":91,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":576,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":732,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectHashCodeEqualsSelfHashCode":260,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":555,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":798,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":478,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":508,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":638,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":75,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking":6,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":394,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":54,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":442,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":465},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[0,1,2,3],"tindex":"c692913e-3e62-11e6-b960-f5c71266067b","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:507","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.remove(value);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<java.lang.Object, V>.remove(key);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[4,5,6,7],"tindex":"c693066f-3e62-11e6-b960-4f6c45dfb648","method":{"position":"org.apache.commons.collections4.list.TransformedList:137","type":"CtMethodImpl","sourcecode":"public void add(final int index, E object) {\n    if (index < 0) {\n        {\n            object = transform(object);\n            getList().add(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"c6930670-3e62-11e6-b960-41fa918f4ecf","method":{"position":"org.apache.commons.collections4.map.SingletonMap:287","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[8],"tindex":"c6930671-3e62-11e6-b960-195a05152b15","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:313","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"c6932d82-3e62-11e6-b960-3bb419127e1d","method":{"position":"org.apache.commons.collections4.map.LRUMap:192","type":"CtMethodImpl","sourcecode":"protected void moveToMRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                (int)++;\n                if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n                    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n                } \n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n            } else if (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                throw new java.lang.IllegalStateException((\"Can't move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[9,10],"tindex":"c6935493-3e62-11e6-b960-c50744dc417b","method":{"position":"org.apache.commons.collections4.CollectionUtils:542","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b, final org.apache.commons.collections4.Equator<?> equator) {\n    if ((a.size()) != (b.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a.size()) != (b.size())) {\n                {\n                    if (equator == null) {\n                        throw new java.lang.IllegalArgumentException(\"equator may not be null\");\n                    } \n                    if ((a.size()) != (b.size())) {\n                        return false;\n                    } \n                    final org.apache.commons.collections4.Transformer org.apache.commons.collections4.Transformer = new org.apache.commons.collections4.Transformer() {\n                        public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n                            return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n                        }\n                    };\n                    return org.apache.commons.collections4.CollectionUtils.isEqualCollection(org.apache.commons.collections4.CollectionUtils.collect(a, transformer), org.apache.commons.collections4.CollectionUtils.collect(b, transformer));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[11,12,13],"tindex":"c6935494-3e62-11e6-b960-e118369689bf","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:86","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[14],"tindex":"c6937ba5-3e62-11e6-b960-8b3bfe71e7ad","method":{"position":"org.apache.commons.collections4.CollectionUtils:208","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>java.util.Collection<T> emptyIfNull(final java.util.Collection<T> collection) {\n    if (collection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return collection == null ? org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.java.util.Collection : collection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"c6937ba6-3e62-11e6-b960-af853ea0705f","method":{"position":"org.apache.commons.collections4.CollectionUtils:80","type":"CtMethodImpl","sourcecode":"public final int max(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            return java.lang.Math.max(freqA(obj), freqB(obj));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[15,16],"tindex":"c6937ba7-3e62-11e6-b960-d7a17ac31be0","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:105","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[17,18,19,20,21,22,23,24,25,26],"tindex":"c6937ba8-3e62-11e6-b960-a56db201e3df","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:49","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Predicate<T>[] copy(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Predicate<T>[])(predicates.clone()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[27,28,8,29,30,31,32,33,34,35,36,37,38],"tindex":"c693a2b9-3e62-11e6-b960-cd90d9b6a027","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:132","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"c693a2ba-3e62-11e6-b960-0d185e28a18b","method":{"position":"org.apache.commons.collections4.set.CompositeSet:245","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[39,40],"tindex":"c693c9cb-3e62-11e6-b960-257302a7a5ac","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:143","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = (int) - 1;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i--;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"c693c9cc-3e62-11e6-b960-3105ab35868f","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:205","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.FilterListIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"tindex":"c693c9cd-3e62-11e6-b960-6ff9eed31f02","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:281","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                return null;\n            } \n            purgeBeforeWrite();\n            return super.remove(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,4,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129],"tindex":"c693c9ce-3e62-11e6-b960-b3e5561188b6","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            return decorated().remove(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.EqualPredicate:109","type":"CtBinaryOperatorImpl","sourcecode":"(equator) != null"},"failures":[],"tindex":"c693f0df-3e62-11e6-b960-0d61db664d68","method":{"position":"org.apache.commons.collections4.functors.EqualPredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> equalPredicate(final T object, final org.apache.commons.collections4.Equator<T> equator) {\n    if (equator != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return org.apache.commons.collections4.functors.NullPredicate.nullPredicate();\n            } \n            return new org.apache.commons.collections4.functors.EqualPredicate<T>(object , equator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[130,131,132,133,134,135,136,137,138,39,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,40,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185],"tindex":"c693f0e0-3e62-11e6-b960-aba12ff1b9ff","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:351","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        {\n            if (obj == (org.apache.commons.collections4.list.AbstractLinkedList.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.List) == false) {\n                return false;\n            } \n            final java.util.List<?> java.util.List<?> = ((java.util.List<?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            final java.util.ListIterator<?> java.util.ListIterator<?> = listIterator();\n            final java.util.ListIterator<?> java.util.ListIterator<?> = other.listIterator();\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                final java.lang.Object java.lang.Object = it1.next();\n                final java.lang.Object java.lang.Object = it2.next();\n                if (!(o1 == null ? o2 == null : o1.equals(o2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[186],"tindex":"c693f0e1-3e62-11e6-b960-a552b716013e","method":{"position":"org.apache.commons.collections4.ClosureUtils:200","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"c6943f02-3e62-11e6-b960-671b3bfe3158","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:186","type":"CtMethodImpl","sourcecode":"public void setListIterator(final java.util.ListIterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.FilterListIterator.this.java.util.ListIterator<? extends E> = iterator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[34],"tindex":"c6943f03-3e62-11e6-b960-c7ace6043111","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:292","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[187,188,189,190,191,192,193,194,195,196,197],"tindex":"c6946614-3e62-11e6-b960-a1579a9c7212","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            synchronized(java.lang.Object) {\n                if (object == (org.apache.commons.collections4.collection.SynchronizedCollection.this)) {\n                    return true;\n                } \n                return (object == (org.apache.commons.collections4.collection.SynchronizedCollection.this)) || (decorated().equals(object));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,9,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228],"tindex":"c6946615-3e62-11e6-b960-956d345b509b","method":{"position":"org.apache.commons.collections4.CollectionUtils:111","type":"CtMethodImpl","sourcecode":"private final int getFreq(final java.lang.Object obj, final java.util.Map<?, java.lang.Integer> freqMap) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            final java.lang.Integer java.lang.Integer = freqMap.get(obj);\n            if (count != null) {\n                return count.intValue();\n            } \n            return 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[229,230,231,232,233,116,234,117,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,118,251,252,253,254,255,256,257,258,259,260],"tindex":"c6946616-3e62-11e6-b960-97dfbde6d58a","method":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.PredicatedQueue<E> predicatedQueue(final java.util.Queue<E> Queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.queue.PredicatedQueue<E>(Queue , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:540","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357],"tindex":"c6946617-3e62-11e6-b960-97b017bb3f09","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1888","type":"CtMethodImpl","sourcecode":"private void setParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"c6948d28-3e62-11e6-b960-f1c36b0fd1cc","method":{"position":"org.apache.commons.collections4.MapUtils:546","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key, final java.lang.Double defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[358],"tindex":"c6948d29-3e62-11e6-b960-3de29de8bac2","method":{"position":"org.apache.commons.collections4.MapUtils:1680","type":"CtMethodImpl","sourcecode":"public static <K, V>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends V> elements, final org.apache.commons.collections4.Transformer<V, K> keyTransformer) {\n    if ((map.size()) > 0) {\n        {\n            org.apache.commons.collections4.MapUtils.populateMap(map, elements, keyTransformer, org.apache.commons.collections4.TransformerUtils.<V>nopTransformer());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:47","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376],"tindex":"c6948d2a-3e62-11e6-b960-db9dd1bc394c","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:45","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<? extends K, ? extends V> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[377,378,379,380,381,382,383,384,385,386,387,388],"tindex":"c6948d2b-3e62-11e6-b960-9b9ffffc3407","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:575","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"c694b43c-3e62-11e6-b960-ad90fb884aed","method":{"position":"org.apache.commons.collections4.list.TransformedList:142","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            coll = transform(coll);\n            return getList().addAll(index, coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:871","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[389],"tindex":"c694b43d-3e62-11e6-b960-0104a2e64f89","method":{"position":"org.apache.commons.collections4.EnumerationUtils:50","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[390,391],"tindex":"c694b43e-3e62-11e6-b960-0fda8c09be5e","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:110","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.TransformedQueue:77","type":"CtBinaryOperatorImpl","sourcecode":"(queue.size()) > 0"},"failures":[120],"tindex":"c694db4f-3e62-11e6-b960-cf4190af8fc8","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:73","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformedQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if ((queue.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.queue.TransformedQueue<E> org.apache.commons.collections4.queue.TransformedQueue<E> = new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n            if ((queue.size()) > 0) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(queue.toArray()));\n                queue.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,12,419,420,421,422,423,424,114,425,426,427,428,115,429,430,431],"tindex":"c694db50-3e62-11e6-b960-2f65a71b705a","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:74","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(index, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[432,433,434,435,436],"tindex":"c694db51-3e62-11e6-b960-a3fac0084bdf","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            return remove(object, 1);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"c694db52-3e62-11e6-b960-0ff8143387d4","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:542","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V set(final int index, final V value) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.setValue(index, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,44,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,58,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512],"tindex":"c694db53-3e62-11e6-b960-a576f349626a","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:946","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"c6950264-3e62-11e6-b960-6bfab300d00f","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1533","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            return (node != null) && (node.getValue().equals(value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[513],"tindex":"c6950265-3e62-11e6-b960-43ebd9c1353c","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:851","type":"CtMethodImpl","sourcecode":"private java.util.SortedMap<K, V> getPrefixMapByBits(final K key, final int offsetInBits, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = offsetInBits + lengthInBits;\n            if (offsetLength > (lengthInBits(key))) {\n                throw new java.lang.IllegalArgumentException(((((offsetInBits + \" + \") + lengthInBits) + \" > \") + (lengthInBits(key))));\n            } \n            if (offsetLength == 0) {\n                return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this;\n            } \n            return new PrefixRangeMap(key , offsetInBits , lengthInBits);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"c6950266-3e62-11e6-b960-7b25a57d5e16","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"c6950267-3e62-11e6-b960-3dbc397467bd","method":{"position":"org.apache.commons.collections4.MapUtils:1542","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.PredicatedSortedMap.predicatedSortedMap(map, keyPred, valuePred);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"c6952978-3e62-11e6-b960-95caf34524d2","method":{"position":"org.apache.commons.collections4.CollectionUtils:107","type":"CtMethodImpl","sourcecode":"public int freqB(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[],"tindex":"c6952979-3e62-11e6-b960-adc9b411a589","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.Flat3Map.this)) {\n                return true;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(obj);\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((int) != (other.size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                java.lang.Object java.lang.Object = null;\n                switch (int) {\n                    case 3 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 2 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 1 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                }\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"c695297a-3e62-11e6-b960-bd19a55238d1","method":{"position":"org.apache.commons.collections4.MapUtils:842","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key, final double defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return defaultValue;\n            } \n            return doubleObject.doubleValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[514],"tindex":"c695297b-3e62-11e6-b960-d17113e46462","method":{"position":"org.apache.commons.collections4.BagUtils:116","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.bag.PredicatedBag.predicatedBag(bag, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[515],"tindex":"c695508c-3e62-11e6-b960-6f3671e427cd","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (map != null) {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[516,517,460,461,462,463,464,518,465,466,467,468,519,520,521,522,523,476,477,478,479,480,481,482,483,484,524],"tindex":"c695508d-3e62-11e6-b960-5dd55ae2d525","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:205","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(super.getEntry(key)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[525],"tindex":"c695508e-3e62-11e6-b960-49ed4e2d3bcd","method":{"position":"org.apache.commons.collections4.PredicateUtils:517","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[262,261,263,264,265,266,270,271,272,273,267,268,269,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,312,313,314,315,316,317,309,310,311,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357],"tindex":"c695508f-3e62-11e6-b960-5188ea1a5586","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:780","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getGrandParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            return getParent(getParent(node, dataElement), dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"c69577a0-3e62-11e6-b960-39371b7a5404","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:140","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563],"tindex":"c69577a1-3e62-11e6-b960-b5029c7b281f","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:140","type":"CtMethodImpl","sourcecode":"static boolean compare(final java.lang.Object a, final java.lang.Object b) {\n    if ((a == null) || (b == null)) {\n        {\n            return a == null ? b == null : a.equals(b);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[],"tindex":"c69577a2-3e62-11e6-b960-c92761a71bfc","method":{"position":"org.apache.commons.collections4.CollectionUtils:542","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b, final org.apache.commons.collections4.Equator<?> equator) {\n    if ((a.size()) != (b.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a.size()) != (b.size())) {\n                {\n                    if (equator == null) {\n                        throw new java.lang.IllegalArgumentException(\"equator may not be null\");\n                    } \n                    if ((a.size()) != (b.size())) {\n                        return false;\n                    } \n                    final org.apache.commons.collections4.Transformer org.apache.commons.collections4.Transformer = new org.apache.commons.collections4.Transformer() {\n                        public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n                            return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n                        }\n                    };\n                    return org.apache.commons.collections4.CollectionUtils.isEqualCollection(org.apache.commons.collections4.CollectionUtils.collect(a, transformer), org.apache.commons.collections4.CollectionUtils.collect(b, transformer));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"c6959eb3-3e62-11e6-b960-03f0c0b36971","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:167","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator) throws java.lang.IndexOutOfBoundsException {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IndexOutOfBoundsException();\n    } else {\n        {\n            setComparator(index, comparator, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"c6959eb4-3e62-11e6-b960-61a7e32e40e9","method":{"position":"org.apache.commons.collections4.IteratorUtils:840","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            return org.apache.commons.collections4.iterators.PushbackIterator.pushbackIterator(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"c6959eb5-3e62-11e6-b960-137d709a2bfc","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:158","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[564,565,566,567,568,569],"tindex":"c6959eb6-3e62-11e6-b960-4de4f7a11189","method":{"position":"org.apache.commons.collections4.map.LazyMap:160","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final K K = ((K)(key));\n                final V V = org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(castKey);\n                java.util.Map<K, V>.put(castKey, value);\n                return value;\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[570,450,459,571,467,572,573,574,483,492,575,502,511],"tindex":"c695c5c7-3e62-11e6-b960-d7617d8e506a","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:302","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            _putAll(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"c695c5c8-3e62-11e6-b960-7bcde250eeb4","method":{"position":"org.apache.commons.collections4.map.SingletonMap:231","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return isEqualValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[22],"tindex":"c695c5c9-3e62-11e6-b960-df8999e6b5d4","method":{"position":"org.apache.commons.collections4.PredicateUtils:352","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> eitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate1 == null)) {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>onePredicate(predicate1, predicate2);\n            return onePredicate;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,512,124,125],"tindex":"c695c5ca-3e62-11e6-b960-055d5f93b1a2","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:113","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"c695c5cb-3e62-11e6-b960-e5a0d3be4cf9","method":{"position":"org.apache.commons.collections4.MapUtils:695","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return 0.0;\n            } \n            return doubleObject.doubleValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[],"tindex":"c695ecdc-3e62-11e6-b960-ff90905c60a6","method":{"position":"org.apache.commons.collections4.IteratorUtils:1052","type":"CtMethodImpl","sourcecode":"public static java.util.Iterator<?> getIterator(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == null) {\n                return org.apache.commons.collections4.IteratorUtils.emptyIterator();\n            } \n            if (obj instanceof java.util.Iterator) {\n                return ((java.util.Iterator<?>)(obj));\n            } \n            if (obj instanceof java.util.Collection) {\n                return ((java.util.Collection<?>)(obj)).iterator();\n            } \n            if (obj instanceof java.lang.Object[]) {\n                return new org.apache.commons.collections4.iterators.ObjectArrayIterator<java.lang.Object>(((java.lang.Object[])(obj)));\n            } \n            if (obj instanceof java.util.Enumeration) {\n                return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Enumeration<?>)(obj)));\n            } \n            if (obj instanceof java.util.Map) {\n                return ((java.util.Map<?, ?>)(obj)).values().iterator();\n            } \n            if (obj instanceof org.w3c.dom.NodeList) {\n                return new org.apache.commons.collections4.iterators.NodeListIterator(((org.w3c.dom.NodeList)(obj)));\n            } \n            if (obj instanceof org.w3c.dom.Node) {\n                return new org.apache.commons.collections4.iterators.NodeListIterator(((org.w3c.dom.Node)(obj)));\n            } \n            if (obj instanceof java.util.Dictionary) {\n                return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Dictionary<?, ?>)(obj)).elements());\n            } else if (obj.getClass().isArray()) {\n                return new org.apache.commons.collections4.iterators.ArrayIterator<java.lang.Object>(obj);\n            } \n            try {\n                final java.lang.reflect.Method java.lang.reflect.Method = obj.getClass().getMethod(\"iterator\", ((java.lang.Class[])(null)));\n                if (java.util.Iterator.java.util.Iterator.java.lang.Class.isAssignableFrom(method.getReturnType())) {\n                    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(method.invoke(obj, ((java.lang.Object[])(null)))));\n                    if (it != null) {\n                        return it;\n                    } \n                } \n            } catch (final java.lang.RuntimeException e) {\n            } catch (final java.lang.NoSuchMethodException e) {\n            } catch (final java.lang.IllegalAccessException e) {\n            } catch (final java.lang.reflect.InvocationTargetException e) {\n            }\n            return org.apache.commons.collections4.IteratorUtils.singletonIterator(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"c695ecdd-3e62-11e6-b960-39d3e3677ee1","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:206","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = super.remove(object);\n            if (removed) {\n                removeFromIndex(((C)(object)));\n            } \n            return removed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"c695ecde-3e62-11e6-b960-cbacbb34a0bd","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"c69613ef-3e62-11e6-b960-838c1c889999","method":{"position":"org.apache.commons.collections4.ComparatorUtils:152","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullLowComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"c69613f0-3e62-11e6-b960-a144ff6a4d4c","method":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (classToInstantiate == null) {\n                throw new java.lang.IllegalArgumentException(\"Class to instantiate must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate);\n            } \n            return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate , paramTypes , args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:59","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"c69613f1-3e62-11e6-b960-115a08cc0bc7","method":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:178","type":"CtMethodImpl","sourcecode":"protected void findNextByIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator != (java.util.Iterator<? extends E>)) {\n                if ((java.util.Iterator<? extends E>) != null) {\n                    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n                } \n                java.util.Iterator<? extends E> = iterator;\n            } \n            while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n                E E = java.util.Iterator<? extends E>.next();\n                if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n                    next = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(next);\n                } \n                findNext(next);\n            }\n            if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n                java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n                findNextByIterator(java.util.Iterator<? extends E>);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[627,628,629,630],"tindex":"c69613f2-3e62-11e6-b960-4365bb431c5a","method":{"position":"org.apache.commons.collections4.CollectionUtils:1176","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.util.Iterator<T> iterator, final int index) {\n    if (index > 0) {\n        {\n            int int = index;\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(i);\n            while (iterator.hasNext()) {\n                i--;\n                if (i == (-1)) {\n                    return iterator.next();\n                } \n                iterator.next();\n            }\n            throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[631,632],"tindex":"c6963b03-3e62-11e6-b960-3946c81915be","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:79","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((preds.int) == 1) {\n                return preds[0];\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[437,633,438,634,635,636,637,638,639,640,641,642,643,644,439,645,646,440,647,441,648,649,650,651,652,653,654,655,656,657,658,442,659,660],"tindex":"c6963b04-3e62-11e6-b960-47a378db1d18","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:122","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            for (final E E : coll) {\n                java.util.Map<E, ? super V>.put(e, V);\n            }\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"c6963b05-3e62-11e6-b960-49af5bb882d5","method":{"position":"org.apache.commons.collections4.MapUtils:486","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key, final java.lang.Integer defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[661,662],"tindex":"c6963b06-3e62-11e6-b960-2bd306e0d37f","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:134","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[663,664,665,666,667,668,669,670],"tindex":"c6966217-3e62-11e6-b960-d9e8a0975e76","method":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformerPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformerPredicate<T>(transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtBinaryOperatorImpl","sourcecode":"(inverseBidiMap) == null"},"failures":[671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699],"tindex":"c6966218-3e62-11e6-b960-5dffe3b8a4ee","method":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:86","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (normalMap == null) {\n        {\n            return new org.apache.commons.collections4.bidimap.DualHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inverseBidiMap":"normalMap"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[],"tindex":"c6968929-3e62-11e6-b960-477efa81aea3","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:616","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntrySet().contains(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[700,664,667,669,670,701,702,703,704,705,706,707],"tindex":"c696892a-3e62-11e6-b960-675d555fe27d","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic O transform(final java.lang.Object input) {\n    if (input == null) {\n        {\n            if (input == null) {\n                return null;\n            } \n            try {\n                final java.lang.Class<?> java.lang.Class<?> = input.getClass();\n                final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(java.lang.String, java.lang.Class<?>[]);\n                return ((O)(method.invoke(input, java.lang.Object[])));\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' does not exist\"));\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' cannot be accessed\"));\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' threw an exception\") , ex);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725],"tindex":"c696892b-3e62-11e6-b960-67d6a50738d3","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"c696892c-3e62-11e6-b960-8f9f031fb1b4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"c696b03d-3e62-11e6-b960-571bc01def63","method":{"position":"org.apache.commons.collections4.map.LinkedMap:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K get(final int index) {\n    if (index < 0) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[726,727,576,728,729,730,577,731,732,733,578,734,735,736,737,738,739,579,740,741,742,580,743,744,745,581,746],"tindex":"c696b03e-3e62-11e6-b960-f37d1b89b3d3","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().java.util.Map<K, V>.containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:889","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"c696b03f-3e62-11e6-b960-0b5c33f8eabf","method":{"position":"org.apache.commons.collections4.iterators.IteratorChain:159","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.Queue<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[747,748,749,750,751,752,753,754,755,756,757,758,759,760,72,761,762,763,764,765,766,767,768,769,770,771,772,773,774],"tindex":"c696b040-3e62-11e6-b960-ebb3f5dd5c91","method":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(set , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[775],"tindex":"c696b041-3e62-11e6-b960-5501cf507735","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.BidiMap<K, V> unmodifiableBidiMap(final org.apache.commons.collections4.BidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BidiMap<K, V> org.apache.commons.collections4.BidiMap<K, V> = ((org.apache.commons.collections4.BidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[776],"tindex":"c696b042-3e62-11e6-b960-61abd7f8e2ba","method":{"position":"org.apache.commons.collections4.functors.OrPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate1 == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.OrPredicate<T>(predicate1 , predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtBinaryOperatorImpl","sourcecode":"(collection.size()) > 0"},"failures":[777,778],"tindex":"c696d753-3e62-11e6-b960-7f4c7b0a7531","method":{"position":"org.apache.commons.collections4.ListUtils:352","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if ((collection.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : collection) {\n                if (!(remove.contains(obj))) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[779,780,781,782,783,784,785,786,787,788,789,790],"tindex":"c696d754-3e62-11e6-b960-376008ba7439","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:329","type":"CtMethodImpl","sourcecode":"private void clear(final int i) {\n    if (i == (-1)) {\n        {\n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[661],"tindex":"c696d755-3e62-11e6-b960-7b08e06168ab","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:554","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key2 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[791,792,793,794,795,796,797],"tindex":"c696d756-3e62-11e6-b960-c1075f560f1d","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:339","type":"CtMethodImpl","sourcecode":"private int decrement(int index) {\n    if (index > 0) {\n        {\n            index--;\n            if (index < 0) {\n                index = (int) - 1;\n            } \n            return index;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:540","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[332,336,346,349,350,353,354,355,356,357],"tindex":"c696d757-3e62-11e6-b960-011f85b4a0b0","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:813","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getLeftChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? null : node.getLeft(dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"c696fe68-3e62-11e6-b960-5788066d3301","method":{"position":"org.apache.commons.collections4.map.LinkedMap:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.keySet().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[216],"tindex":"c696fe69-3e62-11e6-b960-47f20f84b835","method":{"position":"org.apache.commons.collections4.CollectionUtils:946","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection != null) && (predicate != null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"c696fe6a-3e62-11e6-b960-bfbec6ccdb13","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:455","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            key2 = (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<K>)(key2)).get();\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"c697257b-3e62-11e6-b960-c17e961eb906","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:112","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return java.util.Map<E, ? super V>.keySet().containsAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"c697257c-3e62-11e6-b960-17597770284c","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:629","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key3 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key3"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[798,799,800],"tindex":"c697257d-3e62-11e6-b960-93ab7e22977e","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:377","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            removeIfExpired(key, now());\n            return super.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[801,408],"tindex":"c6974c8e-3e62-11e6-b960-f5a77a0b78ba","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:94","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int index) {\n    if (index > 0) {\n        {\n            return decorated().listIterator(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[802,803,804,805,806,807],"tindex":"c6974c8f-3e62-11e6-b960-eb4baf51fe98","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[437,439,808,809,810,440,442,811,812,813],"tindex":"c6974c90-3e62-11e6-b960-911544976cc0","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        {\n            return java.util.Map<E, ? super V>.keySet().equals(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:66","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"c6974c91-3e62-11e6-b960-d5f93df0e6b2","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:89","type":"CtMethodImpl","sourcecode":"protected void setCollection(final java.util.Collection<E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.collection.AbstractCollectionDecorator.this.java.util.Collection<E> = coll;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}