{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":109,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":259,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testSerializeDeserializeThenCompare":514,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":120,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":144,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":553,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":579,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":398,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":613,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":88,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":431,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":196,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":662,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":428,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":25,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":498,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":282,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSerializeDeserializeThenCompare":503,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":452,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":206,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":117,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":284,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":658,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":129,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastKeySet":365,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testBagEqualsSelf":221,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":252,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":589,"org.apache.commons.collections4.set.ListOrderedSetTest.testCanonicalEmptyCollectionExists":93,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":164,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":231,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":211,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":313,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":330,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":122,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":315,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":314,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":150,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":193,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":348,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionClear":82,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":257,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex":213,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":205,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetClearChangesMap":377,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":160,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":578,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":567,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":383,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":180,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIsEmpty":297,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":635,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":651,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":113,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":154,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":4,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsSelfHashCode":237,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":516,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionSize":501,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":152,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":559,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":639,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":238,"org.apache.commons.collections4.map.TransformedMapTest.testValuesClearChangesMap":400,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":21,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":41,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":627,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":225,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":281,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":283,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":345,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":161,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSimpleSerialization":239,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":285,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":656,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":143,"org.apache.commons.collections4.map.TransformedMapTest.testEqualsNull":403,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":581,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":334,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToString":77,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":275,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testEqualsNull":512,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":532,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":616,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":590,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":430,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIteratorSet":486,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":132,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking":217,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":222,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":454,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":529,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":131,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":338,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":355,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":29,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":290,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":540,"org.apache.commons.collections4.map.TransformedMapTest.testSerializeDeserializeThenCompare":408,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":647,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":530,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":125,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":608,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":195,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":415,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":325,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveAll":381,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":557,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":544,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":118,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":545,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":640,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":546,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":168,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":445,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":349,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testEqualsCompatibleInstance":510,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":539,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":394,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":591,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":461,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":649,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":198,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":255,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":110,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":450,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":421,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveChangesMap":374,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":107,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":464,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":171,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":595,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":478,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":536,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":390,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":105,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":249,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":54,"org.apache.commons.collections4.set.ListOrderedSetTest.testSimpleSerialization":94,"org.apache.commons.collections4.map.TransformedMapTest.testFullMapCompatibility":387,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":228,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":526,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":191,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":471,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":45,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRetainAll":371,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":123,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":481,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":515,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":632,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":528,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":527,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":654,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":646,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":551,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":648,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":33,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testRemove":487,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":146,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":475,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":244,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":247,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":619,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testCanonicalFullCollectionExists":491,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":463,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnmodifiable":500,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":519,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":628,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":190,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":555,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":229,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":270,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":280,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":416,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testCanonicalEmptyCollectionExists":493,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":289,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":138,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":607,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCanonicalEmptyCollectionExists":240,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":570,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":573,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":615,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":130,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":556,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":477,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":286,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":341,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":629,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":121,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":24,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToString":502,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":14,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":351,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":562,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":69,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":558,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":126,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":267,"org.apache.commons.collections4.list.TreeListTest.testRemove":18,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":141,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemove":356,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":271,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":479,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":114,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":80,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemove":361,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":298,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":340,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":456,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":565,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":55,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":525,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":564,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":660,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":563,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":79,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":232,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":20,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":543,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":524,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":235,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":186,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":124,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEqualsNull":492,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":268,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":417,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":423,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":135,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":148,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":303,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":302,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":620,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":301,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":610,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":40,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":318,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":453,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":594,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":621,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":203,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":220,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":634,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":353,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":44,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":370,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":566,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":434,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_Decorate":363,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":459,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectHashCodeEqualsContract":495,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveAll":392,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":200,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":657,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectEqualsSelf":90,"org.apache.commons.collections4.set.ListOrderedSetTest.testCanonicalFullCollectionExists":91,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":585,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":317,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":167,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":397,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":449,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":599,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":149,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":470,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":548,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetByIndex":215,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":60,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":227,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":467,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":36,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":76,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":469,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":74,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":3,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":197,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":332,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsSelfHashCode":407,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":106,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove3":306,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove1":304,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":183,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove2":305,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap":11,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRetainAll":399,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":354,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testSerializeDeserializeThenCompare":497,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":67,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetClearChangesMap":373,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":181,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":115,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":38,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":291,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":609,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":560,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":577,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":214,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":145,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":441,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":655,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":108,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":476,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testObjectHashCodeEqualsContract":513,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":606,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":605,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":604,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":451,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":210,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":323,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastValues":366,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":429,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectEqualsSelf":48,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":70,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":158,"org.apache.commons.collections4.map.SingletonMapTest.testClone":455,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithEmptyMap":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":142,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":533,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":359,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectEqualsSelf":236,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":242,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":256,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":575,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":12,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":103,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullIterator":489,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectHashCodeEqualsContract":95,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":369,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":368,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":367,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":293,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":457,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":612,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":209,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":47,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":16,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":598,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":636,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testEqualsNull":506,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":588,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsContract":508,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":119,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":260,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":269,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":637,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":19,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":199,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":473,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":230,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":523,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":439,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":448,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":427,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":554,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":276,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":435,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":633,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":64,"org.apache.commons.collections4.map.TransformedMapTest.testEmptyMapCompatibility":385,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":73,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":468,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":274,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":362,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":472,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":102,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":650,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":584,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":380,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":583,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":57,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":582,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":426,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":23,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":580,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectEqualsSelf":505,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":22,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":173,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":339,"org.apache.commons.collections4.CollectionUtilsTest.testSize_List":59,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":316,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":37,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":626,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":414,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":278,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveChangesMap":307,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":53,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":336,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":474,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":358,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testObjectEqualsSelf":511,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":541,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":550,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":597,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":413,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":462,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":56,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":447,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":622,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":39,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":245,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":623,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":375,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":624,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":531,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":535,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":208,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":320,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":52,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":538,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":643,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIterator":483,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":360,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":204,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking2":218,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":99,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":638,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":147,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":172,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":425,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":357,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":261,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":273,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":192,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSerializeDeserializeThenCompare":51,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":496,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":518,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":611,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":438,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastEntrySet":364,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":587,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":436,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":522,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":393,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":409,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":433,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":277,"org.apache.commons.collections4.map.TransformedMapTest.testMapHashCode":372,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":342,"org.apache.commons.collections4.map.TransformedMapTest.testMakeMap":382,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":300,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":87,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":574,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":465,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":151,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":335,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":347,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":388,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":631,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove3":311,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":310,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":309,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":194,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":266,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":296,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":422,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":162,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":410,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":253,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":34,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":263,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":112,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":344,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":6,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":549,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":420,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":653,"org.apache.commons.collections4.map.TransformedMapTest.testSimpleSerialization":405,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":571,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":312,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":188,"org.apache.commons.collections4.map.TransformedMapTest.testObjectEqualsSelf":401,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":663,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":163,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":295,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":246,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":652,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":155,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNonEmptyMap":9,"org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering":71,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":458,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":248,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":586,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":419,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":328,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":485,"org.apache.commons.collections4.list.TreeListTest.testBug35258":15,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":602,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectHashCodeEqualsSelfHashCode":96,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":630,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":137,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":89,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":170,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsSelfHashCode":509,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":49,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":254,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":386,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testSimpleSerialization":494,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":379,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":13,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":552,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":537,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":561,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":100,"org.apache.commons.collections4.MapUtilsTest.testEmptyIfNull":58,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":1,"org.apache.commons.collections4.map.TransformedMapTest.testCanonicalFullCollectionExists":402,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":534,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":460,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":185,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":446,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":5,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":219,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":165,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":243,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":182,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":568,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":175,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":189,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory":482,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":329,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":157,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":418,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":176,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":411,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":432,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":596,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":321,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":614,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":625,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray2":294,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyMapIterator":484,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":75,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":376,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":440,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":179,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":178,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":177,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":184,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":343,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":396,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":480,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":127,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":412,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":504,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":251,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":101,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":216,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectEqualsSelf":490,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":272,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":187,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveChangesMap":308,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":66,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyIterator":488,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":319,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":517,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":223,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":207,"org.apache.commons.collections4.set.ListOrderedSetTest.testEqualsNull":92,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":128,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":234,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":61,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":395,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":520,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":442,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":258,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":140,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":391,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":547,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":43,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":641,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":350,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":444,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":659,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":81,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":116,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":618,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsContract":50,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutNullKey":384,"org.apache.commons.collections4.map.TransformedMapTest.testCanonicalEmptyCollectionExists":404,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":601,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":159,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":265,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testDecorateFactory":292,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":324,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiClear":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":153,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":299,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":521,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":201,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithEmptyMap":8,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":327,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":424,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":233,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutNullValue":378,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":617,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":78,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":322,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":542,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":262,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":28,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":86,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":437,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":250,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":337,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":644,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":331,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory":499,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":389,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":592,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":326,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":169,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSimpleSerialization":507,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":352,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":111,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":333,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":46,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":35,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":287,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":98,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":202,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":288,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":443,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":466,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":174,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCanonicalFullCollectionExists":241,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":166,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":576,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":572,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":642,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":264,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsContract":406,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":645,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":346,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":593,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":224,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":603,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":212,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":226,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":279,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":72,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":569,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":600,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":661},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[0],"tindex":"8d860d81-2ec0-11e6-912f-ab2a741a1119","method":{"position":"org.apache.commons.collections4.MapUtils:1283","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if (map != null) {\n        {\n            return org.apache.commons.collections4.map.PredicatedMap.predicatedMap(map, keyPred, valuePred);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[1],"tindex":"8d86f7e2-2ec0-11e6-912f-b7904cdb9e08","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:69","type":"CtMethodImpl","sourcecode":"public boolean evaluate(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            if (object instanceof java.util.Enumeration<?>) {\n                {\n                    return java.lang.Class<?>.isInstance(object);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:721","type":"CtBinaryOperatorImpl","sourcecode":"listIterator == null"},"failures":[],"tindex":"8d86f7e3-2ec0-11e6-912f-51a1b7c14c7b","method":{"position":"org.apache.commons.collections4.IteratorUtils:718","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> filteredListIterator(final java.util.ListIterator<? extends E> listIterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            if (listIterator == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (listIterator == null) {\n                        throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n                    } \n                    if (predicate == null) {\n                        throw new java.lang.NullPointerException(\"Predicate must not be null\");\n                    } \n                    return new org.apache.commons.collections4.iterators.FilterListIterator<E>(listIterator , predicate);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"listIterator":"listIterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[2,3],"tindex":"8d871ef4-2ec0-11e6-912f-d1716cf14c9d","method":{"position":"org.apache.commons.collections4.list.PredicatedList:94","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[4,5],"tindex":"8d874605-2ec0-11e6-912f-99d7693b94ca","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:213","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = indexOf(object);\n            final E E = super.set(index, object);\n            if ((pos != (-1)) && (pos != index)) {\n                super.remove(pos);\n            } \n            java.util.Set<E>.remove(removed);\n            java.util.Set<E>.add(object);\n            return removed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"8d876d16-2ec0-11e6-912f-3d5e027196b9","method":{"position":"org.apache.commons.collections4.MapUtils:695","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return 0.0;\n            } \n            return doubleObject.doubleValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[6,7],"tindex":"8d879427-2ec0-11e6-912f-d126f710ee34","method":{"position":"org.apache.commons.collections4.ListUtils:400","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[8,9,10,11],"tindex":"8d87bb38-2ec0-11e6-912f-b7d7319ecece","method":{"position":"org.apache.commons.collections4.MapUtils:1204","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        {\n            return (map == null) || (map.isEmpty());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"8d87bb39-2ec0-11e6-912f-cd5bff4581b7","method":{"position":"org.apache.commons.collections4.list.TreeList:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index < 0) {\n        {\n            (int)++;\n            checkInterval(index, 0, size());\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(index , obj , null , null);\n            } else {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(index, obj);\n            }\n            (int)++;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[24],"tindex":"8d87e24a-2ec0-11e6-912f-9bb213bdf477","method":{"position":"org.apache.commons.collections4.SplitMapUtils:142","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:72","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[25],"tindex":"8d88095b-2ec0-11e6-912f-b70585872caa","method":{"position":"org.apache.commons.collections4.CollectionUtils:1783","type":"CtMethodImpl","sourcecode":"public static <E>E extractSingleton(final java.util.Collection<E> collection) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection == null) || ((collection.size()) != 1)) {\n                throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n            } \n            return collection.iterator().next();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[26],"tindex":"8d88095c-2ec0-11e6-912f-5d41bc529356","method":{"position":"org.apache.commons.collections4.ListUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> selectRejected(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:151","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"tindex":"8d88306d-2ec0-11e6-912f-afa354ee4707","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        {\n            return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[],"tindex":"8d887e8e-2ec0-11e6-912f-0791892a081c","method":{"position":"org.apache.commons.collections4.CollectionUtils:920","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R select(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if ((inputCollection != null) && (predicate != null)) {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (predicate.evaluate(item)) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[47],"tindex":"8d887e8f-2ec0-11e6-912f-d3a2b8f3b0ee","method":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.PredicatedQueue<E> predicatedQueue(final java.util.Queue<E> Queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.queue.PredicatedQueue<E>(Queue , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"8d88a5a0-2ec0-11e6-912f-c71f4225ecf8","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:69","type":"CtMethodImpl","sourcecode":"public boolean evaluate(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            if (object instanceof java.util.Enumeration<?>) {\n                {\n                    return java.lang.Class<?>.isInstance(object);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[48,49,50,51],"tindex":"8d88a5a1-2ec0-11e6-912f-815a2f1af59a","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:332","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            if ((org.apache.commons.collections4.comparators.ComparatorChain.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.ComparatorChain.this.getClass())) {\n                final org.apache.commons.collections4.comparators.ComparatorChain<?> org.apache.commons.collections4.comparators.ComparatorChain<?> = ((org.apache.commons.collections4.comparators.ComparatorChain<?>)(object));\n                return (null == (java.util.BitSet) ? null == (chain.java.util.BitSet) : java.util.BitSet.equals(chain.java.util.BitSet)) && (null == (java.util.List<java.util.Comparator<E>>) ? null == (chain.java.util.List<java.util.Comparator<?>>) : java.util.List<java.util.Comparator<E>>.equals(chain.java.util.List<java.util.Comparator<?>>));\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[52,53],"tindex":"8d88ccb2-2ec0-11e6-912f-e71a314d79fa","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if ((coll.size()) == 0) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[54,55,56,57],"tindex":"8d88ccb3-2ec0-11e6-912f-abfc604b53bd","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:290","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E value) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            updateNode(node, value);\n            return oldValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[58],"tindex":"8d88ccb4-2ec0-11e6-912f-513a91755608","method":{"position":"org.apache.commons.collections4.MapUtils:1191","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> emptyIfNull(final java.util.Map<K, V> map) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return map == null ? java.util.Collections.<K, V>emptyMap() : map;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[59],"tindex":"8d88f3c5-2ec0-11e6-912f-d9d8aaba188f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1329","type":"CtMethodImpl","sourcecode":"public static int size(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return 0;\n            } \n            int int = 0;\n            if (object instanceof java.util.Map<?, ?>) {\n                total = ((java.util.Map<?, ?>)(object)).size();\n            } else if (object instanceof java.util.Collection<?>) {\n                total = ((java.util.Collection<?>)(object)).size();\n            } else if (object instanceof java.lang.Object[]) {\n                total = ((java.lang.Object[])(object)).int;\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    total++;\n                    it.next();\n                }\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    total++;\n                    it.nextElement();\n                }\n            } else {\n                try {\n                    total = java.lang.reflect.Array.getLength(object);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n            return total;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[60,61,62,63,64,65,66],"tindex":"8d88f3c6-2ec0-11e6-912f-453aadb0181f","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:458","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            java.util.Map<java.lang.Object, java.lang.Long>.remove(key);\n            return super.remove(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"8d891ad7-2ec0-11e6-912f-75cea3f2eca0","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:100","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193],"tindex":"8d891ad8-2ec0-11e6-912f-59b2739efd15","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:195","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            return node == null ? null : node.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[],"tindex":"8d8941e9-2ec0-11e6-912f-7bd1ee428807","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212],"tindex":"8d8941ea-2ec0-11e6-912f-a37d806d7c56","method":{"position":"org.apache.commons.collections4.set.CompositeSet:245","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"8d8941eb-2ec0-11e6-912f-dd73c67d999e","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:252","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getEntry(final java.lang.Object k) {\n    if (k == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final K K = castKey(k);\n            if (key == null) {\n                return null;\n            } \n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K)) ? entry : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[213,214,215,216],"tindex":"8d8968fc-2ec0-11e6-912f-77f4a0a4ccef","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:389","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<K>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[217,218],"tindex":"8d8968fd-2ec0-11e6-912f-a9ada137d6ea","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249],"tindex":"8d8968fe-2ec0-11e6-912f-45c71f8faac8","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = ((org.apache.commons.collections4.Bag<E>)(bag));\n                return tmpBag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableBag<E>(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:109","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"8d89900f-2ec0-11e6-912f-7f0d8d6625a7","method":{"position":"org.apache.commons.collections4.MapUtils:108","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<? super K, V> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                return map.get(key);\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[47],"tindex":"8d899010-2ec0-11e6-912f-232a1bbefb40","method":{"position":"org.apache.commons.collections4.QueueUtils:73","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> predicatedQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.queue.PredicatedQueue.predicatedQueue(queue, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[250],"tindex":"8d899011-2ec0-11e6-912f-1f12e02221a1","method":{"position":"org.apache.commons.collections4.PredicateUtils:321","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[251,252,253,254,255,256,257,258,259,260,261,262],"tindex":"8d89b722-2ec0-11e6-912f-f306a8f52357","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:438","type":"CtMethodImpl","sourcecode":"protected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        {\n            return (key == null ? 0 : key.hashCode()) ^ (value == null ? 0 : value.hashCode());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[18,15,16,263,264,265,266,267,268,269,270,271],"tindex":"8d89b723-2ec0-11e6-912f-cf5da376b219","method":{"position":"org.apache.commons.collections4.list.TreeList:570","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> remove(final int index) {\n    if (index < 0) {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return removeSelf();\n            } \n            if (indexRelativeToMe > 0) {\n                setRight(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) < 0) {\n                    (int)++;\n                } \n            } else {\n                setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) > 0) {\n                    (int)--;\n                } \n            }\n            recalcHeight();\n            return balance();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[272],"tindex":"8d89b724-2ec0-11e6-912f-87f71279d38f","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:423","type":"CtMethodImpl","sourcecode":"public V setValue(final int index, final V value) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final K K = java.util.List<K>.get(index);\n            return put(key, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getLeft(dataElement)) == node"},"failures":[97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,150,149,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,154,155,156,157,158,159,160,161,162,163,193,192,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191],"tindex":"8d89de35-2ec0-11e6-912f-0516c1e81d8b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:823","type":"CtMethodImpl","sourcecode":"private void rotateLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getRight(dataElement);\n            node.setRight(rightChild.getLeft(dataElement), dataElement);\n            if ((rightChild.getLeft(dataElement)) != null) {\n                rightChild.getLeft(dataElement).setParent(node, dataElement);\n            } \n            rightChild.setParent(node.getParent(dataElement), dataElement);\n            if ((node.getParent(dataElement)) == null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = rightChild;\n            } else if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n                node.getParent(dataElement).setLeft(rightChild, dataElement);\n            } else {\n                node.getParent(dataElement).setRight(rightChild, dataElement);\n            }\n            rightChild.setLeft(node, dataElement);\n            node.setParent(rightChild, dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"8d8a0546-2ec0-11e6-912f-7f7b6816574b","method":{"position":"org.apache.commons.collections4.MapUtils:446","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Byte getByte(final java.util.Map<? super K, ?> map, final K key, final java.lang.Byte defaultValue) {\n    if (map != null) {\n        {\n            if (map != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n                    if (answer == null) {\n                        answer = defaultValue;\n                    } \n                    return answer;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"8d8a0547-2ec0-11e6-912f-031c1748c011","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2031","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            if ((node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()))) {\n                removeEntry(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[273,274,275,276,277,278,279,280,281,282],"tindex":"8d8a0548-2ec0-11e6-912f-271c23867987","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        {\n            return java.util.Map<E, ? super V>.keySet().equals(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[283],"tindex":"8d8a2c59-2ec0-11e6-912f-bdaa9bca2b92","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:91","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtBinaryOperatorImpl","sourcecode":"iterable instanceof java.util.Collection<?>"},"failures":[284],"tindex":"8d8a2c5a-2ec0-11e6-912f-d7587e151de9","method":{"position":"org.apache.commons.collections4.CollectionUtils:1104","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.lang.Iterable<? extends C> iterable) {\n    if (iterable instanceof java.util.Collection<?>) {\n        {\n            if (iterable instanceof java.util.Collection<?>) {\n                return collection.addAll(((java.util.Collection<? extends C>)(iterable)));\n            } \n            return org.apache.commons.collections4.CollectionUtils.addAll(collection, iterable.iterator());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterable":"iterable"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl","sourcecode":"(coll1.size()) < (coll2.size())"},"failures":[],"tindex":"8d8a2c5b-2ec0-11e6-912f-e5f0dc29438b","method":{"position":"org.apache.commons.collections4.CollectionUtils:409","type":"CtMethodImpl","sourcecode":"public static boolean containsAny(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if ((coll2.size()) < (coll2.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll1.size()) < (coll2.size())) {\n                for (final java.lang.Object java.lang.Object : coll1) {\n                    if (coll2.contains(aColl1)) {\n                        return true;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (coll1.contains(aColl2)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll2","coll1":"coll2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[],"tindex":"8d8a536c-2ec0-11e6-912f-876a02a3922b","method":{"position":"org.apache.commons.collections4.CollectionUtils:542","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b, final org.apache.commons.collections4.Equator<?> equator) {\n    if ((b.size()) != (a.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"equator may not be null\");\n            } \n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.Transformer org.apache.commons.collections4.Transformer = new org.apache.commons.collections4.Transformer() {\n                public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n                    return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n                }\n            };\n            return org.apache.commons.collections4.CollectionUtils.isEqualCollection(org.apache.commons.collections4.CollectionUtils.collect(a, transformer), org.apache.commons.collections4.CollectionUtils.collect(b, transformer));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[285],"tindex":"8d8a536d-2ec0-11e6-912f-7d6393f95c76","method":{"position":"org.apache.commons.collections4.CollectionUtils:208","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>java.util.Collection<T> emptyIfNull(final java.util.Collection<T> collection) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return collection == null ? org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.java.util.Collection : collection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[248],"tindex":"8d8a7a7e-2ec0-11e6-912f-4971d21e8975","method":{"position":"org.apache.commons.collections4.BagUtils:214","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.bag.PredicatedSortedBag.predicatedSortedBag(bag, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1594","type":"CtBinaryOperatorImpl","sourcecode":"c == null"},"failures":[286],"tindex":"8d8a7a7f-2ec0-11e6-912f-ed4c5c5d1b07","method":{"position":"org.apache.commons.collections4.CollectionUtils:1567","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c) {\n    if ((b == null) || (a == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (c == null) {\n                {\n                    return org.apache.commons.collections4.CollectionUtils.collate(a, b, c, true);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:96","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"8d8a7a80-2ec0-11e6-912f-e5881c0d8661","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:95","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.MultiKeyMap<K, V> multiKeyMap(final org.apache.commons.collections4.map.AbstractHashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            if ((map.size()) > 0) {\n                throw new java.lang.IllegalArgumentException(\"Map must be empty\");\n            } \n            return new org.apache.commons.collections4.map.MultiKeyMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"8d8aa191-2ec0-11e6-912f-cd681f2019a3","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().contains(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[287,288,289,290,291],"tindex":"8d8aa192-2ec0-11e6-912f-07ae312df6a1","method":{"position":"org.apache.commons.collections4.PredicateUtils:421","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"8d8aa193-2ec0-11e6-912f-8d1ea921fe39","method":{"position":"org.apache.commons.collections4.MapUtils:446","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Byte getByte(final java.util.Map<? super K, ?> map, final K key, final java.lang.Byte defaultValue) {\n    if (map != null) {\n        {\n            if (map != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n                    if (answer == null) {\n                        answer = defaultValue;\n                    } \n                    return answer;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,149,150,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,154,155,156,157,158,159,160,161,162,163,192,193,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191],"tindex":"8d8ac8a4-2ec0-11e6-912f-bb869e0941a6","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:582","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<K>lookup(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:49","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[292,293,294,295,296,297,298,299],"tindex":"8d8ac8a5-2ec0-11e6-912f-1fcb46977ad4","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:47","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"8d8aefb6-2ec0-11e6-912f-d7d1b7e0bb7e","method":{"position":"org.apache.commons.collections4.IteratorUtils:718","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> filteredListIterator(final java.util.ListIterator<? extends E> listIterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            if (listIterator == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (listIterator == null) {\n                        throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n                    } \n                    if (predicate == null) {\n                        throw new java.lang.NullPointerException(\"Predicate must not be null\");\n                    } \n                    return new org.apache.commons.collections4.iterators.FilterListIterator<E>(listIterator , predicate);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"8d8aefb7-2ec0-11e6-912f-870612482342","method":{"position":"org.apache.commons.collections4.CollectionUtils:1567","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c) {\n    if ((b == null) || (a == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (c == null) {\n                {\n                    return org.apache.commons.collections4.CollectionUtils.collate(a, b, c, true);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361],"tindex":"8d8aefb8-2ec0-11e6-912f-9fb6ea23a68d","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            return decorated().remove(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[362,363,364,365,366,367,368,369,370,300,371,372,301,302,303,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408],"tindex":"8d8b16c9-2ec0-11e6-912f-290f8d600084","method":{"position":"org.apache.commons.collections4.map.TransformedMap:76","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        {\n            return new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"8d8b16ca-2ec0-11e6-912f-dd0252fd0fc4","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if ((coll.size()) == 0) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"8d8b16cb-2ec0-11e6-912f-cbcd8340a417","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:791","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? null : node.getParent(dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[409,410,411,412],"tindex":"8d8b3ddc-2ec0-11e6-912f-bdf4167166dd","method":{"position":"org.apache.commons.collections4.map.Flat3Map:244","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(value);\n            } \n            if (value == null) {\n                switch (int) {\n                    case 3 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                switch (int) {\n                    case 3 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 2 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 1 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[413],"tindex":"8d8b3ddd-2ec0-11e6-912f-91ffa2788109","method":{"position":"org.apache.commons.collections4.list.TransformedList:123","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (null == object) {\n        {\n            if (null == object) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return getList().indexOf(object);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"8d8b64ee-2ec0-11e6-912f-93c911041750","method":{"position":"org.apache.commons.collections4.list.LazyList:111","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = decorated().size();\n            if (index < size) {\n                E E = decorated().get(index);\n                if (object == null) {\n                    object = org.apache.commons.collections4.Factory<? extends E>.create();\n                    decorated().set(index, object);\n                    return object;\n                } \n                return object;\n            } \n            for (int int = size ; i < index ; i++) {\n                decorated().add(null);\n            }\n            final E E = org.apache.commons.collections4.Factory<? extends E>.create();\n            decorated().add(object);\n            return object;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"8d8b64ef-2ec0-11e6-912f-41068ba64a94","method":{"position":"org.apache.commons.collections4.list.TransformedList:123","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (null == object) {\n        {\n            if (null == object) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return getList().indexOf(object);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"8d8b64f0-2ec0-11e6-912f-6155436c1706","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:80","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            if (coll == null) {\n                throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n            } \n            for (int int = 0 ; i < 1000 ; i++) {\n                if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                    break;\n                } \n                if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n                    coll = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(coll)).decorated();\n                } else if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n                    coll = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(coll)).decorated();\n                } \n            }\n            if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(((org.apache.commons.collections4.BoundedCollection<E>)(coll)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[414,415,416,417,418,419,420,6,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,349,438,439,440,441,350,442],"tindex":"8d8bb311-2ec0-11e6-912f-ab274ac74329","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:70","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"8d8bda22-2ec0-11e6-912f-bf75f721caf5","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:77","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[443,444,445,446,447,448,449,450,451],"tindex":"8d8bda23-2ec0-11e6-912f-811db222e984","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:316","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        if (null == prev) {\n                            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        } else {\n                            prev.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        }\n                        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash].int)--;\n                        return n.V;\n                    } \n                    prev = n;\n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"8d8c0134-2ec0-11e6-912f-af8b49cb34c1","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:73","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformedQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.queue.TransformedQueue<E> org.apache.commons.collections4.queue.TransformedQueue<E> = new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n            if ((queue.size()) > 0) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(queue.toArray()));\n                queue.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[417,420,452,423,4,5],"tindex":"8d8c2845-2ec0-11e6-912f-958aa96bf49b","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:102","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[453,454],"tindex":"8d8c2846-2ec0-11e6-912f-8f0fff10e6e7","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:507","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.remove(value);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<java.lang.Object, V>.remove(key);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[455,456,457,458,459],"tindex":"8d8c2847-2ec0-11e6-912f-63dbc26890be","method":{"position":"org.apache.commons.collections4.map.SingletonMap:221","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return isEqualKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[460,24],"tindex":"8d8c4f58-2ec0-11e6-912f-eda46431a4e4","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            if (object == (org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[461,70],"tindex":"8d8c4f59-2ec0-11e6-912f-c53b5be06115","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (set == null) {\n        {\n            if (set == null) {\n                throw new java.lang.IllegalArgumentException(\"Set must not be null\");\n            } \n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (((set.size()) > 0) || ((list.size()) > 0)) {\n                throw new java.lang.IllegalArgumentException(\"Set and List must be empty\");\n            } \n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[462],"tindex":"8d8c766a-2ec0-11e6-912f-7d912c601d4e","method":{"position":"org.apache.commons.collections4.PredicateUtils:535","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(transformer, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,234,478,479,480,481],"tindex":"8d8c766b-2ec0-11e6-912f-097d32b28d25","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:76","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object instanceof java.util.Iterator<?>) {\n                {\n                    return decorated().remove(object, count);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:47","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,460,498],"tindex":"8d8c9d7c-2ec0-11e6-912f-0b1c7dcdda6f","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:45","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<? extends K, ? extends V> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[499,500,293,294,501,502,295,296,297,298,503,504,299,505,506,507,508,509],"tindex":"8d8c9d7d-2ec0-11e6-912f-6df47bccc1c0","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(final org.apache.commons.collections4.BoundedCollection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BoundedCollection<E> org.apache.commons.collections4.BoundedCollection<E> = ((org.apache.commons.collections4.BoundedCollection<E>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry"},"failures":[149,115,116,118,119,122,123,126,127,131,132,133,192,165,166,168,169,172,177,178,179],"tindex":"8d8c9d7e-2ec0-11e6-912f-751de8d69f39","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1533","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map.Entry) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            return (node != null) && (node.getValue().equals(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"8d8cc48f-2ec0-11e6-912f-97e21c68496a","method":{"position":"org.apache.commons.collections4.FactoryUtils:120","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate) {\n    if (classToInstantiate == null) {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, null, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[510,511,512,513,514],"tindex":"8d8cc490-2ec0-11e6-912f-c59d1bba2eeb","method":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object instanceof java.util.Collection<?>) {\n                {\n                    return ((org.apache.commons.collections4.comparators.BooleanComparator.this) == object) || ((object instanceof org.apache.commons.collections4.comparators.BooleanComparator) && ((org.apache.commons.collections4.comparators.BooleanComparator.this.boolean) == (((org.apache.commons.collections4.comparators.BooleanComparator)(object)).boolean)));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[515],"tindex":"8d8ceba1-2ec0-11e6-912f-01e69bf3a907","method":{"position":"org.apache.commons.collections4.ClosureUtils:279","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl","sourcecode":"predicatesAndClosures == null"},"failures":[515],"tindex":"8d8ceba2-2ec0-11e6-912f-d1f4f3119673","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:89","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicatesAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = predicatesAndClosures.remove(null);\n            final int int = predicatesAndClosures.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n            } \n            final org.apache.commons.collections4.Closure<E>[] org.apache.commons.collections4.Closure<E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> : predicatesAndClosures.entrySet()) {\n                preds[i] = entry.getKey();\n                closures[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchClosure<E>(false , preds , closures , defaultClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"8d8d12b3-2ec0-11e6-912f-137f07da5ad7","method":{"position":"org.apache.commons.collections4.MapUtils:297","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Float) {\n                return ((java.lang.Float)(answer));\n            } \n            return java.lang.Float.valueOf(answer.floatValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"8d8d12b4-2ec0-11e6-912f-6fd8bf14ccae","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:111","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().addAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:540","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,149,150,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,154,155,156,157,158,159,160,161,162,163,192,193,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191],"tindex":"8d8d39c5-2ec0-11e6-912f-1165075b2be0","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1866","type":"CtMethodImpl","sourcecode":"private void setLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,409,619,410,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,273,641,642,643,644,645,274,646,647,278,648,649,650,651,652,279,653,654],"tindex":"8d8d39c6-2ec0-11e6-912f-a73cadcafd05","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key == null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[],"tindex":"8d8d60d7-2ec0-11e6-912f-c98dcaf0db4b","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:168","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <I, O>org.apache.commons.collections4.Transformer<I, O>[] copy(final org.apache.commons.collections4.Transformer<? super I, ? extends O>... transformers) {\n    if (transformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformers == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Transformer<I, O>[])(transformers.clone()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"8d8d60d8-2ec0-11e6-912f-ad5aa8b7b4ef","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:121","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:317","type":"CtBinaryOperatorImpl","sourcecode":"cursor == null"},"failures":[655,656,657,658,659],"tindex":"8d8d87e9-2ec0-11e6-912f-eb9a5b0fe213","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:288","type":"CtMethodImpl","sourcecode":"protected void unregisterCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = ref.get();\n                if (cur == null) {\n                    it.remove();\n                } else if (cur == cursor) {\n                    ref.clear();\n                    it.remove();\n                    break;\n                } \n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"8d8d87ea-2ec0-11e6-912f-bb6846a69dd3","method":{"position":"org.apache.commons.collections4.SplitMapUtils:59","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"8d8d87eb-2ec0-11e6-912f-2ba0be32343e","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:547","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"8d8daefc-2ec0-11e6-912f-a7b4d5f0cf6e","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:76","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object instanceof java.util.Iterator<?>) {\n                {\n                    return decorated().remove(object, count);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[660],"tindex":"8d8daefd-2ec0-11e6-912f-9df36551c22f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1497","type":"CtMethodImpl","sourcecode":"public static int maxSize(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).maxSize();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.maxSize();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return -1;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"8d8dd60e-2ec0-11e6-912f-91349851f4c5","method":{"position":"org.apache.commons.collections4.MapUtils:150","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Boolean) {\n                        return ((java.lang.Boolean)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        return java.lang.Boolean.valueOf(((java.lang.String)(answer)));\n                    } \n                    if (answer instanceof java.lang.Number) {\n                        final java.lang.Number java.lang.Number = ((java.lang.Number)(answer));\n                        return (n.intValue()) != 0 ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                    } \n                } \n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[661],"tindex":"8d8dd60f-2ec0-11e6-912f-736d5638b050","method":{"position":"org.apache.commons.collections4.IteratorUtils:781","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.NodeList nodeList) {\n    if (nodeList == null) {\n        {\n            if (nodeList == null) {\n                throw new java.lang.NullPointerException(\"NodeList must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(nodeList);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"nodeList"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"8d8dd610-2ec0-11e6-912f-ad7fa7badb3c","method":{"position":"org.apache.commons.collections4.MapUtils:466","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key, final java.lang.Short defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"8d8dd611-2ec0-11e6-912f-f9a4cf55ffbd","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"8d8dfd22-2ec0-11e6-912f-e7942a7d0ffd","method":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object instanceof java.util.Collection<?>) {\n                {\n                    return ((org.apache.commons.collections4.comparators.BooleanComparator.this) == object) || ((object instanceof org.apache.commons.collections4.comparators.BooleanComparator) && ((org.apache.commons.collections4.comparators.BooleanComparator.this.boolean) == (((org.apache.commons.collections4.comparators.BooleanComparator)(object)).boolean)));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[662],"tindex":"8d8dfd23-2ec0-11e6-912f-d7d68e1d49bf","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.OnePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.DefaultedMap:105","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[663],"tindex":"8d8dfd24-2ec0-11e6-912f-7d3f246fbc62","method":{"position":"org.apache.commons.collections4.map.LazyMap:81","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (factory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}