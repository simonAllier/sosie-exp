{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":411,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":787,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":137,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":517,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":800,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":314,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":332,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":418,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":267,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":177,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":547,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx4":284,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":653,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":75,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":1009,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":74,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":617,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":455,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":863,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":904,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":124,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":448,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":88,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":499,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":956,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":981,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":763,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":573,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":865,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":104,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":291,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":53,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":817,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":225,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":711,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":8,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":22,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":496,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":582,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":778,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":1011,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":306,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":788,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":970,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":569,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":796,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":590,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":735,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":613,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":942,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":534,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":565,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":215,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":883,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":560,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":799,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":426,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":542,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":373,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":521,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":639,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":334,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":467,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":143,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":759,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":27,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":985,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":157,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":814,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":906,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":360,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":861,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":764,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":20,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":700,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":868,"org.apache.commons.collections4.CollectionUtilsTest.intersection":450,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":503,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":905,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":483,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":625,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":98,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":295,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":125,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":344,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":322,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":323,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":412,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":841,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":324,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":406,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":987,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":235,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":313,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToString":227,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":827,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":530,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":992,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":610,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":15,"org.apache.commons.collections4.map.CompositeMapTest.testPut":454,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":497,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":580,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":969,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":804,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":152,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":413,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":513,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":836,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":926,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":432,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":491,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":734,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":935,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":148,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":641,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":803,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove3":643,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":919,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":642,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":383,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":899,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":384,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":385,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":945,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":696,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":909,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":874,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":154,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":175,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":940,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":941,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":939,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":375,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":823,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":914,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":408,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":635,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":998,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":82,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":451,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":359,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":729,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":813,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":32,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":843,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionSize":226,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":460,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":539,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":191,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":350,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":345,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":200,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":429,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":790,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":704,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":216,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":417,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":484,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":971,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":207,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":485,"org.apache.commons.collections4.map.MultiKeyMapTest.testEmptyMapCompatibility":782,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":174,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":382,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":983,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":749,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":515,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":270,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":596,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":668,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":624,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":351,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":352,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":353,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":422,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":527,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":737,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":424,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":811,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":549,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":968,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":45,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":738,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":1,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":776,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":984,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":303,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":437,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testSimpleSerialization":507,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":682,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":950,"org.apache.commons.collections4.set.PredicatedSetTest.testSimpleSerialization":244,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectHashCodeEqualsSelfHashCode":246,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":501,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":214,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":780,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":461,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":300,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":135,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":676,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":576,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":132,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":393,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":563,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":723,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":536,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":516,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":801,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":994,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking2":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":121,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":555,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":269,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":870,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":409,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":593,"org.apache.commons.collections4.set.PredicatedSetTest.testCanonicalEmptyCollectionExists":243,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":591,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":934,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":615,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":988,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":130,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":329,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":896,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":410,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":975,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":208,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":957,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":404,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":403,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":402,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":946,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":290,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":798,"org.apache.commons.collections4.map.LRUMapTest.testReset":962,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":473,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":112,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":853,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":907,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":31,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":482,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":327,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":849,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":495,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":794,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":606,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":810,"org.apache.commons.collections4.functors.AllPredicateTest.nullCollectionToGetInstance":285,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":741,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":237,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":915,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":828,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":864,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":91,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":816,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":978,"org.apache.commons.collections4.map.LinkedMapTest.testReset":730,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":901,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":525,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":762,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":986,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":932,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":997,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":205,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":779,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":201,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":903,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIteratorRemove":228,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":217,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":299,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":212,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":837,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":996,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":83,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":279,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":673,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":526,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":129,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":685,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":153,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":111,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":655,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":830,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":105,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":202,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":842,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":869,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":95,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":4,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":195,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":755,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":664,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":721,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":889,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":477,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":848,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":877,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":316,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":10,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":16,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":552,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":640,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":933,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":43,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":463,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":144,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":30,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":312,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":858,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":666,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":493,"org.apache.commons.collections4.map.HashedMapTest.testClone":699,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":859,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":259,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":304,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":860,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":180,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":600,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":786,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":581,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":76,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":169,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":954,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":658,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":890,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":578,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":374,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":341,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":472,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":147,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":895,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":139,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":698,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":363,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":973,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":659,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":35,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":446,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":528,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":119,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":183,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":29,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":66,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":57,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":427,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":808,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":436,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":336,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":335,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":337,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":459,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":705,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":196,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":944,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":612,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":740,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":325,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":777,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":743,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":61,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":797,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":265,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":500,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":510,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":765,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":572,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":258,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":257,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":438,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":33,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":254,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":253,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":256,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":255,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":250,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":431,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":252,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":761,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":251,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":760,"org.apache.commons.collections4.list.TreeListTest.testBug35258":192,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":825,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":579,"org.apache.commons.collections4.map.LinkedMapTest.testClone":732,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":178,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":434,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":25,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiClear":466,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":439,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":185,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":1012,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":770,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":726,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":77,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":349,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":486,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":263,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":601,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":855,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":52,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":791,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":856,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":857,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":894,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":773,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":772,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":771,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":982,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":908,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":876,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":595,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":714,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":979,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":72,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":965,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":69,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":357,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":519,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":55,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":712,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove3":647,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":646,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":407,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":781,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":645,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":586,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":815,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":748,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":913,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":589,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":588,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":927,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":475,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":587,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":852,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":17,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":559,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":818,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":1005,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":812,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":106,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectEqualsSelf":502,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":597,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":976,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":90,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":672,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":471,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":120,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":522,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":846,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":928,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":720,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":557,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":660,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":155,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":742,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":89,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testUnmodifiable":462,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":362,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":821,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":51,"org.apache.commons.collections4.map.LRUMapTest.testLRU":964,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":198,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":63,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":59,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":301,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":317,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":487,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":952,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":488,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":489,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":689,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":34,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":695,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":468,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":686,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":993,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":871,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":733,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":159,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":611,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":706,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":603,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":991,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":268,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEmptyMapCompatibility":480,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":974,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":447,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":916,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":229,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":584,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":575,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":84,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":398,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":292,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":886,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":897,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":274,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":358,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":93,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":678,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":931,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":722,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":768,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":478,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":995,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":754,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":272,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":548,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":620,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":394,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":271,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":898,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":138,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":719,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":79,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":716,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":296,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":181,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":948,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":469,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":238,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":307,"org.apache.commons.collections4.map.HashedMapTest.testEmptyMapCompatibility":709,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":629,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":789,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":203,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":917,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":866,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":622,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":623,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":744,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":745,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":236,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":179,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":925,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":331,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":64,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":68,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":688,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":840,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":656,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":667,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":347,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":476,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":511,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":851,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":767,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":23,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIsEmpty":231,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":838,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":554,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":48,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":570,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":86,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":194,"org.apache.commons.collections4.map.LinkedMapTest.testEmptyMapCompatibility":747,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":230,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":854,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":703,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":127,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":249,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":632,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":902,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":633,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":631,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":28,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":929,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testGetSetComparator":209,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":1000,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":315,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":675,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":1001,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":650,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":806,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":2,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":943,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":911,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":958,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":164,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":820,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":330,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":92,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":684,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":298,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":921,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":609,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":182,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":133,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":644,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":310,"org.apache.commons.collections4.map.CompositeMapTest.testGet":453,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":912,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicateEx1":170,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":543,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":608,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":165,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":386,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalFullCollectionExists":880,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":599,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":746,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":953,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":388,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":387,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":727,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":694,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":305,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":955,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":674,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":783,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":679,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":725,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":443,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":752,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":977,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":607,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":420,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":538,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":221,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":365,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":784,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":62,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":213,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":128,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":161,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":479,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":875,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":342,"org.apache.commons.collections4.CollectionUtilsTest.union":449,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":490,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":206,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":474,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":731,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":541,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":108,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":343,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":444,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":630,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":887,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":824,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalFullCollectionExists":961,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":621,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":309,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":626,"org.apache.commons.collections4.list.TreeListTest.testRemove":190,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":556,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":533,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":937,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":936,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testFullMapCompatibility":481,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":435,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":614,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":18,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":54,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":938,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":356,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":47,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":248,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":355,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":750,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":354,"org.apache.commons.collections4.set.PredicatedSetTest.testSetHashCode":223,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":318,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":381,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":117,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":50,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectEqualsSelf":240,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":204,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":884,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":107,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":651,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":167,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":416,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":602,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":739,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":415,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":414,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsSelfHashCode":504,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":766,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":276,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":1002,"org.apache.commons.collections4.map.LRUMapTest.testClone":963,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":757,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":126,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":553,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":710,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":366,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":753,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":980,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":262,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":839,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":793,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":512,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":234,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":717,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":150,"org.apache.commons.collections4.set.PredicatedSetTest.testCanonicalFullCollectionExists":241,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":87,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":758,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":670,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":42,"org.apache.commons.collections4.list.TreeListTest.testListEquals":425,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":94,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testSerializeDeserializeThenCompare":506,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":619,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testInitialCapacityZero":882,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":71,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":885,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":494,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":728,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":297,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":24,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":531,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":12,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":430,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":769,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":80,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":524,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":0,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":464,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":39,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalEmptyCollectionExists":879,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":163,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":551,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":405,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":348,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":708,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":535,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":419,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMakeMap":470,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":85,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":149,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":67,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":260,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":40,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectHashCodeEqualsContract":245,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testCanonicalEmptyCollectionExists":508,"org.apache.commons.collections4.set.PredicatedSetTest.testEqualsNull":242,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":1007,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":567,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":638,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":457,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":456,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":924,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":36,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":158,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":756,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":188,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":280,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":498,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":3,"org.apache.commons.collections4.map.HashedMapTest.testInitialCapacityZero":701,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":1004,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":239,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSimpleSerialization":910,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":218,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":831,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":193,"org.apache.commons.collections4.ListUtilsTest.testHashCode":210,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":392,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":844,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":618,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":176,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":707,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":847,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalEmptyCollectionExists":960,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":1010,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":441,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":662,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":146,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":380,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":687,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":9,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":832,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":681,"org.apache.commons.collections4.set.PredicatedSetTest.testGetSet":220,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":959,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":702,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":605,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":142,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":340,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":339,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":663,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":691,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":751,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":141,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":338,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":145,"org.apache.commons.collections4.functors.AllPredicateTest.nullArrayToGetInstance":287,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":792,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":333,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":834,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":947,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":583,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":900,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":440,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":867,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":892,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testCanonicalFullCollectionExists":509,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":550,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":822,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":113,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":433,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":649,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":275,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":677,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":1006,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":724,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":862,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":845,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":445,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":391,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":492,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":537,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":370,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":371,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":458,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":372,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":96,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":389,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":378,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":166,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":288,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":211,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":545,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":168,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":680,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":697,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":850,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":421,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":654,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":5,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":11,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":951,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":989,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":1003,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":379,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":775,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":713,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":49,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":326,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":999,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":561,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":364,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":199,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":293,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":540,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":652,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":571,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":156,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsContract":505,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":428,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":918,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":131,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":972,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":693,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":598,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":544,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":690,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":785,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":562,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":661,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":97,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":805,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":881,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":266,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":514,"org.apache.commons.collections4.set.CompositeSetTest.testContains":442,"org.apache.commons.collections4.CollectionUtilsTest.isFull":247,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":683,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":873,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":397,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":718,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking":7,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":46,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":736,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":101,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":634,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":58,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":273,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":110,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":920,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionClear":232,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":520,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":187,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":888,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":189,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":311,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":532,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":452,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":115,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":222,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":37,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":294,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":151,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":184,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":657,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":186,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":277,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicateEx1":423,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":99,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":574,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":826,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex1":171,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":893,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":592,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx4":283,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":585,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":465,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx1":286,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEmptyMapCompatibility":891,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":566,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":949,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":390,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":819,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":930,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":224,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":219,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":594,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":140,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":261,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":636,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":627,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":923,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":523,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":922,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":604,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":833,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":118,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":795,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":990,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":109,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":368,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":369,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":367,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":829,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":715,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":308,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":278,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":628,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":103,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":809,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":376,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":162,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":637,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":1008,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":319,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":320,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":134,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":518,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":616,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":233,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":396,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":568,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":116,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":564,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":377,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":361,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":19,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":802,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":264,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":807,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":173,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":281,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":669,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":70,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":966,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":289,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":529,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":878,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":577,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":172,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":160,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":401,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":123,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":558,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":38,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":399,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":774,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":400,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":282,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":302,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":546,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":321,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":328,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":346,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":665,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":197,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":73,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":671,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":26,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":967,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":835,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":872,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":692,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":648,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":395},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:178","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.iterators.ObjectArrayListIterator.this.lastItemIndex) == (-1)"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"3b03282d-2e76-11e6-b19a-4dcb03304873","method":{"position":"org.apache.commons.collections4.list.TransformedList:119","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index == (-1)) {\n        {\n            return getList().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastItemIndex":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"3b04128e-2e76-11e6-b19a-f7422377a9b2","method":{"position":"org.apache.commons.collections4.MapUtils:318","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n                    if (answer == null) {\n                        return null;\n                    } \n                    if (answer instanceof java.lang.Double) {\n                        return ((java.lang.Double)(answer));\n                    } \n                    return java.lang.Double.valueOf(answer.doubleValue());\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"3b04399f-2e76-11e6-b19a-ff8ca8794afe","method":{"position":"org.apache.commons.collections4.map.LinkedMap:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:178","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.iterators.ObjectArrayListIterator.this.lastItemIndex) == (-1)"},"failures":[30],"tindex":"3b0460b0-2e76-11e6-b19a-0b7886a21190","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:143","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<E> subList(final int fromIndex, final int toIndex) {\n    if (fromIndex == (-1)) {\n        {\n            final java.util.List<E> java.util.List<E> = decorated().subList(fromIndex, toIndex);\n            return new org.apache.commons.collections4.list.UnmodifiableList<E>(sub);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastItemIndex":"fromIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[31],"tindex":"3b0487c1-2e76-11e6-b19a-c7e003384c9e","method":{"position":"org.apache.commons.collections4.CollectionUtils:463","type":"CtMethodImpl","sourcecode":"public static boolean isSubCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((b.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n            for (final java.lang.Object java.lang.Object : a) {\n                if ((helper.freqA(obj)) > (helper.freqB(obj))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"b"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:116","type":"CtBinaryOperatorImpl","sourcecode":"nonNullComparator == null"},"failures":[],"tindex":"3b04aed2-2e76-11e6-b19a-0fd343bf6a16","method":{"position":"org.apache.commons.collections4.IteratorUtils:588","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Collection<java.util.Iterator<? extends E>> iterators) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nonNullComparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:153","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[32],"tindex":"3b04d5e3-2e76-11e6-b19a-6b0ba81aa306","method":{"position":"org.apache.commons.collections4.ComparatorUtils:119","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Comparator<E> reversedComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            return new org.apache.commons.collections4.comparators.ReverseComparator<E>(comparator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:331","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168],"tindex":"3b04fcf4-2e76-11e6-b19a-930cfe63e32a","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:493","type":"CtMethodImpl","sourcecode":"protected void addNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> nodeToInsert, final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> insertBeforeNode) {\n    if (nodeToInsert == nodeToInsert) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            nodeToInsert.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = insertBeforeNode;\n            nodeToInsert.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = insertBeforeNode.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            insertBeforeNode.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = nodeToInsert;\n            insertBeforeNode.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = nodeToInsert;\n            (int)++;\n            (int)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"nodeToInsert","header":"nodeToInsert"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[169],"tindex":"3b054b15-2e76-11e6-b19a-75e50866c505","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                changed |= remove(o);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[170],"tindex":"3b057226-2e76-11e6-b19a-776854d5936a","method":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:46","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsExceptionPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsExceptionPredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[171],"tindex":"3b059937-2e76-11e6-b19a-99c1fa1a48e0","method":{"position":"org.apache.commons.collections4.PredicateUtils:236","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName, paramTypes, args));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"methodName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtBinaryOperatorImpl","sourcecode":"(nodeCount) == 0"},"failures":[172,173,174,175,176,177],"tindex":"3b059938-2e76-11e6-b19a-e7f000b39188","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:169","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake getMiddleSnake(final int start1, final int end1, final int start2, final int end2) {\n    if (end2 == 0) {\n        {\n            final int int = end1 - start1;\n            final int int = end2 - start2;\n            if ((m == 0) || (n == 0)) {\n                return null;\n            } \n            final int int = m - n;\n            final int int = n + m;\n            final int int = ((sum % 2) == 0 ? sum : sum + 1) / 2;\n            int[][(1 + offset)] = start1;\n            int[][(1 + offset)] = end1 + 1;\n            for (int int = 0 ; d <= offset ; ++d) {\n                for (int int = -d ; k <= d ; k += 2) {\n                    final int int = k + offset;\n                    if ((k == (-d)) || ((k != d) && ((int[][(i - 1)]) < (int[][(i + 1)])))) {\n                        int[][i] = int[][(i + 1)];\n                    } else {\n                        int[][i] = (int[][(i - 1)]) + 1;\n                    }\n                    int int = int[][i];\n                    int int = ((x - start1) + start2) - k;\n                    while (((x < end1) && (y < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = ++x;\n                        ++y;\n                    }\n                    if ((((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))) {\n                        if ((int[][(i - delta)]) <= (int[][i])) {\n                            return buildSnake(int[][(i - delta)], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n                for (int int = delta - d ; k <= (delta + d) ; k += 2) {\n                    final int int = (k + offset) - delta;\n                    if ((k == (delta - d)) || ((k != (delta + d)) && ((int[][(i + 1)]) <= (int[][(i - 1)])))) {\n                        int[][i] = (int[][(i + 1)]) - 1;\n                    } else {\n                        int[][i] = int[][(i - 1)];\n                    }\n                    int int = (int[][i]) - 1;\n                    int int = ((x - start1) + start2) - k;\n                    while (((x >= start1) && (y >= start2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = x--;\n                        y--;\n                    }\n                    if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n                        if ((int[][i]) <= (int[][(i + delta)])) {\n                            return buildSnake(int[][i], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n            }\n            throw new java.lang.RuntimeException(\"Internal Error\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"end2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"3b05e759-2e76-11e6-b19a-4164ffefcf04","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:389","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.ListIterator<E> createSubListListIterator(final org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E> subList, final int fromIndex) {\n    if (fromIndex == 0) {\n        {\n            final org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E> org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E> = new org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E>(subList , fromIndex);\n            registerCursor(cursor);\n            return cursor;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"fromIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtBinaryOperatorImpl","sourcecode":"((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))"},"failures":[],"tindex":"3b05e75a-2e76-11e6-b19a-4ffda0ae1e79","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((set1.size()) != (set2.size()))) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:340","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[178,179,180,181,182,183,184,185],"tindex":"3b05e75b-2e76-11e6-b19a-7d8e4c32c7b0","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:537","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final int index) {\n    if (index == 0) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.getValue(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"3b060e6c-2e76-11e6-b19a-4f2fad2a9aec","method":{"position":"org.apache.commons.collections4.MapUtils:762","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key, final short defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return defaultValue;\n            } \n            return shortObject.shortValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[186,187],"tindex":"3b060e6d-2e76-11e6-b19a-a90b93714ec2","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1097","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> subtree(final K prefix, final int offsetInBits, final int lengthInBits) {\n    if (offsetInBits == (-1)) {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) <= (path.int)) || (lengthInBits < (current.int))) {\n                    break;\n                } \n                path = current;\n                if (!(isBitSet(prefix, (offsetInBits + (current.int)), (offsetInBits + lengthInBits)))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current.isEmpty() ? path : current;\n            if (entry.isEmpty()) {\n                return null;\n            } \n            final int int = offsetInBits + lengthInBits;\n            if ((entry == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && ((lengthInBits(entry.getKey())) < endIndexInBits)) {\n                return null;\n            } \n            if ((isBitSet(prefix, endIndexInBits, endIndexInBits)) != (isBitSet(entry.K, lengthInBits, lengthInBits(entry.K)))) {\n                return null;\n            } \n            final int int = getKeyAnalyzer().bitIndex(prefix, offsetInBits, lengthInBits, entry.K, 0, lengthInBits(entry.getKey()));\n            if ((bitIndex >= 0) && (bitIndex < lengthInBits)) {\n                return null;\n            } \n            return entry;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"offsetInBits"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"3b06357e-2e76-11e6-b19a-71503a5b2a58","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:111","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().addAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:160","type":"CtBinaryOperatorImpl","sourcecode":"(root) == null"},"failures":[188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207],"tindex":"3b06357f-2e76-11e6-b19a-59f4e130ba5e","method":{"position":"org.apache.commons.collections4.list.TreeList:730","type":"CtMethodImpl","sourcecode":"private int getHeight(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node) {\n    if (node == null) {\n        {\n            return node == null ? -1 : node.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[208,209],"tindex":"3b065c90-2e76-11e6-b19a-ad2f878cb894","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:224","type":"CtMethodImpl","sourcecode":"public void setComparator(final java.util.Comparator<? super E> comp) {\n    if (comp == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkNotStarted();\n            java.util.Comparator<? super E> = comp;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comp"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1086","type":"CtBinaryOperatorImpl","sourcecode":"it != null"},"failures":[],"tindex":"3b065c91-2e76-11e6-b19a-a1d5980ddfd9","method":{"position":"org.apache.commons.collections4.IteratorUtils:955","type":"CtMethodImpl","sourcecode":"public static java.lang.Object[] toArray(final java.util.Iterator<?> iterator) {\n    if (iterator != null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            final java.util.List<?> java.util.List<?> = org.apache.commons.collections4.IteratorUtils.toList(iterator, 100);\n            return list.toArray();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"it":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"3b065c92-2e76-11e6-b19a-7556cac29574","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:90","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:217","type":"CtBinaryOperatorImpl","sourcecode":"(pos != (-1)) && (pos != index)"},"failures":[],"tindex":"3b065c93-2e76-11e6-b19a-7163c2f31bb3","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:126","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int fromIndex) {\n    if ((fromIndex != (-1)) && (pos != fromIndex)) {\n        {\n            return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>(org.apache.commons.collections4.list.AbstractLinkedList.this , fromIndex);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"fromIndex","index":"fromIndex"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[210],"tindex":"3b06aab4-2e76-11e6-b19a-dd9d0b95d119","method":{"position":"org.apache.commons.collections4.ListUtils:281","type":"CtMethodImpl","sourcecode":"public static int hashCodeForList(final java.util.Collection<?> list) {\n    if ((list.size()) == 0) {\n        {\n            if (list == null) {\n                return 0;\n            } \n            int int = 1;\n            final java.util.Iterator<?> java.util.Iterator<?> = list.iterator();\n            while (it.hasNext()) {\n                final java.lang.Object java.lang.Object = it.next();\n                hashCode = (31 * hashCode) + (obj == null ? 0 : obj.hashCode());\n            }\n            return hashCode;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[211,212],"tindex":"3b06aab5-2e76-11e6-b19a-53081cc37aba","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:134","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2) {\n    if ((key1 instanceof java.util.List) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtBinaryOperatorImpl","sourcecode":"(((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))"},"failures":[],"tindex":"3b06d1c6-2e76-11e6-b19a-377a412d3f3a","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if ((((index % 2) != 0) && ((delta - index) <= index)) && (k <= (delta + d))) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d":"index","delta":"index","k":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl","sourcecode":"list1 == list2"},"failures":[213,214,215,216,217],"tindex":"3b06f8d7-2e76-11e6-b19a-250a3b877385","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246],"tindex":"3b06f8d8-2e76-11e6-b19a-a7bfbeb5aeeb","method":{"position":"org.apache.commons.collections4.set.PredicatedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSet<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSet<E>(set , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"3b06f8d9-2e76-11e6-b19a-d9e39cc91de4","method":{"position":"org.apache.commons.collections4.SetUtils:116","type":"CtMethodImpl","sourcecode":"public static boolean isEqualSet(final java.util.Collection<?> set1, final java.util.Collection<?> set2) {\n    if (set2 instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set1 == set2) {\n                return true;\n            } \n            if (((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))) {\n                return false;\n            } \n            return set1.containsAll(set2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"set2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280],"tindex":"3b071fea-2e76-11e6-b19a-df888a3472f3","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:325","type":"CtMethodImpl","sourcecode":"private int increment(int index) {\n    if (index == (-1)) {\n        {\n            index++;\n            if (index >= (int)) {\n                index = 0;\n            } \n            return index;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"3b071feb-2e76-11e6-b19a-b7654cc25b7b","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:143","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake buildSnake(final int start, final int diag, final int end1, final int end2) {\n    if (end2 == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = start;\n            while ((((end - diag) < end2) && (end < end1)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(end), java.util.List<T>.get((end - diag))))) {\n                ++end;\n            }\n            return new org.apache.commons.collections4.sequence.SequencesComparator.Snake(start , end , diag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"end2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"3b071fec-2e76-11e6-b19a-655796fc45c3","method":{"position":"org.apache.commons.collections4.MapUtils:318","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n                    if (answer == null) {\n                        return null;\n                    } \n                    if (answer instanceof java.lang.Double) {\n                        return ((java.lang.Double)(answer));\n                    } \n                    return java.lang.Double.valueOf(answer.doubleValue());\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[281,282,283,284,285],"tindex":"3b0746fd-2e76-11e6-b19a-ffbb8b837294","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:96","type":"CtMethodImpl","sourcecode":"static <T>org.apache.commons.collections4.Predicate<T>[] validate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = new org.apache.commons.collections4.Predicate[predicates.size()];\n            int int = 0;\n            for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : predicates) {\n                preds[i] = predicate;\n                if ((preds[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n                i++;\n            }\n            return preds;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:236","type":"CtBinaryOperatorImpl","sourcecode":"(end) >= (maxElements)"},"failures":[],"tindex":"3b0746fe-2e76-11e6-b19a-35e049fea8a9","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:625","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected void ensureCapacity(final int newCapacity) {\n    if (newCapacity >= newCapacity) {\n        {\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int;\n            if (newCapacity <= oldCapacity) {\n                return ;\n            } \n            if ((int) == 0) {\n                int = calculateThreshold(newCapacity, float);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[newCapacity];\n            } else {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[newCapacity];\n                (int)++;\n                for (int int = oldCapacity - 1 ; i >= 0 ; i--) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = oldEntries[i];\n                    if (entry != null) {\n                        oldEntries[i] = null;\n                        do {\n                            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                            final int int = hashIndex(entry.int, newCapacity);\n                            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = newEntries[index];\n                            newEntries[index] = entry;\n                            entry = next;\n                        } while (entry != null );\n                    } \n                }\n                int = calculateThreshold(newCapacity, float);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = newEntries;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"maxElements":"newCapacity","end":"newCapacity"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:216","type":"CtBinaryOperatorImpl","sourcecode":"removed == false"},"failures":[],"tindex":"3b076e0f-2e76-11e6-b19a-bb035ee159b9","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1817","type":"CtMethodImpl","sourcecode":"protected boolean inToRange(final K key, final boolean forceInclusive) {\n    if (forceInclusive == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final K K = getToKey();\n            final boolean boolean = isToInclusive();\n            final int int = getKeyAnalyzer().compare(key, toKey);\n            if (toInclusive || forceInclusive) {\n                return ret <= 0;\n            } else {\n                return ret < 0;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"removed":"forceInclusive"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[286,287],"tindex":"3b07bc30-2e76-11e6-b19a-4bcdf59bb756","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return org.apache.commons.collections4.functors.FunctorUtils.coerce(predicates[0]);\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"3b07bc31-2e76-11e6-b19a-931118181f9e","method":{"position":"org.apache.commons.collections4.IteratorUtils:744","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> loopingIterator(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingIterator<E>(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:278","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"3b07bc32-2e76-11e6-b19a-f934bea04939","method":{"position":"org.apache.commons.collections4.map.LinkedMap:228","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.containsKey(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:404","type":"CtBinaryOperatorImpl","sourcecode":"expirationTimeObject != null"},"failures":[288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308],"tindex":"3b07e343-2e76-11e6-b19a-471ce4654878","method":{"position":"org.apache.commons.collections4.set.CompositeSet:425","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Set) {\n                final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(obj));\n                return ((set.size()) == (org.apache.commons.collections4.set.CompositeSet.this.size())) && (set.containsAll(org.apache.commons.collections4.set.CompositeSet.this));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expirationTimeObject":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[309],"tindex":"3b07e344-2e76-11e6-b19a-799f5e8e69fd","method":{"position":"org.apache.commons.collections4.SplitMapUtils:180","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> t) {\n    if (t instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            org.apache.commons.collections4.Put<K, V>.putAll(t);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"t"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:153","type":"CtBinaryOperatorImpl","sourcecode":"answer != null"},"failures":[310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405],"tindex":"3b07e345-2e76-11e6-b19a-dd12f8e000de","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422],"tindex":"3b080a56-2e76-11e6-b19a-9bd88d0a663e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:163","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key instanceof java.util.Collection<?>) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            return (lookupKey(key)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[423],"tindex":"3b080a57-2e76-11e6-b19a-b757dfa846ea","method":{"position":"org.apache.commons.collections4.PredicateUtils:502","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsFalsePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NullIsFalsePredicate.nullIsFalsePredicate(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1006","type":"CtBinaryOperatorImpl","sourcecode":"lineageIndex == (-1)"},"failures":[188,189,190,191,192,193,424,194,195,425,426,427,428,429,430,196,431,432,197,198,199,200,201,433,434,202,203,435,436,437,204,205,206,207,438,439],"tindex":"3b083168-2e76-11e6-b19a-d5fcf562071e","method":{"position":"org.apache.commons.collections4.list.TreeList:413","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> get(final int index) {\n    if (index == (-1)) {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode.this;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = indexRelativeToMe < 0 ? getLeftSubTree() : getRightSubTree();\n            if (nextNode == null) {\n                return null;\n            } \n            return nextNode.get(indexRelativeToMe);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lineageIndex":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtBinaryOperatorImpl","sourcecode":"iterable instanceof java.util.Collection<?>"},"failures":[440,441,442,443,288,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460],"tindex":"3b083169-2e76-11e6-b19a-95ad30374683","method":{"position":"org.apache.commons.collections4.CollectionUtils:1104","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.lang.Iterable<? extends C> iterable) {\n    if (iterable instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterable instanceof java.util.Collection<?>) {\n                return collection.addAll(((java.util.Collection<? extends C>)(iterable)));\n            } \n            return org.apache.commons.collections4.CollectionUtils.addAll(collection, iterable.iterator());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterable":"iterable"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[],"tindex":"3b08587a-2e76-11e6-b19a-7562897705c7","method":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.DefaultKeyValue.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> = ((org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[],"tindex":"3b08587b-2e76-11e6-b19a-037d34427c65","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (count == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509],"tindex":"3b087f8c-2e76-11e6-b19a-cdc00b9ba846","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.BidiMap<K, V> unmodifiableBidiMap(final org.apache.commons.collections4.BidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BidiMap<K, V> org.apache.commons.collections4.BidiMap<K, V> = ((org.apache.commons.collections4.BidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[510],"tindex":"3b087f8d-2e76-11e6-b19a-a7a0f1b5df3a","method":{"position":"org.apache.commons.collections4.map.LazyMap:96","type":"CtMethodImpl","sourcecode":"public static <V, K>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if (map != null) {\n        {\n            return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[511,512,513],"tindex":"3b08a69e-2e76-11e6-b19a-69a01bac2875","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:134","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Closure<?>... closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n            } \n            for (int int = 0 ; i < (closures.int) ; i++) {\n                if ((closures[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1498","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[248],"tindex":"3b08a69f-2e76-11e6-b19a-539f2a6b8da2","method":{"position":"org.apache.commons.collections4.CollectionUtils:1497","type":"CtMethodImpl","sourcecode":"public static int maxSize(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).maxSize();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.maxSize();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return -1;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:190","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.String"},"failures":[],"tindex":"3b08a6a0-2e76-11e6-b19a-83f9a75192a3","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.String) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                if (object == (org.apache.commons.collections4.collection.SynchronizedCollection.this)) {\n                    return true;\n                } \n                return (object == (org.apache.commons.collections4.collection.SynchronizedCollection.this)) || (decorated().equals(object));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"3b08cdb1-2e76-11e6-b19a-2dfcdf7335b0","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if ((object instanceof java.util.Map) == false) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[514],"tindex":"3b08cdb2-2e76-11e6-b19a-1938f24f1f77","method":{"position":"org.apache.commons.collections4.BagUtils:214","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.PredicatedSortedBag.predicatedSortedBag(bag, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[515],"tindex":"3b08cdb3-2e76-11e6-b19a-5775b093d451","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:140","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl","sourcecode":"transform == null"},"failures":[],"tindex":"3b08cdb4-2e76-11e6-b19a-912689ffba41","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:203","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <I, O>org.apache.commons.collections4.Transformer<I, O> coerce(final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.Transformer<I, O>)(transformer));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"3b091bd5-2e76-11e6-b19a-4b2b800f91cb","method":{"position":"org.apache.commons.collections4.ListUtils:678","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<T> get(final int index) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = size();\n            if (listSize < 0) {\n                throw new java.lang.IllegalArgumentException((\"negative size: \" + listSize));\n            } \n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" must not be negative\"));\n            } \n            if (index >= listSize) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" must be less than size \") + listSize));\n            } \n            final int int = index * (int);\n            final int int = java.lang.Math.min((start + (int)), java.util.List<T>.size());\n            return java.util.List<T>.subList(start, end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:764","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"3b0942e6-2e76-11e6-b19a-c3fbe892b78c","method":{"position":"org.apache.commons.collections4.ListUtils:492","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> fixedSizeList(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            return org.apache.commons.collections4.list.FixedSizeList.fixedSizeList(list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:157","type":"CtInvocationImpl","sourcecode":"it.hasNext()"},"failures":[471,472,474,475,476,477,479,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558],"tindex":"3b0942e7-2e76-11e6-b19a-a1d5cc178512","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:264","type":"CtMethodImpl","sourcecode":"protected java.util.Iterator<K> createKeySetIterator(final java.util.Iterator<K> iterator) {\n    if (iterator.hasNext()) {\n        {\n            return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySetIterator<K>(iterator , org.apache.commons.collections4.bidimap.AbstractDualBidiMap.this);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"it":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[559],"tindex":"3b0942e8-2e76-11e6-b19a-5d7edbef189c","method":{"position":"org.apache.commons.collections4.TransformerUtils:163","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, java.lang.Boolean> asTransformer(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.PredicateTransformer.predicateTransformer(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtUnaryOperatorImpl","sourcecode":"!(o1 == null ? o2 == null : o1.equals(o2))"},"failures":[],"tindex":"3b0969f9-2e76-11e6-b19a-7905ebba1be8","method":{"position":"org.apache.commons.collections4.MapUtils:938","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void debugPrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (!(label == null ? label == null : o1.equals(o2))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o1":"label","o2":"label"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:93","type":"CtBinaryOperatorImpl","sourcecode":"end < start"},"failures":[],"tindex":"3b0969fa-2e76-11e6-b19a-835360f5abda","method":{"position":"org.apache.commons.collections4.CollectionUtils:1176","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.util.Iterator<T> iterator, final int index) {\n    if (index < index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = index;\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(i);\n            while (iterator.hasNext()) {\n                i--;\n                if (i == (-1)) {\n                    return iterator.next();\n                } \n                iterator.next();\n            }\n            throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index","end":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:987","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(deletedNode, dataElement)"},"failures":[560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,406,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,407,408,599,600,601,602,603,604,605,606,607,608,409,609,410,411,610,611,612,613,614,615,616,617,412,618,619,620,621,622,623,413,624,625,626,627,628,629,630,631,632,633,414,415,416,634,635,636,637,417,638,639,418,419,420,421,422],"tindex":"3b0969fb-2e76-11e6-b19a-01cb71ec536d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1874","type":"CtMethodImpl","sourcecode":"private void setRight(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(node, dataElement)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dataElement":"dataElement","deletedNode":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtBinaryOperatorImpl","sourcecode":"count != null"},"failures":[560,561,564,562,563,565,566,567,568,569,570,571,572,573,574,575,576,406,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,407,408,599,602,600,601,603,604,605,606,607,608,409,609,410,411,610,611,612,613,614,615,616,617,412,618,619,620,621,622,623,413,624,625,626,627,628,629,630,631,632,633,414,415,416,634,635,636,637,417,638,639,418,419,420,421,422],"tindex":"3b09910c-2e76-11e6-b19a-1d603329b974","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1217","type":"CtMethodImpl","sourcecode":"private static void checkKey(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:971","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"3b09b81d-2e76-11e6-b19a-a1103a0db963","method":{"position":"org.apache.commons.collections4.MapUtils:782","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key, final int defaultValue) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(defaultValue)) {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return defaultValue;\n            } \n            return integerObject.intValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"defaultValue"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"3b09b81e-2e76-11e6-b19a-e9391e86e44e","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:425","type":"CtMethodImpl","sourcecode":"protected boolean isEqualValue(final java.lang.Object value1, final java.lang.Object value2) {\n    if (value1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (value1 == value2) || (value1.equals(value2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl","sourcecode":"(coll1.size()) < (coll2.size())"},"failures":[],"tindex":"3b09b81f-2e76-11e6-b19a-1331c8a0dfa5","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:255","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) < (coll.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (java.util.Set<E>.contains(next)) {\n                    setRetainAll.add(next);\n                } \n            }\n            if ((setRetainAll.size()) == (java.util.Set<E>.size())) {\n                return false;\n            } \n            if ((setRetainAll.size()) == 0) {\n                clear();\n            } else {\n                for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                    if (!(setRetainAll.contains(it.next()))) {\n                        it.remove();\n                    } \n                }\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll","coll1":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[485],"tindex":"3b09df30-2e76-11e6-b19a-438b25624d90","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:88","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:924","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"3b09df31-2e76-11e6-b19a-fdc280631a88","method":{"position":"org.apache.commons.collections4.list.TreeList:493","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> insert(final int index, final E obj) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(index)) {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe <= 0) {\n                return insertOnLeft(indexRelativeToMe, obj);\n            } \n            return insertOnRight(indexRelativeToMe, obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,76,63,64,65,66,67,68,69,70,71,72,73,74,75,124,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,168,155,156,157,158,159,160,161,162,163,164,165,166,167],"tindex":"3b0a0642-2e76-11e6-b19a-61644a230d83","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:219","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index == (-1)) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n            for (final E E : coll) {\n                addNodeBefore(node, e);\n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:331","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[127,142],"tindex":"3b0a0643-2e76-11e6-b19a-db8ae524f73e","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void updateNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.updateNode(node, value);\n            broadcastNodeChanged(node);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtBinaryOperatorImpl","sourcecode":"(hasNext) == false"},"failures":[],"tindex":"3b0a2d54-2e76-11e6-b19a-89b6628c7312","method":{"position":"org.apache.commons.collections4.CollectionUtils:1547","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final boolean includeDuplicates) {\n    if (includeDuplicates == false) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), includeDuplicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"hasNext":"includeDuplicates"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[640],"tindex":"3b0a2d55-2e76-11e6-b19a-a93c77616127","method":{"position":"org.apache.commons.collections4.BagUtils:116","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.bag.PredicatedBag.predicatedBag(bag, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[641,642,643,644,645,646,647,648],"tindex":"3b0a2d56-2e76-11e6-b19a-89b217fb3ced","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:627","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if (getEntrySet().contains(obj)) {\n                final java.lang.Object java.lang.Object = ((java.util.Map.Entry<K, V>)(obj)).getKey();\n                org.apache.commons.collections4.map.ListOrderedMap<K, V>.remove(key);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"3b0a5467-2e76-11e6-b19a-b350882e1b3b","method":{"position":"org.apache.commons.collections4.map.Flat3Map:982","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key instanceof java.util.Map) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.Flat3Map<K, ?>.remove(key);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:128","type":"CtBinaryOperatorImpl","sourcecode":"maxSize < 1"},"failures":[649,650,651,652,653,654,655,656,657],"tindex":"3b0a5468-2e76-11e6-b19a-159e7ebccfab","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:102","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index < 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"maxSize":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:124","type":"CtBinaryOperatorImpl","sourcecode":"largestKey == (-1)"},"failures":[658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,309,697,698,699,700,701,702,703,704,705,310,311,706,312,313,314,707,708,315,709,710,316,711,712,317,318,713,714,715,319,320,321,322,323,324,716,717,718,719,720,721,722,723,325,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,326,327,744,328,329,330,745,746,331,747,748,332,749,750,333,334,751,752,753,335,336,337,338,339,340,754,755,756,757,758,759,760,761,341,762,763,764,765,766,767,211,768,769,770,771,772,773,774,775,776,777,778,342,343,779,344,345,346,780,781,347,782,783,348,784,785,349,350,786,787,788,351,352,353,354,355,356,789,790,791,792,793,794,795,796,357,358,359,797,798,799,800,801,802,803,360,361,804,362,363,364,805,806,365,807,808,809,810,811,366,812,813,814,367,368,369,370,371,372,815,816,817,818,819,820,821,822,373,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,374,375,888,376,377,378,889,890,379,891,892,380,893,894,381,382,895,896,897,383,384,385,386,387,388,898,899,900,901,902,903,904,905,389,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,390,391,984,392,393,394,985,986,395,987,988,396,989,990,397,398,991,992,993,399,400,401,402,403,404,994,995,996,997,998,999,1000,1001,405,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012],"tindex":"3b0a7b79-2e76-11e6-b19a-43a874b7727d","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:686","type":"CtMethodImpl","sourcecode":"protected int calculateThreshold(final int newCapacity, final float factor) {\n    if (newCapacity == (-1)) {\n        {\n            return ((int)(newCapacity * factor));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"largestKey":"newCapacity"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":77,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}