{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":221,"org.apache.commons.collections4.bag.CollectionBagTest.testCanonicalEmptyCollectionExists":730,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":759,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":545,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectHashCodeEqualsSelfHashCode":938,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":190,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":399,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":256,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":465,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":497,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":448,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":55,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToString":919,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":746,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":1015,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx4":692,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":445,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":883,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":719,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":143,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":229,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":147,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":685,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":149,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":148,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":1005,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":132,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":944,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":386,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":379,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":276,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":422,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":725,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":656,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":509,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":305,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":531,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":164,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":43,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":546,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":599,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":1030,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":272,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":362,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":875,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":292,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":559,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":225,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":312,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":266,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":845,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":946,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":264,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":1031,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":10,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":822,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":409,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":110,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":197,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":255,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":370,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":590,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":769,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":613,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":696,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":331,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":650,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":636,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":420,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":380,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":893,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":447,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":899,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":1051,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":867,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":423,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":698,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":711,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":329,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":237,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":906,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":124,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":535,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":338,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":230,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":339,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":416,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":518,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":280,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":735,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":504,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":881,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":558,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":620,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":222,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":864,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":166,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":721,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":703,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":283,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":598,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":1021,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":638,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":832,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":835,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":169,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":757,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":235,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testObjectEqualsSelf":800,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":30,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":665,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray2":917,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":46,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":207,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":487,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":635,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":475,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":998,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":1002,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":999,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":1000,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":888,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":313,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":689,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":1041,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":718,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":311,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":491,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":310,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":307,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":410,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":986,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":6,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":302,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":106,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":431,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":250,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":393,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":879,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":7,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":29,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":365,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCanonicalEmptyCollectionExists":824,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":560,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":632,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":649,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":671,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":356,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":536,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":981,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":551,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":336,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":12,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectEqualsSelf":959,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":253,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":862,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":185,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":600,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":773,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":905,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":1036,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":323,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":608,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":121,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":578,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":72,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":298,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":724,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":236,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":547,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":548,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":1019,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":549,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":747,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":909,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":930,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":151,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":921,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":260,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":567,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":647,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":117,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":11,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":597,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":907,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":564,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":354,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":181,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":611,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":904,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":17,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":451,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":93,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":316,"org.apache.commons.collections4.set.MapBackedSetTest.testCanonicalEmptyCollectionExists":83,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":537,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":873,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testComparatorCompatibility":957,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":714,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":84,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":279,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":756,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiClear":187,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":466,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":268,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":743,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":343,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":54,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":739,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":112,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":189,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":400,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":391,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":742,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":425,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":1065,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":115,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":218,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":699,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":898,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":295,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":968,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":24,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":20,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":52,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":293,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":486,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":227,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":607,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsContract":962,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":464,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":460,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":996,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":220,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":889,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":183,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":384,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":778,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":625,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":860,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":390,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":314,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":389,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":925,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":849,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":160,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":732,"org.apache.commons.collections4.map.LRUMapTest.testReset":601,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":446,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":842,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":1006,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":1062,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":678,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":767,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":332,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":1035,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":170,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectEqualsSelf":820,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":833,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":572,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":675,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":886,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":553,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":215,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":646,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSimpleSerialization":961,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":368,"org.apache.commons.collections4.functors.AllPredicateTest.nullCollectionToGetInstance":693,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":155,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":308,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":659,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":421,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":939,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":655,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":1063,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":602,"org.apache.commons.collections4.map.LinkedMapTest.testReset":562,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":327,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":378,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":614,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":309,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":846,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":392,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":534,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":941,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":1004,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":814,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":457,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":524,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":82,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":666,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":627,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":77,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":758,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":96,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":777,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":443,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":662,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":670,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":424,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":1,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":159,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":869,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":588,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":68,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":111,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":188,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":521,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":764,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":989,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":203,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":674,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":508,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":136,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsSelfHashCode":733,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":3,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":752,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":828,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":485,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":784,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":877,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":503,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":418,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":70,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":419,"org.apache.commons.collections4.map.HashedMapTest.testClone":496,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":683,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":211,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":890,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":1013,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":940,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":544,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":284,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":62,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":990,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":304,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":985,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":154,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":456,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":377,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":201,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":453,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":995,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":556,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":834,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":640,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":709,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":85,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":382,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":63,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":4,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":156,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":969,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":42,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":1027,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":47,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":644,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":31,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":585,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":697,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":584,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":586,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":499,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":493,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":224,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":367,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":344,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":355,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":734,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":570,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":737,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":366,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":1069,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":916,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":275,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":829,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":892,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":794,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":793,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":790,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":789,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":792,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":791,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":786,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":376,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":788,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":591,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":787,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":950,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":38,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCanonicalFullCollectionExists":933,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":563,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":412,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":282,"org.apache.commons.collections4.map.LinkedMapTest.testClone":561,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":1032,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":1060,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":428,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":349,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":347,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":543,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":710,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIteratorRemove":920,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":910,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":212,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":680,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":552,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":681,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":682,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":993,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":736,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":352,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":351,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":350,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":387,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":333,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":896,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":19,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":1020,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":297,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":513,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":603,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking":779,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":594,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":856,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":857,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":363,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":192,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":510,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":162,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":301,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":738,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionSize":918,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":538,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":847,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":178,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":288,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":405,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":900,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":569,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":306,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":1034,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":291,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":290,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":471,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":58,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":289,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":729,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":887,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":677,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":871,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":775,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":406,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":1055,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":648,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":712,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":165,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":299,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":604,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":912,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":1009,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":45,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":76,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":113,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":176,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":200,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":175,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":174,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":840,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":193,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":908,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":663,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":1044,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":41,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":481,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":837,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":342,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":64,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":369,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":139,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":461,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":639,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":658,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":40,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":44,"org.apache.commons.collections4.map.LRUMapTest.testLRU":593,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":839,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":911,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":704,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":48,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":817,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":511,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testSimpleSerialization":936,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":318,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRetainAll":926,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":100,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":454,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":720,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":776,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":108,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":97,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":621,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":1068,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIsEmpty":923,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":762,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":1017,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":426,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":223,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":138,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":502,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":868,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":965,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":210,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":619,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":383,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":472,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":286,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":278,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":1047,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":808,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":388,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":8,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":322,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":997,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":713,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":781,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":761,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":364,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":87,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":89,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":484,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":522,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":527,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":626,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":373,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":232,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":1056,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":606,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":1025,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":116,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":326,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":795,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":341,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":340,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":885,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":1014,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":495,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":1018,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":109,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":913,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":125,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":241,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":359,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testBagEqualsSelf":805,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":473,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":686,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":815,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":852,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":234,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectEqualsSelf":932,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":262,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":573,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":575,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":952,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":1039,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":480,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":577,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testComparatorIsSerializable":958,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":1037,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":99,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":669,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":964,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":36,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsSelfHashCode":821,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":71,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":922,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":1067,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":146,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":205,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":539,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":1028,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":744,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":766,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":144,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":145,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":417,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":523,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":1008,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":667,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":770,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":16,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":722,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":107,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":809,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":273,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSimpleSerialization":823,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":49,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":679,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":865,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":80,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":335,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":966,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":902,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":27,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsSelfHashCode":963,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":244,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":328,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":806,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":838,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":245,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":243,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":482,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":629,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":507,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":974,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":1007,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":79,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":394,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":783,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":150,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":430,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":642,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":897,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":841,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":1012,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":492,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":468,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":455,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":657,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":568,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":21,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":95,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":477,"org.apache.commons.collections4.bag.CollectionBagTest.testSimpleSerialization":731,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":437,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testObjectHashCodeEqualsContract":801,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":219,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":1026,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":701,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":772,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":500,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":140,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":469,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":1043,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":217,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":180,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":324,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":812,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":303,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":576,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":705,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":319,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":872,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":1001,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":325,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":105,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":78,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":32,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":56,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":530,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":90,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":346,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":137,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":582,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":605,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":851,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":216,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":258,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":1058,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":895,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":168,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":855,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":643,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":827,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":830,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":541,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":702,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":1046,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":204,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":59,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":532,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":813,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":973,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":202,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":208,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":242,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":533,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":861,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":901,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":984,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":411,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":233,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":688,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":238,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":1024,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemove":928,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":717,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":489,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":488,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testSerializeDeserializeThenCompare":929,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":226,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":870,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":490,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":858,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":163,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":550,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":358,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":579,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":799,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":357,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":816,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":337,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":994,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":819,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":1049,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":970,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":320,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":432,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":439,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":1023,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":209,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":248,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":565,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":247,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":246,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCanonicalEmptyCollectionExists":935,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":915,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":396,"org.apache.commons.collections4.map.LRUMapTest.testClone":592,"org.apache.commons.collections4.bag.CollectionBagTest.testCanonicalFullCollectionExists":728,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":374,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":498,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":86,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":39,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":402,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":583,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":385,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":803,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":668,"org.apache.commons.collections4.ListUtilsTest.testSubtract":874,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":134,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":361,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testRandomListSort":954,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":853,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":519,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":123,"org.apache.commons.collections4.CollectionUtilsTest.collateException2":951,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":1038,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":375,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":74,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":977,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":891,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":261,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":321,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":811,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":843,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":700,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":153,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":768,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":740,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":5,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":749,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":348,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":196,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":198,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":975,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":395,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":506,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":540,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":943,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":257,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testEqualsNull":934,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":157,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectEqualsSelf":727,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":119,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":270,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":182,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":254,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":34,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":479,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":589,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":458,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":967,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":763,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":131,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":398,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":660,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":612,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":672,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":878,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":231,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":505,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":673,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":66,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":26,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":948,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":98,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":444,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":413,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking2":780,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":695,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":452,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":126,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":92,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":844,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":184,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":882,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":334,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":214,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":142,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":587,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":67,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":102,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":372,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":581,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":371,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":135,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":360,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":580,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":884,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":1054,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":415,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":494,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":285,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":1003,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":687,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":982,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":408,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":186,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":429,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":88,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":796,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":854,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":345,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":684,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":876,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":610,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":945,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":403,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":404,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":654,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":1042,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":114,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":330,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":983,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":707,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":708,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":35,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":526,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":91,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":555,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":676,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":1057,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":259,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":1016,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":442,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":317,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":1050,"org.apache.commons.collections4.set.MapBackedSetTest.testCanonicalFullCollectionExists":81,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":463,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":616,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":848,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":397,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":33,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":991,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":771,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":450,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectHashCodeEqualsContract":937,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":1029,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":353,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":750,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":512,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":23,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":53,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEqualsNull":960,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":571,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":628,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":716,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":263,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":633,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":128,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":1010,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":129,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":130,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":50,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":438,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":274,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":474,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":754,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionClear":924,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":14,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testSerializeDeserializeThenCompare":802,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":931,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":949,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":195,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":381,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":436,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":61,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":741,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":435,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":104,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":25,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":866,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":300,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":753,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":101,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":542,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":267,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":65,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":118,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":641,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":1033,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":859,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":765,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":980,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":831,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":976,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":434,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":167,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":0,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":94,"org.apache.commons.collections4.CollectionUtilsTest.isFull":798,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":520,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":618,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":566,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":249,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":120,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":441,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":476,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":9,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":836,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":706,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":987,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":501,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":751,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":748,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":880,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":60,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":782,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":1053,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":51,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":1059,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":1048,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":804,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":133,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":797,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":903,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":277,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":557,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":826,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":992,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":294,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":152,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":161,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":287,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx4":691,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":199,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testReverseListSort":955,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":760,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":850,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":785,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":57,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":269,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":315,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":433,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":942,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":449,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":609,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":122,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":127,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":631,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":407,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":630,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":483,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":459,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":927,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":745,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":1022,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":296,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":715,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":894,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":251,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":239,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":478,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":194,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":470,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":213,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":774,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":179,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEmptyListSort":956,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":414,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":1011,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":554,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":617,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":158,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":652,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":653,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":651,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":661,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":514,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":978,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":1052,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":807,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":171,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":172,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":914,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":173,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":240,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":645,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":818,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":953,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":988,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":462,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":252,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":177,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":515,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":516,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":191,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":228,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":528,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":755,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":467,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":271,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":1064,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":265,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":947,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":440,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":637,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":401,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":634,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":206,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":73,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":595,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":1066,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":281,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":624,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":863,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":15,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":979,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":22,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":28,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":141,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":525,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":622,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":623,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":971,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":690,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":726,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":1045,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":972,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":723,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":517,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCanonicalFullCollectionExists":825,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":574,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":69,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":529,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":75,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":694,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":596,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":664,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":1061,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":427,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":810,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":103,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":615,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":1040},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"tindex":"e3c2e8c8-2e7d-11e6-b31e-f9a9a05c9cf7","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:200","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return java.util.Map<V, K>.containsKey(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[60,61],"tindex":"e3c50ba9-2e7d-11e6-b31e-d7db2bc0fa57","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:45","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceOfPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        {\n            if (type == null) {\n                throw new java.lang.IllegalArgumentException(\"The type to check instanceof must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InstanceofPredicate(type);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"e3c532ba-2e7d-11e6-b31e-996929d1dab1","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:121","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110],"tindex":"e3c559cb-2e7d-11e6-b31e-4f4b6d58b793","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:74","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map, final V dummyValue) {\n    if (map == null) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"The map must not be null\");\n            } \n            return new org.apache.commons.collections4.set.MapBackedSet<E, V>(map , dummyValue);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"e3c559cc-2e7d-11e6-b31e-89864b9a9573","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isPrefix(final java.lang.String prefix, final int offsetInBits, final int lengthInBits, final java.lang.String key) {\n    if (lengthInBits == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n            } \n            final java.lang.String java.lang.String = prefix.substring((offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)), (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)));\n            return key.startsWith(s1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[],"tindex":"e3c580dd-2e7d-11e6-b31e-bd9545b422b3","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1533","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            return (node != null) && (node.getValue().equals(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"e3c5a7ee-2e7d-11e6-b31e-7b96ea91f068","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[111],"tindex":"e3c5a7ef-2e7d-11e6-b31e-ad4abb9856d3","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:292","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((coll.size()) == 0) {\n                        return false;\n                    } \n                    boolean boolean = false;\n                    for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                        changed |= item.removeAll(coll);\n                    }\n                    return changed;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[112,113,114],"tindex":"e3c5cf00-2e7d-11e6-b31e-b3b240d78388","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:180","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Transformer<?, ?>... transformers) {\n    if (transformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformers == null) {\n                {\n                    if (transformers == null) {\n                        throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n                    } \n                    for (int int = 0 ; i < (transformers.int) ; i++) {\n                        if ((transformers[i]) == null) {\n                            throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + i) + \" was null\"));\n                        } \n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[6,115,13,116,32,117,51,118],"tindex":"e3c5f611-2e7d-11e6-b31e-b99f43917aff","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.remove(key);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<java.lang.Object, K>.remove(value);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:72","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"e3c61d22-2e7d-11e6-b31e-bb38b717ae24","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:55","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.FixedSizeList<E> fixedSizeList(final java.util.List<E> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.FixedSizeList<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[119],"tindex":"e3c61d23-2e7d-11e6-b31e-c1f57cf650d0","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:119","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            final java.util.Set<E> java.util.Set<E> = new java.util.HashSet<E>(list);\n            list.retainAll(set);\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[],"tindex":"e3c64434-2e7d-11e6-b31e-4971082f0016","method":{"position":"org.apache.commons.collections4.CollectionUtils:107","type":"CtMethodImpl","sourcecode":"public int freqB(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e3c66b45-2e7d-11e6-b31e-83ba7462cec1","method":{"position":"org.apache.commons.collections4.SetUtils:274","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> synchronizedSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedSortedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[120],"tindex":"e3c66b46-2e7d-11e6-b31e-05beff092ab9","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:379","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182],"tindex":"e3c69257-2e7d-11e6-b31e-4f77f81d0d46","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:79","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal K castKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return ((K)(key));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (set != null)) && ((set.size()) > 0)"},"failures":[],"tindex":"e3c69258-2e7d-11e6-b31e-79a459f95965","method":{"position":"org.apache.commons.collections4.SetUtils:326","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.TransformedSortedSet.transformingSortedSet(set, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"e3c6b969-2e7d-11e6-b31e-c5e3ca863dfb","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:68","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:151","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[183,184,185,186,187,188,6,7,8,189,190,191,192,9,193,194,10,195,196,197,198,199,200,201,202,58,203,204,205],"tindex":"e3c6b96a-2e7d-11e6-b31e-931b9f7e940d","method":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:86","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        {\n            return new org.apache.commons.collections4.bidimap.DualHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"e3c6b96b-2e7d-11e6-b31e-f70a4bfe8fcc","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:93","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().remove(object, count);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[206],"tindex":"e3c6e07c-2e7d-11e6-b31e-ed7ba9ee6a11","method":{"position":"org.apache.commons.collections4.PredicateUtils:337","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"e3c6e07d-2e7d-11e6-b31e-774252f5f79f","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (object == (org.apache.commons.collections4.collection.AbstractCollectionDecorator.this)) || (decorated().equals(object));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[207,208],"tindex":"e3c755ae-2e7d-11e6-b31e-1f6b58dc107a","method":{"position":"org.apache.commons.collections4.map.LinkedMap:143","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index < 0) {\n        {\n            return getEntry(index).getKey();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e3c755af-2e7d-11e6-b31e-03d03c026b27","method":{"position":"org.apache.commons.collections4.MapUtils:125","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    return answer.toString();\n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry"},"failures":[],"tindex":"e3c77cc0-2e7d-11e6-b31e-1f125c116374","method":{"position":"org.apache.commons.collections4.SplitMapUtils:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map.Entry) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.SplitMapUtils.WrappedPut.this)) {\n                return true;\n            } \n            return (obj instanceof org.apache.commons.collections4.SplitMapUtils.WrappedPut) && (((org.apache.commons.collections4.SplitMapUtils.WrappedPut<?, ?>)(obj)).org.apache.commons.collections4.Put<?, ?>.equals(org.apache.commons.collections4.SplitMapUtils.WrappedPut.this.org.apache.commons.collections4.Put<K, V>));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305],"tindex":"e3c77cc1-2e7d-11e6-b31e-437554046249","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1243","type":"CtMethodImpl","sourcecode":"private static void checkKeyAndValue(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,208,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,68,69,74,76,87,94,95,100,102],"tindex":"e3c7a3d2-2e7d-11e6-b31e-a50b0132b9d5","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:564","type":"CtMethodImpl","sourcecode":"protected void removeMapping(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (entry == null) {\n        {\n            (int)++;\n            removeEntry(entry, hashIndex, previous);\n            (int)--;\n            destroyEntry(entry);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[428],"tindex":"e3c7cae3-2e7d-11e6-b31e-95ac62ca4962","method":{"position":"org.apache.commons.collections4.IteratorUtils:297","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start) {\n    if (start < 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"e3c7cae4-2e7d-11e6-b31e-0d6834d83361","method":{"position":"org.apache.commons.collections4.CollectionUtils:251","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> intersection(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((b == null) || (a == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, helper.min(obj));\n            }\n            return helper.list();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"e3c7cae5-2e7d-11e6-b31e-bfb71c1c813e","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:115","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getBag().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"e3c7f1f6-2e7d-11e6-b31e-53a21dcde18a","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:292","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((coll.size()) == 0) {\n                        return false;\n                    } \n                    boolean boolean = false;\n                    for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                        changed |= item.removeAll(coll);\n                    }\n                    return changed;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462],"tindex":"e3c7f1f7-2e7d-11e6-b31e-879cdd5cf1c3","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index > 0) {\n        {\n            if (index > 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (index < 0) {\n                        {\n                            if ((java.util.Set<E>.contains(object)) == false) {\n                                super.add(index, object);\n                                java.util.Set<E>.add(object);\n                            } \n                        }\n                    } else {\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[463],"tindex":"e3c7f1f8-2e7d-11e6-b31e-f1f273d261d5","method":{"position":"org.apache.commons.collections4.IteratorUtils:378","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start) {\n    if (start < 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[464,465,373,374,466,467,391,392],"tindex":"e3c81909-2e7d-11e6-b31e-572a8c963952","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                    if ((entry.getValue()) == null) {\n                        return true;\n                    } \n                }\n            } else {\n                for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                    if (isEqualValue(value, entry.getValue())) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"e3c8401a-2e7d-11e6-b31e-cdb9c8cb0c6e","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[468,469,306,307,308,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,309,485,486,487,488,489,490,310,311,491,312,492,493,313,314,494,495,315,316,317,318,319,496,334,335,336,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,337,512,513,514,515,516,517,338,339,518,340,519,520,341,342,521,522,343,344,345,346,347,523,524,348,349,350,351,352,525,526,527,528,353,354,355,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,356,544,545,546,547,548,549,357,358,550,359,551,552,360,361,553,554,362,363,364,365,366,555,556,557,558,207,559,560,208,561,562,563,564,565,566,567,367,368,369,568,569,570,571,572,573,574,464,575,576,577,465,578,579,580,370,581,582,583,584,585,586,371,372,587,373,588,589,374,375,590,591,376,377,378,379,380,592,593,594,595,596,597,598,599,600,381,382,383,384,601,602,603,604,605,385,386,387,606,607,608,609,610,611,612,466,613,614,615,467,616,617,618,388,619,620,621,622,623,624,389,390,625,391,626,627,392,393,628,629,394,395,396,397,398,630,631,632,399,400,401,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,402,648,649,650,651,652,653,403,404,654,405,655,656,406,407,657,658,408,409,410,411,412,659,660,661,662,413,414,415,416,663,664,665,666,667,668,669,670,671,672,673,674,675,676,417,677,678,679,680,681,682,418,419,683,420,684,685,421,422,686,687,423,424,425,426,427,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,688,689],"tindex":"e3c8401b-2e7d-11e6-b31e-33da8657dc02","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:381","type":"CtMethodImpl","sourcecode":"protected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return key == null ? org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object : key;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"e3c8b54c-2e7d-11e6-b31e-2d81c8d63fa5","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:999","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(int, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[206,690,691,692,693],"tindex":"e3c9036d-2e7d-11e6-b31e-21277a45a573","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:96","type":"CtMethodImpl","sourcecode":"static <T>org.apache.commons.collections4.Predicate<T>[] validate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = new org.apache.commons.collections4.Predicate[predicates.size()];\n            int int = 0;\n            for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : predicates) {\n                preds[i] = predicate;\n                if ((preds[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n                i++;\n            }\n            return preds;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778],"tindex":"e3cab11e-2e7d-11e6-b31e-2f548fd233b4","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.CollectionBag<E>(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[779,780],"tindex":"e3cad82f-2e7d-11e6-b31e-0d0e136f6371","method":{"position":"org.apache.commons.collections4.list.GrowthList:121","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E element) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = decorated().size();\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n            } \n            decorated().add(index, element);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[781,782,783,269,270,271,784,198,199],"tindex":"e3cad830-2e7d-11e6-b31e-ed1b18d033ea","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().getKey(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[785],"tindex":"e3caff41-2e7d-11e6-b31e-a7a0e4de591a","method":{"position":"org.apache.commons.collections4.map.SingletonMap:534","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.SingletonMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != 1) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = other.entrySet().iterator().next();\n            return (isEqualKey(entry.getKey())) && (isEqualValue(entry.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:123","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"e3caff42-2e7d-11e6-b31e-253c507ac6d5","method":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:107","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> comparatorPredicate(final T object, final java.util.Comparator<T> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ComparatorPredicate.comparatorPredicate(object, comparator, org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:171","type":"CtBinaryOperatorImpl","sourcecode":"(iterator.hasPrevious()) == false"},"failures":[],"tindex":"e3cb2653-2e7d-11e6-b31e-436b36e9ffd6","method":{"position":"org.apache.commons.collections4.IteratorUtils:446","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<E> iterator) {\n    if ((iterator.hasPrevious()) == false) {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"e3cb2654-2e7d-11e6-b31e-0ff749ccf835","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:77","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"e3cb2655-2e7d-11e6-b31e-19294647e699","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:538","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == (org.apache.commons.collections4.bag.AbstractMapBag.this)) {\n                return true;\n            } \n            if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.Bag<?> org.apache.commons.collections4.Bag<?> = ((org.apache.commons.collections4.Bag<?>)(object));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n                if ((other.getCount(element)) != (getCount(element))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[786,787,788,789,790,791,792,793,794,795,796,797,798,799],"tindex":"e3cb4d66-2e7d-11e6-b31e-5138bf1b2413","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:339","type":"CtMethodImpl","sourcecode":"private int decrement(int index) {\n    if (index < 0) {\n        {\n            index--;\n            if (index < 0) {\n                index = (int) - 1;\n            } \n            return index;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[800,801,802],"tindex":"e3cb4d67-2e7d-11e6-b31e-69cb61aad5de","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:279","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        {\n            if ((org.apache.commons.collections4.comparators.FixedOrderComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.FixedOrderComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(object));\n                return null == (java.util.Map<T, java.lang.Integer>) ? null == (comp.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(comp.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (comp.int))) && ((boolean) == (comp.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833],"tindex":"e3cb7478-2e7d-11e6-b31e-7fced4aa1ef1","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = ((org.apache.commons.collections4.Bag<E>)(bag));\n                return tmpBag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableBag<E>(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[834],"tindex":"e3cb7479-2e7d-11e6-b31e-f357c7a4accb","method":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[835,836,837,838,702,703,716,723,839,840,841,842,843,844,845,846,847,848,849,742,743,850,851,852,853,757,758,854,855,856,857,858,859,860,861,862,863,864,865,866,772,773,867,868,869,870,871,872,873,874,875,876,877,878,879,880],"tindex":"e3cb9b8a-2e7d-11e6-b31e-d1f363809fac","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:316","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            if (nCopies <= 0) {\n                return false;\n            } \n            (int)++;\n            if (nCopies < (mut.int)) {\n                mut.int -= nCopies;\n                int -= nCopies;\n            } else {\n                java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n                int -= mut.int;\n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:76","type":"CtBinaryOperatorImpl","sourcecode":"(trueClosure == null) || (falseClosure == null)"},"failures":[881],"tindex":"e3cb9b8b-2e7d-11e6-b31e-0b8cfe552a6e","method":{"position":"org.apache.commons.collections4.functors.IfClosure:70","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if ((falseClosure == null) || (trueClosure == null)) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if ((trueClosure == null) || (falseClosure == null)) {\n                throw new java.lang.IllegalArgumentException(\"Closures must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.IfClosure<E>(predicate , trueClosure , falseClosure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseClosure":"trueClosure","trueClosure":"falseClosure"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[882],"tindex":"e3cbc29c-2e7d-11e6-b31e-e58691a058e5","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(decorated().listIterator(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[883,884,885,886,156,157,158,159,160,161,887,888,162,163,889,164,165,166,890,167,168,891,892,169,170,893,894,895,171,172,173,174,175,176,896,897,898,899,177,900,901,178,179,180,181,182],"tindex":"e3cbe9ad-2e7d-11e6-b31e-891ab9f0c895","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:56","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int bitIndex(final java.lang.String key, final int offsetInBits, final int lengthInBits, final java.lang.String other, final int otherOffsetInBits, final int otherLengthInBits) {\n    if (otherOffsetInBits == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = true;\n            if (((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n            } \n            final int int = offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = otherOffsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = beginIndex1 + (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = beginIndex2 + (otherLengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = java.lang.Math.max(endIndex1, endIndex2);\n            char char = 0;\n            char char = 0;\n            for (int int = 0 ; i < length ; i++) {\n                final int int = beginIndex1 + i;\n                final int int = beginIndex2 + i;\n                if (index1 >= endIndex1) {\n                    k = 0;\n                } else {\n                    k = key.charAt(index1);\n                }\n                if ((other == null) || (index2 >= endIndex2)) {\n                    f = 0;\n                } else {\n                    f = other.charAt(index2);\n                }\n                if (k != f) {\n                    final int int = k ^ f;\n                    return ((i * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(x))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                } \n                if (k != 0) {\n                    allNull = false;\n                } \n            }\n            if (allNull) {\n                return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"otherOffsetInBits"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[838,842,845,849,853,859,862,866,870,873],"tindex":"e3cbe9ae-2e7d-11e6-b31e-bfa89e4cedcc","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:342","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            if (coll != null) {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final boolean boolean = remove(i.next(), 1);\n                    result = result || changed;\n                }\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[832],"tindex":"e3cc10bf-2e7d-11e6-b31e-51ed9677125f","method":{"position":"org.apache.commons.collections4.BagUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.TransformedSortedBag.transformingSortedBag(bag, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[902,903,904,905,906,907,908,909,910,911,912,913],"tindex":"e3cc10c0-2e7d-11e6-b31e-9de17ee0902b","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic O transform(final java.lang.Object input) {\n    if (input == null) {\n        {\n            if (input == null) {\n                return null;\n            } \n            try {\n                final java.lang.Class<?> java.lang.Class<?> = input.getClass();\n                final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(java.lang.String, java.lang.Class<?>[]);\n                return ((O)(method.invoke(input, java.lang.Object[])));\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' does not exist\"));\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' cannot be accessed\"));\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' threw an exception\") , ex);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,61],"tindex":"e3cc37d1-2e7d-11e6-b31e-8dba12468b54","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.collection.PredicatedCollection<T> predicatedCollection(final java.util.Collection<T> coll, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.collection.PredicatedCollection<T>(coll , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e3cc37d2-2e7d-11e6-b31e-7585b2a37a32","method":{"position":"org.apache.commons.collections4.MapUtils:340","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if ((answer != null) && (answer instanceof java.util.Map)) {\n                    return ((java.util.Map<?, ?>)(answer));\n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"e3cc5ee3-2e7d-11e6-b31e-95399c53939d","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:73","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformedQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            final org.apache.commons.collections4.queue.TransformedQueue<E> org.apache.commons.collections4.queue.TransformedQueue<E> = new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n            if ((queue.size()) > 0) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(queue.toArray()));\n                queue.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[939],"tindex":"e3cc5ee4-2e7d-11e6-b31e-43360798e7a1","method":{"position":"org.apache.commons.collections4.ClosureUtils:129","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> whileClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[829],"tindex":"e3cc5ee5-2e7d-11e6-b31e-b57c2e6d68c1","method":{"position":"org.apache.commons.collections4.bag.SynchronizedSortedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedSortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.SynchronizedSortedBag<E>(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[940,941,942,943,301,944],"tindex":"e3cc5ee6-2e7d-11e6-b31e-9b13e03ac3d4","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[11,18],"tindex":"e3cc85f7-2e7d-11e6-b31e-156163501ed3","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:502","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"e3ccd418-2e7d-11e6-b31e-25a27647fe24","method":{"position":"org.apache.commons.collections4.list.PredicatedList:98","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"e3ccd419-2e7d-11e6-b31e-63d4440f9da3","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[],"tindex":"e3ccd41a-2e7d-11e6-b31e-0f462bda04a6","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:180","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Transformer<?, ?>... transformers) {\n    if (transformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformers == null) {\n                {\n                    if (transformers == null) {\n                        throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n                    } \n                    for (int int = 0 ; i < (transformers.int) ; i++) {\n                        if ((transformers[i]) == null) {\n                            throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + i) + \" was null\"));\n                        } \n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[945],"tindex":"e3ccfb2b-2e7d-11e6-b31e-b9db9e02fa0c","method":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:51","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformedPredicate<T>(transformer , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[477,481,312,313,946,947,948,326,327,504,508,340,341,536,540,359,360,640,644,405,406,661,669,673,420,421],"tindex":"e3cd976c-2e7d-11e6-b31e-030a77ba193f","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                    while (entry != null) {\n                        if ((entry.getValue()) == null) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            } else {\n                for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                    while (entry != null) {\n                        if (isEqualValue(value, entry.getValue())) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[949,950],"tindex":"e3ce5abd-2e7d-11e6-b31e-e7bbb257637e","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"e3ce81ce-2e7d-11e6-b31e-778ac36a932c","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == (org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.this)) {\n                return true;\n            } \n            return java.util.Map.Entry<K, V>.equals(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1594","type":"CtBinaryOperatorImpl","sourcecode":"c == null"},"failures":[951],"tindex":"e3ce81cf-2e7d-11e6-b31e-f382a3a6a1ce","method":{"position":"org.apache.commons.collections4.CollectionUtils:1567","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c) {\n    if (c == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, c, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e3cef700-2e7d-11e6-b31e-d7fe5bb2616d","method":{"position":"org.apache.commons.collections4.MapUtils:641","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return 0;\n            } \n            return integerObject.intValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[312,326,340,359,373,391,405,420],"tindex":"e3cf1e11-2e7d-11e6-b31e-61a0e9c4034d","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1030","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<?, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:345","type":"CtBinaryOperatorImpl","sourcecode":"(values) == null"},"failures":[952,953],"tindex":"e3cf1e12-2e7d-11e6-b31e-539631b0e299","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:378","type":"CtMethodImpl","sourcecode":"public boolean putAll(final K key, final java.util.Collection<V> values) {\n    if (values == null) {\n        {\n            if ((values == null) || ((values.size()) == 0)) {\n                return false;\n            } \n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(values.size());\n                coll.addAll(values);\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.addAll(values);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"values"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:197","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[954,955,956,957,958,959,960,961,962,963,964],"tindex":"e3cf1e13-2e7d-11e6-b31e-79c227521493","method":{"position":"org.apache.commons.collections4.ComparatorUtils:194","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>java.util.Comparator<I> transformedComparator(java.util.Comparator<O> comparator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.TransformingComparator<I, O>(transformer , comparator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[526],"tindex":"e3cf4524-2e7d-11e6-b31e-5770d2477b07","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:554","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key5 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key5"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[452,965,966],"tindex":"e3cf4525-2e7d-11e6-b31e-89c975c022e3","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:86","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[273],"tindex":"e3cfe166-2e7d-11e6-b31e-dbe7d99a8846","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"e3cfe167-2e7d-11e6-b31e-1730ce63df35","method":{"position":"org.apache.commons.collections4.ClosureUtils:255","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, falseClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[967],"tindex":"e3cfe168-2e7d-11e6-b31e-fb63b957bc6b","method":{"position":"org.apache.commons.collections4.CollectionUtils:823","type":"CtMethodImpl","sourcecode":"public static <C>int countMatches(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if ((input != null) && (predicate != null)) {\n                for (final C C : input) {\n                    if (predicate.evaluate(o)) {\n                        count++;\n                    } \n                }\n            } \n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[968,969],"tindex":"e3d00879-2e7d-11e6-b31e-4bdc64b4da14","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:110","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e3d0087a-2e7d-11e6-b31e-7dd8dfb22836","method":{"position":"org.apache.commons.collections4.BagUtils:180","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedSortedBag.synchronizedSortedBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"e3d0087b-2e7d-11e6-b31e-5f78e875bacd","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index > 0) {\n        {\n            if (index > 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (index < 0) {\n                        {\n                            if ((java.util.Set<E>.contains(object)) == false) {\n                                super.add(index, object);\n                                java.util.Set<E>.add(object);\n                            } \n                        }\n                    } else {\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[436,970],"tindex":"e3d02f8c-2e7d-11e6-b31e-e376b917fa8b","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:331","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Set<E> createSetBasedOnList(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (list == null) {\n        {\n            java.util.Set<E> java.util.Set<E>;\n            if (set.getClass().equals(java.util.HashSet.java.util.HashSet.java.lang.Class)) {\n                subSet = new java.util.HashSet<E>(list.size());\n            } else {\n                try {\n                    subSet = set.getClass().newInstance();\n                } catch (final java.lang.InstantiationException ie) {\n                    subSet = new java.util.HashSet<E>();\n                } catch (final java.lang.IllegalAccessException iae) {\n                    subSet = new java.util.HashSet<E>();\n                }\n            }\n            subSet.addAll(list);\n            return subSet;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[971,972,973,974,975],"tindex":"e3d02f8d-2e7d-11e6-b31e-71eda1dd76ad","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"e3d02f8e-2e7d-11e6-b31e-033569659a28","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2111","type":"CtMethodImpl","sourcecode":"public K remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.removeValue(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[],"tindex":"e3d02f8f-2e7d-11e6-b31e-bddfab0dea04","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[220,221],"tindex":"e3d056a0-2e7d-11e6-b31e-6be766582b7e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2069","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsKey(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[323,326,327,328,329,330,331,332,333,337,340,341,342,343,344,345,346,347,370,373,374,375,376,377,378,379,380,388,391,392,393,394,395,396,397,398,402,405,406,407,408,409,410,411,412,68,69,74,76,87,94,95,100,102],"tindex":"e3d056a1-2e7d-11e6-b31e-634b80b0c1ec","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:598","type":"CtMethodImpl","sourcecode":"protected void destroyEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            entry.java.lang.Object = null;\n            entry.java.lang.Object = null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"e3d07db2-2e7d-11e6-b31e-4d30a1a09c36","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index > 0) {\n        {\n            if (index > 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (index < 0) {\n                        {\n                            if ((java.util.Set<E>.contains(object)) == false) {\n                                super.add(index, object);\n                                java.util.Set<E>.add(object);\n                            } \n                        }\n                    } else {\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"e3d07db3-2e7d-11e6-b31e-31e6f76d85e6","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:701","type":"CtMethodImpl","sourcecode":"public void atomic(final java.lang.Runnable r) {\n    if (r == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (r == null) {\n                throw new java.lang.NullPointerException();\n            } \n            atomic(r, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[976],"tindex":"e3d07db4-2e7d-11e6-b31e-3de200f3507a","method":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> closureTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.ClosureTransformer<T>(closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[],"tindex":"e3d07db5-2e7d-11e6-b31e-db8206daa40c","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:285","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<E>.indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1603","type":"CtVariableReadImpl","sourcecode":"includeDuplicates"},"failures":[977],"tindex":"e3d0a4c6-2e7d-11e6-b31e-495981b2157c","method":{"position":"org.apache.commons.collections4.CollectionUtils:1547","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final boolean includeDuplicates) {\n    if (includeDuplicates) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), includeDuplicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"includeDuplicates":"includeDuplicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"e3d0a4c7-2e7d-11e6-b31e-cf47f4db7890","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:82","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[978,979,946,980,981,320,321,322,982,983,984,985,986,987,988,947,989,990,991,948,992,993,994,323,995,996,997,998,999,1000,324,325,1001,326,1002,1003,327,328,1004,1005,329,330,331,332,333],"tindex":"e3d0a4c8-2e7d-11e6-b31e-db6af94fc6a9","method":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key != null) {\n                final char[] char[] = key.toString().toCharArray();\n                for (int int = (chars.int) - 1 ; i >= 0 ; i--) {\n                    chars[i] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(chars[i]));\n                }\n                return new java.lang.String(chars);\n            } \n            return org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[940,1006,1007,950,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,941,1033,1034,1035,1036,1037,1038,1039,1040,1041,523,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,203,944,1069],"tindex":"e3d0a4c9-2e7d-11e6-b31e-7570d65e3631","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:93","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[],"tindex":"e3d0cbda-2e7d-11e6-b31e-fdf580664c8f","method":{"position":"org.apache.commons.collections4.set.CompositeSet:227","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                if (set.contains(obj)) {\n                    return set.remove(obj);\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[647],"tindex":"e3d0cbdb-2e7d-11e6-b31e-a728b8032a94","method":{"position":"org.apache.commons.collections4.map.Flat3Map:374","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            final int int = map.size();\n            if (size == 0) {\n                return ;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n                return ;\n            } \n            if (size < 4) {\n                for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            } else {\n                convertToMap();\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}